{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":8043,"endOffset":8116,"count":18}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":8122,"endOffset":8173,"count":490}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8179,"endOffset":8226,"count":12}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":9812,"endOffset":9881,"count":6}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":10539,"endOffset":10567,"count":14}],"isBlockCoverage":true},{"functionName":"SafeWeakMap","ranges":[{"startOffset":10716,"endOffset":10744,"count":6}],"isBlockCoverage":true},{"functionName":"SafeSet","ranges":[{"startOffset":10879,"endOffset":10907,"count":9}],"isBlockCoverage":true},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":11343,"endOffset":11399,"count":1}],"isBlockCoverage":true},{"functionName":"SafeWeakRef","ranges":[{"startOffset":11558,"endOffset":11596,"count":135}],"isBlockCoverage":true},{"functionName":"primordials.PromisePrototypeCatch","ranges":[{"startOffset":11842,"endOffset":11930,"count":1}],"isBlockCoverage":true}]},{"scriptId":"9","url":"node:internal/bootstrap/loaders","functions":[{"functionName":"binding","ranges":[{"startOffset":3984,"endOffset":4782,"count":1},{"startOffset":4281,"endOffset":4492,"count":0},{"startOffset":4626,"endOffset":4781,"count":0}],"isBlockCoverage":true},{"functionName":"internalBinding","ranges":[{"startOffset":5254,"endOffset":5523,"count":936},{"startOffset":5358,"endOffset":5501,"count":19}],"isBlockCoverage":true},{"functionName":"getOwn","ranges":[{"startOffset":5677,"endOffset":5835,"count":10450},{"startOffset":5815,"endOffset":5831,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":7573,"endOffset":7692,"count":2952},{"startOffset":7659,"endOffset":7686,"count":282}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":7767,"endOffset":8477,"count":282},{"startOffset":7831,"endOffset":8027,"count":0},{"startOffset":8093,"endOffset":8395,"count":19},{"startOffset":8356,"endOffset":8360,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":8483,"endOffset":9141,"count":282},{"startOffset":8522,"endOffset":8541,"count":263},{"startOffset":8541,"endOffset":9140,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8860,"endOffset":8976,"count":19}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":9443,"endOffset":9797,"count":301},{"startOffset":9565,"endOffset":9785,"count":10450},{"startOffset":9644,"endOffset":9653,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":9803,"endOffset":10410,"count":2047},{"startOffset":9853,"endOffset":9868,"count":95},{"startOffset":9870,"endOffset":9906,"count":1960},{"startOffset":9906,"endOffset":10051,"count":87},{"startOffset":10051,"endOffset":10087,"count":1},{"startOffset":10088,"endOffset":10109,"count":86},{"startOffset":10269,"endOffset":10409,"count":87}],"isBlockCoverage":true},{"functionName":"nativeModuleRequire","ranges":[{"startOffset":10619,"endOffset":11000,"count":1770},{"startOffset":10678,"endOffset":10711,"count":5},{"startOffset":10711,"endOffset":10900,"count":1765},{"startOffset":10900,"endOffset":10955,"count":0},{"startOffset":10955,"endOffset":10999,"count":1765}],"isBlockCoverage":true}]},{"scriptId":"10","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":9725,"endOffset":9891,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9996,"endOffset":10175,"count":1}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/errors","functions":[{"functionName":"prepareStackTrace","ranges":[{"startOffset":2252,"endOffset":3783,"count":146},{"startOffset":2432,"endOffset":2552,"count":0},{"startOffset":2624,"endOffset":2684,"count":111},{"startOffset":2686,"endOffset":3194,"count":85},{"startOffset":2737,"endOffset":2935,"count":6233},{"startOffset":2800,"endOffset":2852,"count":5502},{"startOffset":2854,"endOffset":2928,"count":85},{"startOffset":3140,"endOffset":3189,"count":1},{"startOffset":3325,"endOffset":3347,"count":26},{"startOffset":3347,"endOffset":3505,"count":120},{"startOffset":3505,"endOffset":3581,"count":85},{"startOffset":3581,"endOffset":3643,"count":35},{"startOffset":3643,"endOffset":3671,"count":120},{"startOffset":3671,"endOffset":3702,"count":0},{"startOffset":3702,"endOffset":3782,"count":120}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":3827,"endOffset":4550,"count":146},{"startOffset":4101,"endOffset":4169,"count":26},{"startOffset":4169,"endOffset":4454,"count":120},{"startOffset":4454,"endOffset":4522,"count":0},{"startOffset":4522,"endOffset":4549,"count":120}],"isBlockCoverage":true},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":5676,"endOffset":5981,"count":347},{"startOffset":5821,"endOffset":5866,"count":0},{"startOffset":5948,"endOffset":5977,"count":0}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":9868,"endOffset":10827,"count":85}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10561,"endOffset":10641,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":10983,"endOffset":11237,"count":10}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":11881,"endOffset":12762,"count":85},{"startOffset":11985,"endOffset":12021,"count":1},{"startOffset":12329,"endOffset":12410,"count":0},{"startOffset":12639,"endOffset":12761,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":12784,"endOffset":12893,"count":30},{"startOffset":12823,"endOffset":12869,"count":1}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":12954,"endOffset":13143,"count":30},{"startOffset":13034,"endOffset":13089,"count":1}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":13199,"endOffset":13612,"count":115}],"isBlockCoverage":true},{"functionName":"uvException","ranges":[{"startOffset":13953,"endOffset":15236,"count":30},{"startOffset":14037,"endOffset":14055,"count":0},{"startOffset":14258,"endOffset":14330,"count":0},{"startOffset":14958,"endOffset":15085,"count":90},{"startOffset":15007,"endOffset":15025,"count":60},{"startOffset":15027,"endOffset":15052,"count":30},{"startOffset":15052,"endOffset":15085,"count":60},{"startOffset":15163,"endOffset":15191,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47819,"endOffset":47977,"count":85}],"isBlockCoverage":true}]},{"scriptId":"12","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4553,"endOffset":4580,"count":1}],"isBlockCoverage":true},{"functionName":"initAsyncResource","ranges":[{"startOffset":5555,"endOffset":5839,"count":83},{"startOffset":5786,"endOffset":5836,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5928,"endOffset":6955,"count":16},{"startOffset":6053,"endOffset":6076,"count":13},{"startOffset":6079,"endOffset":6423,"count":3},{"startOffset":6111,"endOffset":6351,"count":0},{"startOffset":6771,"endOffset":6778,"count":0},{"startOffset":6838,"endOffset":6852,"count":14}],"isBlockCoverage":true},{"functionName":"TimersList","ranges":[{"startOffset":7794,"endOffset":8101,"count":16}],"isBlockCoverage":true},{"functionName":"ImmediateList.append","ranges":[{"startOffset":8714,"endOffset":8889,"count":67},{"startOffset":8758,"endOffset":8830,"count":0}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9429,"endOffset":9508,"count":14},{"startOffset":9484,"endOffset":9505,"count":11}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9512,"endOffset":9592,"count":11}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":10718,"endOffset":11389,"count":16},{"startOffset":11289,"endOffset":11354,"count":6}],"isBlockCoverage":true},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":11393,"endOffset":11647,"count":2}],"isBlockCoverage":true},{"functionName":"compareTimersLists","ranges":[{"startOffset":12264,"endOffset":12478,"count":16},{"startOffset":12368,"endOffset":12453,"count":0}],"isBlockCoverage":true},{"functionName":"setPosition","ranges":[{"startOffset":12482,"endOffset":12555,"count":25}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12877,"endOffset":14873,"count":67},{"startOffset":12957,"endOffset":12982,"count":0},{"startOffset":13433,"endOffset":13448,"count":0},{"startOffset":13772,"endOffset":13871,"count":0},{"startOffset":14452,"endOffset":14510,"count":0},{"startOffset":14617,"endOffset":14638,"count":0},{"startOffset":14798,"endOffset":14827,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":14881,"endOffset":15383,"count":4},{"startOffset":15087,"endOffset":15363,"count":8},{"startOffset":15119,"endOffset":15221,"count":4},{"startOffset":15198,"endOffset":15211,"count":0},{"startOffset":15221,"endOffset":15261,"count":4},{"startOffset":15261,"endOffset":15276,"count":0},{"startOffset":15276,"endOffset":15363,"count":4},{"startOffset":15363,"endOffset":15382,"count":0}],"isBlockCoverage":true},{"functionName":"listOnTimeout","ranges":[{"startOffset":15389,"endOffset":17945,"count":4},{"startOffset":15825,"endOffset":16059,"count":0},{"startOffset":16102,"endOffset":16117,"count":0},{"startOffset":16328,"endOffset":16568,"count":0},{"startOffset":16693,"endOffset":16715,"count":0},{"startOffset":16834,"endOffset":16904,"count":0},{"startOffset":16951,"endOffset":16979,"count":0},{"startOffset":16981,"endOffset":17093,"count":0},{"startOffset":17245,"endOffset":17256,"count":3},{"startOffset":17308,"endOffset":17329,"count":0}],"isBlockCoverage":true},{"functionName":"Immediate","ranges":[{"startOffset":18035,"endOffset":18371,"count":67}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":18377,"endOffset":18557,"count":67}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14910,"endOffset":14982,"count":480}],"isBlockCoverage":true},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":14986,"endOffset":15182,"count":14},{"startOffset":15127,"endOffset":15181,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15371,"endOffset":15667,"count":480},{"startOffset":15589,"endOffset":15631,"count":431},{"startOffset":15631,"endOffset":15666,"count":49}],"isBlockCoverage":true},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":16004,"endOffset":16510,"count":63},{"startOffset":16116,"endOffset":16147,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16514,"endOffset":16579,"count":2360}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16583,"endOffset":16644,"count":467}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16648,"endOffset":16705,"count":480}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16772,"endOffset":16835,"count":478}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17347,"endOffset":17528,"count":468},{"startOffset":17499,"endOffset":17525,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17534,"endOffset":17659,"count":467},{"startOffset":17600,"endOffset":17625,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":18021,"endOffset":18601,"count":468},{"startOffset":18245,"endOffset":18295,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18670,"endOffset":19296,"count":467},{"startOffset":18788,"endOffset":18801,"count":0},{"startOffset":18882,"endOffset":18991,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":753,"endOffset":814,"count":2767}],"isBlockCoverage":true},{"functionName":"isUint32","ranges":[{"startOffset":818,"endOffset":882,"count":2582}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1523,"endOffset":1852,"count":923},{"startOffset":1618,"endOffset":1783,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1900,"endOffset":2288,"count":1844},{"startOffset":2022,"endOffset":2076,"count":0},{"startOffset":2118,"endOffset":2172,"count":0},{"startOffset":2217,"endOffset":2283,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2338,"endOffset":2933,"count":2767},{"startOffset":2502,"endOffset":2808,"count":0},{"startOffset":2846,"endOffset":2928,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2980,"endOffset":3505,"count":1644},{"startOffset":3034,"endOffset":3393,"count":0},{"startOffset":3410,"endOffset":3424,"count":0},{"startOffset":3426,"endOffset":3502,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":3511,"endOffset":3646,"count":42223},{"startOffset":3589,"endOffset":3643,"count":0}],"isBlockCoverage":true},{"functionName":"validateNumber","ranges":[{"startOffset":3650,"endOffset":3785,"count":966},{"startOffset":3728,"endOffset":3782,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3827,"endOffset":4169,"count":16},{"startOffset":3899,"endOffset":4166,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3974,"endOffset":4036,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":4175,"endOffset":4313,"count":824},{"startOffset":4255,"endOffset":4310,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4537,"endOffset":5108,"count":1124},{"startOffset":4663,"endOffset":4683,"count":0},{"startOffset":4738,"endOffset":4761,"count":0},{"startOffset":4811,"endOffset":4829,"count":0},{"startOffset":4958,"endOffset":5030,"count":0},{"startOffset":5033,"endOffset":5103,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5152,"endOffset":5438,"count":1644},{"startOffset":5215,"endOffset":5280,"count":0},{"startOffset":5314,"endOffset":5435,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5871,"endOffset":6107,"count":922},{"startOffset":5937,"endOffset":6104,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":6113,"endOffset":6455,"count":8},{"startOffset":6285,"endOffset":6304,"count":0},{"startOffset":6306,"endOffset":6452,"count":0}],"isBlockCoverage":true},{"functionName":"validatePort","ranges":[{"startOffset":6603,"endOffset":6991,"count":25},{"startOffset":6699,"endOffset":6726,"count":14},{"startOffset":6764,"endOffset":6805,"count":14},{"startOffset":6887,"endOffset":6900,"count":10},{"startOffset":6903,"endOffset":6968,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7036,"endOffset":7140,"count":512},{"startOffset":7096,"endOffset":7137,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7461,"endOffset":7580,"count":2180},{"startOffset":7521,"endOffset":7577,"count":0}],"isBlockCoverage":true}]},{"scriptId":"16","url":"node:internal/util","functions":[{"functionName":"toUSVString","ranges":[{"startOffset":1389,"endOffset":1709,"count":1},{"startOffset":1664,"endOffset":1708,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":2485,"endOffset":3720,"count":38},{"startOffset":2560,"endOffset":2582,"count":0},{"startOffset":2675,"endOffset":2729,"count":0},{"startOffset":2764,"endOffset":2793,"count":36},{"startOffset":3466,"endOffset":3693,"count":29}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":2822,"endOffset":3320,"count":8},{"startOffset":2871,"endOffset":3189,"count":1},{"startOffset":3097,"endOffset":3182,"count":0},{"startOffset":3211,"endOffset":3273,"count":0}],"isBlockCoverage":true},{"functionName":"assertCrypto","ranges":[{"startOffset":4078,"endOffset":4155,"count":4},{"startOffset":4126,"endOffset":4152,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":4339,"endOffset":4473,"count":998},{"startOffset":4410,"endOffset":4428,"count":45},{"startOffset":4430,"endOffset":4444,"count":954},{"startOffset":4444,"endOffset":4472,"count":44}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":4477,"endOffset":6280,"count":44},{"startOffset":4533,"endOffset":4783,"count":0},{"startOffset":4789,"endOffset":4923,"count":0},{"startOffset":4929,"endOffset":5343,"count":0},{"startOffset":5386,"endOffset":5402,"count":0},{"startOffset":5431,"endOffset":5450,"count":8},{"startOffset":5452,"endOffset":5468,"count":36},{"startOffset":5468,"endOffset":5498,"count":8},{"startOffset":5498,"endOffset":5514,"count":0},{"startOffset":5514,"endOffset":5562,"count":8},{"startOffset":5564,"endOffset":5580,"count":0},{"startOffset":5580,"endOffset":5647,"count":8},{"startOffset":5647,"endOffset":5663,"count":0},{"startOffset":5663,"endOffset":5711,"count":8},{"startOffset":5713,"endOffset":5729,"count":0},{"startOffset":5729,"endOffset":5743,"count":8},{"startOffset":5749,"endOffset":5899,"count":0},{"startOffset":5905,"endOffset":6056,"count":0},{"startOffset":6062,"endOffset":6220,"count":0},{"startOffset":6226,"endOffset":6272,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":6937,"endOffset":7100,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6990,"endOffset":7096,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":9150,"endOffset":10721,"count":22},{"startOffset":9273,"endOffset":9329,"count":1},{"startOffset":9420,"endOffset":9681,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":9887,"endOffset":10423,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9934,"endOffset":10416,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9989,"endOffset":10364,"count":24},{"startOffset":10029,"endOffset":10072,"count":0},{"startOffset":10114,"endOffset":10134,"count":0},{"startOffset":10136,"endOffset":10306,"count":0}],"isBlockCoverage":true},{"functionName":"spliceOne","ranges":[{"startOffset":11300,"endOffset":11431,"count":49},{"startOffset":11383,"endOffset":11413,"count":3}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":12776,"endOffset":12949,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12835,"endOffset":12945,"count":28},{"startOffset":12872,"endOffset":12944,"count":14}],"isBlockCoverage":true}]},{"scriptId":"17","url":"node:internal/util/types","functions":[{"functionName":"isTypedArray","ranges":[{"startOffset":139,"endOffset":244,"count":14}],"isBlockCoverage":true},{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":2177}],"isBlockCoverage":true},{"functionName":"isBigUint64Array","ranges":[{"startOffset":1398,"endOffset":1514,"count":14}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/linkedlist","functions":[{"functionName":"peek","ranges":[{"startOffset":142,"endOffset":237,"count":8},{"startOffset":196,"endOffset":236,"count":4}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":275,"endOffset":513,"count":31}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":572,"endOffset":1037,"count":16},{"startOffset":624,"endOffset":641,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":1041,"endOffset":1103,"count":11}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":892,"endOffset":1086,"count":16},{"startOffset":1034,"endOffset":1051,"count":0}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":1092,"endOffset":1133,"count":8}],"isBlockCoverage":true},{"functionName":"percolateDown","ranges":[{"startOffset":1139,"endOffset":1829,"count":4},{"startOffset":1364,"endOffset":1734,"count":2},{"startOffset":1432,"endOffset":1479,"count":0},{"startOffset":1604,"endOffset":1734,"count":0}],"isBlockCoverage":true},{"functionName":"percolateUp","ranges":[{"startOffset":1835,"endOffset":2344,"count":16},{"startOffset":2019,"endOffset":2249,"count":14},{"startOffset":2110,"endOffset":2116,"count":9},{"startOffset":2116,"endOffset":2249,"count":5}],"isBlockCoverage":true},{"functionName":"removeAt","ranges":[{"startOffset":2350,"endOffset":2695,"count":15},{"startOffset":2516,"endOffset":2530,"count":14},{"startOffset":2532,"endOffset":2690,"count":4},{"startOffset":2553,"endOffset":2604,"count":0},{"startOffset":2615,"endOffset":2637,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":2701,"endOffset":2865,"count":4},{"startOffset":2807,"endOffset":2814,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"node:internal/util/inspect","functions":[{"functionName":"stylizeNoColor","ranges":[{"startOffset":17138,"endOffset":17186,"count":3}],"isBlockCoverage":true},{"functionName":"formatNumber","ranges":[{"startOffset":50433,"endOffset":51200,"count":3},{"startOffset":50627,"endOffset":50669,"count":0},{"startOffset":50713,"endOffset":51199,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":69868,"endOffset":69951,"count":179}],"isBlockCoverage":true},{"functionName":"formatWithOptions","ranges":[{"startOffset":69955,"endOffset":70236,"count":73},{"startOffset":70079,"endOffset":70174,"count":0}],"isBlockCoverage":true},{"functionName":"formatNumberNoColor","ranges":[{"startOffset":70240,"endOffset":70427,"count":3}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":70622,"endOffset":74768,"count":252},{"startOffset":70792,"endOffset":74561,"count":244},{"startOffset":70822,"endOffset":70851,"count":224},{"startOffset":70851,"endOffset":70942,"count":20},{"startOffset":70942,"endOffset":74392,"count":443},{"startOffset":70999,"endOffset":74385,"count":33},{"startOffset":71155,"endOffset":71949,"count":30},{"startOffset":71264,"endOffset":71355,"count":0},{"startOffset":71394,"endOffset":71485,"count":0},{"startOffset":71523,"endOffset":71568,"count":0},{"startOffset":71569,"endOffset":71626,"count":0},{"startOffset":71690,"endOffset":71912,"count":0},{"startOffset":71963,"endOffset":72051,"count":0},{"startOffset":72065,"endOffset":72498,"count":3},{"startOffset":72174,"endOffset":72265,"count":0},{"startOffset":72304,"endOffset":72356,"count":0},{"startOffset":72512,"endOffset":72610,"count":0},{"startOffset":72624,"endOffset":72858,"count":0},{"startOffset":72872,"endOffset":73353,"count":0},{"startOffset":73367,"endOffset":73706,"count":0},{"startOffset":73720,"endOffset":73809,"count":0},{"startOffset":73823,"endOffset":73958,"count":0},{"startOffset":73972,"endOffset":74057,"count":0},{"startOffset":74105,"endOffset":74184,"count":23},{"startOffset":74250,"endOffset":74376,"count":0},{"startOffset":74392,"endOffset":74556,"count":20},{"startOffset":74485,"endOffset":74549,"count":16},{"startOffset":74561,"endOffset":74591,"count":28},{"startOffset":74591,"endOffset":74750,"count":0},{"startOffset":74750,"endOffset":74767,"count":28}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":167,"endOffset":322,"count":1049},{"startOffset":216,"endOffset":319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":540,"endOffset":1024,"count":1},{"startOffset":633,"endOffset":977,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":914,"endOffset":971,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":1004,"endOffset":1015,"count":14}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1465,"endOffset":1473,"count":7340}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1478,"endOffset":2059,"count":14},{"startOffset":1554,"endOffset":2029,"count":7},{"startOffset":1574,"endOffset":1979,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1666,"endOffset":1971,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2285,"endOffset":3328,"count":18}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":2317,"endOffset":2416,"count":14}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2432,"endOffset":2838,"count":14},{"startOffset":2687,"endOffset":2717,"count":9},{"startOffset":2725,"endOffset":2764,"count":2},{"startOffset":2772,"endOffset":2826,"count":3}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2870,"endOffset":2943,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2963,"endOffset":3164,"count":14},{"startOffset":3013,"endOffset":3043,"count":9},{"startOffset":3051,"endOffset":3090,"count":2},{"startOffset":3098,"endOffset":3152,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3216,"endOffset":3252,"count":0}],"isBlockCoverage":false}]},{"scriptId":"23","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":2871,"endOffset":6291,"count":17},{"startOffset":2962,"endOffset":6251,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3432,"endOffset":3539,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3602,"endOffset":3795,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4096,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4779,"endOffset":5156,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5222,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5479,"endOffset":5674,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5739,"endOffset":5948,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":6043,"endOffset":6236,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6432,"endOffset":6503,"count":177}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6879,"endOffset":6937,"count":17}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":7841,"endOffset":7921,"count":1336}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8014,"endOffset":8064,"count":202}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":9977,"endOffset":10593,"count":177},{"startOffset":10030,"endOffset":10091,"count":30},{"startOffset":10093,"endOffset":10167,"count":147},{"startOffset":10242,"endOffset":10261,"count":88},{"startOffset":10263,"endOffset":10399,"count":0}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":10598,"endOffset":11177,"count":52},{"startOffset":10688,"endOffset":11120,"count":0},{"startOffset":11126,"endOffset":11174,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10897,"endOffset":11111,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12016,"endOffset":12221,"count":1},{"startOffset":12103,"endOffset":12175,"count":0}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12226,"endOffset":12379,"count":185},{"startOffset":12346,"endOffset":12378,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":14321,"endOffset":16674,"count":597},{"startOffset":14452,"endOffset":14613,"count":585},{"startOffset":14471,"endOffset":14509,"count":8},{"startOffset":14518,"endOffset":14552,"count":0},{"startOffset":14577,"endOffset":14606,"count":8},{"startOffset":14613,"endOffset":14651,"count":12},{"startOffset":14651,"endOffset":14726,"count":585},{"startOffset":14726,"endOffset":15698,"count":0},{"startOffset":15698,"endOffset":15771,"count":585},{"startOffset":15771,"endOffset":15784,"count":296},{"startOffset":15784,"endOffset":15825,"count":289},{"startOffset":15825,"endOffset":16115,"count":184},{"startOffset":16039,"endOffset":16057,"count":42},{"startOffset":16059,"endOffset":16110,"count":42},{"startOffset":16115,"endOffset":16653,"count":105},{"startOffset":16235,"endOffset":16648,"count":234},{"startOffset":16566,"endOffset":16584,"count":10},{"startOffset":16586,"endOffset":16641,"count":10},{"startOffset":16653,"endOffset":16673,"count":289}],"isBlockCoverage":true},{"functionName":"_addListener","ranges":[{"startOffset":16679,"endOffset":18775,"count":825},{"startOffset":16867,"endOffset":16954,"count":21},{"startOffset":16954,"endOffset":17445,"count":804},{"startOffset":17142,"endOffset":17410,"count":5},{"startOffset":17479,"endOffset":17621,"count":640},{"startOffset":17621,"endOffset":18752,"count":185},{"startOffset":17670,"endOffset":17891,"count":148},{"startOffset":17784,"endOffset":17806,"count":0},{"startOffset":17891,"endOffset":17999,"count":37},{"startOffset":17910,"endOffset":17953,"count":0},{"startOffset":18107,"endOffset":18126,"count":0},{"startOffset":18128,"endOffset":18747,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":18961,"endOffset":19055,"count":825}],"isBlockCoverage":true},{"functionName":"onceWrapper","ranges":[{"startOffset":19464,"endOffset":19736,"count":111},{"startOffset":19632,"endOffset":19671,"count":83},{"startOffset":19671,"endOffset":19733,"count":28}],"isBlockCoverage":true},{"functionName":"_onceWrap","ranges":[{"startOffset":19740,"endOffset":19987,"count":224}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":20186,"endOffset":20317,"count":224}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":20951,"endOffset":22293,"count":287},{"startOffset":21105,"endOffset":21117,"count":0},{"startOffset":21194,"endOffset":21206,"count":3},{"startOffset":21206,"endOffset":21238,"count":284},{"startOffset":21238,"endOffset":21267,"count":162},{"startOffset":21269,"endOffset":21537,"count":195},{"startOffset":21322,"endOffset":21356,"count":0},{"startOffset":21456,"endOffset":21517,"count":0},{"startOffset":21537,"endOffset":22264,"count":89},{"startOffset":21659,"endOffset":21803,"count":145},{"startOffset":21697,"endOffset":21729,"count":56},{"startOffset":21731,"endOffset":21792,"count":89},{"startOffset":21844,"endOffset":21856,"count":0},{"startOffset":21899,"endOffset":21912,"count":41},{"startOffset":21912,"endOffset":22078,"count":48},{"startOffset":21982,"endOffset":22029,"count":1},{"startOffset":22124,"endOffset":22147,"count":74},{"startOffset":22211,"endOffset":22255,"count":0},{"startOffset":22264,"endOffset":22292,"count":284}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":22625,"endOffset":23994,"count":8},{"startOffset":22739,"endOffset":22751,"count":0},{"startOffset":22901,"endOffset":22993,"count":0},{"startOffset":23031,"endOffset":23183,"count":0},{"startOffset":23214,"endOffset":23993,"count":0}],"isBlockCoverage":true},{"functionName":"_listeners","ranges":[{"startOffset":23999,"endOffset":24409,"count":2},{"startOffset":24123,"endOffset":24380,"count":0},{"startOffset":24381,"endOffset":24405,"count":0}],"isBlockCoverage":true},{"functionName":"listeners","ranges":[{"startOffset":24607,"endOffset":24676,"count":2}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":25620,"endOffset":25924,"count":273},{"startOffset":25714,"endOffset":25906,"count":262},{"startOffset":25799,"endOffset":25824,"count":93},{"startOffset":25824,"endOffset":25901,"count":169},{"startOffset":25860,"endOffset":25901,"count":10},{"startOffset":25906,"endOffset":25923,"count":170}],"isBlockCoverage":true},{"functionName":"arrayClone","ranges":[{"startOffset":26187,"endOffset":26671,"count":105},{"startOffset":26363,"endOffset":26395,"count":81},{"startOffset":26401,"endOffset":26441,"count":24},{"startOffset":26447,"endOffset":26495,"count":0},{"startOffset":26501,"endOffset":26557,"count":0},{"startOffset":26563,"endOffset":26627,"count":0},{"startOffset":26632,"endOffset":26670,"count":0}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":3977,"endOffset":4141,"count":131}],"isBlockCoverage":true},{"functionName":"alignPool","ranges":[{"startOffset":4160,"endOffset":4288,"count":708},{"startOffset":4236,"endOffset":4285,"count":627}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8710,"endOffset":9706,"count":112},{"startOffset":8798,"endOffset":8841,"count":106},{"startOffset":8841,"endOffset":8894,"count":6},{"startOffset":8896,"endOffset":9554,"count":6},{"startOffset":8995,"endOffset":9051,"count":0},{"startOffset":9078,"endOffset":9107,"count":0},{"startOffset":9108,"endOffset":9180,"count":0},{"startOffset":9182,"endOffset":9549,"count":0},{"startOffset":9554,"endOffset":9705,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10539,"endOffset":10699,"count":954},{"startOffset":10627,"endOffset":10696,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":10808,"endOffset":11060,"count":16},{"startOffset":10894,"endOffset":10907,"count":0},{"startOffset":10908,"endOffset":10919,"count":0},{"startOffset":10921,"endOffset":11025,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11245,"endOffset":11323,"count":922}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11571,"endOffset":11663,"count":16}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":11975,"endOffset":12320,"count":922},{"startOffset":12019,"endOffset":12055,"count":0},{"startOffset":12095,"endOffset":12281,"count":623},{"startOffset":12145,"endOffset":12158,"count":123},{"startOffset":12281,"endOffset":12319,"count":299}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12324,"endOffset":12887,"count":106},{"startOffset":12454,"endOffset":12503,"count":21},{"startOffset":12503,"endOffset":12552,"count":85},{"startOffset":12552,"endOffset":12565,"count":8},{"startOffset":12565,"endOffset":12701,"count":85},{"startOffset":12701,"endOffset":12830,"count":0},{"startOffset":12830,"endOffset":12886,"count":85}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":12891,"endOffset":13359,"count":106},{"startOffset":12979,"endOffset":13003,"count":84},{"startOffset":13005,"endOffset":13129,"count":22},{"startOffset":13044,"endOffset":13068,"count":0},{"startOffset":13129,"endOffset":13317,"count":84},{"startOffset":13209,"endOffset":13250,"count":0},{"startOffset":13288,"endOffset":13312,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":13363,"endOffset":14089,"count":6},{"startOffset":13511,"endOffset":13611,"count":0},{"startOffset":13693,"endOffset":13738,"count":0},{"startOffset":13801,"endOffset":14033,"count":0}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":14864,"endOffset":14920,"count":334}],"isBlockCoverage":true},{"functionName":"isEncoding","ranges":[{"startOffset":15306,"endOffset":15460,"count":974}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":16720,"endOffset":16997,"count":69},{"startOffset":16845,"endOffset":16853,"count":34},{"startOffset":16931,"endOffset":16939,"count":13}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17139,"endOffset":17203,"count":32}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":17217,"endOffset":17263,"count":994}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":18245,"endOffset":18270,"count":2}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18284,"endOffset":18350,"count":2}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18364,"endOffset":18412,"count":12}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":18625,"endOffset":18650,"count":3}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18664,"endOffset":18729,"count":3}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19124,"endOffset":19175,"count":69}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19189,"endOffset":19255,"count":48}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":19269,"endOffset":19317,"count":4}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":20608,"endOffset":22480,"count":1094},{"startOffset":20698,"endOffset":21003,"count":1003},{"startOffset":20762,"endOffset":21003,"count":0},{"startOffset":21009,"endOffset":21436,"count":4},{"startOffset":21050,"endOffset":21074,"count":1},{"startOffset":21074,"endOffset":21133,"count":3},{"startOffset":21133,"endOffset":21436,"count":0},{"startOffset":21442,"endOffset":21600,"count":0},{"startOffset":21606,"endOffset":21766,"count":0},{"startOffset":21772,"endOffset":22161,"count":87},{"startOffset":21848,"endOffset":21874,"count":14},{"startOffset":21874,"endOffset":21935,"count":73},{"startOffset":21935,"endOffset":22049,"count":0},{"startOffset":22060,"endOffset":22161,"count":0},{"startOffset":22167,"endOffset":22302,"count":0},{"startOffset":22308,"endOffset":22472,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":22484,"endOffset":23164,"count":24},{"startOffset":22559,"endOffset":22779,"count":0},{"startOffset":22855,"endOffset":22879,"count":0},{"startOffset":22919,"endOffset":22928,"count":0},{"startOffset":22972,"endOffset":22976,"count":0},{"startOffset":23003,"endOffset":23163,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24051,"endOffset":24660,"count":1010},{"startOffset":24124,"endOffset":24174,"count":0},{"startOffset":24231,"endOffset":24241,"count":0},{"startOffset":24273,"endOffset":24283,"count":0},{"startOffset":24336,"endOffset":24348,"count":0},{"startOffset":24365,"endOffset":24388,"count":0},{"startOffset":24417,"endOffset":24427,"count":0},{"startOffset":24466,"endOffset":24500,"count":0},{"startOffset":24575,"endOffset":24616,"count":0}],"isBlockCoverage":true},{"functionName":"adjustOffset","ranges":[{"startOffset":33544,"endOffset":33993,"count":40},{"startOffset":33788,"endOffset":33809,"count":0},{"startOffset":33829,"endOffset":33895,"count":0},{"startOffset":33920,"endOffset":33977,"count":20},{"startOffset":33977,"endOffset":33980,"count":0},{"startOffset":33981,"endOffset":33989,"count":20}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":34022,"endOffset":34328,"count":20},{"startOffset":34186,"endOffset":34197,"count":0},{"startOffset":34246,"endOffset":34249,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":38559,"endOffset":38594,"count":13}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":27310,"endOffset":27412,"count":1214}],"isBlockCoverage":true},{"functionName":"markAsUntransferable","ranges":[{"startOffset":30799,"endOffset":31067,"count":131},{"startOffset":30868,"endOffset":30896,"count":0},{"startOffset":30920,"endOffset":30927,"count":0}],"isBlockCoverage":true},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":31352,"endOffset":31495,"count":446}],"isBlockCoverage":true},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":31756,"endOffset":31830,"count":1}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/encoding","functions":[{"functionName":"TextEncoder","ranges":[{"startOffset":9187,"endOffset":9235,"count":1}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:internal/process/per_thread","functions":[{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1449,"endOffset":1925,"count":1}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":4952,"endOffset":5449,"count":1}],"isBlockCoverage":true},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":7267,"endOffset":11319,"count":1},{"startOffset":7568,"endOffset":7872,"count":126},{"startOffset":7626,"endOffset":7867,"count":98},{"startOffset":7725,"endOffset":7860,"count":50},{"startOffset":8357,"endOffset":8788,"count":22},{"startOffset":8412,"endOffset":8783,"count":10},{"startOffset":8504,"endOffset":8573,"count":2},{"startOffset":8640,"endOffset":8709,"count":0}],"isBlockCoverage":true},{"functionName":"isAccepted","ranges":[{"startOffset":7878,"endOffset":8304,"count":28},{"startOffset":7949,"endOffset":7963,"count":27},{"startOffset":7965,"endOffset":7977,"count":2},{"startOffset":7977,"endOffset":8056,"count":26},{"startOffset":8056,"endOffset":8229,"count":2},{"startOffset":8108,"endOffset":8155,"count":1},{"startOffset":8229,"endOffset":8303,"count":24}],"isBlockCoverage":true},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":8825,"endOffset":8887,"count":158}],"isBlockCoverage":true},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":9205,"endOffset":9284,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":9292,"endOffset":9364,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":9372,"endOffset":9448,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":9456,"endOffset":9510,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":9518,"endOffset":10341,"count":1},{"startOffset":10248,"endOffset":10340,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":10349,"endOffset":10518,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":10526,"endOffset":10707,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":10715,"endOffset":10778,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":10786,"endOffset":10953,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":11515,"endOffset":11855,"count":1},{"startOffset":11596,"endOffset":11777,"count":0},{"startOffset":11809,"endOffset":11852,"count":0}],"isBlockCoverage":true}]},{"scriptId":"32","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1127,"endOffset":1215,"count":338},{"startOffset":1204,"endOffset":1207,"count":202},{"startOffset":1208,"endOffset":1211,"count":136}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1529,"endOffset":2540,"count":137},{"startOffset":1587,"endOffset":2417,"count":144},{"startOffset":1634,"endOffset":2390,"count":397},{"startOffset":1841,"endOffset":1876,"count":14},{"startOffset":1876,"endOffset":2259,"count":383},{"startOffset":1966,"endOffset":1999,"count":185},{"startOffset":2013,"endOffset":2055,"count":184},{"startOffset":2069,"endOffset":2120,"count":14},{"startOffset":2134,"endOffset":2194,"count":0},{"startOffset":2208,"endOffset":2235,"count":0},{"startOffset":2269,"endOffset":2354,"count":396},{"startOffset":2324,"endOffset":2345,"count":0},{"startOffset":2354,"endOffset":2390,"count":396},{"startOffset":2390,"endOffset":2417,"count":143},{"startOffset":2417,"endOffset":2471,"count":136}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2688,"endOffset":3580,"count":397},{"startOffset":2781,"endOffset":2788,"count":0},{"startOffset":2840,"endOffset":2854,"count":14},{"startOffset":2860,"endOffset":2897,"count":185},{"startOffset":2903,"endOffset":2954,"count":184},{"startOffset":2960,"endOffset":3025,"count":14},{"startOffset":3031,"endOffset":3178,"count":0},{"startOffset":3210,"endOffset":3236,"count":202},{"startOffset":3490,"endOffset":3550,"count":0}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2139,"endOffset":2231,"count":136},{"startOffset":2220,"endOffset":2223,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6617,"endOffset":9869,"count":136},{"startOffset":6778,"endOffset":6962,"count":0},{"startOffset":7030,"endOffset":9770,"count":0}],"isBlockCoverage":true}]},{"scriptId":"34","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3143,"endOffset":3197,"count":1080}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3203,"endOffset":3272,"count":397}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3278,"endOffset":3368,"count":397}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3374,"endOffset":3596,"count":540},{"startOffset":3470,"endOffset":3482,"count":143},{"startOffset":3482,"endOffset":3595,"count":397}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3724,"endOffset":3773,"count":540}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3779,"endOffset":4050,"count":397},{"startOffset":3821,"endOffset":4018,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":4056,"endOffset":4295,"count":540},{"startOffset":4151,"endOffset":4172,"count":345},{"startOffset":4174,"endOffset":4272,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/console/constructor","functions":[{"functionName":"get","ranges":[{"startOffset":5960,"endOffset":6058,"count":216},{"startOffset":5994,"endOffset":6017,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6208,"endOffset":6310,"count":3},{"startOffset":6242,"endOffset":6269,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":7743,"endOffset":9227,"count":73},{"startOffset":7959,"endOffset":7973,"count":72},{"startOffset":7974,"endOffset":7988,"count":1},{"startOffset":8028,"endOffset":8063,"count":72},{"startOffset":8064,"endOffset":8090,"count":1},{"startOffset":8131,"endOffset":8325,"count":0},{"startOffset":8386,"endOffset":8414,"count":0},{"startOffset":8780,"endOffset":8807,"count":20},{"startOffset":8864,"endOffset":9154,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9304,"endOffset":9811,"count":73},{"startOffset":9522,"endOffset":9528,"count":0},{"startOffset":9607,"endOffset":9733,"count":0},{"startOffset":9779,"endOffset":9803,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9886,"endOffset":10070,"count":72}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10145,"endOffset":10329,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10492,"endOffset":11326,"count":73},{"startOffset":10741,"endOffset":10766,"count":72},{"startOffset":10767,"endOffset":10785,"count":1},{"startOffset":11267,"endOffset":11314,"count":55}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":11362,"endOffset":11451,"count":72}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":11460,"endOffset":11550,"count":1}],"isBlockCoverage":true}]},{"scriptId":"39","url":"node:internal/url","functions":[{"functionName":"URLContext","ranges":[{"startOffset":3848,"endOffset":4081,"count":1583}],"isBlockCoverage":true},{"functionName":"URLSearchParams","ranges":[{"startOffset":4495,"endOffset":6964,"count":1498},{"startOffset":4613,"endOffset":6898,"count":0}],"isBlockCoverage":true},{"functionName":"onParseComplete","ranges":[{"startOffset":14702,"endOffset":15412,"count":1498},{"startOffset":14962,"endOffset":14972,"count":0},{"startOffset":15036,"endOffset":15046,"count":0},{"startOffset":15129,"endOffset":15133,"count":0}],"isBlockCoverage":true},{"functionName":"onParseError","ranges":[{"startOffset":15416,"endOffset":15493,"count":85}],"isBlockCoverage":true},{"functionName":"onParsePathComplete","ranges":[{"startOffset":16716,"endOffset":17226,"count":843},{"startOffset":16988,"endOffset":17059,"count":0}],"isBlockCoverage":true},{"functionName":"URL","ranges":[{"startOffset":17597,"endOffset":17965,"count":1583},{"startOffset":17748,"endOffset":17802,"count":258}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18060,"endOffset":18155,"count":2166}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19415,"endOffset":20719,"count":1124},{"startOffset":19947,"endOffset":20102,"count":0},{"startOffset":20133,"endOffset":20169,"count":0},{"startOffset":20221,"endOffset":20243,"count":0},{"startOffset":20280,"endOffset":20315,"count":0},{"startOffset":20352,"endOffset":20374,"count":0},{"startOffset":20375,"endOffset":20396,"count":0},{"startOffset":20398,"endOffset":20430,"count":0},{"startOffset":20588,"endOffset":20611,"count":0},{"startOffset":20671,"endOffset":20697,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":20779,"endOffset":20827,"count":59}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":20833,"endOffset":20881,"count":1065}],"isBlockCoverage":true},{"functionName":"get origin","ranges":[{"startOffset":21106,"endOffset":21696,"count":22},{"startOffset":21249,"endOffset":21485,"count":0},{"startOffset":21493,"endOffset":21505,"count":0},{"startOffset":21513,"endOffset":21526,"count":0},{"startOffset":21534,"endOffset":21548,"count":0},{"startOffset":21556,"endOffset":21567,"count":0},{"startOffset":21575,"endOffset":21657,"count":0}],"isBlockCoverage":true},{"functionName":"get protocol","ranges":[{"startOffset":21702,"endOffset":21757,"count":161}],"isBlockCoverage":true},{"functionName":"get hostname","ranges":[{"startOffset":23454,"endOffset":23513,"count":107}],"isBlockCoverage":true},{"functionName":"get pathname","ranges":[{"startOffset":24278,"endOffset":24490,"count":199},{"startOffset":24363,"endOffset":24382,"count":50},{"startOffset":24382,"endOffset":24422,"count":149},{"startOffset":24422,"endOffset":24432,"count":0},{"startOffset":24432,"endOffset":24489,"count":149}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":24496,"endOffset":24717,"count":843},{"startOffset":24611,"endOffset":24618,"count":0}],"isBlockCoverage":true},{"functionName":"get search","ranges":[{"startOffset":24723,"endOffset":24864,"count":1},{"startOffset":24800,"endOffset":24815,"count":0},{"startOffset":24834,"endOffset":24863,"count":0}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":24870,"endOffset":25403,"count":1},{"startOffset":25057,"endOffset":25347,"count":0}],"isBlockCoverage":true},{"functionName":"get hash","ranges":[{"startOffset":25487,"endOffset":25638,"count":1},{"startOffset":25568,"endOffset":25586,"count":0},{"startOffset":25605,"endOffset":25637,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":25644,"endOffset":26099,"count":1},{"startOffset":25863,"endOffset":26098,"count":0}],"isBlockCoverage":true},{"functionName":"initSearchParams","ranges":[{"startOffset":28039,"endOffset":28185,"count":1499},{"startOffset":28140,"endOffset":28184,"count":0}],"isBlockCoverage":true},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":37696,"endOffset":39122,"count":107},{"startOffset":37843,"endOffset":38205,"count":11706},{"startOffset":37875,"endOffset":38200,"count":0},{"startOffset":38331,"endOffset":38777,"count":0},{"startOffset":39022,"endOffset":39090,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":39650,"endOffset":40005,"count":107},{"startOffset":39719,"endOffset":39740,"count":85},{"startOffset":39740,"endOffset":39844,"count":22},{"startOffset":39780,"endOffset":39844,"count":0},{"startOffset":39884,"endOffset":39925,"count":0},{"startOffset":39974,"endOffset":40001,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":40784,"endOffset":41513,"count":843},{"startOffset":40873,"endOffset":40938,"count":0},{"startOffset":41014,"endOffset":41056,"count":0},{"startOffset":41063,"endOffset":41130,"count":0},{"startOffset":41184,"endOffset":41249,"count":0},{"startOffset":41303,"endOffset":41375,"count":0},{"startOffset":41429,"endOffset":41490,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":41517,"endOffset":42803,"count":843},{"startOffset":41655,"endOffset":42278,"count":0},{"startOffset":42648,"endOffset":42702,"count":0},{"startOffset":42711,"endOffset":42727,"count":0}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":42807,"endOffset":42928,"count":2163},{"startOffset":42901,"endOffset":42924,"count":22}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":42932,"endOffset":43081,"count":2141},{"startOffset":43038,"endOffset":43080,"count":0}],"isBlockCoverage":true}]},{"scriptId":"41","url":"node:path","functions":[{"functionName":"isPathSeparator","ranges":[{"startOffset":1770,"endOffset":1876,"count":1873235},{"startOffset":1841,"endOffset":1872,"count":1871653}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1963,"endOffset":2136,"count":43287},{"startOffset":2036,"endOffset":2063,"count":41411},{"startOffset":2065,"endOffset":2132,"count":8973},{"startOffset":2104,"endOffset":2131,"count":7097}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2202,"endOffset":4212,"count":19928},{"startOffset":2425,"endOffset":4194,"count":1764757},{"startOffset":2460,"endOffset":2502,"count":1744829},{"startOffset":2502,"endOffset":2597,"count":19928},{"startOffset":2547,"endOffset":2553,"count":19895},{"startOffset":2553,"endOffset":2597,"count":33},{"startOffset":2597,"endOffset":2632,"count":1744862},{"startOffset":2632,"endOffset":4090,"count":153824},{"startOffset":2665,"endOffset":2678,"count":148190},{"startOffset":2680,"endOffset":2707,"count":6362},{"startOffset":2707,"endOffset":4044,"count":147462},{"startOffset":2729,"endOffset":3793,"count":171},{"startOffset":2786,"endOffset":2861,"count":0},{"startOffset":2862,"endOffset":2937,"count":0},{"startOffset":3094,"endOffset":3173,"count":0},{"startOffset":3462,"endOffset":3637,"count":0},{"startOffset":3648,"endOffset":3784,"count":0},{"startOffset":3793,"endOffset":4044,"count":147291},{"startOffset":3841,"endOffset":3910,"count":128218},{"startOffset":3910,"endOffset":3987,"count":19073},{"startOffset":4044,"endOffset":4090,"count":153653},{"startOffset":4090,"endOffset":4189,"count":1591038},{"startOffset":4118,"endOffset":4132,"count":14464},{"startOffset":4134,"endOffset":4157,"count":1135},{"startOffset":4157,"endOffset":4189,"count":1589903}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4868,"endOffset":9786,"count":19870},{"startOffset":5031,"endOffset":9319,"count":27533},{"startOffset":5069,"endOffset":5242,"count":27524},{"startOffset":5200,"endOffset":5233,"count":1},{"startOffset":5242,"endOffset":6207,"count":9},{"startOffset":5322,"endOffset":6207,"count":0},{"startOffset":6207,"endOffset":6431,"count":27532},{"startOffset":6431,"endOffset":6596,"count":17},{"startOffset":6469,"endOffset":6587,"count":8},{"startOffset":6596,"endOffset":8616,"count":27515},{"startOffset":6629,"endOffset":8151,"count":0},{"startOffset":8187,"endOffset":8258,"count":26592},{"startOffset":8260,"endOffset":8616,"count":19870},{"startOffset":8616,"endOffset":8649,"count":27532},{"startOffset":8649,"endOffset":8977,"count":19870},{"startOffset":8691,"endOffset":8914,"count":0},{"startOffset":8977,"endOffset":9009,"count":27532},{"startOffset":9009,"endOffset":9077,"count":8},{"startOffset":9077,"endOffset":9312,"count":27524},{"startOffset":9243,"endOffset":9271,"count":19870},{"startOffset":9273,"endOffset":9303,"count":19862},{"startOffset":9730,"endOffset":9780,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":9858,"endOffset":13021,"count":58},{"startOffset":9968,"endOffset":9979,"count":0},{"startOffset":10152,"endOffset":10309,"count":0},{"startOffset":10342,"endOffset":12074,"count":0},{"startOffset":12110,"endOffset":12178,"count":50},{"startOffset":12180,"endOffset":12516,"count":48},{"startOffset":12670,"endOffset":12681,"count":0},{"startOffset":12710,"endOffset":12724,"count":3},{"startOffset":12733,"endOffset":12744,"count":3},{"startOffset":12848,"endOffset":12861,"count":25},{"startOffset":12893,"endOffset":12948,"count":10},{"startOffset":12920,"endOffset":12933,"count":0},{"startOffset":12948,"endOffset":12994,"count":48},{"startOffset":12995,"endOffset":13015,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":13094,"endOffset":13523,"count":2160},{"startOffset":13205,"endOffset":13218,"count":0},{"startOffset":13359,"endOffset":13394,"count":2144},{"startOffset":13395,"endOffset":13454,"count":1200},{"startOffset":13455,"endOffset":13516,"count":829}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":13598,"endOffset":15808,"count":42},{"startOffset":13649,"endOffset":13660,"count":0},{"startOffset":13743,"endOffset":13972,"count":85},{"startOffset":13884,"endOffset":13909,"count":42},{"startOffset":13909,"endOffset":13956,"count":43},{"startOffset":14013,"endOffset":14024,"count":0},{"startOffset":14913,"endOffset":15376,"count":0},{"startOffset":15587,"endOffset":15620,"count":0},{"startOffset":15700,"endOffset":15757,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":16115,"endOffset":19998,"count":9},{"startOffset":16233,"endOffset":16243,"count":0},{"startOffset":16367,"endOffset":16377,"count":0},{"startOffset":16507,"endOffset":16517,"count":0},{"startOffset":16700,"endOffset":16728,"count":0},{"startOffset":16956,"endOffset":16982,"count":0},{"startOffset":17197,"endOffset":17223,"count":0},{"startOffset":17430,"endOffset":17454,"count":0},{"startOffset":17603,"endOffset":17610,"count":0},{"startOffset":17686,"endOffset":17928,"count":543},{"startOffset":17837,"endOffset":17843,"count":0},{"startOffset":17903,"endOffset":17921,"count":44},{"startOffset":18068,"endOffset":18133,"count":0},{"startOffset":18481,"endOffset":18686,"count":0},{"startOffset":18695,"endOffset":19240,"count":0},{"startOffset":19247,"endOffset":19997,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":20070,"endOffset":21201,"count":9304},{"startOffset":20210,"endOffset":20222,"count":0},{"startOffset":20316,"endOffset":20328,"count":0},{"startOffset":20408,"endOffset":20827,"count":0},{"startOffset":21176,"endOffset":21200,"count":0}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":21273,"endOffset":23908,"count":3412},{"startOffset":21381,"endOffset":21392,"count":0},{"startOffset":21513,"endOffset":21677,"count":0},{"startOffset":21740,"endOffset":23160,"count":0},{"startOffset":23196,"endOffset":23264,"count":3411},{"startOffset":23266,"endOffset":23397,"count":3411},{"startOffset":23361,"endOffset":23364,"count":0},{"startOffset":23494,"endOffset":23751,"count":40311},{"startOffset":23560,"endOffset":23649,"count":3411},{"startOffset":23649,"endOffset":23744,"count":36900},{"startOffset":23775,"endOffset":23855,"count":1},{"startOffset":23813,"endOffset":23824,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":24008,"endOffset":26836,"count":845},{"startOffset":24065,"endOffset":24092,"count":1},{"startOffset":24531,"endOffset":24557,"count":843},{"startOffset":24587,"endOffset":24604,"count":1},{"startOffset":24605,"endOffset":24633,"count":1},{"startOffset":24635,"endOffset":26192,"count":1},{"startOffset":24671,"endOffset":24681,"count":0},{"startOffset":24806,"endOffset":26014,"count":4},{"startOffset":24902,"endOffset":25147,"count":0},{"startOffset":25195,"endOffset":25429,"count":1},{"startOffset":25458,"endOffset":25994,"count":2},{"startOffset":25578,"endOffset":25787,"count":1},{"startOffset":25616,"endOffset":25772,"count":0},{"startOffset":25787,"endOffset":25981,"count":1},{"startOffset":26052,"endOffset":26075,"count":0},{"startOffset":26113,"endOffset":26131,"count":0},{"startOffset":26192,"endOffset":26245,"count":844},{"startOffset":26245,"endOffset":26738,"count":10163},{"startOffset":26311,"endOffset":26542,"count":844},{"startOffset":26542,"endOffset":26731,"count":9319},{"startOffset":26564,"endOffset":26731,"count":844},{"startOffset":26738,"endOffset":26769,"count":844},{"startOffset":26769,"endOffset":26779,"count":0},{"startOffset":26779,"endOffset":26835,"count":844}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":26908,"endOffset":29043,"count":24},{"startOffset":27489,"endOffset":27556,"count":7},{"startOffset":27558,"endOffset":27596,"count":7},{"startOffset":27651,"endOffset":28635,"count":439},{"startOffset":27743,"endOffset":27997,"count":8},{"startOffset":27969,"endOffset":27997,"count":0},{"startOffset":27997,"endOffset":28021,"count":431},{"startOffset":28021,"endOffset":28183,"count":24},{"startOffset":28183,"endOffset":28214,"count":431},{"startOffset":28214,"endOffset":28420,"count":9},{"startOffset":28333,"endOffset":28346,"count":7},{"startOffset":28346,"endOffset":28411,"count":2},{"startOffset":28420,"endOffset":28628,"count":422},{"startOffset":28447,"endOffset":28628,"count":192},{"startOffset":28663,"endOffset":28685,"count":7},{"startOffset":28686,"endOffset":28781,"count":7},{"startOffset":28782,"endOffset":28955,"count":7},{"startOffset":28881,"endOffset":28914,"count":0},{"startOffset":28915,"endOffset":28954,"count":0},{"startOffset":28957,"endOffset":28983,"count":17},{"startOffset":28983,"endOffset":29042,"count":7}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":29279,"endOffset":34185,"count":2},{"startOffset":29434,"endOffset":29445,"count":0},{"startOffset":29574,"endOffset":29838,"count":0},{"startOffset":29899,"endOffset":31114,"count":0},{"startOffset":31274,"endOffset":31437,"count":0},{"startOffset":31548,"endOffset":31721,"count":0},{"startOffset":32181,"endOffset":33159,"count":62},{"startOffset":32267,"endOffset":32521,"count":2},{"startOffset":32493,"endOffset":32521,"count":0},{"startOffset":32521,"endOffset":32545,"count":60},{"startOffset":32545,"endOffset":32707,"count":2},{"startOffset":32707,"endOffset":32738,"count":60},{"startOffset":32738,"endOffset":32944,"count":0},{"startOffset":32944,"endOffset":33152,"count":60},{"startOffset":32971,"endOffset":33152,"count":0},{"startOffset":33212,"endOffset":33311,"count":0},{"startOffset":33312,"endOffset":33493,"count":0},{"startOffset":33580,"endOffset":33791,"count":0},{"startOffset":34124,"endOffset":34161,"count":0}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:internal/event_target","functions":[{"functionName":"EventEmitterMixin","ranges":[{"startOffset":26757,"endOffset":27191,"count":1}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":26828,"endOffset":26973,"count":0}],"isBlockCoverage":false}]},{"scriptId":"45","url":"node:util","functions":[{"functionName":"inherits","ranges":[{"startOffset":6025,"endOffset":6659,"count":90},{"startOffset":6113,"endOffset":6170,"count":0},{"startOffset":6232,"endOffset":6299,"count":0},{"startOffset":6344,"endOffset":6477,"count":0}],"isBlockCoverage":true}]},{"scriptId":"46","url":"node:internal/perf/utils","functions":[{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":523,"endOffset":589,"count":1}],"isBlockCoverage":true}]},{"scriptId":"47","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1868,"endOffset":1895,"count":1}],"isBlockCoverage":true},{"functionName":"unenroll","ranges":[{"startOffset":2409,"endOffset":3628,"count":11},{"startOffset":2464,"endOffset":2471,"count":0},{"startOffset":2536,"endOffset":2582,"count":0},{"startOffset":2676,"endOffset":2714,"count":0},{"startOffset":2721,"endOffset":2756,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":4357,"endOffset":5030,"count":14},{"startOffset":4518,"endOffset":4525,"count":0},{"startOffset":4558,"endOffset":4601,"count":0},{"startOffset":4607,"endOffset":4656,"count":0},{"startOffset":4662,"endOffset":4889,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":5346,"endOffset":5725,"count":624},{"startOffset":5390,"endOffset":5409,"count":11},{"startOffset":5411,"endOffset":5482,"count":11},{"startOffset":5482,"endOffset":5544,"count":613},{"startOffset":5546,"endOffset":5722,"count":0}],"isBlockCoverage":true},{"functionName":"setImmediate","ranges":[{"startOffset":7652,"endOffset":8217,"count":67},{"startOffset":7835,"endOffset":7878,"count":0},{"startOffset":7884,"endOffset":7933,"count":0},{"startOffset":7939,"endOffset":8166,"count":0}],"isBlockCoverage":true}]},{"scriptId":"49","url":"node:stream","functions":[{"functionName":"get","ranges":[{"startOffset":2784,"endOffset":2818,"count":18}],"isBlockCoverage":true}]},{"scriptId":"54","url":"node:internal/streams/destroy","functions":[{"functionName":"checkError","ranges":[{"startOffset":250,"endOffset":573,"count":112},{"startOffset":295,"endOffset":570,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":687,"endOffset":1522,"count":56},{"startOffset":860,"endOffset":864,"count":28},{"startOffset":878,"endOffset":892,"count":28},{"startOffset":917,"endOffset":1000,"count":0},{"startOffset":1192,"endOffset":1223,"count":28},{"startOffset":1348,"endOffset":1459,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1375,"endOffset":1452,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1526,"endOffset":2522,"count":56},{"startOffset":2169,"endOffset":2474,"count":0},{"startOffset":2480,"endOffset":2519,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1589,"endOffset":2075,"count":56},{"startOffset":1632,"endOffset":1655,"count":0},{"startOffset":1794,"endOffset":1826,"count":28},{"startOffset":1909,"endOffset":1933,"count":0},{"startOffset":1950,"endOffset":2012,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2295,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2381,"endOffset":2456,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2620,"endOffset":2894,"count":56},{"startOffset":2729,"endOffset":2763,"count":28},{"startOffset":2821,"endOffset":2835,"count":28},{"startOffset":2860,"endOffset":2891,"count":28}],"isBlockCoverage":true},{"functionName":"undestroy","ranges":[{"startOffset":3205,"endOffset":3849,"count":44}],"isBlockCoverage":true},{"functionName":"construct","ranges":[{"startOffset":4832,"endOffset":5261,"count":88},{"startOffset":4932,"endOffset":5260,"count":0}],"isBlockCoverage":true}]},{"scriptId":"55","url":"node:internal/streams/duplex","functions":[{"functionName":"Duplex","ranges":[{"startOffset":1987,"endOffset":2430,"count":30},{"startOffset":2053,"endOffset":2080,"count":0},{"startOffset":2243,"endOffset":2265,"count":2},{"startOffset":2312,"endOffset":2334,"count":0},{"startOffset":2379,"endOffset":2422,"count":16}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3364,"endOffset":3582,"count":211},{"startOffset":3464,"endOffset":3497,"count":0},{"startOffset":3542,"endOffset":3574,"count":0}],"isBlockCoverage":true}]},{"scriptId":"56","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1806,"count":1}],"isBlockCoverage":true},{"functionName":"ReadableState","ranges":[{"startOffset":2574,"endOffset":6403,"count":58},{"startOffset":2980,"endOffset":3023,"count":0},{"startOffset":3230,"endOffset":3316,"count":30},{"startOffset":3569,"endOffset":3606,"count":0},{"startOffset":6298,"endOffset":6400,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6409,"endOffset":7336,"count":58},{"startOffset":6479,"endOffset":6508,"count":0},{"startOffset":6841,"endOffset":6867,"count":0},{"startOffset":6925,"endOffset":6957,"count":0},{"startOffset":7017,"endOffset":7053,"count":0},{"startOffset":7078,"endOffset":7090,"count":0},{"startOffset":7099,"endOffset":7146,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7218,"endOffset":7331,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":7839,"endOffset":7927,"count":62}],"isBlockCoverage":true},{"functionName":"readableAddChunk","ranges":[{"startOffset":8118,"endOffset":10454,"count":62},{"startOffset":8338,"endOffset":8814,"count":0},{"startOffset":8849,"endOffset":8879,"count":34},{"startOffset":8879,"endOffset":9132,"count":28},{"startOffset":8918,"endOffset":8998,"count":0},{"startOffset":9023,"endOffset":9132,"count":0},{"startOffset":9152,"endOffset":9192,"count":0},{"startOffset":9218,"endOffset":9284,"count":28},{"startOffset":9284,"endOffset":10163,"count":34},{"startOffset":9366,"endOffset":9537,"count":0},{"startOffset":9560,"endOffset":9632,"count":0},{"startOffset":9676,"endOffset":9705,"count":0},{"startOffset":9768,"endOffset":9780,"count":10},{"startOffset":9782,"endOffset":9995,"count":10},{"startOffset":9931,"endOffset":9986,"count":0},{"startOffset":9995,"endOffset":10059,"count":24},{"startOffset":10071,"endOffset":10163,"count":0},{"startOffset":10384,"endOffset":10450,"count":34},{"startOffset":10428,"endOffset":10449,"count":0}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":10458,"endOffset":11212,"count":34},{"startOffset":10570,"endOffset":10612,"count":14},{"startOffset":10614,"endOffset":10914,"count":14},{"startOffset":10744,"endOffset":10792,"count":0},{"startOffset":10914,"endOffset":11176,"count":20},{"startOffset":10992,"endOffset":10995,"count":0},{"startOffset":11040,"endOffset":11068,"count":0},{"startOffset":11150,"endOffset":11171,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.isPaused","ranges":[{"startOffset":11246,"endOffset":11361,"count":14}],"isBlockCoverage":true},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":11428,"endOffset":12006,"count":10},{"startOffset":11827,"endOffset":11870,"count":0},{"startOffset":11918,"endOffset":11939,"count":0}],"isBlockCoverage":true},{"functionName":"howMuchToRead","ranges":[{"startOffset":12569,"endOffset":12977,"count":202},{"startOffset":12618,"endOffset":12656,"count":96},{"startOffset":12641,"endOffset":12655,"count":76},{"startOffset":12663,"endOffset":12672,"count":148},{"startOffset":12672,"endOffset":12703,"count":54},{"startOffset":12703,"endOffset":12712,"count":0},{"startOffset":12712,"endOffset":12891,"count":54},{"startOffset":12825,"endOffset":12860,"count":20},{"startOffset":12860,"endOffset":12891,"count":34},{"startOffset":12891,"endOffset":12969,"count":0},{"startOffset":12970,"endOffset":12973,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":13077,"endOffset":17585,"count":202},{"startOffset":13265,"endOffset":13285,"count":96},{"startOffset":13285,"endOffset":13354,"count":106},{"startOffset":13316,"endOffset":13354,"count":0},{"startOffset":13525,"endOffset":13574,"count":0},{"startOffset":13598,"endOffset":13628,"count":96},{"startOffset":13819,"endOffset":13847,"count":106},{"startOffset":13848,"endOffset":13985,"count":28},{"startOffset":13933,"endOffset":13960,"count":0},{"startOffset":13987,"endOffset":14179,"count":0},{"startOffset":14293,"endOffset":14307,"count":182},{"startOffset":14309,"endOffset":14388,"count":86},{"startOffset":14347,"endOffset":14365,"count":72},{"startOffset":14388,"endOffset":15693,"count":116},{"startOffset":15693,"endOffset":15734,"count":26},{"startOffset":15736,"endOffset":16046,"count":116},{"startOffset":16046,"endOffset":16062,"count":102},{"startOffset":16063,"endOffset":16081,"count":48},{"startOffset":16082,"endOffset":16098,"count":48},{"startOffset":16099,"endOffset":16127,"count":48},{"startOffset":16129,"endOffset":16210,"count":68},{"startOffset":16210,"endOffset":16761,"count":48},{"startOffset":16414,"endOffset":16440,"count":42},{"startOffset":16724,"endOffset":16756,"count":0},{"startOffset":16761,"endOffset":16795,"count":116},{"startOffset":16795,"endOffset":16820,"count":20},{"startOffset":16820,"endOffset":16845,"count":96},{"startOffset":16845,"endOffset":16869,"count":116},{"startOffset":16869,"endOffset":16950,"count":96},{"startOffset":16950,"endOffset":17120,"count":20},{"startOffset":17014,"endOffset":17062,"count":0},{"startOffset":17120,"endOffset":17150,"count":116},{"startOffset":17150,"endOffset":17475,"count":110},{"startOffset":17303,"endOffset":17329,"count":96},{"startOffset":17429,"endOffset":17443,"count":54},{"startOffset":17452,"endOffset":17470,"count":14},{"startOffset":17475,"endOffset":17499,"count":116},{"startOffset":17499,"endOffset":17565,"count":20},{"startOffset":17565,"endOffset":17584,"count":116}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":17590,"endOffset":18435,"count":28},{"startOffset":17671,"endOffset":17678,"count":0},{"startOffset":17701,"endOffset":17881,"count":10},{"startOffset":17758,"endOffset":17773,"count":0},{"startOffset":17775,"endOffset":17876,"count":0},{"startOffset":17926,"endOffset":18133,"count":22},{"startOffset":18133,"endOffset":18432,"count":6}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":18641,"endOffset":18977,"count":22}],"isBlockCoverage":true},{"functionName":"emitReadable_","ranges":[{"startOffset":18981,"endOffset":19654,"count":28},{"startOffset":19569,"endOffset":19589,"count":8},{"startOffset":19590,"endOffset":19633,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":20013,"endOffset":20195,"count":34},{"startOffset":20079,"endOffset":20099,"count":14},{"startOffset":20101,"endOffset":20192,"count":14}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":20199,"endOffset":22026,"count":14},{"startOffset":21754,"endOffset":21805,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.on","ranges":[{"startOffset":28613,"endOffset":29547,"count":587},{"startOffset":28749,"endOffset":29089,"count":64},{"startOffset":29089,"endOffset":29527,"count":523},{"startOffset":29118,"endOffset":29527,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":29645,"endOffset":30225,"count":243},{"startOffset":29811,"endOffset":30205,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":30331,"endOffset":30940,"count":8},{"startOffset":30526,"endOffset":30920,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.resume","ranges":[{"startOffset":31723,"endOffset":32060,"count":110},{"startOffset":31797,"endOffset":32014,"count":56}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":32065,"endOffset":32220,"count":56}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":32224,"endOffset":32486,"count":56},{"startOffset":32316,"endOffset":32343,"count":42},{"startOffset":32468,"endOffset":32483,"count":22}],"isBlockCoverage":true},{"functionName":"flow","ranges":[{"startOffset":32798,"endOffset":32949,"count":84},{"startOffset":32919,"endOffset":32944,"count":96},{"startOffset":32945,"endOffset":32946,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":36578,"endOffset":36975,"count":68},{"startOffset":36923,"endOffset":36941,"count":54},{"startOffset":36942,"endOffset":36967,"count":54}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":36982,"endOffset":37117,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":37598,"endOffset":37666,"count":28}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":39039,"endOffset":39129,"count":50},{"startOffset":39114,"endOffset":39121,"count":0}],"isBlockCoverage":true},{"functionName":"fromList","ranges":[{"startOffset":39792,"endOffset":40377,"count":20},{"startOffset":39878,"endOffset":39890,"count":0},{"startOffset":39935,"endOffset":39962,"count":0},{"startOffset":40073,"endOffset":40235,"count":10},{"startOffset":40177,"endOffset":40235,"count":0},{"startOffset":40267,"endOffset":40357,"count":0}],"isBlockCoverage":true},{"functionName":"endReadable","ranges":[{"startOffset":40381,"endOffset":40610,"count":86}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":40614,"endOffset":41566,"count":86},{"startOffset":40842,"endOffset":40863,"count":28},{"startOffset":40865,"endOffset":41563,"count":28},{"startOffset":40949,"endOffset":40982,"count":0},{"startOffset":40984,"endOffset":41040,"count":0},{"startOffset":41276,"endOffset":41486,"count":0}],"isBlockCoverage":true}]},{"scriptId":"57","url":"node:internal/streams/legacy","functions":[{"functionName":"Stream","ranges":[{"startOffset":121,"endOffset":171,"count":144}],"isBlockCoverage":true}]},{"scriptId":"59","url":"node:internal/streams/buffer_list","functions":[{"functionName":"BufferList","ranges":[{"startOffset":267,"endOffset":355,"count":58}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":361,"endOffset":556,"count":20},{"startOffset":448,"endOffset":471,"count":0}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":975,"endOffset":1046,"count":30}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":1052,"endOffset":1242,"count":10},{"startOffset":1097,"endOffset":1107,"count":0},{"startOffset":1202,"endOffset":1220,"count":0}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":2104,"endOffset":2146,"count":30}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":2152,"endOffset":2252,"count":10},{"startOffset":2218,"endOffset":2247,"count":0}],"isBlockCoverage":true}]},{"scriptId":"60","url":"node:internal/streams/state","functions":[{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":151,"endOffset":321,"count":88},{"startOffset":250,"endOffset":273,"count":28},{"startOffset":274,"endOffset":317,"count":60},{"startOffset":311,"endOffset":317,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":325,"endOffset":413,"count":61},{"startOffset":393,"endOffset":397,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":417,"endOffset":862,"count":88},{"startOffset":566,"endOffset":784,"count":28},{"startOffset":611,"endOffset":751,"count":0},{"startOffset":784,"endOffset":861,"count":60}],"isBlockCoverage":true}]},{"scriptId":"61","url":"node:string_decoder","functions":[{"functionName":"normalizeEncoding","ranges":[{"startOffset":2171,"endOffset":2441,"count":16},{"startOffset":2285,"endOffset":2422,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2771,"endOffset":2974,"count":16}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3310,"endOffset":3619,"count":16},{"startOffset":3369,"endOffset":3380,"count":0},{"startOffset":3418,"endOffset":3571,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":3909,"endOffset":4107,"count":16},{"startOffset":3977,"endOffset":3999,"count":0},{"startOffset":4054,"endOffset":4089,"count":0}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/streams/writable","functions":[{"functionName":"nop","ranges":[{"startOffset":2469,"endOffset":2486,"count":8}],"isBlockCoverage":true},{"functionName":"WritableState","ranges":[{"startOffset":2536,"endOffset":7182,"count":30},{"startOffset":2938,"endOffset":2981,"count":0},{"startOffset":3546,"endOffset":3583,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":7186,"endOffset":7323,"count":58}],"isBlockCoverage":true},{"functionName":"Writable","ranges":[{"startOffset":7610,"endOffset":9195,"count":30},{"startOffset":8264,"endOffset":8318,"count":0},{"startOffset":8325,"endOffset":8354,"count":0},{"startOffset":8499,"endOffset":8527,"count":0},{"startOffset":8584,"endOffset":8614,"count":0},{"startOffset":8672,"endOffset":8704,"count":0},{"startOffset":8760,"endOffset":8788,"count":0},{"startOffset":8848,"endOffset":8884,"count":0},{"startOffset":8917,"endOffset":8964,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9036,"endOffset":9190,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":9650,"endOffset":11042,"count":131},{"startOffset":9778,"endOffset":9843,"count":75},{"startOffset":9843,"endOffset":10086,"count":56},{"startOffset":9878,"endOffset":9911,"count":20},{"startOffset":9911,"endOffset":10029,"count":36},{"startOffset":9988,"endOffset":10029,"count":0},{"startOffset":10072,"endOffset":10081,"count":8},{"startOffset":10112,"endOffset":10159,"count":0},{"startOffset":10226,"endOffset":10364,"count":123},{"startOffset":10270,"endOffset":10357,"count":0},{"startOffset":10364,"endOffset":10675,"count":8},{"startOffset":10435,"endOffset":10675,"count":0},{"startOffset":10716,"endOffset":10767,"count":0},{"startOffset":10794,"endOffset":10846,"count":0},{"startOffset":10861,"endOffset":10956,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":11073,"endOffset":11161,"count":131}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":11192,"endOffset":11240,"count":36}],"isBlockCoverage":true},{"functionName":"Writable.uncork","ranges":[{"startOffset":11273,"endOffset":11437,"count":36}],"isBlockCoverage":true},{"functionName":"writeOrBuffer","ranges":[{"startOffset":12010,"endOffset":13054,"count":131},{"startOffset":12109,"endOffset":12112,"count":0},{"startOffset":12339,"endOffset":12362,"count":0},{"startOffset":12402,"endOffset":12418,"count":75},{"startOffset":12419,"endOffset":12440,"count":75},{"startOffset":12442,"endOffset":12682,"count":56},{"startOffset":12527,"endOffset":12551,"count":28},{"startOffset":12553,"endOffset":12594,"count":28},{"startOffset":12618,"endOffset":12637,"count":36},{"startOffset":12639,"endOffset":12677,"count":28},{"startOffset":12682,"endOffset":12880,"count":75}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":13058,"endOffset":13448,"count":28},{"startOffset":13250,"endOffset":13299,"count":0},{"startOffset":13325,"endOffset":13362,"count":20},{"startOffset":13362,"endOffset":13422,"count":8}],"isBlockCoverage":true},{"functionName":"onwrite","ranges":[{"startOffset":13852,"endOffset":15546,"count":103},{"startOffset":14015,"endOffset":14092,"count":0},{"startOffset":14217,"endOffset":14792,"count":0},{"startOffset":14854,"endOffset":14897,"count":14},{"startOffset":14915,"endOffset":15483,"count":89},{"startOffset":15219,"endOffset":15267,"count":18},{"startOffset":15269,"endOffset":15322,"count":18},{"startOffset":15322,"endOffset":15476,"count":71},{"startOffset":15483,"endOffset":15538,"count":14}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":15550,"endOffset":15692,"count":71}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":15696,"endOffset":16089,"count":85},{"startOffset":15865,"endOffset":15928,"count":0},{"startOffset":15954,"endOffset":15995,"count":103},{"startOffset":15995,"endOffset":16022,"count":84},{"startOffset":16022,"endOffset":16053,"count":0},{"startOffset":16053,"endOffset":16088,"count":84}],"isBlockCoverage":true},{"functionName":"clearBuffer","ranges":[{"startOffset":16774,"endOffset":18321,"count":50},{"startOffset":16832,"endOffset":16864,"count":42},{"startOffset":16865,"endOffset":16890,"count":28},{"startOffset":16891,"endOffset":16919,"count":28},{"startOffset":16921,"endOffset":16940,"count":22},{"startOffset":16940,"endOffset":17086,"count":28},{"startOffset":17086,"endOffset":17105,"count":0},{"startOffset":17105,"endOffset":17196,"count":28},{"startOffset":17196,"endOffset":17213,"count":20},{"startOffset":17215,"endOffset":17795,"count":20},{"startOffset":17299,"endOffset":17304,"count":0},{"startOffset":17583,"endOffset":17593,"count":0},{"startOffset":17594,"endOffset":17611,"count":0},{"startOffset":17795,"endOffset":18283,"count":8},{"startOffset":17930,"endOffset":17933,"count":0},{"startOffset":18054,"endOffset":18071,"count":0},{"startOffset":18143,"endOffset":18278,"count":0},{"startOffset":18283,"endOffset":18320,"count":28}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":17307,"endOffset":17420,"count":20},{"startOffset":17367,"endOffset":17413,"count":48}],"isBlockCoverage":true},{"functionName":"Writable.end","ranges":[{"startOffset":18596,"endOffset":19986,"count":28},{"startOffset":18704,"endOffset":18768,"count":0},{"startOffset":18810,"endOffset":18858,"count":0},{"startOffset":18921,"endOffset":19033,"count":0},{"startOffset":19085,"endOffset":19134,"count":0},{"startOffset":19149,"endOffset":19177,"count":0},{"startOffset":19638,"endOffset":19798,"count":0},{"startOffset":19834,"endOffset":19965,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":19991,"endOffset":20311,"count":140},{"startOffset":20044,"endOffset":20075,"count":70},{"startOffset":20076,"endOffset":20108,"count":70},{"startOffset":20109,"endOffset":20137,"count":70},{"startOffset":20138,"endOffset":20179,"count":70},{"startOffset":20180,"endOffset":20209,"count":70},{"startOffset":20210,"endOffset":20238,"count":70},{"startOffset":20239,"endOffset":20272,"count":70},{"startOffset":20273,"endOffset":20306,"count":70}],"isBlockCoverage":true},{"functionName":"callFinal","ranges":[{"startOffset":20315,"endOffset":21733,"count":28},{"startOffset":21268,"endOffset":21661,"count":0},{"startOffset":21667,"endOffset":21705,"count":0}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":20379,"endOffset":21140,"count":28},{"startOffset":20421,"endOffset":20507,"count":0},{"startOffset":20568,"endOffset":20792,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21394,"endOffset":21511,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21524,"endOffset":21643,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":21737,"endOffset":22052,"count":42},{"startOffset":21822,"endOffset":22049,"count":28},{"startOffset":21964,"endOffset":22044,"count":0}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":22056,"endOffset":22380,"count":112},{"startOffset":22126,"endOffset":22377,"count":42},{"startOffset":22190,"endOffset":22210,"count":0},{"startOffset":22212,"endOffset":22372,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":22384,"endOffset":23135,"count":28},{"startOffset":22580,"endOffset":22615,"count":0},{"startOffset":23094,"endOffset":23127,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":23519,"endOffset":23919,"count":168},{"startOffset":23864,"endOffset":23877,"count":140},{"startOffset":23878,"endOffset":23899,"count":140},{"startOffset":23900,"endOffset":23911,"count":126}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":24102,"endOffset":24190,"count":28},{"startOffset":24175,"endOffset":24182,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":24800,"endOffset":24886,"count":30}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":25038,"endOffset":25117,"count":14}],"isBlockCoverage":true}]},{"scriptId":"70","url":"node:internal/perf/observe","functions":[{"functionName":"getObserverType","ranges":[{"startOffset":2566,"endOffset":2800,"count":28},{"startOffset":2623,"endOffset":2672,"count":0},{"startOffset":2678,"endOffset":2733,"count":0}],"isBlockCoverage":true},{"functionName":"hasObserver","ranges":[{"startOffset":12660,"endOffset":12782,"count":28}],"isBlockCoverage":true}]},{"scriptId":"73","url":"node:internal/perf/performance","functions":[{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":3906,"endOffset":4095,"count":1}],"isBlockCoverage":true}]},{"scriptId":"78","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":616,"endOffset":955,"count":1},{"startOffset":680,"endOffset":952,"count":0}],"isBlockCoverage":true}]},{"scriptId":"79","url":"node:internal/process/warning","functions":[{"functionName":"lazyOption","ranges":[{"startOffset":436,"endOffset":1005,"count":1},{"startOffset":722,"endOffset":795,"count":0},{"startOffset":859,"endOffset":935,"count":0}],"isBlockCoverage":true},{"functionName":"writeOut","ranges":[{"startOffset":1111,"endOffset":1238,"count":1}],"isBlockCoverage":true},{"functionName":"doEmitWarning","ranges":[{"startOffset":1699,"endOffset":1772,"count":1}],"isBlockCoverage":true},{"functionName":"onWarning","ranges":[{"startOffset":1814,"endOffset":2995,"count":1},{"startOffset":1880,"endOffset":1887,"count":0},{"startOffset":1999,"endOffset":2006,"count":0},{"startOffset":2244,"endOffset":2260,"count":0},{"startOffset":2262,"endOffset":2300,"count":0},{"startOffset":2401,"endOffset":2443,"count":0},{"startOffset":2493,"endOffset":2534,"count":0},{"startOffset":2636,"endOffset":2656,"count":0},{"startOffset":2716,"endOffset":2725,"count":0},{"startOffset":2938,"endOffset":2974,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":3123,"endOffset":4352,"count":1},{"startOffset":3237,"endOffset":3259,"count":0},{"startOffset":3261,"endOffset":3420,"count":0},{"startOffset":3458,"endOffset":3528,"count":0},{"startOffset":3626,"endOffset":3673,"count":0},{"startOffset":3858,"endOffset":3981,"count":0},{"startOffset":4069,"endOffset":4076,"count":0},{"startOffset":4112,"endOffset":4299,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4250,"endOffset":4290,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningObject","ranges":[{"startOffset":4456,"endOffset":5213,"count":1},{"startOffset":5010,"endOffset":5022,"count":0},{"startOffset":5102,"endOffset":5126,"count":0},{"startOffset":5167,"endOffset":5189,"count":0}],"isBlockCoverage":true}]},{"scriptId":"80","url":"node:fs","functions":[{"functionName":"maybeCallback","ranges":[{"startOffset":4696,"endOffset":4768,"count":16}],"isBlockCoverage":true},{"functionName":"makeCallback","ranges":[{"startOffset":4976,"endOffset":5086,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5041,"endOffset":5082,"count":8}],"isBlockCoverage":true},{"functionName":"makeStatsCallback","ranges":[{"startOffset":5272,"endOffset":5440,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5342,"endOffset":5436,"count":8},{"startOffset":5389,"endOffset":5435,"count":0}],"isBlockCoverage":true},{"functionName":"isFileType","ranges":[{"startOffset":5470,"endOffset":5737,"count":13644},{"startOffset":5674,"endOffset":5694,"count":1192}],"isBlockCoverage":true},{"functionName":"existsSync","ranges":[{"startOffset":7913,"endOffset":8461,"count":2},{"startOffset":7991,"endOffset":8022,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterOpen","ranges":[{"startOffset":8465,"endOffset":8759,"count":16},{"startOffset":8550,"endOffset":8597,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterStat","ranges":[{"startOffset":8763,"endOffset":9287,"count":16},{"startOffset":8856,"endOffset":8882,"count":0},{"startOffset":8954,"endOffset":8957,"count":0},{"startOffset":8989,"endOffset":9071,"count":0},{"startOffset":9104,"endOffset":9141,"count":0},{"startOffset":9215,"endOffset":9265,"count":0}],"isBlockCoverage":true},{"functionName":"checkAborted","ranges":[{"startOffset":9291,"endOffset":9434,"count":16},{"startOffset":9346,"endOffset":9355,"count":0},{"startOffset":9357,"endOffset":9414,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":9783,"endOffset":10701,"count":16},{"startOffset":9865,"endOffset":9875,"count":0},{"startOffset":10083,"endOffset":10127,"count":0},{"startOffset":10153,"endOffset":10304,"count":0},{"startOffset":10359,"endOffset":10366,"count":0}],"isBlockCoverage":true},{"functionName":"tick","ranges":[{"startOffset":10177,"endOffset":10275,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":10705,"endOffset":10943,"count":922},{"startOffset":10851,"endOffset":10863,"count":0},{"startOffset":10865,"endOffset":10923,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10947,"endOffset":11271,"count":922},{"startOffset":11069,"endOffset":11123,"count":0},{"startOffset":11214,"endOffset":11226,"count":0},{"startOffset":11228,"endOffset":11245,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11275,"endOffset":11540,"count":922},{"startOffset":11480,"endOffset":11492,"count":0},{"startOffset":11494,"endOffset":11511,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11775,"endOffset":13222,"count":922},{"startOffset":11947,"endOffset":11953,"count":0},{"startOffset":12096,"endOffset":12099,"count":0},{"startOffset":12234,"endOffset":12259,"count":0},{"startOffset":12522,"endOffset":12902,"count":0},{"startOffset":12967,"endOffset":13066,"count":0},{"startOffset":13088,"endOffset":13130,"count":0}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":13794,"endOffset":13940,"count":922}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":14976,"endOffset":15383,"count":922}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":17786,"endOffset":18775,"count":922},{"startOffset":17933,"endOffset":18091,"count":0},{"startOffset":18117,"endOffset":18140,"count":0},{"startOffset":18237,"endOffset":18258,"count":0},{"startOffset":18293,"endOffset":18426,"count":0}],"isBlockCoverage":true},{"functionName":"mkdirSync","ranges":[{"startOffset":34589,"endOffset":35317,"count":1},{"startOffset":34739,"endOffset":34766,"count":0},{"startOffset":34911,"endOffset":34931,"count":0}],"isBlockCoverage":true},{"functionName":"readdir","ranges":[{"startOffset":35632,"endOffset":36232,"count":8},{"startOffset":35743,"endOffset":35753,"count":0},{"startOffset":35935,"endOffset":36107,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":35965,"endOffset":36101,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":36481,"endOffset":36916,"count":3},{"startOffset":36877,"endOffset":36903,"count":0}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":38424,"endOffset":38808,"count":8}],"isBlockCoverage":true},{"functionName":"hasNoEntryError","ranges":[{"startOffset":38812,"endOffset":39038,"count":1},{"startOffset":38862,"endOffset":38948,"count":0},{"startOffset":38969,"endOffset":39016,"count":0}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":40445,"endOffset":40876,"count":44},{"startOffset":40749,"endOffset":40772,"count":1},{"startOffset":40774,"endOffset":40803,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":65133,"endOffset":65217,"count":836}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":65468,"endOffset":65763,"count":836},{"startOffset":65554,"endOffset":65584,"count":0},{"startOffset":65605,"endOffset":65762,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":65891,"endOffset":66159,"count":6949},{"startOffset":65948,"endOffset":66138,"count":78770},{"startOffset":66083,"endOffset":66111,"count":72657},{"startOffset":66122,"endOffset":66131,"count":6113},{"startOffset":66138,"endOffset":66158,"count":836}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":66485,"endOffset":70546,"count":1137},{"startOffset":66622,"endOffset":66642,"count":0},{"startOffset":66809,"endOffset":66846,"count":301},{"startOffset":66846,"endOffset":67760,"count":836},{"startOffset":67760,"endOffset":70469,"count":6949},{"startOffset":67876,"endOffset":68012,"count":836},{"startOffset":68012,"endOffset":68174,"count":6113},{"startOffset":68290,"endOffset":68449,"count":5757},{"startOffset":68399,"endOffset":68425,"count":0},{"startOffset":68449,"endOffset":68518,"count":1192},{"startOffset":68556,"endOffset":68607,"count":0},{"startOffset":68607,"endOffset":69951,"count":1192},{"startOffset":69063,"endOffset":69944,"count":0},{"startOffset":69951,"endOffset":70272,"count":0},{"startOffset":70274,"endOffset":70464,"count":0},{"startOffset":70469,"endOffset":70485,"count":836}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":79468,"endOffset":79665,"count":167},{"startOffset":79517,"endOffset":79662,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":82016,"endOffset":82087,"count":43}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":82150,"endOffset":82223,"count":42}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":82423,"endOffset":82502,"count":41}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":82573,"endOffset":82654,"count":41}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":83170,"endOffset":83299,"count":41},{"startOffset":83217,"endOffset":83268,"count":1}],"isBlockCoverage":true}]},{"scriptId":"81","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3654,"endOffset":3859,"count":2075},{"startOffset":3706,"endOffset":3737,"count":938},{"startOffset":3739,"endOffset":3856,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7512,"endOffset":8175,"count":2086},{"startOffset":7608,"endOffset":7647,"count":2083},{"startOffset":7649,"endOffset":7683,"count":11},{"startOffset":7683,"endOffset":7722,"count":2075},{"startOffset":7722,"endOffset":7844,"count":922},{"startOffset":7844,"endOffset":7968,"count":1153},{"startOffset":7883,"endOffset":7968,"count":0},{"startOffset":7968,"endOffset":8087,"count":2075},{"startOffset":8087,"endOffset":8153,"count":0},{"startOffset":8153,"endOffset":8174,"count":2075}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":8238,"endOffset":8780,"count":4842},{"startOffset":8309,"endOffset":8448,"count":30},{"startOffset":8448,"endOffset":8481,"count":4812},{"startOffset":8481,"endOffset":8777,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8925,"endOffset":9534,"count":2141},{"startOffset":9160,"endOffset":9180,"count":0},{"startOffset":9251,"endOffset":9320,"count":0},{"startOffset":9341,"endOffset":9533,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":10294,"endOffset":10613,"count":14}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10651,"endOffset":10710,"count":3}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10744,"endOffset":10803,"count":13}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11428,"endOffset":11512,"count":56}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":11958,"endOffset":12024,"count":56}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":13229,"endOffset":13784,"count":14}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":14134,"endOffset":14370,"count":16},{"startOffset":14253,"endOffset":14322,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14496,"endOffset":15597,"count":14},{"startOffset":14578,"endOffset":15114,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15601,"endOffset":16897,"count":938},{"startOffset":15683,"endOffset":15741,"count":0},{"startOffset":15766,"endOffset":15794,"count":16},{"startOffset":15794,"endOffset":15849,"count":922},{"startOffset":15855,"endOffset":15866,"count":0},{"startOffset":15889,"endOffset":15926,"count":0},{"startOffset":15932,"endOffset":15958,"count":0},{"startOffset":15964,"endOffset":15976,"count":0},{"startOffset":15999,"endOffset":16035,"count":0},{"startOffset":16043,"endOffset":16090,"count":0},{"startOffset":16096,"endOffset":16107,"count":0},{"startOffset":16130,"endOffset":16187,"count":0},{"startOffset":16195,"endOffset":16241,"count":0},{"startOffset":16247,"endOffset":16258,"count":0},{"startOffset":16281,"endOffset":16336,"count":0},{"startOffset":16344,"endOffset":16392,"count":0},{"startOffset":16398,"endOffset":16409,"count":0},{"startOffset":16432,"endOffset":16490,"count":0},{"startOffset":16496,"endOffset":16507,"count":0},{"startOffset":16530,"endOffset":16588,"count":0},{"startOffset":16596,"endOffset":16643,"count":0},{"startOffset":16649,"endOffset":16660,"count":0},{"startOffset":16683,"endOffset":16739,"count":0},{"startOffset":16745,"endOffset":16756,"count":0},{"startOffset":16779,"endOffset":16835,"count":0},{"startOffset":16840,"endOffset":16896,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17915,"endOffset":18305,"count":922},{"startOffset":17972,"endOffset":18041,"count":0},{"startOffset":18063,"endOffset":18132,"count":0},{"startOffset":18174,"endOffset":18300,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18830,"endOffset":19110,"count":2141},{"startOffset":18893,"endOffset":18915,"count":0},{"startOffset":18917,"endOffset":19005,"count":0},{"startOffset":19085,"endOffset":19107,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19157,"endOffset":19296,"count":1004}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19341,"endOffset":19470,"count":1844},{"startOffset":19393,"endOffset":19414,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24872,"endOffset":25444,"count":922},{"startOffset":24981,"endOffset":25441,"count":0}],"isBlockCoverage":true}]},{"scriptId":"84","url":"node:internal/fs/read_file_context","functions":[{"functionName":"readFileAfterRead","ranges":[{"startOffset":416,"endOffset":972,"count":16},{"startOffset":513,"endOffset":539,"count":0},{"startOffset":609,"endOffset":627,"count":0},{"startOffset":657,"endOffset":969,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterClose","ranges":[{"startOffset":976,"endOffset":1594,"count":16},{"startOffset":1138,"endOffset":1192,"count":0},{"startOffset":1240,"endOffset":1293,"count":0},{"startOffset":1343,"endOffset":1389,"count":0},{"startOffset":1517,"endOffset":1562,"count":0}],"isBlockCoverage":true},{"functionName":"ReadFileContext","ranges":[{"startOffset":1625,"endOffset":1925,"count":16}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":1931,"endOffset":2580,"count":16},{"startOffset":2013,"endOffset":2022,"count":0},{"startOffset":2024,"endOffset":2076,"count":0},{"startOffset":2103,"endOffset":2275,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":2586,"endOffset":2937,"count":16},{"startOffset":2623,"endOffset":2776,"count":0}],"isBlockCoverage":true},{"functionName":"tick","ranges":[{"startOffset":2649,"endOffset":2746,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"node:internal/stream_base_commons","functions":[{"functionName":"handleWriteReq","ranges":[{"startOffset":1195,"endOffset":2083,"count":83},{"startOffset":1299,"endOffset":1472,"count":0},{"startOffset":1478,"endOffset":1492,"count":8},{"startOffset":1498,"endOffset":1563,"count":8},{"startOffset":1569,"endOffset":1581,"count":75},{"startOffset":1587,"endOffset":1649,"count":75},{"startOffset":1655,"endOffset":1718,"count":0},{"startOffset":1724,"endOffset":1736,"count":0},{"startOffset":1742,"endOffset":1755,"count":0},{"startOffset":1761,"endOffset":1776,"count":0},{"startOffset":1782,"endOffset":1847,"count":0},{"startOffset":1853,"endOffset":2075,"count":0}],"isBlockCoverage":true},{"functionName":"createWriteWrap","ranges":[{"startOffset":2803,"endOffset":3052,"count":103}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":3056,"endOffset":3718,"count":20},{"startOffset":3221,"endOffset":3322,"count":0},{"startOffset":3416,"endOffset":3533,"count":48}],"isBlockCoverage":true},{"functionName":"writeGeneric","ranges":[{"startOffset":3722,"endOffset":3933,"count":83}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3937,"endOffset":4250,"count":103},{"startOffset":4109,"endOffset":4160,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4254,"endOffset":6253,"count":14},{"startOffset":4567,"endOffset":4834,"count":0},{"startOffset":5023,"endOffset":5217,"count":0},{"startOffset":5241,"endOffset":6250,"count":0}],"isBlockCoverage":true}]},{"scriptId":"88","url":"node:vm","functions":[{"functionName":"compileFunction","ranges":[{"startOffset":9845,"endOffset":12202,"count":822},{"startOffset":10568,"endOffset":10617,"count":0},{"startOffset":10723,"endOffset":10996,"count":0},{"startOffset":11477,"endOffset":11552,"count":0},{"startOffset":11581,"endOffset":11640,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10064,"endOffset":10115,"count":4110}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11107,"endOffset":11242,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":12122,"endOffset":12155,"count":1}],"isBlockCoverage":true}]},{"scriptId":"89","url":"node:url","functions":[{"functionName":"Url","ranges":[{"startOffset":2025,"endOffset":2314,"count":64}],"isBlockCoverage":true},{"functionName":"urlParse","ranges":[{"startOffset":4016,"endOffset":4236,"count":36},{"startOffset":4105,"endOffset":4116,"count":0}],"isBlockCoverage":true},{"functionName":"isIpv6Hostname","ranges":[{"startOffset":4240,"endOffset":4469,"count":30},{"startOffset":4361,"endOffset":4460,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":4495,"endOffset":14069,"count":36},{"startOffset":4979,"endOffset":6278,"count":1059},{"startOffset":5439,"endOffset":5511,"count":36},{"startOffset":5467,"endOffset":5476,"count":0},{"startOffset":5511,"endOffset":5666,"count":1023},{"startOffset":5527,"endOffset":5606,"count":0},{"startOffset":5622,"endOffset":5666,"count":0},{"startOffset":5793,"endOffset":5849,"count":0},{"startOffset":5859,"endOffset":5901,"count":0},{"startOffset":5936,"endOffset":6003,"count":0},{"startOffset":6013,"endOffset":6184,"count":0},{"startOffset":6200,"endOffset":6273,"count":0},{"startOffset":6530,"endOffset":6580,"count":0},{"startOffset":6589,"endOffset":6644,"count":0},{"startOffset":6651,"endOffset":6987,"count":0},{"startOffset":7021,"endOffset":7032,"count":24},{"startOffset":7033,"endOffset":7042,"count":24},{"startOffset":7044,"endOffset":7628,"count":24},{"startOffset":7150,"endOffset":7623,"count":0},{"startOffset":7707,"endOffset":7846,"count":30},{"startOffset":8111,"endOffset":8119,"count":24},{"startOffset":8120,"endOffset":8145,"count":0},{"startOffset":8206,"endOffset":8265,"count":34},{"startOffset":8284,"endOffset":8331,"count":30},{"startOffset":8333,"endOffset":8398,"count":30},{"startOffset":8466,"endOffset":8507,"count":6},{"startOffset":8476,"endOffset":8506,"count":0},{"startOffset":8510,"endOffset":12167,"count":30},{"startOffset":9045,"endOffset":10335,"count":558},{"startOffset":9093,"endOffset":9107,"count":0},{"startOffset":9117,"endOffset":9137,"count":0},{"startOffset":9147,"endOffset":9173,"count":0},{"startOffset":9183,"endOffset":9199,"count":0},{"startOffset":9209,"endOffset":9232,"count":0},{"startOffset":9242,"endOffset":9260,"count":0},{"startOffset":9270,"endOffset":9293,"count":0},{"startOffset":9303,"endOffset":9323,"count":0},{"startOffset":9333,"endOffset":9362,"count":0},{"startOffset":9372,"endOffset":9402,"count":0},{"startOffset":9412,"endOffset":9437,"count":0},{"startOffset":9447,"endOffset":9475,"count":0},{"startOffset":9485,"endOffset":9508,"count":0},{"startOffset":9518,"endOffset":9547,"count":0},{"startOffset":9557,"endOffset":9581,"count":0},{"startOffset":9591,"endOffset":9777,"count":0},{"startOffset":9787,"endOffset":9802,"count":0},{"startOffset":9812,"endOffset":9836,"count":28},{"startOffset":9846,"endOffset":10037,"count":28},{"startOffset":10047,"endOffset":10276,"count":0},{"startOffset":10322,"endOffset":10328,"count":28},{"startOffset":10376,"endOffset":10473,"count":0},{"startOffset":10499,"endOffset":10563,"count":2},{"startOffset":10563,"endOffset":10659,"count":28},{"startOffset":10864,"endOffset":10883,"count":0},{"startOffset":11230,"endOffset":11265,"count":0},{"startOffset":11837,"endOffset":11854,"count":26},{"startOffset":11855,"endOffset":11859,"count":4},{"startOffset":11890,"endOffset":11895,"count":0},{"startOffset":12036,"endOffset":12162,"count":0},{"startOffset":12562,"endOffset":12805,"count":315},{"startOffset":12631,"endOffset":12707,"count":0},{"startOffset":12745,"endOffset":12766,"count":0},{"startOffset":12768,"endOffset":12800,"count":0},{"startOffset":12835,"endOffset":13184,"count":0},{"startOffset":13212,"endOffset":13343,"count":0},{"startOffset":13396,"endOffset":13440,"count":0},{"startOffset":13477,"endOffset":13490,"count":0},{"startOffset":13561,"endOffset":13582,"count":34},{"startOffset":13587,"endOffset":13663,"count":0},{"startOffset":13703,"endOffset":13726,"count":30},{"startOffset":13727,"endOffset":13744,"count":30},{"startOffset":13746,"endOffset":13778,"count":2},{"startOffset":13832,"endOffset":13846,"count":0},{"startOffset":13879,"endOffset":13884,"count":0}],"isBlockCoverage":true},{"functionName":"getHostname","ranges":[{"startOffset":14074,"endOffset":14818,"count":30},{"startOffset":14164,"endOffset":14799,"count":374},{"startOffset":14255,"endOffset":14282,"count":116},{"startOffset":14284,"endOffset":14325,"count":258},{"startOffset":14326,"endOffset":14404,"count":168},{"startOffset":14376,"endOffset":14403,"count":0},{"startOffset":14405,"endOffset":14463,"count":168},{"startOffset":14445,"endOffset":14462,"count":160},{"startOffset":14464,"endOffset":14514,"count":8},{"startOffset":14515,"endOffset":14557,"count":0},{"startOffset":14558,"endOffset":14606,"count":0},{"startOffset":14607,"endOffset":14641,"count":0},{"startOffset":14695,"endOffset":14794,"count":0}],"isBlockCoverage":true},{"functionName":"autoEscapeStr","ranges":[{"startOffset":15898,"endOffset":16626,"count":36},{"startOffset":16018,"endOffset":16394,"count":315},{"startOffset":16172,"endOffset":16389,"count":0},{"startOffset":16471,"endOffset":16625,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":18129,"endOffset":20590,"count":48},{"startOffset":18193,"endOffset":18270,"count":0},{"startOffset":18305,"endOffset":18310,"count":6},{"startOffset":18344,"endOffset":18349,"count":0},{"startOffset":18439,"endOffset":18475,"count":42},{"startOffset":18475,"endOffset":18727,"count":6},{"startOffset":18500,"endOffset":18727,"count":0},{"startOffset":18757,"endOffset":18790,"count":0},{"startOffset":18792,"endOffset":18846,"count":0},{"startOffset":18887,"endOffset":18903,"count":0},{"startOffset":18930,"endOffset":18980,"count":42},{"startOffset":18994,"endOffset":19010,"count":0},{"startOffset":19103,"endOffset":19524,"count":491},{"startOffset":19151,"endOffset":19323,"count":0},{"startOffset":19331,"endOffset":19512,"count":0},{"startOffset":19545,"endOffset":19687,"count":0},{"startOffset":19822,"endOffset":19854,"count":6},{"startOffset":19856,"endOffset":20323,"count":42},{"startOffset":19880,"endOffset":19887,"count":0},{"startOffset":19970,"endOffset":19996,"count":0},{"startOffset":20030,"endOffset":20318,"count":0},{"startOffset":20381,"endOffset":20416,"count":0},{"startOffset":20423,"endOffset":20441,"count":0},{"startOffset":20456,"endOffset":20502,"count":0},{"startOffset":20509,"endOffset":20531,"count":0}],"isBlockCoverage":true},{"functionName":"urlResolve","ranges":[{"startOffset":20595,"endOffset":20696,"count":6}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":20724,"endOffset":20827,"count":6}],"isBlockCoverage":true},{"functionName":"resolveObject","ranges":[{"startOffset":21012,"endOffset":30406,"count":6},{"startOffset":21084,"endOffset":21178,"count":0},{"startOffset":21290,"endOffset":21357,"count":72},{"startOffset":21581,"endOffset":21643,"count":0},{"startOffset":21725,"endOffset":21746,"count":0},{"startOffset":21748,"endOffset":22292,"count":0},{"startOffset":22320,"endOffset":22360,"count":0},{"startOffset":22362,"endOffset":24184,"count":0},{"startOffset":24405,"endOffset":24419,"count":2},{"startOffset":24420,"endOffset":24478,"count":0},{"startOffset":24583,"endOffset":24588,"count":0},{"startOffset":24661,"endOffset":24666,"count":0},{"startOffset":25053,"endOffset":25635,"count":0},{"startOffset":25655,"endOffset":26200,"count":4},{"startOffset":25728,"endOffset":25870,"count":0},{"startOffset":25927,"endOffset":26049,"count":0},{"startOffset":26200,"endOffset":27573,"count":2},{"startOffset":26338,"endOffset":26351,"count":0},{"startOffset":26490,"endOffset":27573,"count":0},{"startOffset":27600,"endOffset":27908,"count":0},{"startOffset":28163,"endOffset":28179,"count":0},{"startOffset":28180,"endOffset":28201,"count":0},{"startOffset":28449,"endOffset":28682,"count":17},{"startOffset":28498,"endOffset":28536,"count":1},{"startOffset":28536,"endOffset":28677,"count":16},{"startOffset":28561,"endOffset":28612,"count":0},{"startOffset":28626,"endOffset":28677,"count":0},{"startOffset":28775,"endOffset":28792,"count":0},{"startOffset":28794,"endOffset":28857,"count":0},{"startOffset":28899,"endOffset":28954,"count":0},{"startOffset":28956,"endOffset":28988,"count":0},{"startOffset":29015,"endOffset":29056,"count":3},{"startOffset":29058,"endOffset":29087,"count":0},{"startOffset":29130,"endOffset":29184,"count":0},{"startOffset":29237,"endOffset":29756,"count":0},{"startOffset":29786,"endOffset":29820,"count":0},{"startOffset":29858,"endOffset":29890,"count":0},{"startOffset":29917,"endOffset":29977,"count":0},{"startOffset":30096,"endOffset":30121,"count":0},{"startOffset":30179,"endOffset":30183,"count":0},{"startOffset":30221,"endOffset":30236,"count":0},{"startOffset":30331,"endOffset":30350,"count":0}],"isBlockCoverage":true},{"functionName":"parseHost","ranges":[{"startOffset":30437,"endOffset":30721,"count":30},{"startOffset":30536,"endOffset":30683,"count":26}],"isBlockCoverage":true}]},{"scriptId":"91","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1318,"endOffset":2979,"count":2},{"startOffset":1621,"endOffset":1820,"count":0},{"startOffset":1828,"endOffset":1840,"count":0},{"startOffset":1846,"endOffset":2579,"count":0},{"startOffset":2587,"endOffset":2849,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2782,"endOffset":2831,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3445,"endOffset":3786,"count":12},{"startOffset":3483,"endOffset":3497,"count":11},{"startOffset":3497,"endOffset":3785,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3731,"endOffset":3758,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":3790,"endOffset":4131,"count":55},{"startOffset":3828,"endOffset":3842,"count":54},{"startOffset":3842,"endOffset":4130,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4076,"endOffset":4103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":254,"endOffset":352,"count":5}],"isBlockCoverage":true},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":419,"endOffset":944,"count":5},{"startOffset":481,"endOffset":506,"count":2},{"startOffset":508,"endOffset":941,"count":1},{"startOffset":818,"endOffset":900,"count":0}],"isBlockCoverage":true}]},{"scriptId":"93","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3445,"endOffset":3552,"count":22},{"startOffset":3499,"endOffset":3528,"count":1}],"isBlockCoverage":true}]},{"scriptId":"94","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":649,"count":1}],"isBlockCoverage":true}]},{"scriptId":"95","url":"node:internal/bootstrap/pre_execution","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16254,"count":1}],"isBlockCoverage":true},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":477,"endOffset":2458,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":2462,"endOffset":4141,"count":1},{"startOffset":3096,"endOffset":3150,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":4145,"endOffset":4412,"count":13},{"startOffset":4268,"endOffset":4409,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":4416,"endOffset":4649,"count":1}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":4765,"endOffset":5459,"count":1},{"startOffset":5245,"endOffset":5427,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":5463,"endOffset":5696,"count":1},{"startOffset":5568,"endOffset":5695,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":5700,"endOffset":5933,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5887,"endOffset":5923,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":5937,"endOffset":6174,"count":1},{"startOffset":6090,"endOffset":6171,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":6239,"endOffset":6378,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":6382,"endOffset":6701,"count":1},{"startOffset":6521,"endOffset":6700,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6658,"endOffset":6696,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":6705,"endOffset":6968,"count":1}],"isBlockCoverage":true},{"functionName":"setupPerfHooks","ranges":[{"startOffset":6972,"endOffset":7118,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":7122,"endOffset":7716,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":7916,"endOffset":10531,"count":1},{"startOffset":8653,"endOffset":8963,"count":16},{"startOffset":8699,"endOffset":8936,"count":0},{"startOffset":9287,"endOffset":9467,"count":0},{"startOffset":9497,"endOffset":9899,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10159,"endOffset":10197,"count":1402}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":10204,"endOffset":10248,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10385,"endOffset":10422,"count":1639}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":10429,"endOffset":10472,"count":0}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":10535,"endOffset":11117,"count":1},{"startOffset":10612,"endOffset":11114,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":11121,"endOffset":11398,"count":1},{"startOffset":11209,"endOffset":11395,"count":0}],"isBlockCoverage":true},{"functionName":"initializePolicy","ranges":[{"startOffset":11402,"endOffset":13272,"count":1},{"startOffset":11530,"endOffset":13269,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":13276,"endOffset":13510,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":13514,"endOffset":13865,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":13869,"endOffset":15012,"count":1},{"startOffset":14103,"endOffset":14110,"count":0},{"startOffset":14756,"endOffset":15009,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":15016,"endOffset":15206,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":15210,"endOffset":15473,"count":1},{"startOffset":15296,"endOffset":15470,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":15477,"endOffset":15835,"count":1},{"startOffset":15674,"endOffset":15832,"count":0}],"isBlockCoverage":true}]},{"scriptId":"96","url":"node:internal/options","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1892,"count":1}],"isBlockCoverage":false},{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":481,"endOffset":620,"count":887},{"startOffset":539,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"getAliasesFromBinding","ranges":[{"startOffset":624,"endOffset":760,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":764,"endOffset":913,"count":2},{"startOffset":821,"endOffset":883,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":917,"endOffset":1190,"count":886},{"startOffset":1041,"endOffset":1145,"count":4},{"startOffset":1145,"endOffset":1186,"count":882}],"isBlockCoverage":true},{"functionName":"getAllowUnauthorized","ranges":[{"startOffset":1194,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"get options","ranges":[{"startOffset":1697,"endOffset":1757,"count":1}],"isBlockCoverage":true},{"functionName":"get aliases","ranges":[{"startOffset":1762,"endOffset":1819,"count":1}],"isBlockCoverage":true}]},{"scriptId":"97","url":"node:internal/inspector_async_hook","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2048,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":84,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1308,"endOffset":1905,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1909,"endOffset":1998,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7905,"count":1}],"isBlockCoverage":false},{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":269,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":636,"endOffset":663,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1431,"endOffset":1610,"count":822},{"startOffset":1505,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1614,"endOffset":2280,"count":1},{"startOffset":1833,"endOffset":1992,"count":0},{"startOffset":2035,"endOffset":2247,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":2284,"endOffset":3381,"count":822},{"startOffset":2444,"endOffset":2464,"count":0},{"startOffset":2467,"endOffset":2474,"count":0},{"startOffset":2537,"endOffset":2680,"count":0},{"startOffset":2816,"endOffset":3378,"count":135},{"startOffset":2919,"endOffset":2950,"count":0},{"startOffset":3140,"endOffset":3373,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":3385,"endOffset":3927,"count":135},{"startOffset":3526,"endOffset":3602,"count":50},{"startOffset":3610,"endOffset":3692,"count":0},{"startOffset":3705,"endOffset":3924,"count":85}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":4122,"endOffset":4468,"count":135}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4422,"endOffset":4463,"count":23102}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":4472,"endOffset":4737,"count":85},{"startOffset":4675,"endOffset":4734,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":4835,"endOffset":5531,"count":50},{"startOffset":5245,"endOffset":5251,"count":0},{"startOffset":5377,"endOffset":5442,"count":0},{"startOffset":5447,"endOffset":5528,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":5721,"endOffset":6057,"count":135}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5800,"endOffset":5909,"count":135}],"isBlockCoverage":true},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":6504,"endOffset":6764,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":6768,"endOffset":7065,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":7069,"endOffset":7758,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"node:internal/util/iterable_weak_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2042,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":415,"endOffset":534,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":541,"endOffset":1067,"count":135},{"startOffset":618,"endOffset":826,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1073,"endOffset":1131,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1137,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":1194,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1447,"endOffset":1888,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":1895,"endOffset":1950,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"node:internal/modules/cjs/helpers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6975,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":838,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"loadNativeModule","ranges":[{"startOffset":1169,"endOffset":1482,"count":1117},{"startOffset":1273,"endOffset":1295,"count":282},{"startOffset":1297,"endOffset":1479,"count":282}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":1737,"endOffset":3805,"count":822},{"startOffset":1855,"endOffset":3169,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":1997,"endOffset":3163,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":3192,"endOffset":3256,"count":2115}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3268,"endOffset":3417,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":3455,"endOffset":3580,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":3997,"endOffset":4157,"count":12},{"startOffset":4080,"endOffset":4135,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":4161,"endOffset":6015,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":6019,"endOffset":6212,"count":823},{"startOffset":6175,"endOffset":6211,"count":0}],"isBlockCoverage":true},{"functionName":"hasEsmSyntax","ranges":[{"startOffset":6285,"endOffset":6802,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2666,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":307,"endOffset":704,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":709,"endOffset":881,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":886,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":944,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1040,"endOffset":1091,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1096,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1192,"endOffset":1241,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1246,"endOffset":1326,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1331,"endOffset":1378,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1383,"endOffset":1525,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1530,"endOffset":1604,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1609,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1736,"endOffset":1802,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1807,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":1979,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2072,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2216,"endOffset":2394,"count":1},{"startOffset":2283,"endOffset":2391,"count":0}],"isBlockCoverage":true},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2398,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2531,"endOffset":2607,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41663,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2350,"endOffset":2419,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":4764,"endOffset":5186,"count":5863},{"startOffset":4864,"endOffset":4961,"count":5813},{"startOffset":4942,"endOffset":4956,"count":1574},{"startOffset":4961,"endOffset":5036,"count":4289},{"startOffset":5036,"endOffset":5050,"count":4239},{"startOffset":5052,"endOffset":5165,"count":1123},{"startOffset":5165,"endOffset":5185,"count":4289}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":5190,"endOffset":5390,"count":1836},{"startOffset":5263,"endOffset":5273,"count":1833},{"startOffset":5291,"endOffset":5344,"count":1833},{"startOffset":5301,"endOffset":5343,"count":1000},{"startOffset":5351,"endOffset":5387,"count":1822}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":5440,"endOffset":5701,"count":835}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":6196,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6429,"endOffset":6554,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":6561,"endOffset":6697,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6748,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6785,"endOffset":6842,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6896,"endOffset":6934,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6941,"endOffset":7006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7042,"endOffset":7072,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleParent","ranges":[{"startOffset":7235,"endOffset":7305,"count":0}],"isBlockCoverage":false},{"functionName":"setModuleParent","ranges":[{"startOffset":7309,"endOffset":7384,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7980,"endOffset":8007,"count":1}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":8371,"endOffset":9210,"count":5550},{"startOffset":8555,"endOffset":8571,"count":5142},{"startOffset":8571,"endOffset":8672,"count":408},{"startOffset":8672,"endOffset":8678,"count":0},{"startOffset":8679,"endOffset":8694,"count":408},{"startOffset":8723,"endOffset":8792,"count":191},{"startOffset":8792,"endOffset":9088,"count":217},{"startOffset":9088,"endOffset":9207,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":9214,"endOffset":9772,"count":2149},{"startOffset":9352,"endOffset":9707,"count":4746},{"startOffset":9563,"endOffset":9576,"count":0},{"startOffset":9642,"endOffset":9702,"count":2149},{"startOffset":9707,"endOffset":9771,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":9776,"endOffset":11088,"count":332},{"startOffset":9901,"endOffset":9984,"count":143},{"startOffset":9984,"endOffset":10081,"count":189},{"startOffset":10081,"endOffset":10126,"count":23},{"startOffset":10127,"endOffset":10195,"count":1},{"startOffset":10222,"endOffset":11067,"count":0},{"startOffset":11067,"endOffset":11087,"count":189}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":11444,"endOffset":11661,"count":2787},{"startOffset":11534,"endOffset":11541,"count":1739},{"startOffset":11541,"endOffset":11566,"count":1048},{"startOffset":11566,"endOffset":11576,"count":0},{"startOffset":11578,"endOffset":11623,"count":0},{"startOffset":11623,"endOffset":11660,"count":1048}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":11665,"endOffset":11800,"count":1136}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":11878,"endOffset":12093,"count":1309},{"startOffset":11961,"endOffset":12073,"count":2580},{"startOffset":12036,"endOffset":12068,"count":864},{"startOffset":12073,"endOffset":12092,"count":445}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":12186,"endOffset":12666,"count":835},{"startOffset":12468,"endOffset":12477,"count":0},{"startOffset":12617,"endOffset":12641,"count":828},{"startOffset":12646,"endOffset":12665,"count":7}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":12670,"endOffset":12971,"count":1335},{"startOffset":12723,"endOffset":12736,"count":2},{"startOffset":12736,"endOffset":12798,"count":1333},{"startOffset":12798,"endOffset":12968,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":12975,"endOffset":13849,"count":1335},{"startOffset":13035,"endOffset":13048,"count":2},{"startOffset":13048,"endOffset":13120,"count":1333},{"startOffset":13120,"endOffset":13125,"count":0},{"startOffset":13139,"endOffset":13167,"count":1333},{"startOffset":13169,"endOffset":13182,"count":1026},{"startOffset":13182,"endOffset":13220,"count":307},{"startOffset":13220,"endOffset":13233,"count":0},{"startOffset":13233,"endOffset":13283,"count":307},{"startOffset":13283,"endOffset":13311,"count":0},{"startOffset":13311,"endOffset":13481,"count":307},{"startOffset":13373,"endOffset":13450,"count":0},{"startOffset":13481,"endOffset":13846,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":14016,"endOffset":14743,"count":1244},{"startOffset":14227,"endOffset":14232,"count":772},{"startOffset":14253,"endOffset":14260,"count":772},{"startOffset":14260,"endOffset":14364,"count":472},{"startOffset":14374,"endOffset":14740,"count":18},{"startOffset":14582,"endOffset":14735,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":14812,"endOffset":17506,"count":1336},{"startOffset":14924,"endOffset":14949,"count":5},{"startOffset":14949,"endOffset":15014,"count":1331},{"startOffset":14989,"endOffset":15014,"count":0},{"startOffset":15156,"endOffset":15169,"count":200},{"startOffset":15169,"endOffset":15317,"count":1136},{"startOffset":15342,"endOffset":15484,"count":1136},{"startOffset":15484,"endOffset":17484,"count":1850},{"startOffset":15585,"endOffset":15605,"count":1846},{"startOffset":15607,"endOffset":15616,"count":602},{"startOffset":15616,"endOffset":15646,"count":1248},{"startOffset":15646,"endOffset":15780,"count":1244},{"startOffset":15750,"endOffset":15773,"count":18},{"startOffset":15780,"endOffset":15915,"count":1230},{"startOffset":15915,"endOffset":17122,"count":1229},{"startOffset":15938,"endOffset":16891,"count":87},{"startOffset":15972,"endOffset":16146,"count":86},{"startOffset":16007,"endOffset":16069,"count":0},{"startOffset":16146,"endOffset":16882,"count":1},{"startOffset":16178,"endOffset":16820,"count":0},{"startOffset":16916,"endOffset":17115,"count":1142},{"startOffset":17009,"endOffset":17047,"count":1039},{"startOffset":17122,"endOffset":17144,"count":1230},{"startOffset":17144,"endOffset":17155,"count":445},{"startOffset":17157,"endOffset":17378,"count":332},{"startOffset":17270,"endOffset":17308,"count":1},{"startOffset":17378,"endOffset":17400,"count":1230},{"startOffset":17400,"endOffset":17479,"count":1117},{"startOffset":17484,"endOffset":17505,"count":1}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":17757,"endOffset":19316,"count":836},{"startOffset":18262,"endOffset":18337,"count":0},{"startOffset":18346,"endOffset":18377,"count":0},{"startOffset":18478,"endOffset":19290,"count":71288},{"startOffset":18872,"endOffset":18913,"count":65175},{"startOffset":18914,"endOffset":18947,"count":65175},{"startOffset":18949,"endOffset":19153,"count":6949},{"startOffset":18988,"endOffset":19109,"count":6051},{"startOffset":19153,"endOffset":19283,"count":64339},{"startOffset":19173,"endOffset":19283,"count":18926},{"startOffset":19209,"endOffset":19237,"count":12875},{"startOffset":19237,"endOffset":19274,"count":6051}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":19411,"endOffset":20585,"count":0}],"isBlockCoverage":false},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":20622,"endOffset":21844,"count":1335},{"startOffset":20701,"endOffset":20770,"count":0},{"startOffset":20858,"endOffset":21061,"count":904},{"startOffset":20940,"endOffset":20991,"count":676},{"startOffset":20992,"endOffset":21060,"count":0},{"startOffset":21063,"endOffset":21299,"count":431},{"startOffset":21112,"endOffset":21127,"count":429},{"startOffset":21129,"endOffset":21195,"count":429},{"startOffset":21287,"endOffset":21293,"count":0},{"startOffset":21299,"endOffset":21370,"count":904},{"startOffset":21371,"endOffset":21390,"count":904},{"startOffset":21392,"endOffset":21648,"count":0},{"startOffset":21648,"endOffset":21843,"count":904}],"isBlockCoverage":true},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":21849,"endOffset":22037,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22235,"endOffset":22614,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":22621,"endOffset":22867,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":22876,"endOffset":23535,"count":17},{"startOffset":23048,"endOffset":23346,"count":2},{"startOffset":23348,"endOffset":23504,"count":2}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":23956,"endOffset":26971,"count":2118},{"startOffset":24041,"endOffset":24835,"count":2116},{"startOffset":24468,"endOffset":24830,"count":501},{"startOffset":24663,"endOffset":24713,"count":8},{"startOffset":24713,"endOffset":24760,"count":493},{"startOffset":24760,"endOffset":24830,"count":0},{"startOffset":24835,"endOffset":24961,"count":1617},{"startOffset":24961,"endOffset":25234,"count":0},{"startOffset":25234,"endOffset":25321,"count":1616},{"startOffset":25321,"endOffset":25691,"count":500},{"startOffset":25403,"endOffset":25636,"count":10},{"startOffset":25501,"endOffset":25528,"count":1},{"startOffset":25539,"endOffset":25589,"count":9},{"startOffset":25589,"endOffset":25636,"count":1},{"startOffset":25636,"endOffset":25686,"count":490},{"startOffset":25691,"endOffset":25756,"count":1117},{"startOffset":25756,"endOffset":25778,"count":282},{"startOffset":25780,"endOffset":25799,"count":282},{"startOffset":25799,"endOffset":25901,"count":835},{"startOffset":25901,"endOffset":25932,"count":834},{"startOffset":25951,"endOffset":26013,"count":1},{"startOffset":26013,"endOffset":26082,"count":835},{"startOffset":26082,"endOffset":26153,"count":834},{"startOffset":26153,"endOffset":26940,"count":835},{"startOffset":26265,"endOffset":26680,"count":0},{"startOffset":26705,"endOffset":26748,"count":834},{"startOffset":26749,"endOffset":26863,"count":834},{"startOffset":26865,"endOffset":26935,"count":2},{"startOffset":26940,"endOffset":26970,"count":835}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":27002,"endOffset":30096,"count":1617},{"startOffset":27152,"endOffset":27179,"count":282},{"startOffset":27179,"endOffset":27233,"count":1335},{"startOffset":27233,"endOffset":27252,"count":0},{"startOffset":27254,"endOffset":28361,"count":0},{"startOffset":28361,"endOffset":28447,"count":1335},{"startOffset":28447,"endOffset":28457,"count":1333},{"startOffset":28459,"endOffset":28999,"count":1333},{"startOffset":28490,"endOffset":28994,"count":0},{"startOffset":28999,"endOffset":29165,"count":1335},{"startOffset":29165,"endOffset":29366,"count":0},{"startOffset":29366,"endOffset":29517,"count":1335},{"startOffset":29517,"endOffset":29533,"count":1334},{"startOffset":29533,"endOffset":29649,"count":1},{"startOffset":29649,"endOffset":29724,"count":6},{"startOffset":29705,"endOffset":29717,"count":0},{"startOffset":29724,"endOffset":30095,"count":1}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":30101,"endOffset":30831,"count":18},{"startOffset":30269,"endOffset":30389,"count":0},{"startOffset":30484,"endOffset":30494,"count":0},{"startOffset":30496,"endOffset":30657,"count":0},{"startOffset":30692,"endOffset":30830,"count":0}],"isBlockCoverage":true},{"functionName":"createEsmNotFoundErr","ranges":[{"startOffset":30835,"endOffset":31133,"count":0}],"isBlockCoverage":false},{"functionName":"Module.load","ranges":[{"startOffset":31225,"endOffset":32069,"count":835},{"startOffset":31569,"endOffset":31599,"count":0},{"startOffset":31606,"endOffset":31648,"count":0},{"startOffset":31931,"endOffset":31980,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":32192,"endOffset":32503,"count":2116},{"startOffset":32254,"endOffset":32375,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":32691,"endOffset":33738,"count":822},{"startOffset":32765,"endOffset":33185,"count":0},{"startOffset":33613,"endOffset":33735,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":32952,"endOffset":33170,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":33365,"endOffset":33597,"count":1}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":33944,"endOffset":35845,"count":822},{"startOffset":34023,"endOffset":34033,"count":0},{"startOffset":34035,"endOffset":34206,"count":0},{"startOffset":34393,"endOffset":34417,"count":0},{"startOffset":34419,"endOffset":35176,"count":0},{"startOffset":35406,"endOffset":35432,"count":2},{"startOffset":35458,"endOffset":35600,"count":0},{"startOffset":35807,"endOffset":35824,"count":2}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":35907,"endOffset":37713,"count":822},{"startOffset":36072,"endOffset":36080,"count":1},{"startOffset":36082,"endOffset":36150,"count":1},{"startOffset":36150,"endOffset":36212,"count":821},{"startOffset":36262,"endOffset":37671,"count":815},{"startOffset":36406,"endOffset":37666,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":37781,"endOffset":38159,"count":12},{"startOffset":37879,"endOffset":37889,"count":0},{"startOffset":37891,"endOffset":38003,"count":0},{"startOffset":38072,"endOffset":38156,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":38227,"endOffset":38553,"count":1},{"startOffset":38269,"endOffset":38279,"count":0},{"startOffset":38281,"endOffset":38441,"count":0}],"isBlockCoverage":true},{"functionName":"createRequireFromPath","ranges":[{"startOffset":38558,"endOffset":39034,"count":0}],"isBlockCoverage":false},{"functionName":"createRequire","ranges":[{"startOffset":39147,"endOffset":39717,"count":0}],"isBlockCoverage":false},{"functionName":"Module._initPaths","ranges":[{"startOffset":39782,"endOffset":40774,"count":1},{"startOffset":39850,"endOffset":39870,"count":0},{"startOffset":39926,"endOffset":39951,"count":0},{"startOffset":40181,"endOffset":40230,"count":0},{"startOffset":40489,"endOffset":40635,"count":0}],"isBlockCoverage":true},{"functionName":"Module._preloadModules","ranges":[{"startOffset":40804,"endOffset":41407,"count":0}],"isBlockCoverage":false},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":41443,"endOffset":41605,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1024,"count":1}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":294,"endOffset":992,"count":410},{"startOffset":348,"endOffset":387,"count":2},{"startOffset":387,"endOffset":626,"count":408},{"startOffset":626,"endOffset":939,"count":217},{"startOffset":661,"endOffset":799,"count":1},{"startOffset":721,"endOffset":775,"count":0},{"startOffset":828,"endOffset":934,"count":0},{"startOffset":939,"endOffset":991,"count":408}],"isBlockCoverage":true}]},{"scriptId":"104","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2982,"count":1}],"isBlockCoverage":false},{"functionName":"exports.initializeImportMetaObject","ranges":[{"startOffset":468,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":820,"endOffset":1277,"count":1},{"startOffset":1219,"endOffset":1276,"count":0}],"isBlockCoverage":true},{"functionName":"initializeLoader","ranges":[{"startOffset":1459,"endOffset":2608,"count":0}],"isBlockCoverage":false},{"functionName":"loadESM","ranges":[{"startOffset":2630,"endOffset":2979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17034,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1844,"endOffset":2727,"count":1}],"isBlockCoverage":false},{"functionName":"pluckHooks","ranges":[{"startOffset":2741,"endOffset":4256,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomLoaders","ranges":[{"startOffset":4526,"endOffset":5387,"count":0}],"isBlockCoverage":false},{"functionName":"eval","ranges":[{"startOffset":5393,"endOffset":6157,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":6907,"endOffset":7774,"count":1},{"startOffset":7042,"endOffset":7298,"count":0},{"startOffset":7569,"endOffset":7633,"count":0}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":8425,"endOffset":9245,"count":1},{"startOffset":8947,"endOffset":8988,"count":0}],"isBlockCoverage":true},{"functionName":"moduleProvider","ranges":[{"startOffset":8514,"endOffset":8886,"count":1},{"startOffset":8732,"endOffset":8801,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":9894,"endOffset":10476,"count":1},{"startOffset":10428,"endOffset":10447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10252,"endOffset":10270,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10287,"endOffset":10324,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":10844,"endOffset":12162,"count":1},{"startOffset":10993,"endOffset":11018,"count":0},{"startOffset":11122,"endOffset":11243,"count":0},{"startOffset":11333,"endOffset":11608,"count":0},{"startOffset":11648,"endOffset":11800,"count":0},{"startOffset":11835,"endOffset":11871,"count":0},{"startOffset":11872,"endOffset":11907,"count":0},{"startOffset":11908,"endOffset":11944,"count":0},{"startOffset":11952,"endOffset":12103,"count":0}],"isBlockCoverage":true},{"functionName":"preload","ranges":[{"startOffset":12168,"endOffset":14708,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":14714,"endOffset":14805,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":15391,"endOffset":16943,"count":1},{"startOffset":15605,"endOffset":15640,"count":0},{"startOffset":15648,"endOffset":15751,"count":0},{"startOffset":15927,"endOffset":15954,"count":0},{"startOffset":16184,"endOffset":16312,"count":0},{"startOffset":16434,"endOffset":16586,"count":0},{"startOffset":16623,"endOffset":16815,"count":0}],"isBlockCoverage":true}]},{"scriptId":"106","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1487,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":271,"endOffset":298,"count":1}],"isBlockCoverage":true},{"functionName":"ModuleMap","ranges":[{"startOffset":523,"endOffset":551,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":601,"endOffset":748,"count":1},{"startOffset":734,"endOffset":742,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":752,"endOffset":1288,"count":1},{"startOffset":907,"endOffset":944,"count":0},{"startOffset":946,"endOffset":1018,"count":0},{"startOffset":1104,"endOffset":1110,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":1292,"endOffset":1453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8407,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":977,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1356,"endOffset":3214,"count":1}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1937,"endOffset":2831,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2402,"endOffset":2658,"count":0}],"isBlockCoverage":false},{"functionName":"instantiate","ranges":[{"startOffset":3220,"endOffset":3370,"count":1}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3376,"endOffset":7104,"count":1},{"startOffset":3887,"endOffset":4068,"count":0},{"startOffset":4128,"endOffset":6850,"count":0}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":3477,"endOffset":3782,"count":1},{"startOffset":3539,"endOffset":3566,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":7110,"endOffset":8323,"count":1},{"startOffset":7291,"endOffset":8281,"count":0}],"isBlockCoverage":true}]},{"scriptId":"108","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3734,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1337,"endOffset":1375,"count":5}],"isBlockCoverage":true},{"functionName":"validateAssertions","ranges":[{"startOffset":1808,"endOffset":2993,"count":1},{"startOffset":1994,"endOffset":2142,"count":0},{"startOffset":2414,"endOffset":2475,"count":0},{"startOffset":2483,"endOffset":2593,"count":0},{"startOffset":2601,"endOffset":2985,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3232,"endOffset":3657,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37756,"count":1}],"isBlockCoverage":false},{"functionName":"emitFolderMapDeprecation","ranges":[{"startOffset":2689,"endOffset":3316,"count":0}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":3320,"endOffset":3998,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":4153,"endOffset":5275,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":5351,"endOffset":5712,"count":1},{"startOffset":5461,"endOffset":5675,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":5926,"endOffset":5992,"count":1},{"startOffset":5978,"endOffset":5992,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageConfig","ranges":[{"startOffset":6134,"endOffset":7522,"count":2},{"startOffset":6264,"endOffset":6292,"count":0},{"startOffset":6377,"endOffset":6739,"count":1},{"startOffset":6739,"endOffset":6924,"count":0},{"startOffset":6924,"endOffset":7050,"count":1},{"startOffset":7050,"endOffset":7069,"count":0},{"startOffset":7071,"endOffset":7125,"count":1},{"startOffset":7125,"endOffset":7142,"count":0},{"startOffset":7142,"endOffset":7176,"count":1},{"startOffset":7176,"endOffset":7193,"count":0},{"startOffset":7193,"endOffset":7295,"count":1},{"startOffset":7297,"endOffset":7521,"count":1}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":7600,"endOffset":8729,"count":1},{"startOffset":7720,"endOffset":8387,"count":2},{"startOffset":7863,"endOffset":7869,"count":0},{"startOffset":8031,"endOffset":8376,"count":1},{"startOffset":8376,"endOffset":8382,"count":0},{"startOffset":8387,"endOffset":8728,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":8796,"endOffset":8896,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":9298,"endOffset":11176,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":11245,"endOffset":11379,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":11505,"endOffset":11769,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDirectoryEntry","ranges":[{"startOffset":11838,"endOffset":12383,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":12572,"endOffset":14176,"count":1},{"startOffset":12705,"endOffset":12850,"count":0},{"startOffset":12967,"endOffset":13405,"count":0},{"startOffset":13472,"endOffset":13509,"count":0},{"startOffset":13547,"endOffset":13678,"count":0},{"startOffset":13705,"endOffset":13822,"count":0},{"startOffset":14075,"endOffset":14080,"count":0}],"isBlockCoverage":true},{"functionName":"throwImportNotDefined","ranges":[{"startOffset":14295,"endOffset":14514,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":14631,"endOffset":14834,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":14991,"endOffset":15346,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidPackageTarget","ranges":[{"startOffset":15350,"endOffset":15742,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":16022,"endOffset":17831,"count":18},{"startOffset":16165,"endOffset":16176,"count":0},{"startOffset":16177,"endOffset":16213,"count":0},{"startOffset":16220,"endOffset":16293,"count":0},{"startOffset":16345,"endOffset":16975,"count":0},{"startOffset":17065,"endOffset":17138,"count":0},{"startOffset":17368,"endOffset":17441,"count":0},{"startOffset":17483,"endOffset":17830,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16744,"endOffset":16757,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17753,"endOffset":17766,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":17892,"endOffset":18036,"count":48},{"startOffset":17986,"endOffset":18032,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":18040,"endOffset":20275,"count":47},{"startOffset":18224,"endOffset":18371,"count":18},{"startOffset":18371,"endOffset":20157,"count":29},{"startOffset":18403,"endOffset":19229,"count":7},{"startOffset":18442,"endOffset":18454,"count":0},{"startOffset":18773,"endOffset":18914,"count":0},{"startOffset":18964,"endOffset":18973,"count":0},{"startOffset":19009,"endOffset":19069,"count":0},{"startOffset":19105,"endOffset":19168,"count":0},{"startOffset":19177,"endOffset":19229,"count":0},{"startOffset":19229,"endOffset":20157,"count":22},{"startOffset":19384,"endOffset":19619,"count":48},{"startOffset":19444,"endOffset":19612,"count":0},{"startOffset":19663,"endOffset":20078,"count":35},{"startOffset":19746,"endOffset":20071,"count":22},{"startOffset":20022,"endOffset":20031,"count":0},{"startOffset":20078,"endOffset":20157,"count":0},{"startOffset":20157,"endOffset":20274,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":20420,"endOffset":21376,"count":18},{"startOffset":20553,"endOffset":20565,"count":0},{"startOffset":20622,"endOffset":20635,"count":0},{"startOffset":20780,"endOffset":21343,"count":45},{"startOffset":20893,"endOffset":20952,"count":18},{"startOffset":20952,"endOffset":21338,"count":27},{"startOffset":21008,"endOffset":21338,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":21596,"endOffset":24340,"count":18},{"startOffset":21812,"endOffset":21839,"count":2},{"startOffset":22227,"endOffset":22302,"count":0},{"startOffset":22348,"endOffset":24339,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":24344,"endOffset":24887,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":25024,"endOffset":27859,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":27921,"endOffset":28037,"count":1}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":28206,"endOffset":29289,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":29431,"endOffset":31545,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":31612,"endOffset":31724,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":31728,"endOffset":32007,"count":1},{"startOffset":31799,"endOffset":31987,"count":0}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":32011,"endOffset":32198,"count":1},{"startOffset":32098,"endOffset":32111,"count":0},{"startOffset":32141,"endOffset":32153,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":32378,"endOffset":33061,"count":1},{"startOffset":32628,"endOffset":32676,"count":0},{"startOffset":32708,"endOffset":32788,"count":0},{"startOffset":32852,"endOffset":32929,"count":0},{"startOffset":32978,"endOffset":32994,"count":0}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":33215,"endOffset":34710,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfUnsupportedURLProtocol","ranges":[{"startOffset":34714,"endOffset":34917,"count":1},{"startOffset":34792,"endOffset":34819,"count":0},{"startOffset":34820,"endOffset":34854,"count":0},{"startOffset":34856,"endOffset":34914,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":34921,"endOffset":37466,"count":1},{"startOffset":35064,"endOffset":35074,"count":0},{"startOffset":35076,"endOffset":35699,"count":0},{"startOffset":35760,"endOffset":36298,"count":0},{"startOffset":36459,"endOffset":36481,"count":0},{"startOffset":36508,"endOffset":37333,"count":0}],"isBlockCoverage":true}]},{"scriptId":"110","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3433,"count":1}],"isBlockCoverage":false},{"functionName":"data:","ranges":[{"startOffset":1325,"endOffset":1790,"count":0}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":1836,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"getLegacyExtensionFormat","ranges":[{"startOffset":1877,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2255,"endOffset":2830,"count":1},{"startOffset":2420,"endOffset":2430,"count":0},{"startOffset":2449,"endOffset":2826,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":2834,"endOffset":3074,"count":1},{"startOffset":3000,"endOffset":3012,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":3078,"endOffset":3298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":932,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":290,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":675,"endOffset":880,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":891,"count":1}],"isBlockCoverage":false},{"functionName":"defaultLoad","ranges":[{"startOffset":354,"endOffset":847,"count":1},{"startOffset":514,"endOffset":557,"count":0},{"startOffset":711,"endOffset":798,"count":0}],"isBlockCoverage":true}]},{"scriptId":"113","url":"node:internal/modules/esm/get_source","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1394,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetSource","ranges":[{"startOffset":655,"endOffset":1346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23741,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":2557,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":2717,"endOffset":2802,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":2951,"endOffset":3135,"count":0}],"isBlockCoverage":false},{"functionName":"getAsyncId","ranges":[{"startOffset":3141,"endOffset":3200,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":3206,"endOffset":3244,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":3250,"endOffset":3334,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":3340,"endOffset":3398,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":3404,"endOffset":3470,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":3476,"endOffset":3530,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":3536,"endOffset":3582,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3588,"endOffset":3699,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":3705,"endOffset":3788,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":3794,"endOffset":3863,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":3869,"endOffset":3931,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":3937,"endOffset":4003,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":4009,"endOffset":4085,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":4091,"endOffset":4204,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":4210,"endOffset":4295,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4301,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4390,"endOffset":5219,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":5533,"endOffset":5687,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":5949,"endOffset":6106,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6112,"endOffset":6526,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6532,"endOffset":6587,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6593,"endOffset":6683,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6689,"endOffset":6724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6730,"endOffset":6956,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":6963,"endOffset":7441,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":7445,"endOffset":7532,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":7536,"endOffset":8710,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":8714,"endOffset":10574,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":10731,"endOffset":10958,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":10962,"endOffset":11236,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":11240,"endOffset":11606,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":11730,"endOffset":12062,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":12066,"endOffset":13278,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":13282,"endOffset":13611,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":13615,"endOffset":14610,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":14614,"endOffset":14955,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":14959,"endOffset":15271,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":15275,"endOffset":15425,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":15429,"endOffset":15592,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":15596,"endOffset":15804,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":15808,"endOffset":16192,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":16196,"endOffset":16287,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":16291,"endOffset":16374,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":16378,"endOffset":16858,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":16862,"endOffset":17324,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":17328,"endOffset":17576,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":17580,"endOffset":18001,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":18005,"endOffset":18186,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":18190,"endOffset":18465,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":18469,"endOffset":18741,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":18745,"endOffset":19074,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":19078,"endOffset":19219,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":19223,"endOffset":19359,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":19363,"endOffset":19553,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":19557,"endOffset":19805,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":19809,"endOffset":20091,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":20095,"endOffset":20296,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":20300,"endOffset":20579,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":20583,"endOffset":20861,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":20865,"endOffset":21068,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":21072,"endOffset":21355,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":21359,"endOffset":21540,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":21544,"endOffset":21803,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":21807,"endOffset":22514,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":22518,"endOffset":22634,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":22638,"endOffset":22884,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":22888,"endOffset":23257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7392,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1217,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1701,"endOffset":2588,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2594,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":3050,"endOffset":3359,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3365,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":4090,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4303,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":5022,"endOffset":5521,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5527,"endOffset":6851,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6857,"endOffset":7328,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11025,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":399,"endOffset":514,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1058,"endOffset":1085,"count":1}],"isBlockCoverage":true},{"functionName":"initCJSParse","ranges":[{"startOffset":1634,"endOffset":1935,"count":1},{"startOffset":1709,"endOffset":1786,"count":0}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":2076,"endOffset":2510,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":2514,"endOffset":2737,"count":0}],"isBlockCoverage":false},{"functionName":"errPath","ranges":[{"startOffset":2741,"endOffset":2892,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2896,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":3121,"endOffset":3602,"count":0}],"isBlockCoverage":false},{"functionName":"enrichCJSError","ranges":[{"startOffset":3776,"endOffset":4325,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":4488,"endOffset":5975,"count":1},{"startOffset":4968,"endOffset":4991,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5084,"endOffset":5970,"count":1},{"startOffset":5207,"endOffset":5324,"count":0},{"startOffset":5419,"endOffset":5512,"count":0},{"startOffset":5565,"endOffset":5924,"count":0}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":5981,"endOffset":7557,"count":1},{"startOffset":6086,"endOffset":6215,"count":0},{"startOffset":6526,"endOffset":6576,"count":0},{"startOffset":6662,"endOffset":6667,"count":0},{"startOffset":6676,"endOffset":6728,"count":0},{"startOffset":6919,"endOffset":7019,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7056,"endOffset":7515,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":7685,"endOffset":8077,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStrategy","ranges":[{"startOffset":8144,"endOffset":10079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10148,"endOffset":11021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"node:internal/modules/esm/create_dynamic_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1828,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":200,"endOffset":227,"count":0}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":233,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":431,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicModule","ranges":[{"startOffset":672,"endOffset":1784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:internal/vm/module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12768,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1791,"endOffset":3935,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":3941,"endOffset":4083,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":4089,"endOffset":4227,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":4233,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4524,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4688,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":4952,"endOffset":5370,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5376,"endOffset":6142,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6148,"endOffset":6897,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7051,"endOffset":7088,"count":0}],"isBlockCoverage":false},{"functionName":"SourceTextModule","ranges":[{"startOffset":7095,"endOffset":9531,"count":0}],"isBlockCoverage":false},{"functionName":"get dependencySpecifiers","ranges":[{"startOffset":9537,"endOffset":9844,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":9850,"endOffset":10130,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":10136,"endOffset":10340,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedData","ranges":[{"startOffset":10346,"endOffset":10616,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10665,"endOffset":11779,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11785,"endOffset":12096,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":12103,"endOffset":12597,"count":822}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":12209,"endOffset":12551,"count":1},{"startOffset":12364,"endOffset":12402,"count":0},{"startOffset":12404,"endOffset":12550,"count":0}],"isBlockCoverage":true},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":12726,"endOffset":12761,"count":1}],"isBlockCoverage":true}]},{"scriptId":"119","url":"node:internal/modules/run_main","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2621,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":388,"endOffset":839,"count":1},{"startOffset":661,"endOffset":668,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":843,"endOffset":1445,"count":1},{"startOffset":970,"endOffset":982,"count":0},{"startOffset":1134,"endOffset":1146,"count":0},{"startOffset":1260,"endOffset":1272,"count":0},{"startOffset":1341,"endOffset":1354,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1449,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"handleMainPromise","ranges":[{"startOffset":1821,"endOffset":2010,"count":0}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2201,"endOffset":2545,"count":1},{"startOffset":2384,"endOffset":2429,"count":0}],"isBlockCoverage":true}]},{"scriptId":"120","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/bin/mocha","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4009,"count":1},{"startOffset":1592,"endOffset":1658,"count":0},{"startOffset":2098,"endOffset":2188,"count":0},{"startOffset":2268,"endOffset":3913,"count":0}],"isBlockCoverage":true},{"functionName":"disableTimeouts","ranges":[{"startOffset":831,"endOffset":957,"count":0}],"isBlockCoverage":false},{"functionName":"trimV8Option","ranges":[{"startOffset":1183,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1340,"endOffset":1467,"count":11},{"startOffset":1372,"endOffset":1422,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1537,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1630,"endOffset":1657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2057,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2454,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2927,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3155,"endOffset":3909,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7612,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1933,"endOffset":2063,"count":10}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":1989,"endOffset":2054,"count":2},{"startOffset":2039,"endOffset":2042,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2152,"endOffset":2240,"count":33}],"isBlockCoverage":true},{"functionName":"Object.assign","ranges":[{"startOffset":2201,"endOffset":2238,"count":9},{"startOffset":2224,"endOffset":2233,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2621,"endOffset":2665,"count":20}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2970,"endOffset":4343,"count":2},{"startOffset":3424,"endOffset":3441,"count":0},{"startOffset":4114,"endOffset":4203,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3455,"endOffset":3756,"count":1},{"startOffset":3567,"endOffset":3732,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4070,"endOffset":4085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4263,"endOffset":4316,"count":0}],"isBlockCoverage":false},{"functionName":"loadRc","ranges":[{"startOffset":4727,"endOffset":4873,"count":1},{"startOffset":4841,"endOffset":4861,"count":0}],"isBlockCoverage":true},{"functionName":"loadPkgRc","ranges":[{"startOffset":5309,"endOffset":6046,"count":1},{"startOffset":5370,"endOffset":5394,"count":0},{"startOffset":5589,"endOffset":5695,"count":0},{"startOffset":5767,"endOffset":6023,"count":0}],"isBlockCoverage":true},{"functionName":"loadOptions","ranges":[{"startOffset":6719,"endOffset":7509,"count":1},{"startOffset":6945,"endOffset":6967,"count":0},{"startOffset":7277,"endOffset":7282,"count":0},{"startOffset":7294,"endOffset":7299,"count":0},{"startOffset":7367,"endOffset":7433,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6889,"endOffset":6921,"count":6}],"isBlockCoverage":true}]},{"scriptId":"122","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13761,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1041,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2075,"endOffset":3099,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3104,"endOffset":3369,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3373,"endOffset":4394,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4398,"endOffset":6219,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6394,"endOffset":6451,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6456,"endOffset":6515,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6553,"endOffset":6580,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6761,"endOffset":7938,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7975,"endOffset":8548,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8582,"endOffset":8671,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8735,"endOffset":8769,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8801,"endOffset":10675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10853,"endOffset":10910,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10915,"endOffset":10974,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11013,"endOffset":11040,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":11227,"endOffset":11718,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11755,"endOffset":12426,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":12464,"endOffset":13037,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":13072,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13641,"endOffset":13675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/ansi-colors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5874,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":32,"endOffset":101,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":120,"endOffset":130,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":409,"endOffset":5812,"count":1},{"startOffset":527,"endOffset":586,"count":0}],"isBlockCoverage":true},{"functionName":"ansi","ranges":[{"startOffset":603,"endOffset":1269,"count":42}],"isBlockCoverage":true},{"functionName":"style.wrap","ranges":[{"startOffset":826,"endOffset":1246,"count":3},{"startOffset":881,"endOffset":924,"count":0},{"startOffset":1183,"endOffset":1230,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":1287,"endOffset":1403,"count":3},{"startOffset":1355,"endOffset":1369,"count":0}],"isBlockCoverage":true},{"functionName":"style","ranges":[{"startOffset":1422,"endOffset":1868,"count":3},{"startOffset":1481,"endOffset":1491,"count":0},{"startOffset":1526,"endOffset":1539,"count":0},{"startOffset":1574,"endOffset":1584,"count":0},{"startOffset":1714,"endOffset":1782,"count":0}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":1888,"endOffset":2429,"count":42},{"startOffset":1995,"endOffset":2022,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2145,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2208,"endOffset":2417,"count":3},{"startOffset":2352,"endOffset":2377,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":2236,"endOffset":2270,"count":3}],"isBlockCoverage":true},{"functionName":"colors.hasColor.colors.hasAnsi","ranges":[{"startOffset":4269,"endOffset":4397,"count":0}],"isBlockCoverage":false},{"functionName":"colors.alias","ranges":[{"startOffset":4417,"endOffset":5181,"count":2},{"startOffset":4475,"endOffset":4490,"count":0},{"startOffset":4535,"endOffset":4646,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4891,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4954,"endOffset":5169,"count":2},{"startOffset":5098,"endOffset":5127,"count":0}],"isBlockCoverage":true},{"functionName":"color","ranges":[{"startOffset":4982,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"colors.theme","ranges":[{"startOffset":5201,"endOffset":5407,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5436,"endOffset":5604,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5631,"endOffset":5641,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/ansi-colors/symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1533,"count":1},{"startOffset":1106,"endOffset":1111,"count":0},{"startOffset":1143,"endOffset":1148,"count":0},{"startOffset":1260,"endOffset":1267,"count":0}],"isBlockCoverage":true}]},{"scriptId":"125","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41467,"count":1},{"startOffset":40159,"endOffset":40203,"count":0},{"startOffset":40344,"endOffset":40542,"count":0},{"startOffset":40579,"endOffset":40583,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":96,"endOffset":904,"count":20},{"startOffset":189,"endOffset":215,"count":0},{"startOffset":217,"endOffset":244,"count":0},{"startOffset":403,"endOffset":429,"count":0},{"startOffset":456,"endOffset":870,"count":241},{"startOffset":525,"endOffset":625,"count":20},{"startOffset":650,"endOffset":681,"count":221},{"startOffset":666,"endOffset":680,"count":201},{"startOffset":683,"endOffset":761,"count":20},{"startOffset":761,"endOffset":860,"count":221}],"isBlockCoverage":true},{"functionName":"decamelize","ranges":[{"startOffset":905,"endOffset":1404,"count":17},{"startOffset":1019,"endOffset":1025,"count":0},{"startOffset":1095,"endOffset":1377,"count":184},{"startOffset":1219,"endOffset":1227,"count":17},{"startOffset":1229,"endOffset":1307,"count":17},{"startOffset":1307,"endOffset":1371,"count":167}],"isBlockCoverage":true},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1405,"endOffset":1728,"count":18},{"startOffset":1482,"endOffset":1495,"count":0},{"startOffset":1535,"endOffset":1547,"count":2},{"startOffset":1547,"endOffset":1590,"count":16},{"startOffset":1590,"endOffset":1602,"count":0},{"startOffset":1602,"endOffset":1624,"count":16},{"startOffset":1624,"endOffset":1639,"count":12},{"startOffset":1649,"endOffset":1662,"count":0},{"startOffset":1662,"endOffset":1727,"count":16}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1730,"endOffset":2515,"count":4},{"startOffset":1882,"endOffset":2514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1835,"endOffset":1874,"count":1},{"startOffset":1862,"endOffset":1870,"count":0}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":2552,"endOffset":2603,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2608,"endOffset":38682,"count":4},{"startOffset":4252,"endOffset":4257,"count":0},{"startOffset":4405,"endOffset":4411,"count":2},{"startOffset":4412,"endOffset":4417,"count":2},{"startOffset":4541,"endOffset":4556,"count":2},{"startOffset":5215,"endOffset":5220,"count":0},{"startOffset":5858,"endOffset":5863,"count":0},{"startOffset":6019,"endOffset":6024,"count":0},{"startOffset":6182,"endOffset":6187,"count":0},{"startOffset":6344,"endOffset":6349,"count":2},{"startOffset":6509,"endOffset":6514,"count":2},{"startOffset":7286,"endOffset":7860,"count":2},{"startOffset":7367,"endOffset":7529,"count":0},{"startOffset":8357,"endOffset":15405,"count":1},{"startOffset":8585,"endOffset":8637,"count":0},{"startOffset":8745,"endOffset":9301,"count":0},{"startOffset":9349,"endOffset":9385,"count":0},{"startOffset":9387,"endOffset":9657,"count":0},{"startOffset":9698,"endOffset":9764,"count":0},{"startOffset":9974,"endOffset":10049,"count":0},{"startOffset":10124,"endOffset":10199,"count":0},{"startOffset":10318,"endOffset":10392,"count":0},{"startOffset":10393,"endOffset":10458,"count":0},{"startOffset":10459,"endOffset":10525,"count":0},{"startOffset":10527,"endOffset":10634,"count":0},{"startOffset":10697,"endOffset":10804,"count":0},{"startOffset":10975,"endOffset":15395,"count":0},{"startOffset":15690,"endOffset":15715,"count":0},{"startOffset":15893,"endOffset":15911,"count":2},{"startOffset":15925,"endOffset":15949,"count":0},{"startOffset":16096,"endOffset":16128,"count":2},{"startOffset":16130,"endOffset":16287,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5246,"endOffset":5824,"count":30},{"startOffset":5311,"endOffset":5320,"count":0},{"startOffset":5680,"endOffset":5742,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5380,"endOffset":5627,"count":255}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5889,"endOffset":5986,"count":73}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6050,"endOffset":6149,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6213,"endOffset":6312,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6375,"endOffset":6473,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6540,"endOffset":6641,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6735,"endOffset":6923,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7031,"endOffset":7225,"count":92}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7432,"endOffset":7513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7638,"endOffset":7834,"count":1},{"startOffset":7709,"endOffset":7739,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7969,"endOffset":8126,"count":16},{"startOffset":8018,"endOffset":8023,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8033,"endOffset":8114,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15758,"endOffset":15863,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15975,"endOffset":16043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16169,"endOffset":16209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16219,"endOffset":16275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16384,"endOffset":16399,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16410,"endOffset":16662,"count":76},{"startOffset":16479,"endOffset":16501,"count":28},{"startOffset":16503,"endOffset":16612,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16558,"endOffset":16581,"count":1}],"isBlockCoverage":true},{"functionName":"pushPositional","ranges":[{"startOffset":16683,"endOffset":16954,"count":0}],"isBlockCoverage":false},{"functionName":"eatNargs","ranges":[{"startOffset":16963,"endOffset":18584,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":18593,"endOffset":20377,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":20386,"endOffset":22249,"count":24},{"startOffset":20444,"endOffset":20484,"count":2},{"startOffset":20486,"endOffset":20683,"count":2},{"startOffset":20858,"endOffset":21063,"count":12},{"startOffset":21100,"endOffset":21132,"count":0},{"startOffset":21134,"endOffset":21611,"count":0},{"startOffset":21666,"endOffset":21704,"count":1},{"startOffset":21706,"endOffset":22239,"count":1},{"startOffset":21769,"endOffset":21774,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20537,"endOffset":20616,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20903,"endOffset":21047,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21195,"endOffset":21595,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21806,"endOffset":22223,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":21950,"endOffset":22023,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":22049,"endOffset":22181,"count":1},{"startOffset":22122,"endOffset":22146,"count":0}],"isBlockCoverage":true},{"functionName":"addNewAlias","ranges":[{"startOffset":22258,"endOffset":22603,"count":3},{"startOffset":22330,"endOffset":22358,"count":1},{"startOffset":22361,"endOffset":22464,"count":2},{"startOffset":22504,"endOffset":22534,"count":2},{"startOffset":22537,"endOffset":22593,"count":1}],"isBlockCoverage":true},{"functionName":"processValue","ranges":[{"startOffset":22612,"endOffset":23717,"count":24},{"startOffset":22686,"endOffset":22739,"count":4},{"startOffset":22740,"endOffset":22789,"count":0},{"startOffset":22791,"endOffset":22862,"count":0},{"startOffset":22913,"endOffset":22950,"count":20},{"startOffset":22952,"endOffset":23054,"count":4},{"startOffset":23019,"endOffset":23040,"count":0},{"startOffset":23114,"endOffset":23175,"count":4},{"startOffset":23192,"endOffset":23221,"count":20},{"startOffset":23274,"endOffset":23327,"count":0},{"startOffset":23329,"endOffset":23381,"count":0},{"startOffset":23436,"endOffset":23473,"count":1},{"startOffset":23475,"endOffset":23681,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23124,"endOffset":23174,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23553,"endOffset":23594,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":23726,"endOffset":24370,"count":43},{"startOffset":23826,"endOffset":23840,"count":28},{"startOffset":23858,"endOffset":23871,"count":0},{"startOffset":23925,"endOffset":23962,"count":29},{"startOffset":23963,"endOffset":23987,"count":22},{"startOffset":23989,"endOffset":24334,"count":18},{"startOffset":24057,"endOffset":24090,"count":2},{"startOffset":24091,"endOffset":24152,"count":2},{"startOffset":24193,"endOffset":24256,"count":16},{"startOffset":24258,"endOffset":24320,"count":2}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":24379,"endOffset":26014,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24583,"endOffset":26002,"count":1},{"startOffset":24717,"endOffset":25988,"count":0}],"isBlockCoverage":true},{"functionName":"setConfigObject","ranges":[{"startOffset":26023,"endOffset":26699,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26104,"endOffset":26687,"count":26},{"startOffset":26201,"endOffset":26219,"count":0},{"startOffset":26273,"endOffset":26290,"count":7},{"startOffset":26291,"endOffset":26315,"count":7},{"startOffset":26316,"endOffset":26348,"count":0},{"startOffset":26350,"endOffset":26422,"count":0},{"startOffset":26504,"endOffset":26582,"count":3},{"startOffset":26547,"endOffset":26581,"count":0},{"startOffset":26584,"endOffset":26655,"count":23}],"isBlockCoverage":true},{"functionName":"setConfigObjects","ranges":[{"startOffset":26708,"endOffset":26952,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26832,"endOffset":26926,"count":5}],"isBlockCoverage":true},{"functionName":"applyEnvVars","ranges":[{"startOffset":26961,"endOffset":27837,"count":8},{"startOffset":27076,"endOffset":27145,"count":0},{"startOffset":27146,"endOffset":27150,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27226,"endOffset":27825,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":27846,"endOffset":28693,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27979,"endOffset":28681,"count":48},{"startOffset":28035,"endOffset":28667,"count":42},{"startOffset":28159,"endOffset":28649,"count":13},{"startOffset":28334,"endOffset":28339,"count":3},{"startOffset":28547,"endOffset":28627,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28355,"endOffset":28494,"count":19}],"isBlockCoverage":true},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":28702,"endOffset":28994,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":29003,"endOffset":29620,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29120,"endOffset":29608,"count":54},{"startOffset":29187,"endOffset":29594,"count":24},{"startOffset":29309,"endOffset":29331,"count":8},{"startOffset":29366,"endOffset":29371,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29381,"endOffset":29574,"count":16},{"startOffset":29479,"endOffset":29486,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":29629,"endOffset":30054,"count":96},{"startOffset":29981,"endOffset":29994,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29810,"endOffset":29876,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":30063,"endOffset":32512,"count":71},{"startOffset":31162,"endOffset":31198,"count":0},{"startOffset":31200,"endOffset":31444,"count":0},{"startOffset":31484,"endOffset":31543,"count":0},{"startOffset":31588,"endOffset":32082,"count":0},{"startOffset":32141,"endOffset":32213,"count":12},{"startOffset":32189,"endOffset":32198,"count":0},{"startOffset":32213,"endOffset":32502,"count":59},{"startOffset":32271,"endOffset":32324,"count":0},{"startOffset":32325,"endOffset":32377,"count":0},{"startOffset":32380,"endOffset":32437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30251,"endOffset":30866,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":32521,"endOffset":34114,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32580,"endOffset":34102,"count":16},{"startOffset":32629,"endOffset":32634,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32644,"endOffset":34086,"count":160},{"startOffset":32729,"endOffset":32736,"count":59},{"startOffset":32736,"endOffset":32801,"count":101},{"startOffset":32801,"endOffset":32806,"count":34}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32868,"endOffset":33295,"count":177},{"startOffset":32923,"endOffset":32963,"count":31},{"startOffset":32965,"endOffset":33273,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33357,"endOffset":33810,"count":194},{"startOffset":33413,"endOffset":33431,"count":133},{"startOffset":33432,"endOffset":33472,"count":17},{"startOffset":33474,"endOffset":33788,"count":17},{"startOffset":33576,"endOffset":33615,"count":1},{"startOffset":33617,"endOffset":33762,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33860,"endOffset":34066,"count":93}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33957,"endOffset":34041,"count":127}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":34123,"endOffset":34408,"count":328},{"startOffset":34218,"endOffset":34223,"count":136},{"startOffset":34373,"endOffset":34389,"count":54},{"startOffset":34390,"endOffset":34397,"count":274}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34317,"endOffset":34342,"count":459}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":34417,"endOffset":34715,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":34724,"endOffset":35004,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":35013,"endOffset":35859,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":35868,"endOffset":35999,"count":1},{"startOffset":35965,"endOffset":35988,"count":0}],"isBlockCoverage":true},{"functionName":"isUnknownOption","ranges":[{"startOffset":36008,"endOffset":36666,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":36675,"endOffset":37002,"count":1},{"startOffset":36755,"endOffset":36809,"count":0},{"startOffset":36810,"endOffset":36849,"count":0},{"startOffset":36851,"endOffset":36904,"count":0}],"isBlockCoverage":true},{"functionName":"defaultForType","ranges":[{"startOffset":37011,"endOffset":37243,"count":1}],"isBlockCoverage":true},{"functionName":"guessType","ranges":[{"startOffset":37252,"endOffset":37702,"count":1},{"startOffset":37381,"endOffset":37397,"count":0},{"startOffset":37472,"endOffset":37488,"count":0},{"startOffset":37578,"endOffset":37667,"count":0}],"isBlockCoverage":true},{"functionName":"isUndefined","ranges":[{"startOffset":37711,"endOffset":37786,"count":16}],"isBlockCoverage":true},{"functionName":"checkConfiguration","ranges":[{"startOffset":37795,"endOffset":38367,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37870,"endOffset":38355,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":38685,"endOffset":39887,"count":4},{"startOffset":39025,"endOffset":39513,"count":67},{"startOffset":39091,"endOffset":39503,"count":674},{"startOffset":39284,"endOffset":39489,"count":0},{"startOffset":39503,"endOffset":39513,"count":674},{"startOffset":39513,"endOffset":39519,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38846,"endOffset":38924,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39149,"endOffset":39243,"count":1426}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39544,"endOffset":39862,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39607,"endOffset":39682,"count":143}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":39888,"endOffset":39962,"count":71},{"startOffset":39945,"endOffset":39955,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":39963,"endOffset":40067,"count":71},{"startOffset":40028,"endOffset":40049,"count":0}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":40649,"endOffset":40682,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":40780,"endOffset":41087,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":41112,"endOffset":41220,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":41245,"endOffset":41315,"count":4}],"isBlockCoverage":true}]},{"scriptId":"126","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/run-option-metadata.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2232,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1642,"endOffset":1952,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1792,"endOffset":1934,"count":43},{"startOffset":1863,"endOffset":1868,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1890,"endOffset":1928,"count":24}],"isBlockCoverage":true},{"functionName":"exports.isMochaFlag","ranges":[{"startOffset":2163,"endOffset":2230,"count":12}],"isBlockCoverage":true}]},{"scriptId":"127","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/one-and-dones.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1549,"count":1}],"isBlockCoverage":true},{"functionName":"showKeys","ranges":[{"startOffset":510,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"list-interfaces","ranges":[{"startOffset":1181,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"list-reporters","ranges":[{"startOffset":1309,"endOffset":1351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/mocha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39403,"count":1}],"isBlockCoverage":true},{"functionName":"exports.afterEach","ranges":[{"startOffset":2209,"endOffset":2325,"count":0}],"isBlockCoverage":false},{"functionName":"exports.after","ranges":[{"startOffset":2343,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beforeEach","ranges":[{"startOffset":2483,"endOffset":2585,"count":0}],"isBlockCoverage":false},{"functionName":"exports.before","ranges":[{"startOffset":2604,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe","ranges":[{"startOffset":2728,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.only","ranges":[{"startOffset":2854,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"exports.describe.skip","ranges":[{"startOffset":2997,"endOffset":3114,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it","ranges":[{"startOffset":3129,"endOffset":3222,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.only","ranges":[{"startOffset":3242,"endOffset":3340,"count":0}],"isBlockCoverage":false},{"functionName":"exports.it.skip","ranges":[{"startOffset":3360,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"exports.run","ranges":[{"startOffset":3759,"endOffset":3828,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha","ranges":[{"startOffset":6178,"endOffset":8552,"count":1},{"startOffset":6890,"endOffset":6893,"count":0},{"startOffset":6947,"endOffset":6987,"count":0},{"startOffset":7346,"endOffset":7390,"count":0},{"startOffset":8398,"endOffset":8462,"count":0},{"startOffset":8467,"endOffset":8550,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7242,"endOffset":7311,"count":15},{"startOffset":7281,"endOffset":7307,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.bail","ranges":[{"startOffset":8791,"endOffset":8860,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.addFile","ranges":[{"startOffset":9205,"endOffset":9264,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.reporter","ranges":[{"startOffset":9841,"endOffset":11293,"count":1},{"startOffset":9926,"endOffset":9966,"count":0},{"startOffset":10006,"endOffset":10015,"count":0},{"startOffset":10256,"endOffset":10929,"count":0},{"startOffset":10949,"endOffset":11072,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.ui","ranges":[{"startOffset":11627,"endOffset":12134,"count":1},{"startOffset":11696,"endOffset":11725,"count":0},{"startOffset":11745,"endOffset":11753,"count":0},{"startOffset":11823,"endOffset":11985,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12060,"endOffset":12114,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.loadFiles","ranges":[{"startOffset":12669,"endOffset":13005,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.loadFilesAsync","ranges":[{"startOffset":13667,"endOffset":14071,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13809,"endOffset":13894,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13900,"endOffset":14064,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.unloadFile","ranges":[{"startOffset":14285,"endOffset":14500,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.unloadFiles","ranges":[{"startOffset":14942,"endOffset":15306,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fgrep","ranges":[{"startOffset":15661,"endOffset":15761,"count":1},{"startOffset":15712,"endOffset":15760,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.grep","ranges":[{"startOffset":16902,"endOffset":17190,"count":1},{"startOffset":16944,"endOffset":17134,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.invert","ranges":[{"startOffset":17461,"endOffset":17521,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.checkLeaks","ranges":[{"startOffset":17817,"endOffset":17907,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.cleanReferencesAfterRun","ranges":[{"startOffset":18305,"endOffset":18427,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dispose","ranges":[{"startOffset":18722,"endOffset":19057,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.fullTrace","ranges":[{"startOffset":19320,"endOffset":19407,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.growl","ranges":[{"startOffset":19605,"endOffset":19923,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.global","ranges":[{"startOffset":20894,"endOffset":21109,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21019,"endOffset":21090,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.color","ranges":[{"startOffset":21489,"endOffset":21564,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.inlineDiffs","ranges":[{"startOffset":21864,"endOffset":21957,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.diff","ranges":[{"startOffset":22214,"endOffset":22286,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.timeout","ranges":[{"startOffset":22859,"endOffset":22923,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.retries","ranges":[{"startOffset":23292,"endOffset":23356,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.slow","ranges":[{"startOffset":23733,"endOffset":23794,"count":1}],"isBlockCoverage":true},{"functionName":"Mocha.asyncOnly","ranges":[{"startOffset":24085,"endOffset":24172,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.noHighlighting","ranges":[{"startOffset":24314,"endOffset":24382,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.allowUncaught","ranges":[{"startOffset":24653,"endOffset":24752,"count":0}],"isBlockCoverage":false},{"functionName":"delay","ranges":[{"startOffset":25019,"endOffset":25083,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.dryRun","ranges":[{"startOffset":25330,"endOffset":25408,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.failZero","ranges":[{"startOffset":25659,"endOffset":25743,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidOnly","ranges":[{"startOffset":26008,"endOffset":26098,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha.forbidPending","ranges":[{"startOffset":26384,"endOffset":26483,"count":0}],"isBlockCoverage":false},{"functionName":"Mocha._guardRunningStateTransition","ranges":[{"startOffset":26650,"endOffset":27334,"count":1},{"startOffset":26707,"endOffset":26884,"count":0},{"startOffset":26991,"endOffset":27332,"count":0}],"isBlockCoverage":true},{"functionName":"Mocha.run","ranges":[{"startOffset":28356,"endOffset":30735,"count":1},{"startOffset":28476,"endOffset":28541,"count":0},{"startOffset":28591,"endOffset":28618,"count":0},{"startOffset":29284,"endOffset":29336,"count":0},{"startOffset":29422,"endOffset":29452,"count":0},{"startOffset":29488,"endOffset":29547,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":29675,"endOffset":29988,"count":1},{"startOffset":29817,"endOffset":29835,"count":0},{"startOffset":29849,"endOffset":29862,"count":0},{"startOffset":29909,"endOffset":29951,"count":0}],"isBlockCoverage":true},{"functionName":"runAsync","ranges":[{"startOffset":30010,"endOffset":30442,"count":1},{"startOffset":30126,"endOffset":30170,"count":0},{"startOffset":30351,"endOffset":30413,"count":0}],"isBlockCoverage":true},{"functionName":"rootHooks","ranges":[{"startOffset":30895,"endOffset":31453,"count":0}],"isBlockCoverage":false},{"functionName":"parallelMode","ranges":[{"startOffset":32134,"endOffset":32941,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFiles","ranges":[{"startOffset":33370,"endOffset":33500,"count":1}],"isBlockCoverage":true},{"functionName":"globalSetup","ranges":[{"startOffset":33792,"endOffset":33991,"count":1}],"isBlockCoverage":true},{"functionName":"globalTeardown","ranges":[{"startOffset":34295,"endOffset":34518,"count":1}],"isBlockCoverage":true},{"functionName":"runGlobalSetup","ranges":[{"startOffset":34991,"endOffset":35284,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalTeardown","ranges":[{"startOffset":35761,"endOffset":36077,"count":0}],"isBlockCoverage":false},{"functionName":"_runGlobalFixtures","ranges":[{"startOffset":36351,"endOffset":36528,"count":0}],"isBlockCoverage":false},{"functionName":"enableGlobalSetup","ranges":[{"startOffset":36756,"endOffset":36870,"count":1}],"isBlockCoverage":true},{"functionName":"enableGlobalTeardown","ranges":[{"startOffset":37107,"endOffset":37231,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalSetupFixtures","ranges":[{"startOffset":37391,"endOffset":37479,"count":1}],"isBlockCoverage":true},{"functionName":"hasGlobalTeardownFixtures","ranges":[{"startOffset":37647,"endOffset":37745,"count":1}],"isBlockCoverage":true}]},{"scriptId":"129","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":946,"count":1}],"isBlockCoverage":true}]},{"scriptId":"131","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12057,"count":1},{"startOffset":1078,"endOffset":1119,"count":0},{"startOffset":2421,"endOffset":2480,"count":0}],"isBlockCoverage":true},{"functionName":"getBrowserWindowSize","ranges":[{"startOffset":436,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"exports.color","ranges":[{"startOffset":2116,"endOffset":2265,"count":29},{"startOffset":2165,"endOffset":2194,"count":0}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":2668,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"show","ranges":[{"startOffset":2747,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"deleteLine","ranges":[{"startOffset":2832,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"beginningOfLine","ranges":[{"startOffset":2920,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"CR","ranges":[{"startOffset":2995,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"exports.showDiff","ranges":[{"startOffset":3198,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyDiffObjs","ranges":[{"startOffset":3350,"endOffset":3555,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateDiff","ranges":[{"startOffset":3866,"endOffset":4645,"count":0}],"isBlockCoverage":false},{"functionName":"exports.list","ranges":[{"startOffset":4874,"endOffset":6837,"count":0}],"isBlockCoverage":false},{"functionName":"Base","ranges":[{"startOffset":7137,"endOffset":8220,"count":1},{"startOffset":7225,"endOffset":7282,"count":0},{"startOffset":7308,"endOffset":7313,"count":0},{"startOffset":7473,"endOffset":7515,"count":0},{"startOffset":7552,"endOffset":7585,"count":0},{"startOffset":7587,"endOffset":7642,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7673,"endOffset":7885,"count":9},{"startOffset":7728,"endOffset":7762,"count":2},{"startOffset":7762,"endOffset":7881,"count":7},{"startOffset":7805,"endOffset":7841,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7918,"endOffset":8216,"count":0}],"isBlockCoverage":false},{"functionName":"Base.epilogue","ranges":[{"startOffset":8365,"endOffset":8984,"count":1},{"startOffset":8593,"endOffset":8597,"count":0},{"startOffset":8665,"endOffset":8779,"count":0},{"startOffset":8817,"endOffset":8960,"count":0}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":9110,"endOffset":9211,"count":0}],"isBlockCoverage":false},{"functionName":"inlineDiff","ranges":[{"startOffset":9383,"endOffset":9941,"count":0}],"isBlockCoverage":false},{"functionName":"unifiedDiff","ranges":[{"startOffset":10121,"endOffset":10923,"count":0}],"isBlockCoverage":false},{"functionName":"errorDiff","ranges":[{"startOffset":11068,"endOffset":11420,"count":0}],"isBlockCoverage":false},{"functionName":"colorLines","ranges":[{"startOffset":11563,"endOffset":11708,"count":0}],"isBlockCoverage":false},{"functionName":"sameType","ranges":[{"startOffset":11921,"endOffset":12002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7236,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":174,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":301,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":432,"endOffset":480,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":567,"endOffset":624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":702,"endOffset":750,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":835,"endOffset":890,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":972,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1104,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1226,"endOffset":1273,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1354,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1484,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1613,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1744,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1875,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1999,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2128,"endOffset":2184,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2272,"endOffset":2332,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2412,"endOffset":2464,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2552,"endOffset":2609,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2697,"endOffset":2754,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":4100,"endOffset":4197,"count":1},{"startOffset":4174,"endOffset":4194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"133","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30923,"count":1}],"isBlockCoverage":true},{"functionName":"Diff","ranges":[{"startOffset":158,"endOffset":176,"count":7}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":260,"endOffset":4471,"count":0}],"isBlockCoverage":false},{"functionName":"pushComponent","ranges":[{"startOffset":4546,"endOffset":5074,"count":0}],"isBlockCoverage":false},{"functionName":"extractCommon","ranges":[{"startOffset":5149,"endOffset":5720,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":5788,"endOffset":6029,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmpty","ranges":[{"startOffset":6102,"endOffset":6280,"count":0}],"isBlockCoverage":false},{"functionName":"castInput","ranges":[{"startOffset":6351,"endOffset":6400,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":6470,"endOffset":6528,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":6594,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"buildValues","ranges":[{"startOffset":6652,"endOffset":8673,"count":0}],"isBlockCoverage":false},{"functionName":"clonePath","ranges":[{"startOffset":8675,"endOffset":8785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/character.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1671,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":327,"endOffset":424,"count":1},{"startOffset":401,"endOffset":421,"count":0}],"isBlockCoverage":true},{"functionName":"diffChars","ranges":[{"startOffset":688,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/word.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8786,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":464,"endOffset":561,"count":1},{"startOffset":538,"endOffset":558,"count":0}],"isBlockCoverage":true},{"functionName":"wordDiff.equals","ranges":[{"startOffset":1546,"endOffset":1789,"count":0}],"isBlockCoverage":false},{"functionName":"wordDiff.tokenize","ranges":[{"startOffset":1812,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"diffWords","ranges":[{"startOffset":2496,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"diffWordsWithSpace","ranges":[{"startOffset":2855,"endOffset":2960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/util/params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1752,"count":1}],"isBlockCoverage":true},{"functionName":"generateOptions","ranges":[{"startOffset":174,"endOffset":502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5686,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":460,"endOffset":557,"count":1},{"startOffset":534,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"lineDiff.tokenize","ranges":[{"startOffset":826,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"diffLines","ranges":[{"startOffset":1486,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"diffTrimmedLines","ranges":[{"startOffset":1586,"endOffset":1956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/sentence.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2090,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":334,"endOffset":431,"count":1},{"startOffset":408,"endOffset":428,"count":0}],"isBlockCoverage":true},{"functionName":"sentenceDiff.tokenize","ranges":[{"startOffset":716,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"diffSentences","ranges":[{"startOffset":786,"endOffset":892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/css.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1966,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":317,"endOffset":414,"count":1},{"startOffset":391,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"cssDiff.tokenize","ranges":[{"startOffset":679,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"diffCss","ranges":[{"startOffset":741,"endOffset":836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12937,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":440,"endOffset":537,"count":1},{"startOffset":514,"endOffset":534,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":539,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.castInput","ranges":[{"startOffset":1625,"endOffset":2249,"count":0}],"isBlockCoverage":false},{"functionName":"jsonDiff.equals","ranges":[{"startOffset":2270,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"diffJson","ranges":[{"startOffset":2568,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":2859,"endOffset":4359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2300,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":422,"count":1},{"startOffset":399,"endOffset":419,"count":0}],"isBlockCoverage":true},{"functionName":"arrayDiff.tokenize","ranges":[{"startOffset":695,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"arrayDiff.join.arrayDiff.removeEmpty","ranges":[{"startOffset":783,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"diffArrays","ranges":[{"startOffset":822,"endOffset":922,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/patch/apply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19926,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":450,"endOffset":547,"count":1},{"startOffset":524,"endOffset":544,"count":0}],"isBlockCoverage":true},{"functionName":"applyPatch","ranges":[{"startOffset":573,"endOffset":4807,"count":0}],"isBlockCoverage":false},{"functionName":"applyPatches","ranges":[{"startOffset":4872,"endOffset":5728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"143","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/patch/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17908,"count":1}],"isBlockCoverage":true},{"functionName":"parsePatch","ranges":[{"startOffset":164,"endOffset":4730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/util/distance-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4641,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":340,"endOffset":1483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/patch/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50907,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":482,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":637,"endOffset":827,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":829,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1247,"endOffset":1377,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1379,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1472,"endOffset":1655,"count":0}],"isBlockCoverage":false},{"functionName":"calcLineCount","ranges":[{"startOffset":1681,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":2137,"endOffset":5016,"count":0}],"isBlockCoverage":false},{"functionName":"loadPatch","ranges":[{"startOffset":5018,"endOffset":5874,"count":0}],"isBlockCoverage":false},{"functionName":"fileNameChanged","ranges":[{"startOffset":5876,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"selectField","ranges":[{"startOffset":5984,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"hunkBefore","ranges":[{"startOffset":6174,"endOffset":6301,"count":0}],"isBlockCoverage":false},{"functionName":"cloneHunk","ranges":[{"startOffset":6303,"endOffset":6502,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLines","ranges":[{"startOffset":6504,"endOffset":9249,"count":0}],"isBlockCoverage":false},{"functionName":"mutualChange","ranges":[{"startOffset":9251,"endOffset":11898,"count":0}],"isBlockCoverage":false},{"functionName":"removal","ranges":[{"startOffset":11900,"endOffset":12608,"count":0}],"isBlockCoverage":false},{"functionName":"conflict","ranges":[{"startOffset":12610,"endOffset":12754,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeading","ranges":[{"startOffset":12756,"endOffset":12979,"count":0}],"isBlockCoverage":false},{"functionName":"insertTrailing","ranges":[{"startOffset":12981,"endOffset":13145,"count":0}],"isBlockCoverage":false},{"functionName":"collectChange","ranges":[{"startOffset":13147,"endOffset":13641,"count":0}],"isBlockCoverage":false},{"functionName":"collectContext","ranges":[{"startOffset":13643,"endOffset":14910,"count":0}],"isBlockCoverage":false},{"functionName":"allRemoves","ranges":[{"startOffset":14912,"endOffset":15044,"count":0}],"isBlockCoverage":false},{"functionName":"skipRemoveSuperset","ranges":[{"startOffset":15046,"endOffset":15360,"count":0}],"isBlockCoverage":false},{"functionName":"calcOldNewLineCount","ranges":[{"startOffset":15362,"endOffset":16317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/patch/create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23453,"count":1}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":410,"endOffset":563,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":565,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":757,"endOffset":1173,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":1175,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":1307,"endOffset":1398,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1400,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"structuredPatch","ranges":[{"startOffset":1609,"endOffset":6811,"count":0}],"isBlockCoverage":false},{"functionName":"formatPatch","ranges":[{"startOffset":6813,"endOffset":7832,"count":0}],"isBlockCoverage":false},{"functionName":"createTwoFilesPatch","ranges":[{"startOffset":7834,"endOffset":8051,"count":0}],"isBlockCoverage":false},{"functionName":"createPatch","ranges":[{"startOffset":8053,"endOffset":8231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/util/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2026,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEqual","ranges":[{"startOffset":207,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"arrayStartsWith","ranges":[{"startOffset":324,"endOffset":548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"148","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/convert/dmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2255,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToDMP","ranges":[{"startOffset":248,"endOffset":609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"149","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/convert/xml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3359,"count":1}],"isBlockCoverage":true},{"functionName":"convertChangesToXML","ranges":[{"startOffset":182,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"escapeHTML","ranges":[{"startOffset":615,"endOffset":793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":1},{"startOffset":524,"endOffset":541,"count":0},{"startOffset":543,"endOffset":571,"count":0},{"startOffset":643,"endOffset":657,"count":0},{"startOffset":678,"endOffset":791,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":1},{"startOffset":2167,"endOffset":2209,"count":0},{"startOffset":2228,"endOffset":2270,"count":0},{"startOffset":2289,"endOffset":2331,"count":0},{"startOffset":2392,"endOffset":2413,"count":0}],"isBlockCoverage":true},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17380,"count":1}],"isBlockCoverage":true},{"functionName":"exports.escape","ranges":[{"startOffset":845,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isString","ranges":[{"startOffset":1060,"endOffset":1112,"count":16}],"isBlockCoverage":true},{"functionName":"exports.slug","ranges":[{"startOffset":1236,"endOffset":1369,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clean","ranges":[{"startOffset":1521,"endOffset":2180,"count":0}],"isBlockCoverage":false},{"functionName":"emptyRepresentation","ranges":[{"startOffset":2642,"endOffset":2884,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalType","ranges":[{"startOffset":3740,"endOffset":4049,"count":5},{"startOffset":3799,"endOffset":3828,"count":0},{"startOffset":3854,"endOffset":3878,"count":0},{"startOffset":3912,"endOffset":3938,"count":0}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":4672,"endOffset":5148,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stringify","ranges":[{"startOffset":5768,"endOffset":6795,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStringify","ranges":[{"startOffset":6956,"endOffset":8999,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalize","ranges":[{"startOffset":9901,"endOffset":11489,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stackTraceFilter","ranges":[{"startOffset":11860,"endOffset":13191,"count":1},{"startOffset":11974,"endOffset":11991,"count":0},{"startOffset":12081,"endOffset":12225,"count":0}],"isBlockCoverage":true},{"functionName":"isMochaInternal","ranges":[{"startOffset":12229,"endOffset":12437,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeInternal","ranges":[{"startOffset":12441,"endOffset":12725,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12736,"endOffset":13188,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":13336,"endOffset":13473,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":13711,"endOffset":13799,"count":17}],"isBlockCoverage":true},{"functionName":"exports.noop","ranges":[{"startOffset":13852,"endOffset":13866,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createMap","ranges":[{"startOffset":14771,"endOffset":14906,"count":5}],"isBlockCoverage":true},{"functionName":"exports.defineConstants","ranges":[{"startOffset":15396,"endOffset":15609,"count":5},{"startOffset":15480,"endOffset":15559,"count":0}],"isBlockCoverage":true},{"functionName":"cwd","ranges":[{"startOffset":15734,"endOffset":15776,"count":4}],"isBlockCoverage":true},{"functionName":"isBrowser","ranges":[{"startOffset":15926,"endOffset":15985,"count":2}],"isBlockCoverage":true},{"functionName":"castArray","ranges":[{"startOffset":16490,"endOffset":16793,"count":5},{"startOffset":16545,"endOffset":16565,"count":0},{"startOffset":16588,"endOffset":16612,"count":0},{"startOffset":16703,"endOffset":16732,"count":0},{"startOffset":16773,"endOffset":16792,"count":0}],"isBlockCoverage":true},{"functionName":"exports.uniqueID","ranges":[{"startOffset":16969,"endOffset":16983,"count":17}],"isBlockCoverage":true},{"functionName":"exports.assignNewMochaID","ranges":[{"startOffset":17013,"endOffset":17162,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17110,"endOffset":17140,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getMochaID","ranges":[{"startOffset":17301,"endOffset":17378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/nanoid/non-secure/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":469,"count":1}],"isBlockCoverage":true},{"functionName":"customAlphabet","ranges":[{"startOffset":108,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"nanoid","ranges":[{"startOffset":297,"endOffset":424,"count":17},{"startOffset":357,"endOffset":410,"count":357}],"isBlockCoverage":true}]},{"scriptId":"153","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/he/he.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":100883,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61,"endOffset":100874,"count":1},{"startOffset":500,"endOffset":535,"count":0},{"startOffset":100447,"endOffset":100481,"count":0},{"startOffset":100482,"endOffset":100497,"count":0},{"startOffset":100501,"endOffset":100547,"count":0},{"startOffset":100689,"endOffset":100813,"count":0},{"startOffset":100816,"endOffset":100871,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":92347,"endOffset":92434,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":92453,"endOffset":92630,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":92646,"endOffset":92997,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToSymbol","ranges":[{"startOffset":93093,"endOffset":94044,"count":0}],"isBlockCoverage":false},{"functionName":"hexEscape","ranges":[{"startOffset":94064,"endOffset":94149,"count":0}],"isBlockCoverage":false},{"functionName":"decEscape","ranges":[{"startOffset":94169,"endOffset":94226,"count":0}],"isBlockCoverage":false},{"functionName":"parseError","ranges":[{"startOffset":94247,"endOffset":94311,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":94409,"endOffset":97437,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":97673,"endOffset":99781,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":99934,"endOffset":100103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100512,"endOffset":100542,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1},{"startOffset":254,"endOffset":278,"count":0},{"startOffset":382,"endOffset":406,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":408,"endOffset":672,"count":2},{"startOffset":462,"endOffset":670,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":674,"endOffset":832,"count":2},{"startOffset":725,"endOffset":745,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":834,"endOffset":2729,"count":2},{"startOffset":990,"endOffset":1031,"count":0},{"startOffset":1081,"endOffset":1099,"count":0},{"startOffset":1125,"endOffset":1141,"count":0},{"startOffset":1251,"endOffset":1269,"count":0},{"startOffset":1299,"endOffset":1317,"count":0},{"startOffset":1354,"endOffset":1381,"count":0},{"startOffset":1383,"endOffset":1399,"count":0},{"startOffset":1458,"endOffset":1476,"count":0},{"startOffset":1844,"endOffset":1847,"count":0},{"startOffset":1852,"endOffset":2728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1989,"endOffset":2008,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2731,"endOffset":2909,"count":2}],"isBlockCoverage":true}]},{"scriptId":"155","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9455,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2070,"endOffset":2320,"count":3}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2130,"endOffset":2315,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2651,"endOffset":2664,"count":7}],"isBlockCoverage":true},{"functionName":"getOSType","ranges":[{"startOffset":2717,"endOffset":2727,"count":2}],"isBlockCoverage":true},{"functionName":"getOSVersion","ranges":[{"startOffset":2783,"endOffset":2796,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2833,"endOffset":2851,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":2887,"endOffset":2906,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":2943,"endOffset":2963,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":2997,"endOffset":3014,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3051,"endOffset":3071,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3112,"endOffset":3136,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3172,"endOffset":3191,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3225,"endOffset":3242,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3389,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3785,"endOffset":4231,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4267,"endOffset":4311,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4339,"endOffset":4357,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4394,"endOffset":4446,"count":2}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4478,"endOffset":4500,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4537,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5191,"endOffset":5205,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5247,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5330,"endOffset":5347,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5439,"endOffset":5697,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5701,"endOffset":6470,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6687,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7498,"endOffset":7800,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":7864,"endOffset":8132,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8445,"endOffset":8682,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5230,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1575,"endOffset":1684,"count":34}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1688,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2348,"endOffset":2573,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2578,"endOffset":3575,"count":2},{"startOffset":2649,"endOffset":2676,"count":0},{"startOffset":2715,"endOffset":2744,"count":0},{"startOffset":2837,"endOffset":2884,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3877,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4387,"endOffset":4530,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4568,"endOffset":4717,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4754,"endOffset":4896,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4939,"endOffset":5077,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":5118,"endOffset":5170,"count":1}],"isBlockCoverage":true}]},{"scriptId":"157","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49462,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1511,"endOffset":1538,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":3599,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":3612,"endOffset":3708,"count":11},{"startOffset":3670,"endOffset":3700,"count":0}],"isBlockCoverage":true},{"functionName":"createHandle","ranges":[{"startOffset":3712,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":4115,"endOffset":4256,"count":57},{"startOffset":4211,"endOffset":4230,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":4262,"endOffset":4347,"count":11},{"startOffset":4319,"endOffset":4343,"count":0}],"isBlockCoverage":true},{"functionName":"createServer","ranges":[{"startOffset":4560,"endOffset":4666,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4904,"endOffset":5206,"count":14},{"startOffset":5116,"endOffset":5163,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeArgs","ranges":[{"startOffset":5714,"endOffset":6473,"count":25},{"startOffset":5785,"endOffset":5870,"count":0},{"startOffset":5951,"endOffset":5967,"count":14},{"startOffset":5969,"endOffset":6025,"count":14},{"startOffset":6025,"endOffset":6282,"count":11},{"startOffset":6053,"endOffset":6111,"count":0},{"startOffset":6206,"endOffset":6236,"count":0},{"startOffset":6238,"endOffset":6277,"count":0},{"startOffset":6360,"endOffset":6382,"count":11},{"startOffset":6382,"endOffset":6416,"count":14}],"isBlockCoverage":true},{"functionName":"initSocketHandle","ranges":[{"startOffset":6549,"endOffset":7174,"count":44},{"startOffset":6721,"endOffset":7171,"count":30},{"startOffset":6916,"endOffset":7166,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":7316,"endOffset":11511,"count":30},{"startOffset":7377,"endOffset":7404,"count":0},{"startOffset":7433,"endOffset":7567,"count":0},{"startOffset":7637,"endOffset":7892,"count":0},{"startOffset":8461,"endOffset":8487,"count":0},{"startOffset":8906,"endOffset":9017,"count":16},{"startOffset":9017,"endOffset":10266,"count":14},{"startOffset":9053,"endOffset":10266,"count":0},{"startOffset":10356,"endOffset":10434,"count":0},{"startOffset":10435,"endOffset":10482,"count":0},{"startOffset":10484,"endOffset":10707,"count":0},{"startOffset":11044,"endOffset":11073,"count":16},{"startOffset":11075,"endOffset":11349,"count":14},{"startOffset":11109,"endOffset":11283,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":11689,"endOffset":11824,"count":159},{"startOffset":11794,"endOffset":11816,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":11949,"endOffset":12587,"count":28},{"startOffset":12065,"endOffset":12169,"count":0},{"startOffset":12199,"endOffset":12211,"count":0},{"startOffset":12500,"endOffset":12512,"count":0},{"startOffset":12541,"endOffset":12584,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12141,"endOffset":12162,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":12592,"endOffset":12774,"count":28}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":12986,"endOffset":13546,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":13633,"endOffset":14152,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":14189,"endOffset":14653,"count":14},{"startOffset":14230,"endOffset":14354,"count":0},{"startOffset":14466,"endOffset":14472,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14300,"endOffset":14329,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":14692,"endOffset":14949,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":14983,"endOffset":15029,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15100,"endOffset":15146,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15210,"endOffset":15268,"count":28}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":15365,"endOffset":15691,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15765,"endOffset":15849,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15921,"endOffset":15968,"count":14}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":15979,"endOffset":16232,"count":28},{"startOffset":16185,"endOffset":16229,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":16327,"endOffset":16565,"count":56},{"startOffset":16385,"endOffset":16401,"count":42},{"startOffset":16403,"endOffset":16498,"count":14},{"startOffset":16498,"endOffset":16562,"count":42},{"startOffset":16531,"endOffset":16562,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16472,"endOffset":16491,"count":14}],"isBlockCoverage":true},{"functionName":"Socket.end","ranges":[{"startOffset":16595,"endOffset":16787,"count":28}],"isBlockCoverage":true},{"functionName":"Socket.pause","ranges":[{"startOffset":16819,"endOffset":17164,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":17197,"endOffset":17387,"count":62},{"startOffset":17231,"endOffset":17250,"count":0},{"startOffset":17251,"endOffset":17266,"count":0},{"startOffset":17267,"endOffset":17298,"count":0},{"startOffset":17300,"endOffset":17331,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":17418,"endOffset":17610,"count":84},{"startOffset":17453,"endOffset":17472,"count":0},{"startOffset":17473,"endOffset":17488,"count":0},{"startOffset":17489,"endOffset":17520,"count":0},{"startOffset":17522,"endOffset":17553,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":17661,"endOffset":17764,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":17801,"endOffset":17956,"count":28},{"startOffset":17890,"endOffset":17905,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._destroy","ranges":[{"startOffset":17991,"endOffset":18983,"count":28},{"startOffset":18301,"endOffset":18307,"count":0},{"startOffset":18721,"endOffset":18795,"count":0},{"startOffset":18819,"endOffset":18980,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18525,"endOffset":18607,"count":28}],"isBlockCoverage":true},{"functionName":"Socket._getpeername","ranges":[{"startOffset":19020,"endOffset":19323,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":19328,"endOffset":19494,"count":8}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":19523,"endOffset":19616,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":19651,"endOffset":19719,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":19753,"endOffset":19819,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":19851,"endOffset":19913,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":19953,"endOffset":20238,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":20273,"endOffset":20340,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":20373,"endOffset":20434,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20479,"endOffset":20528,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":20566,"endOffset":21356,"count":117},{"startOffset":20792,"endOffset":20992,"count":14},{"startOffset":20992,"endOffset":21077,"count":103},{"startOffset":21077,"endOffset":21136,"count":0},{"startOffset":21136,"endOffset":21196,"count":103},{"startOffset":21196,"endOffset":21232,"count":20},{"startOffset":21232,"endOffset":21291,"count":83},{"startOffset":21291,"endOffset":21315,"count":103},{"startOffset":21315,"endOffset":21353,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":20890,"endOffset":20972,"count":14}],"isBlockCoverage":true},{"functionName":"Socket._writev","ranges":[{"startOffset":21390,"endOffset":21460,"count":20}],"isBlockCoverage":true},{"functionName":"Socket._write","ranges":[{"startOffset":21493,"endOffset":21576,"count":83}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":21774,"endOffset":21880,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":21914,"endOffset":22877,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":22885,"endOffset":23702,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":23708,"endOffset":25472,"count":14},{"startOffset":23972,"endOffset":24615,"count":0},{"startOffset":24946,"endOffset":25012,"count":0},{"startOffset":25017,"endOffset":25196,"count":0},{"startOffset":25211,"endOffset":25469,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.connect","ranges":[{"startOffset":25505,"endOffset":27010,"count":14},{"startOffset":25922,"endOffset":25973,"count":0},{"startOffset":26124,"endOffset":26147,"count":0},{"startOffset":26154,"endOffset":26210,"count":0},{"startOffset":26264,"endOffset":26300,"count":0},{"startOffset":26326,"endOffset":26414,"count":0},{"startOffset":26551,"endOffset":26590,"count":0},{"startOffset":26793,"endOffset":26941,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndConnect","ranges":[{"startOffset":27017,"endOffset":29985,"count":14},{"startOffset":27137,"endOffset":27151,"count":0},{"startOffset":27202,"endOffset":27224,"count":0},{"startOffset":27226,"endOffset":27285,"count":0},{"startOffset":27306,"endOffset":27365,"count":0},{"startOffset":27469,"endOffset":27598,"count":0},{"startOffset":28063,"endOffset":28290,"count":0},{"startOffset":28317,"endOffset":28347,"count":0},{"startOffset":28348,"endOffset":28378,"count":0},{"startOffset":28379,"endOffset":28408,"count":0},{"startOffset":28410,"endOffset":28605,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27824,"endOffset":28043,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28660,"endOffset":29980,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":29991,"endOffset":30052,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":30081,"endOffset":30279,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":30311,"endOffset":30515,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":30522,"endOffset":31819,"count":14},{"startOffset":30696,"endOffset":30715,"count":0},{"startOffset":30890,"endOffset":30942,"count":0},{"startOffset":30980,"endOffset":31007,"count":0},{"startOffset":31274,"endOffset":31816,"count":0}],"isBlockCoverage":true},{"functionName":"addAbortSignalOption","ranges":[{"startOffset":31823,"endOffset":32278,"count":11},{"startOffset":31927,"endOffset":32275,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":32038,"endOffset":32069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32216,"endOffset":32268,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":32282,"endOffset":33155,"count":11},{"startOffset":32368,"endOffset":32415,"count":0},{"startOffset":32486,"endOffset":32594,"count":0},{"startOffset":32738,"endOffset":32796,"count":0},{"startOffset":32801,"endOffset":32880,"count":0},{"startOffset":33092,"endOffset":33100,"count":0}],"isBlockCoverage":true},{"functionName":"toNumber","ranges":[{"startOffset":33271,"endOffset":33336,"count":22},{"startOffset":33326,"endOffset":33333,"count":0}],"isBlockCoverage":true},{"functionName":"createServerHandle","ranges":[{"startOffset":33407,"endOffset":34915,"count":11},{"startOffset":33629,"endOffset":33639,"count":0},{"startOffset":33641,"endOffset":33966,"count":0},{"startOffset":33988,"endOffset":34009,"count":0},{"startOffset":34011,"endOffset":34269,"count":0},{"startOffset":34362,"endOffset":34369,"count":0},{"startOffset":34370,"endOffset":34378,"count":0},{"startOffset":34412,"endOffset":34420,"count":0},{"startOffset":34442,"endOffset":34687,"count":0},{"startOffset":34773,"endOffset":34828,"count":0},{"startOffset":34848,"endOffset":34892,"count":0}],"isBlockCoverage":true},{"functionName":"setupListenHandle","ranges":[{"startOffset":34919,"endOffset":37339,"count":11},{"startOffset":35229,"endOffset":35291,"count":0},{"startOffset":35612,"endOffset":35708,"count":0},{"startOffset":35829,"endOffset":35894,"count":0},{"startOffset":35932,"endOffset":36083,"count":0},{"startOffset":36531,"endOffset":36899,"count":0},{"startOffset":37136,"endOffset":37149,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":37410,"endOffset":37474,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":37480,"endOffset":37599,"count":11}],"isBlockCoverage":true},{"functionName":"listenInCluster","ranges":[{"startOffset":37605,"endOffset":38867,"count":11},{"startOffset":37785,"endOffset":37814,"count":1},{"startOffset":37842,"endOffset":37854,"count":0},{"startOffset":38106,"endOffset":38866,"count":0}],"isBlockCoverage":true},{"functionName":"listenOnPrimaryHandle","ranges":[{"startOffset":38366,"endOffset":38864,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":38899,"endOffset":42534,"count":11},{"startOffset":39046,"endOffset":39096,"count":0},{"startOffset":39119,"endOffset":39158,"count":0},{"startOffset":39280,"endOffset":39290,"count":0},{"startOffset":39325,"endOffset":39335,"count":0},{"startOffset":39573,"endOffset":39741,"count":0},{"startOffset":39888,"endOffset":39906,"count":0},{"startOffset":39908,"endOffset":40007,"count":0},{"startOffset":40372,"endOffset":40392,"count":0},{"startOffset":40427,"endOffset":40456,"count":0},{"startOffset":40685,"endOffset":40720,"count":0},{"startOffset":40895,"endOffset":41023,"count":0},{"startOffset":41303,"endOffset":41475,"count":0},{"startOffset":41477,"endOffset":42326,"count":0},{"startOffset":42329,"endOffset":42533,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndListen","ranges":[{"startOffset":42539,"endOffset":42962,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43028,"endOffset":43073,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":43153,"endOffset":43454,"count":20},{"startOffset":43186,"endOffset":43213,"count":10},{"startOffset":43215,"endOffset":43375,"count":10},{"startOffset":43300,"endOffset":43353,"count":0},{"startOffset":43375,"endOffset":43435,"count":10},{"startOffset":43401,"endOffset":43435,"count":0},{"startOffset":43435,"endOffset":43453,"count":10}],"isBlockCoverage":true},{"functionName":"onconnection","ranges":[{"startOffset":43459,"endOffset":44150,"count":14},{"startOffset":43606,"endOffset":43681,"count":0},{"startOffset":43711,"endOffset":43754,"count":0},{"startOffset":43756,"endOffset":43802,"count":0}],"isBlockCoverage":true},{"functionName":"Server.getConnections","ranges":[{"startOffset":44307,"endOffset":45095,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":45127,"endOffset":46031,"count":10},{"startOffset":45175,"endOffset":45358,"count":0},{"startOffset":45471,"endOffset":45965,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":45229,"endOffset":45299,"count":0}],"isBlockCoverage":false},{"functionName":"onWorkerClose","ranges":[{"startOffset":45538,"endOffset":45652,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":46075,"endOffset":46474,"count":24},{"startOffset":46150,"endOffset":46170,"count":10},{"startOffset":46172,"endOffset":46288,"count":14},{"startOffset":46288,"endOffset":46473,"count":10}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":46481,"endOffset":46567,"count":10}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":46629,"endOffset":46801,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47010,"endOffset":47046,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47051,"endOffset":47092,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47156,"endOffset":47187,"count":853}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":47192,"endOffset":47228,"count":58}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":47269,"endOffset":47517,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":47545,"endOffset":47650,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":47680,"endOffset":47786,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":47936,"endOffset":48625,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":48666,"endOffset":48914,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":49050,"endOffset":49155,"count":3}],"isBlockCoverage":true},{"functionName":"get SocketAddress","ranges":[{"startOffset":49160,"endOffset":49285,"count":3}],"isBlockCoverage":true}]},{"scriptId":"158","url":"node:internal/net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1818,"count":1}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":1027,"endOffset":1093,"count":28}],"isBlockCoverage":true},{"functionName":"isIPv6","ranges":[{"startOffset":1097,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1167,"endOffset":1257,"count":28},{"startOffset":1213,"endOffset":1256,"count":0}],"isBlockCoverage":true},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1261,"endOffset":1691,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"node:internal/dtrace","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":589,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":102,"endOffset":110,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":145,"endOffset":153,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":187,"endOffset":195,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":230,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":274,"endOffset":282,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":311,"endOffset":319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6683,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2628,"endOffset":3100,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3263,"endOffset":6337,"count":73},{"startOffset":3470,"endOffset":3844,"count":0},{"startOffset":4193,"endOffset":4221,"count":0},{"startOffset":4340,"endOffset":4447,"count":1},{"startOffset":4745,"endOffset":4800,"count":0},{"startOffset":4807,"endOffset":5579,"count":0},{"startOffset":5585,"endOffset":5602,"count":0},{"startOffset":5608,"endOffset":5649,"count":0},{"startOffset":5655,"endOffset":5703,"count":0},{"startOffset":5708,"endOffset":5776,"count":0},{"startOffset":5778,"endOffset":6336,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5066,"endOffset":5087,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6129,"endOffset":6173,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6341,"endOffset":6624,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"162","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/log-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1},{"startOffset":395,"endOffset":401,"count":0}],"isBlockCoverage":true}]},{"scriptId":"163","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6073,"count":1},{"startOffset":1532,"endOffset":1764,"count":44},{"startOffset":2057,"endOffset":2352,"count":8},{"startOffset":2386,"endOffset":2752,"count":8},{"startOffset":5968,"endOffset":5971,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":430,"endOffset":809,"count":2},{"startOffset":477,"endOffset":558,"count":1},{"startOffset":560,"endOffset":638,"count":0},{"startOffset":729,"endOffset":732,"count":0},{"startOffset":778,"endOffset":790,"count":1},{"startOffset":791,"endOffset":806,"count":1}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":832,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"chalkFactory","ranges":[{"startOffset":966,"endOffset":1408,"count":2}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1048,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1235,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1411,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1559,"endOffset":1758,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1786,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2080,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2476,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2792,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2848,"endOffset":2892,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2896,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2976,"endOffset":3250,"count":4},{"startOffset":3101,"endOffset":3184,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3275,"endOffset":4073,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3323,"endOffset":3790,"count":8},{"startOffset":3373,"endOffset":3402,"count":0},{"startOffset":3404,"endOffset":3556,"count":0},{"startOffset":3763,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4095,"endOffset":5135,"count":8},{"startOffset":4148,"endOffset":4190,"count":0},{"startOffset":4248,"endOffset":4269,"count":0},{"startOffset":4346,"endOffset":4675,"count":0},{"startOffset":5012,"endOffset":5095,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5169,"endOffset":5764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":6},{"startOffset":2869,"endOffset":3201,"count":18},{"startOffset":2929,"endOffset":3108,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chalk/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":699,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1080,"endOffset":1107,"count":0},{"startOffset":1109,"endOffset":1125,"count":0},{"startOffset":1184,"endOffset":1202,"count":0},{"startOffset":1570,"endOffset":1573,"count":0},{"startOffset":1578,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chalk/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"167","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/is-unicode-supported/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":313,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":311,"count":1},{"startOffset":75,"endOffset":94,"count":0}],"isBlockCoverage":true}]},{"scriptId":"169","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34303,"count":1},{"startOffset":6242,"endOffset":6261,"count":0}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":4065,"endOffset":6082,"count":1},{"startOffset":4133,"endOffset":4157,"count":0},{"startOffset":4193,"endOffset":4434,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4847,"endOffset":5129,"count":9},{"startOffset":4918,"endOffset":4932,"count":0},{"startOffset":4934,"endOffset":5092,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5170,"endOffset":5224,"count":2}],"isBlockCoverage":true},{"functionName":"Runner.unhandled","ranges":[{"startOffset":5398,"endOffset":6077,"count":0}],"isBlockCoverage":false},{"functionName":"Runner._addEventListener","ranges":[{"startOffset":6590,"endOffset":7498,"count":13},{"startOffset":6839,"endOffset":6893,"count":1},{"startOffset":6894,"endOffset":6962,"count":0},{"startOffset":6967,"endOffset":7084,"count":0},{"startOffset":7182,"endOffset":7216,"count":1},{"startOffset":7221,"endOffset":7232,"count":12},{"startOffset":7300,"endOffset":7332,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._removeEventListener","ranges":[{"startOffset":7809,"endOffset":8422,"count":2},{"startOffset":7937,"endOffset":8337,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.dispose","ranges":[{"startOffset":8598,"endOffset":8928,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.grep","ranges":[{"startOffset":9182,"endOffset":9347,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.grepTotal","ranges":[{"startOffset":9545,"endOffset":9801,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9618,"endOffset":9780,"count":27},{"startOffset":9709,"endOffset":9738,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.globalProps","ranges":[{"startOffset":9916,"endOffset":10142,"count":1},{"startOffset":10030,"endOffset":10123,"count":8},{"startOffset":10068,"endOffset":10091,"count":6},{"startOffset":10091,"endOffset":10123,"count":2}],"isBlockCoverage":true},{"functionName":"Runner.globals","ranges":[{"startOffset":10310,"endOffset":10487,"count":2},{"startOffset":10352,"endOffset":10383,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.checkGlobals","ranges":[{"startOffset":10581,"endOffset":11125,"count":11},{"startOffset":10640,"endOffset":11123,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11054,"endOffset":11067,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.fail","ranges":[{"startOffset":11901,"endOffset":12656,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.hook","ranges":[{"startOffset":12808,"endOffset":15604,"count":48},{"startOffset":12855,"endOffset":12867,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":12953,"endOffset":15547,"count":50},{"startOffset":13012,"endOffset":13038,"count":48},{"startOffset":13038,"endOffset":13170,"count":2},{"startOffset":13170,"endOffset":13348,"count":0},{"startOffset":13348,"endOffset":15546,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13558,"endOffset":13612,"count":0}],"isBlockCoverage":false},{"functionName":"cbHookRun","ranges":[{"startOffset":13635,"endOffset":15036,"count":2},{"startOffset":13718,"endOffset":13768,"count":0},{"startOffset":13819,"endOffset":14766,"count":0},{"startOffset":14781,"endOffset":14903,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14370,"endOffset":14432,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14466,"endOffset":14530,"count":0}],"isBlockCoverage":false},{"functionName":"setHookTitle","ranges":[{"startOffset":15044,"endOffset":15543,"count":4},{"startOffset":15120,"endOffset":15133,"count":2},{"startOffset":15179,"endOffset":15537,"count":2},{"startOffset":15388,"endOffset":15463,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15570,"endOffset":15600,"count":48}],"isBlockCoverage":true},{"functionName":"Runner.hooks","ranges":[{"startOffset":15826,"endOffset":16241,"count":18}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":15903,"endOffset":16216,"count":54},{"startOffset":15967,"endOffset":16018,"count":18},{"startOffset":16018,"endOffset":16215,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16040,"endOffset":16210,"count":36},{"startOffset":16072,"endOffset":16177,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.hookUp","ranges":[{"startOffset":16382,"endOffset":16499,"count":9}],"isBlockCoverage":true},{"functionName":"Runner.hookDown","ranges":[{"startOffset":16648,"endOffset":16755,"count":9}],"isBlockCoverage":true},{"functionName":"Runner.parents","ranges":[{"startOffset":16892,"endOffset":17048,"count":18}],"isBlockCoverage":true},{"functionName":"Runner.runTest","ranges":[{"startOffset":17173,"endOffset":17598,"count":9},{"startOffset":17214,"endOffset":17226,"count":0},{"startOffset":17285,"endOffset":17302,"count":0},{"startOffset":17326,"endOffset":17358,"count":0},{"startOffset":17474,"endOffset":17535,"count":0},{"startOffset":17566,"endOffset":17596,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17399,"endOffset":17445,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.runTests","ranges":[{"startOffset":17780,"endOffset":22377,"count":6}],"isBlockCoverage":true},{"functionName":"hookErr","ranges":[{"startOffset":17872,"endOffset":18577,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":18581,"endOffset":22318,"count":15},{"startOffset":18668,"endOffset":18682,"count":0},{"startOffset":18684,"endOffset":18709,"count":0},{"startOffset":18732,"endOffset":18758,"count":0},{"startOffset":18773,"endOffset":18823,"count":0},{"startOffset":18900,"endOffset":18926,"count":6},{"startOffset":18926,"endOffset":19013,"count":9},{"startOffset":19013,"endOffset":19042,"count":0},{"startOffset":19042,"endOffset":19059,"count":9},{"startOffset":19059,"endOffset":19699,"count":0},{"startOffset":19699,"endOffset":19769,"count":9},{"startOffset":19769,"endOffset":20060,"count":0},{"startOffset":20060,"endOffset":22317,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20198,"endOffset":22312,"count":9},{"startOffset":20297,"endOffset":20868,"count":0},{"startOffset":20884,"endOffset":20939,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20765,"endOffset":20858,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20999,"endOffset":22304,"count":9},{"startOffset":21106,"endOffset":21466,"count":0},{"startOffset":21481,"endOffset":22108,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.runSuite","ranges":[{"startOffset":22550,"endOffset":24195,"count":6},{"startOffset":22729,"endOffset":22743,"count":0},{"startOffset":22746,"endOffset":22802,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":22871,"endOffset":23767,"count":11},{"startOffset":22915,"endOffset":23265,"count":0},{"startOffset":23288,"endOffset":23316,"count":0},{"startOffset":23367,"endOffset":23395,"count":6},{"startOffset":23395,"endOffset":23626,"count":5},{"startOffset":23626,"endOffset":23717,"count":0},{"startOffset":23717,"endOffset":23763,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23653,"endOffset":23709,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":23771,"endOffset":24035,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23939,"endOffset":24029,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24097,"endOffset":24191,"count":6},{"startOffset":24127,"endOffset":24155,"count":0}],"isBlockCoverage":true},{"functionName":"Runner._uncaught","ranges":[{"startOffset":25041,"endOffset":27706,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.run","ranges":[{"startOffset":27999,"endOffset":30008,"count":1},{"startOffset":28085,"endOffset":28090,"count":0},{"startOffset":28147,"endOffset":28164,"count":0},{"startOffset":29686,"endOffset":29946,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":28150,"endOffset":28164,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":28181,"endOffset":28376,"count":1},{"startOffset":28209,"endOffset":28231,"count":0},{"startOffset":28233,"endOffset":28251,"count":0}],"isBlockCoverage":true},{"functionName":"begin","ranges":[{"startOffset":28395,"endOffset":28603,"count":1}],"isBlockCoverage":true},{"functionName":"prepare","ranges":[{"startOffset":28624,"endOffset":28993,"count":1},{"startOffset":28727,"endOffset":28816,"count":0},{"startOffset":28880,"endOffset":28968,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29125,"endOffset":29172,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29229,"endOffset":29368,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.linkPartialObjects","ranges":[{"startOffset":30849,"endOffset":30884,"count":0}],"isBlockCoverage":false},{"functionName":"runAsync","ranges":[{"startOffset":31272,"endOffset":31379,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31330,"endOffset":31375,"count":1}],"isBlockCoverage":true},{"functionName":"Runner.abort","ranges":[{"startOffset":31514,"endOffset":31597,"count":0}],"isBlockCoverage":false},{"functionName":"isParallelMode","ranges":[{"startOffset":31798,"endOffset":31843,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.workerReporter","ranges":[{"startOffset":32193,"endOffset":32289,"count":0}],"isBlockCoverage":false},{"functionName":"filterLeaks","ranges":[{"startOffset":32437,"endOffset":33475,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":33690,"endOffset":33790,"count":0}],"isBlockCoverage":false},{"functionName":"thrown2Error","ranges":[{"startOffset":33953,"endOffset":34106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/pending.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1}],"isBlockCoverage":true},{"functionName":"Pending","ranges":[{"startOffset":165,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"172","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":14},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":14},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6290,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6264,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":14},{"startOffset":1108,"endOffset":1213,"count":220}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":14}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":89},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":89},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4610,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4603,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4696,"endOffset":4921,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5064,"endOffset":5451,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5569,"endOffset":5705,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5794,"endOffset":5903,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6022,"endOffset":6198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/node_modules/debug/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/runnable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10632,"count":1}],"isBlockCoverage":true},{"functionName":"Runnable","ranges":[{"startOffset":774,"endOffset":1152,"count":11},{"startOffset":861,"endOffset":866,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1078,"endOffset":1128,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.reset","ranges":[{"startOffset":1329,"endOffset":1459,"count":20}],"isBlockCoverage":true},{"functionName":"Runnable.timeout","ranges":[{"startOffset":2161,"endOffset":2654,"count":33},{"startOffset":2202,"endOffset":2233,"count":22},{"startOffset":2233,"endOffset":2264,"count":11},{"startOffset":2264,"endOffset":2296,"count":0},{"startOffset":2296,"endOffset":2484,"count":11},{"startOffset":2486,"endOffset":2514,"count":0},{"startOffset":2514,"endOffset":2607,"count":11},{"startOffset":2607,"endOffset":2637,"count":0},{"startOffset":2637,"endOffset":2653,"count":11}],"isBlockCoverage":true},{"functionName":"Runnable.slow","ranges":[{"startOffset":2814,"endOffset":3035,"count":27},{"startOffset":2854,"endOffset":2882,"count":11},{"startOffset":2884,"endOffset":2912,"count":16},{"startOffset":2912,"endOffset":2943,"count":11},{"startOffset":2943,"endOffset":2975,"count":0},{"startOffset":2975,"endOffset":3034,"count":11}],"isBlockCoverage":true},{"functionName":"Runnable.skip","ranges":[{"startOffset":3143,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPending","ranges":[{"startOffset":3360,"endOffset":3442,"count":29}],"isBlockCoverage":true},{"functionName":"Runnable.isFailed","ranges":[{"startOffset":3562,"endOffset":3646,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.isPassed","ranges":[{"startOffset":3766,"endOffset":3850,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.retries","ranges":[{"startOffset":3938,"endOffset":4032,"count":11},{"startOffset":3978,"endOffset":4009,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.currentRetry","ranges":[{"startOffset":4120,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.fullTitle","ranges":[{"startOffset":4420,"endOffset":4472,"count":36}],"isBlockCoverage":true},{"functionName":"Runnable.titlePath","ranges":[{"startOffset":4668,"endOffset":4738,"count":36}],"isBlockCoverage":true},{"functionName":"Runnable.clearTimeout","ranges":[{"startOffset":4820,"endOffset":4863,"count":22}],"isBlockCoverage":true},{"functionName":"Runnable.resetTimeout","ranges":[{"startOffset":4945,"endOffset":5235,"count":11},{"startOffset":5022,"endOffset":5039,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5089,"endOffset":5227,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.globals","ranges":[{"startOffset":5382,"endOffset":5502,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.run","ranges":[{"startOffset":5615,"endOffset":9164,"count":11},{"startOffset":5770,"endOffset":5782,"count":0},{"startOffset":6576,"endOffset":6710,"count":0},{"startOffset":7122,"endOffset":7440,"count":0},{"startOffset":7456,"endOffset":7722,"count":0}],"isBlockCoverage":true},{"functionName":"multiple","ranges":[{"startOffset":5925,"endOffset":6088,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":6106,"endOffset":6449,"count":11},{"startOffset":6179,"endOffset":6200,"count":0},{"startOffset":6220,"endOffset":6255,"count":0},{"startOffset":6378,"endOffset":6387,"count":0},{"startOffset":6389,"endOffset":6432,"count":0}],"isBlockCoverage":true},{"functionName":"asyncSkip","ranges":[{"startOffset":6876,"endOffset":7075,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":7726,"endOffset":8429,"count":0}],"isBlockCoverage":false},{"functionName":"callFnAsync","ranges":[{"startOffset":8433,"endOffset":9162,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8490,"endOffset":9156,"count":11},{"startOffset":8582,"endOffset":8617,"count":0},{"startOffset":8633,"endOffset":8913,"count":0},{"startOffset":8931,"endOffset":8957,"count":0},{"startOffset":8959,"endOffset":9135,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable._timeoutError","ranges":[{"startOffset":9347,"endOffset":9613,"count":0}],"isBlockCoverage":false},{"functionName":"Runnable.toValueOrError","ranges":[{"startOffset":10406,"endOffset":10597,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15639,"count":1}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":350,"endOffset":561,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":753,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":1062,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"createNoFilesMatchPatternError","ranges":[{"startOffset":4375,"endOffset":4554,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidReporterError","ranges":[{"startOffset":4856,"endOffset":5032,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidInterfaceError","ranges":[{"startOffset":5341,"endOffset":5504,"count":0}],"isBlockCoverage":false},{"functionName":"createUnsupportedError","ranges":[{"startOffset":5752,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingArgumentError","ranges":[{"startOffset":6204,"endOffset":6342,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentTypeError","ranges":[{"startOffset":6687,"endOffset":6936,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidArgumentValueError","ranges":[{"startOffset":7319,"endOffset":7607,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidExceptionError","ranges":[{"startOffset":7870,"endOffset":8067,"count":0}],"isBlockCoverage":false},{"functionName":"createFatalError","ranges":[{"startOffset":8297,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidLegacyPluginError","ranges":[{"startOffset":8820,"endOffset":9158,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginError","ranges":[{"startOffset":9598,"endOffset":9755,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyDisposedError","ranges":[{"startOffset":10106,"endOffset":10390,"count":0}],"isBlockCoverage":false},{"functionName":"createMochaInstanceAlreadyRunningError","ranges":[{"startOffset":10602,"endOffset":10794,"count":0}],"isBlockCoverage":false},{"functionName":"createMultipleDoneError","ranges":[{"startOffset":11082,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"createForbiddenExclusivityError","ranges":[{"startOffset":12086,"endOffset":12341,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginDefinitionError","ranges":[{"startOffset":12641,"endOffset":12827,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidPluginImplementationError","ranges":[{"startOffset":13287,"endOffset":13537,"count":0}],"isBlockCoverage":false},{"functionName":"createTimeoutError","ranges":[{"startOffset":13803,"endOffset":13974,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsableFileError","ranges":[{"startOffset":14240,"endOffset":14383,"count":0}],"isBlockCoverage":false},{"functionName":"isMochaError","ranges":[{"startOffset":14609,"endOffset":14687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/suite.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15434,"count":1}],"isBlockCoverage":true},{"functionName":"Suite.create","ranges":[{"startOffset":714,"endOffset":882,"count":5}],"isBlockCoverage":true},{"functionName":"Suite","ranges":[{"startOffset":1284,"endOffset":2125,"count":6},{"startOffset":1355,"endOffset":1549,"count":0}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":1574,"endOffset":1595,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2056,"endOffset":2100,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.reset","ranges":[{"startOffset":2290,"endOffset":2601,"count":6}],"isBlockCoverage":true},{"functionName":"doReset","ranges":[{"startOffset":2330,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.clone","ranges":[{"startOffset":2705,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.timeout","ranges":[{"startOffset":3194,"endOffset":3521,"count":22},{"startOffset":3235,"endOffset":3266,"count":16},{"startOffset":3266,"endOffset":3297,"count":6},{"startOffset":3297,"endOffset":3329,"count":0},{"startOffset":3329,"endOffset":3520,"count":6}],"isBlockCoverage":true},{"functionName":"Suite.retries","ranges":[{"startOffset":3694,"endOffset":3848,"count":21},{"startOffset":3734,"endOffset":3765,"count":16},{"startOffset":3765,"endOffset":3826,"count":5},{"startOffset":3826,"endOffset":3830,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.slow","ranges":[{"startOffset":4017,"endOffset":4209,"count":22},{"startOffset":4058,"endOffset":4086,"count":16},{"startOffset":4086,"endOffset":4117,"count":6},{"startOffset":4117,"endOffset":4149,"count":0},{"startOffset":4149,"endOffset":4208,"count":6}],"isBlockCoverage":true},{"functionName":"Suite.bail","ranges":[{"startOffset":4371,"endOffset":4506,"count":10},{"startOffset":4414,"endOffset":4505,"count":5}],"isBlockCoverage":true},{"functionName":"Suite.isPending","ranges":[{"startOffset":4625,"endOffset":4707,"count":80},{"startOffset":4677,"endOffset":4703,"count":40}],"isBlockCoverage":true},{"functionName":"Suite._createHook","ranges":[{"startOffset":4896,"endOffset":5129,"count":2}],"isBlockCoverage":true},{"functionName":"Suite.beforeAll","ranges":[{"startOffset":5312,"endOffset":5672,"count":2},{"startOffset":5359,"endOffset":5381,"count":0},{"startOffset":5499,"endOffset":5513,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.afterAll","ranges":[{"startOffset":5853,"endOffset":6210,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.beforeEach","ranges":[{"startOffset":6395,"endOffset":6758,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.afterEach","ranges":[{"startOffset":6941,"endOffset":7301,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.addSuite","ranges":[{"startOffset":7433,"endOffset":7713,"count":5}],"isBlockCoverage":true},{"functionName":"Suite.addTest","ranges":[{"startOffset":7850,"endOffset":8095,"count":9}],"isBlockCoverage":true},{"functionName":"Suite.fullTitle","ranges":[{"startOffset":8279,"endOffset":8331,"count":11}],"isBlockCoverage":true},{"functionName":"Suite.titlePath","ranges":[{"startOffset":8515,"endOffset":8697,"count":93},{"startOffset":8567,"endOffset":8625,"count":46},{"startOffset":8644,"endOffset":8678,"count":46}],"isBlockCoverage":true},{"functionName":"Suite.total","ranges":[{"startOffset":8822,"endOffset":8964,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8870,"endOffset":8933,"count":5}],"isBlockCoverage":true},{"functionName":"Suite.eachTest","ranges":[{"startOffset":9170,"endOffset":9299,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9234,"endOffset":9280,"count":10}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":9420,"endOffset":9508,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnly","ranges":[{"startOffset":9657,"endOffset":9841,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9779,"endOffset":9833,"count":5}],"isBlockCoverage":true},{"functionName":"filterOnly","ranges":[{"startOffset":9960,"endOffset":10997,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlySuite","ranges":[{"startOffset":11137,"endOffset":11189,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.markOnly","ranges":[{"startOffset":11273,"endOffset":11340,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.appendOnlyTest","ranges":[{"startOffset":11472,"endOffset":11521,"count":0}],"isBlockCoverage":false},{"functionName":"getHooks","ranges":[{"startOffset":11644,"endOffset":11698,"count":48}],"isBlockCoverage":true},{"functionName":"Suite.dispose","ranges":[{"startOffset":11798,"endOffset":11907,"count":0}],"isBlockCoverage":false},{"functionName":"cleanReferences","ranges":[{"startOffset":12307,"endOffset":12877,"count":6},{"startOffset":12841,"endOffset":12875,"count":9}],"isBlockCoverage":true},{"functionName":"cleanArrReferences","ranges":[{"startOffset":12338,"endOffset":12449,"count":24},{"startOffset":12414,"endOffset":12445,"count":2}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":13046,"endOffset":13339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1787,"count":1}],"isBlockCoverage":true},{"functionName":"Hook","ranges":[{"startOffset":354,"endOffset":438,"count":2}],"isBlockCoverage":true},{"functionName":"Hook.reset","ranges":[{"startOffset":580,"endOffset":656,"count":2}],"isBlockCoverage":true},{"functionName":"Hook.error","ranges":[{"startOffset":793,"endOffset":927,"count":2},{"startOffset":903,"endOffset":926,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":1095,"endOffset":1785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/dot.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1897,"count":1}],"isBlockCoverage":true},{"functionName":"Dot","ranges":[{"startOffset":749,"endOffset":1784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/doc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2309,"count":1}],"isBlockCoverage":true},{"functionName":"Doc","ranges":[{"startOffset":690,"endOffset":2267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/tap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7044,"count":1}],"isBlockCoverage":true},{"functionName":"TAP","ranges":[{"startOffset":851,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"title","ranges":[{"startOffset":1956,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"println","ranges":[{"startOffset":2232,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"createProducer","ranges":[{"startOffset":2683,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer","ranges":[{"startOffset":3150,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeVersion","ranges":[{"startOffset":3291,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePlan","ranges":[{"startOffset":3481,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePass","ranges":[{"startOffset":3761,"endOffset":3822,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writePending","ranges":[{"startOffset":4062,"endOffset":4132,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeFail","ranges":[{"startOffset":4407,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"TAPProducer.writeEpilogue","ranges":[{"startOffset":4661,"endOffset":4981,"count":0}],"isBlockCoverage":false},{"functionName":"TAP12Producer","ranges":[{"startOffset":5249,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"TAP13Producer","ranges":[{"startOffset":6013,"endOffset":6911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3634,"count":1}],"isBlockCoverage":true},{"functionName":"JSONReporter","ranges":[{"startOffset":882,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":2458,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"cleanCycles","ranges":[{"startOffset":2921,"endOffset":3315,"count":0}],"isBlockCoverage":false},{"functionName":"errorJSON","ranges":[{"startOffset":3431,"endOffset":3583,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/html.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9554,"count":1}],"isBlockCoverage":true},{"functionName":"HTML","ranges":[{"startOffset":1410,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":6766,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.suiteURL","ranges":[{"startOffset":7197,"endOffset":7254,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.testURL","ranges":[{"startOffset":7340,"endOffset":7395,"count":0}],"isBlockCoverage":false},{"functionName":"HTML.addCodeToggle","ranges":[{"startOffset":7569,"endOffset":7882,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":7943,"endOffset":8044,"count":0}],"isBlockCoverage":false},{"functionName":"fragment","ranges":[{"startOffset":8119,"endOffset":8469,"count":0}],"isBlockCoverage":false},{"functionName":"hideSuitesWithout","ranges":[{"startOffset":8591,"endOffset":8865,"count":0}],"isBlockCoverage":false},{"functionName":"unhide","ranges":[{"startOffset":8901,"endOffset":9088,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":9191,"endOffset":9321,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":9372,"endOffset":9527,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/browser/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2275,"count":1}],"isBlockCoverage":true},{"functionName":"Progress","ranges":[{"startOffset":158,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.size","ranges":[{"startOffset":430,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.text","ranges":[{"startOffset":624,"endOffset":679,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.fontSize","ranges":[{"startOffset":827,"endOffset":886,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.font","ranges":[{"startOffset":1018,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.update","ranges":[{"startOffset":1210,"endOffset":1261,"count":0}],"isBlockCoverage":false},{"functionName":"Progress.draw","ranges":[{"startOffset":1401,"endOffset":2273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1905,"count":1}],"isBlockCoverage":true},{"functionName":"List","ranges":[{"startOffset":854,"endOffset":1786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1091,"count":1}],"isBlockCoverage":true},{"functionName":"Min","ranges":[{"startOffset":674,"endOffset":977,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2338,"count":1}],"isBlockCoverage":true},{"functionName":"Spec","ranges":[{"startOffset":879,"endOffset":2216,"count":1}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":1003,"endOffset":1064,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1170,"endOffset":1275,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1308,"endOffset":1396,"count":6},{"startOffset":1360,"endOffset":1392,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1432,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1577,"endOffset":2025,"count":9},{"startOffset":1639,"endOffset":1800,"count":7},{"startOffset":1800,"endOffset":2021,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2058,"endOffset":2155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/nyan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5385,"count":1}],"isBlockCoverage":true},{"functionName":"NyanCat","ranges":[{"startOffset":760,"endOffset":1643,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.draw","ranges":[{"startOffset":1783,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawScoreboard","ranges":[{"startOffset":2065,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.appendRainbow","ranges":[{"startOffset":2438,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawRainbow","ranges":[{"startOffset":2855,"endOffset":3074,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.drawNyanCat","ranges":[{"startOffset":3153,"endOffset":3770,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.face","ranges":[{"startOffset":3865,"endOffset":4079,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorUp","ranges":[{"startOffset":4179,"endOffset":4225,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.cursorDown","ranges":[{"startOffset":4329,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.generateColors","ranges":[{"startOffset":4483,"endOffset":4839,"count":0}],"isBlockCoverage":false},{"functionName":"NyanCat.rainbowify","ranges":[{"startOffset":4976,"endOffset":5201,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5289,"endOffset":5347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/xunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4857,"count":1}],"isBlockCoverage":true},{"functionName":"XUnit","ranges":[{"startOffset":1066,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.done","ranges":[{"startOffset":2946,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.write","ranges":[{"startOffset":3188,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"XUnit.test","ranges":[{"startOffset":3510,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"tag","ranges":[{"startOffset":4395,"endOffset":4804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/markdown.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2441,"count":1}],"isBlockCoverage":true},{"functionName":"Markdown","ranges":[{"startOffset":753,"endOffset":2388,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2517,"count":1}],"isBlockCoverage":true},{"functionName":"Progress","ranges":[{"startOffset":781,"endOffset":2405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/landing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"Landing","ranges":[{"startOffset":948,"endOffset":2401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/reporters/json-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2086,"count":1}],"isBlockCoverage":true},{"functionName":"JSONStream","ranges":[{"startOffset":677,"endOffset":1255,"count":0}],"isBlockCoverage":false},{"functionName":"writeEvent","ranges":[{"startOffset":1499,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1819,"endOffset":2026,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/nodejs/growl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3310,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isCapable","ranges":[{"startOffset":748,"endOffset":929,"count":0}],"isBlockCoverage":false},{"functionName":"exports.notify","ranges":[{"startOffset":1103,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"display","ranges":[{"startOffset":1297,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"onCompletion","ranges":[{"startOffset":2278,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"logo","ranges":[{"startOffset":2665,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportBinaries","ranges":[{"startOffset":3114,"endOffset":3308,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/which/which.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3163,"count":1},{"startOffset":47,"endOffset":85,"count":0},{"startOffset":86,"endOffset":122,"count":0},{"startOffset":183,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"getNotFoundError","ranges":[{"startOffset":246,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":344,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"which","ranges":[{"startOffset":1168,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"whichSync","ranges":[{"startOffset":2299,"endOffset":3115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/isexe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1},{"startOffset":65,"endOffset":90,"count":0},{"startOffset":128,"endOffset":167,"count":0}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":211,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":930,"endOffset":1191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/isexe/windows.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":890,"count":1}],"isBlockCoverage":true},{"functionName":"checkPathExt","ranges":[{"startOffset":66,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"checkStat","ranges":[{"startOffset":510,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"isexe","ranges":[{"startOffset":664,"endOffset":801,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":803,"endOffset":889,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/nodejs/esm-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4486,"count":1},{"startOffset":3557,"endOffset":3604,"count":0}],"isBlockCoverage":true},{"functionName":"formattedImport","ranges":[{"startOffset":83,"endOffset":1002,"count":1},{"startOffset":198,"endOffset":973,"count":0},{"startOffset":977,"endOffset":1001,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1041,"endOffset":1378,"count":1},{"startOffset":1331,"endOffset":1375,"count":0}],"isBlockCoverage":true},{"functionName":"exports.requireOrImport","ranges":[{"startOffset":1441,"endOffset":3554,"count":1},{"startOffset":1498,"endOffset":1545,"count":0},{"startOffset":1627,"endOffset":3548,"count":0}],"isBlockCoverage":true},{"functionName":"dealWithExports","ranges":[{"startOffset":3607,"endOffset":3753,"count":1},{"startOffset":3696,"endOffset":3751,"count":0}],"isBlockCoverage":true},{"functionName":"exports.loadFilesAsync","ranges":[{"startOffset":3780,"endOffset":3986,"count":1}],"isBlockCoverage":true},{"functionName":"implementationOfRequireOrImportForUnstableEsm","ranges":[{"startOffset":4016,"endOffset":4485,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/stats-collector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2220,"count":1}],"isBlockCoverage":true},{"functionName":"createStatsCollector","ranges":[{"startOffset":1329,"endOffset":2179,"count":1},{"startOffset":1520,"endOffset":1577,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1635,"endOffset":1682,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1716,"endOffset":1772,"count":6},{"startOffset":1750,"endOffset":1767,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1804,"endOffset":1841,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1873,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1947,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2016,"endOffset":2052,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2084,"endOffset":2175,"count":1}],"isBlockCoverage":true}]},{"scriptId":"200","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/interfaces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":155,"count":1}],"isBlockCoverage":true}]},{"scriptId":"201","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/interfaces/bdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2563,"count":1}],"isBlockCoverage":true},{"functionName":"bddInterface","ranges":[{"startOffset":544,"endOffset":2499,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":635,"endOffset":2495,"count":1},{"startOffset":926,"endOffset":955,"count":0}],"isBlockCoverage":true},{"functionName":"context.describe.context.context","ranges":[{"startOffset":1135,"endOffset":1265,"count":5}],"isBlockCoverage":true},{"functionName":"context.xdescribe.context.xcontext.context.describe.skip","ranges":[{"startOffset":1397,"endOffset":1549,"count":0}],"isBlockCoverage":false},{"functionName":"context.describe.only","ranges":[{"startOffset":1621,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"context.it.context.specify","ranges":[{"startOffset":1923,"endOffset":2146,"count":9},{"startOffset":2004,"endOffset":2032,"count":0}],"isBlockCoverage":true},{"functionName":"context.it.only","ranges":[{"startOffset":2216,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"context.xit.context.xspecify.context.it.skip","ranges":[{"startOffset":2426,"endOffset":2490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2635,"count":1}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":557,"endOffset":870,"count":9},{"startOffset":608,"endOffset":796,"count":0}],"isBlockCoverage":true},{"functionName":"Test.reset","ranges":[{"startOffset":1031,"endOffset":1133,"count":18}],"isBlockCoverage":true},{"functionName":"Test.retriedTest","ranges":[{"startOffset":1215,"endOffset":1317,"count":9},{"startOffset":1290,"endOffset":1316,"count":0}],"isBlockCoverage":true},{"functionName":"Test.markOnly","ranges":[{"startOffset":1417,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"Test.clone","ranges":[{"startOffset":1494,"endOffset":1857,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2051,"endOffset":2633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"203","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/interfaces/tdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2392,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":625,"endOffset":2294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"204","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/interfaces/qunit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2161,"count":1}],"isBlockCoverage":true},{"functionName":"qUnitInterface","ranges":[{"startOffset":648,"endOffset":2114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"205","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/interfaces/exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1428,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":460,"endOffset":1360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1440,"count":1}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":152,"endOffset":173,"count":1}],"isBlockCoverage":true},{"functionName":"Context.runnable","ranges":[{"startOffset":338,"endOffset":475,"count":11},{"startOffset":385,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"Context.timeout","ranges":[{"startOffset":610,"endOffset":742,"count":0}],"isBlockCoverage":false},{"functionName":"Context.slow","ranges":[{"startOffset":885,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"Context.skip","ranges":[{"startOffset":1108,"endOffset":1149,"count":0}],"isBlockCoverage":false},{"functionName":"Context.retries","ranges":[{"startOffset":1308,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/run-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7286,"count":1}],"isBlockCoverage":true},{"functionName":"exitMochaLater","ranges":[{"startOffset":735,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"exitMocha","ranges":[{"startOffset":1056,"endOffset":1783,"count":1}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":1501,"endOffset":1574,"count":3},{"startOffset":1530,"endOffset":1570,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1648,"endOffset":1768,"count":2}],"isBlockCoverage":true},{"functionName":"exports.list","ranges":[{"startOffset":2002,"endOffset":2080,"count":8},{"startOffset":2030,"endOffset":2059,"count":4},{"startOffset":2060,"endOffset":2080,"count":4}],"isBlockCoverage":true},{"functionName":"exports.handleRequires","ranges":[{"startOffset":2350,"endOffset":3208,"count":1},{"startOffset":2511,"endOffset":3038,"count":0},{"startOffset":3123,"endOffset":3188,"count":0}],"isBlockCoverage":true},{"functionName":"singleRun","ranges":[{"startOffset":3637,"endOffset":3922,"count":1},{"startOffset":3902,"endOffset":3918,"count":0}],"isBlockCoverage":true},{"functionName":"parallelRun","ranges":[{"startOffset":4327,"endOffset":4656,"count":0}],"isBlockCoverage":false},{"functionName":"exports.runMocha","ranges":[{"startOffset":5119,"endOffset":5616,"count":1},{"startOffset":5452,"endOffset":5507,"count":0},{"startOffset":5534,"endOffset":5547,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validateLegacyPlugin","ranges":[{"startOffset":6197,"endOffset":7284,"count":2},{"startOffset":6470,"endOffset":6595,"count":0},{"startOffset":6877,"endOffset":7282,"count":0}],"isBlockCoverage":true},{"functionName":"createUnknownError","ranges":[{"startOffset":6626,"endOffset":6782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/watch-run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10757,"count":1}],"isBlockCoverage":true},{"functionName":"exports.watchParallelRun","ranges":[{"startOffset":1013,"endOffset":2625,"count":0}],"isBlockCoverage":false},{"functionName":"exports.watchRun","ranges":[{"startOffset":3277,"endOffset":4728,"count":0}],"isBlockCoverage":false},{"functionName":"createWatcher","ranges":[{"startOffset":5520,"endOffset":7787,"count":0}],"isBlockCoverage":false},{"functionName":"createRerunner","ranges":[{"startOffset":8168,"endOffset":9165,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchedFiles","ranges":[{"startOffset":9392,"endOffset":9605,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":9678,"endOffset":9726,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":9799,"endOffset":9847,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":9917,"endOffset":9963,"count":0}],"isBlockCoverage":false},{"functionName":"blastCache","ranges":[{"startOffset":10124,"endOffset":10312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"209","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chokidar/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28364,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":1627,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":1699,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"unifyPaths","ranges":[{"startOffset":1899,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toUnix","ranges":[{"startOffset":2322,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathToUnix","ranges":[{"startOffset":2754,"endOffset":2803,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeIgnored","ranges":[{"startOffset":2831,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePath","ranges":[{"startOffset":3029,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"undef","ranges":[{"startOffset":3240,"endOffset":3278,"count":0}],"isBlockCoverage":false},{"functionName":"DirEntry","ranges":[{"startOffset":3456,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3616,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":3749,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4088,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":4227,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":4332,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"WatchHelper","ranges":[{"startOffset":4560,"endOffset":5278,"count":0}],"isBlockCoverage":false},{"functionName":"checkGlobSymlink","ranges":[{"startOffset":5282,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"entryPath","ranges":[{"startOffset":5767,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filterPath","ranges":[{"startOffset":5909,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"getDirParts","ranges":[{"startOffset":6330,"endOffset":6644,"count":0}],"isBlockCoverage":false},{"functionName":"filterDir","ranges":[{"startOffset":6648,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":7511,"endOffset":11137,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11450,"endOffset":13176,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":13387,"endOffset":14065,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14166,"endOffset":14930,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":15005,"endOffset":15255,"count":0}],"isBlockCoverage":false},{"functionName":"emitWithAll","ranges":[{"startOffset":15257,"endOffset":15361,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":15770,"endOffset":18071,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":18246,"endOffset":18522,"count":0}],"isBlockCoverage":false},{"functionName":"_throttle","ranges":[{"startOffset":18818,"endOffset":19552,"count":0}],"isBlockCoverage":false},{"functionName":"_incrReadyCount","ranges":[{"startOffset":19554,"endOffset":19604,"count":0}],"isBlockCoverage":false},{"functionName":"_awaitWriteFinish","ranges":[{"startOffset":20051,"endOffset":21407,"count":0}],"isBlockCoverage":false},{"functionName":"_getGlobIgnored","ranges":[{"startOffset":21409,"endOffset":21473,"count":0}],"isBlockCoverage":false},{"functionName":"_isIgnored","ranges":[{"startOffset":21647,"endOffset":22247,"count":0}],"isBlockCoverage":false},{"functionName":"_isntIgnored","ranges":[{"startOffset":22249,"endOffset":22316,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchHelpers","ranges":[{"startOffset":22613,"endOffset":22852,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchedDir","ranges":[{"startOffset":23050,"endOffset":23318,"count":0}],"isBlockCoverage":false},{"functionName":"_hasReadPermissions","ranges":[{"startOffset":23583,"endOffset":23859,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":24165,"endOffset":26854,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":26920,"endOffset":27060,"count":0}],"isBlockCoverage":false},{"functionName":"_closeFile","ranges":[{"startOffset":27130,"endOffset":27286,"count":0}],"isBlockCoverage":false},{"functionName":"_addPathCloser","ranges":[{"startOffset":27349,"endOffset":27532,"count":0}],"isBlockCoverage":false},{"functionName":"_readdirp","ranges":[{"startOffset":27534,"endOffset":27932,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":28233,"endOffset":28338,"count":0}],"isBlockCoverage":false}]},{"scriptId":"210","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readdirp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8876,"count":1},{"startOffset":1153,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"isNormalFlowError","ranges":[{"startOffset":942,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1055,"endOffset":1082,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFilter","ranges":[{"startOffset":1208,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultOptions","ranges":[{"startOffset":2119,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"ReaddirpStream","ranges":[{"startOffset":2434,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":3726,"endOffset":5128,"count":0}],"isBlockCoverage":false},{"functionName":"_exploreDir","ranges":[{"startOffset":5132,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"_formatEntry","ranges":[{"startOffset":5340,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":5778,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryType","ranges":[{"startOffset":5928,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"_includeAsFile","ranges":[{"startOffset":7112,"endOffset":7258,"count":0}],"isBlockCoverage":false},{"functionName":"readdirp","ranges":[{"startOffset":7820,"endOffset":8455,"count":0}],"isBlockCoverage":false},{"functionName":"readdirpPromise","ranges":[{"startOffset":8482,"endOffset":8738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"211","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"212","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/anymatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3173,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":432,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":598,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1145,"endOffset":1951,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch","ranges":[{"startOffset":2117,"endOffset":3114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/normalize-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":176,"endOffset":1022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":461,"endOffset":1118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"220","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":247,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedCheck","ranges":[{"startOffset":2767,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":3324,"endOffset":3626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"221","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"222","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4375,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1359,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1795,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2407,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3141,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4118,"endOffset":4319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":697,"count":0}],"isBlockCoverage":false}]},{"scriptId":"224","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1097,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1347,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1767,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1969,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2177,"endOffset":2449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"225","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"226","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6315,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2227,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2499,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2780,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2898,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3031,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3199,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4705,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5502,"endOffset":6289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"227","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"228","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"229","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2780,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":828,"endOffset":2752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"230","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6913,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"231","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"232","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chokidar/lib/nodefs-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20067,"count":1}],"isBlockCoverage":true},{"functionName":"foreach","ranges":[{"startOffset":725,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"addAndConvert","ranges":[{"startOffset":843,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"clearItem","ranges":[{"startOffset":1034,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"delFromSet","ranges":[{"startOffset":1181,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":1384,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchInstance","ranges":[{"startOffset":2240,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchBroadcast","ranges":[{"startOffset":3167,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchListener","ranges":[{"startOffset":3691,"endOffset":5797,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchFileListener","ranges":[{"startOffset":6374,"endOffset":8442,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFsHandler","ranges":[{"startOffset":8539,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithNodeFs","ranges":[{"startOffset":8844,"endOffset":9693,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFile","ranges":[{"startOffset":9953,"endOffset":12010,"count":0}],"isBlockCoverage":false},{"functionName":"_handleSymlink","ranges":[{"startOffset":12337,"endOffset":13370,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRead","ranges":[{"startOffset":13372,"endOffset":15882,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDir","ranges":[{"startOffset":16330,"endOffset":17387,"count":0}],"isBlockCoverage":false},{"functionName":"_addToNodeFs","ranges":[{"startOffset":17835,"endOffset":20030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/is-binary-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":164,"endOffset":237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/binary-extensions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54,"count":1}],"isBlockCoverage":true}]},{"scriptId":"235","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chokidar/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1834,"count":1}],"isBlockCoverage":true},{"functionName":"exports.EMPTY_FN","ranges":[{"startOffset":1626,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"exports.IDENTITY_FN","ranges":[{"startOffset":1658,"endOffset":1668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chokidar/lib/fsevents-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16274,"count":1},{"startOffset":243,"endOffset":264,"count":0},{"startOffset":282,"endOffset":561,"count":0}],"isBlockCoverage":true},{"functionName":"Depth","ranges":[{"startOffset":973,"endOffset":1018,"count":0}],"isBlockCoverage":false},{"functionName":"createFSEventsInstance","ranges":[{"startOffset":2064,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"setFSEventsListener","ranges":[{"startOffset":2552,"endOffset":4873,"count":0}],"isBlockCoverage":false},{"functionName":"couldConsolidate","ranges":[{"startOffset":4978,"endOffset":5217,"count":0}],"isBlockCoverage":false},{"functionName":"canUse","ranges":[{"startOffset":5294,"endOffset":5339,"count":0}],"isBlockCoverage":false},{"functionName":"calcDepth","ranges":[{"startOffset":5422,"endOffset":5544,"count":0}],"isBlockCoverage":false},{"functionName":"sameTypes","ranges":[{"startOffset":5680,"endOffset":5883,"count":0}],"isBlockCoverage":false},{"functionName":"FsEventsHandler","ranges":[{"startOffset":5981,"endOffset":6019,"count":0}],"isBlockCoverage":false},{"functionName":"checkIgnored","ranges":[{"startOffset":6020,"endOffset":6324,"count":0}],"isBlockCoverage":false},{"functionName":"addOrChange","ranges":[{"startOffset":6326,"endOffset":6555,"count":0}],"isBlockCoverage":false},{"functionName":"checkExists","ranges":[{"startOffset":6557,"endOffset":7223,"count":0}],"isBlockCoverage":false},{"functionName":"handleEvent","ranges":[{"startOffset":7225,"endOffset":8519,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithFsEvents","ranges":[{"startOffset":8907,"endOffset":10901,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFsEventsSymlink","ranges":[{"startOffset":11236,"endOffset":12319,"count":0}],"isBlockCoverage":false},{"functionName":"emitAdd","ranges":[{"startOffset":12384,"endOffset":12857,"count":0}],"isBlockCoverage":false},{"functionName":"initWatch","ranges":[{"startOffset":12859,"endOffset":13124,"count":0}],"isBlockCoverage":false},{"functionName":"_addToFsEvents","ranges":[{"startOffset":13464,"endOffset":16203,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/collect-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2672,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":696,"endOffset":2202,"count":1},{"startOffset":1438,"endOffset":1465,"count":0},{"startOffset":1681,"endOffset":2030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":837,"endOffset":1347,"count":1},{"startOffset":1153,"endOffset":1343,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":963,"endOffset":1039,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":998,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1063,"endOffset":1097,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1557,"endOffset":1591,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2095,"endOffset":2177,"count":0}],"isBlockCoverage":false}]},{"scriptId":"238","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25347,"count":1},{"startOffset":117,"endOffset":130,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1102,"endOffset":1216,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1153,"endOffset":1209,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1291,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1436,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1656,"endOffset":2001,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2024,"endOffset":2142,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2144,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":2556,"endOffset":3162,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3192,"endOffset":3206,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":3240,"endOffset":4503,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":4551,"endOffset":4936,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5212,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5331,"endOffset":5808,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":6506,"endOffset":16995,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17016,"endOffset":17103,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17141,"endOffset":18278,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":18298,"endOffset":18552,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":18588,"endOffset":19999,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":20250,"endOffset":25162,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":25196,"endOffset":25260,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":25262,"endOffset":25346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"239","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4792,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":337,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":447,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":686,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1079,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1547,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2126,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2164,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2216,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2271,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2311,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2352,"endOffset":4790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/concat-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1},{"startOffset":255,"endOffset":343,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":258,"endOffset":343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/lookup-files.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4183,"count":1}],"isBlockCoverage":true},{"functionName":"isHiddenOnUnix","ranges":[{"startOffset":1057,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"hasMatchingExtname","ranges":[{"startOffset":1618,"endOffset":1747,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1659,"endOffset":1705,"count":3},{"startOffset":1687,"endOffset":1692,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1717,"endOffset":1746,"count":1}],"isBlockCoverage":true},{"functionName":"lookupFiles","ranges":[{"startOffset":2409,"endOffset":4181,"count":1},{"startOffset":2551,"endOffset":3220,"count":0},{"startOffset":3304,"endOffset":3334,"count":0},{"startOffset":3339,"endOffset":3388,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2790,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3447,"endOffset":4160,"count":1},{"startOffset":3600,"endOffset":3731,"count":0},{"startOffset":3738,"endOffset":3775,"count":0},{"startOffset":3804,"endOffset":3986,"count":0},{"startOffset":4109,"endOffset":4130,"count":0}],"isBlockCoverage":true}]},{"scriptId":"243","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/glob/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19362,"count":1}],"isBlockCoverage":true},{"functionName":"glob","ranges":[{"startOffset":2096,"endOffset":2407,"count":8},{"startOffset":2172,"endOffset":2198,"count":0},{"startOffset":2215,"endOffset":2227,"count":0},{"startOffset":2249,"endOffset":2364,"count":0}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":2517,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"glob.hasMagic","ranges":[{"startOffset":2763,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"Glob","ranges":[{"startOffset":3158,"endOffset":4588,"count":8},{"startOffset":3234,"endOffset":3275,"count":0},{"startOffset":3308,"endOffset":3427,"count":0},{"startOffset":3464,"endOffset":3501,"count":0},{"startOffset":4186,"endOffset":4197,"count":0},{"startOffset":4218,"endOffset":4231,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3989,"endOffset":4039,"count":8}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":4363,"endOffset":4586,"count":8},{"startOffset":4454,"endOffset":4538,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4481,"endOffset":4529,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._finish","ranges":[{"startOffset":4615,"endOffset":4818,"count":8},{"startOffset":4684,"endOffset":4690,"count":0},{"startOffset":4712,"endOffset":4733,"count":0},{"startOffset":4739,"endOffset":4762,"count":0}],"isBlockCoverage":true},{"functionName":"Glob._realpath","ranges":[{"startOffset":4847,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpathSet","ranges":[{"startOffset":5194,"endOffset":6010,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._mark","ranges":[{"startOffset":6035,"endOffset":6081,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._makeAbs","ranges":[{"startOffset":6109,"endOffset":6158,"count":16}],"isBlockCoverage":true},{"functionName":"Glob.abort","ranges":[{"startOffset":6183,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.pause","ranges":[{"startOffset":6266,"endOffset":6353,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.resume","ranges":[{"startOffset":6379,"endOffset":6961,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._process","ranges":[{"startOffset":6989,"endOffset":8755,"count":8},{"startOffset":7124,"endOffset":7130,"count":0},{"startOffset":7172,"endOffset":7250,"count":0},{"startOffset":7427,"endOffset":7441,"count":0},{"startOffset":7616,"endOffset":7705,"count":0},{"startOffset":7881,"endOffset":8110,"count":0},{"startOffset":8227,"endOffset":8406,"count":0},{"startOffset":8513,"endOffset":8524,"count":0},{"startOffset":8671,"endOffset":8753,"count":0}],"isBlockCoverage":true},{"functionName":"Glob._processReaddir","ranges":[{"startOffset":8790,"endOffset":9026,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir2","ranges":[{"startOffset":9062,"endOffset":11106,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._emitMatch","ranges":[{"startOffset":11136,"endOffset":11704,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirInGlobStar","ranges":[{"startOffset":11742,"endOffset":12544,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdir","ranges":[{"startOffset":12572,"endOffset":13089,"count":8},{"startOffset":12629,"endOffset":12635,"count":0},{"startOffset":12705,"endOffset":12711,"count":0},{"startOffset":12778,"endOffset":12809,"count":0},{"startOffset":12815,"endOffset":12854,"count":0},{"startOffset":12888,"endOffset":13019,"count":0}],"isBlockCoverage":true},{"functionName":"readdirCb","ranges":[{"startOffset":13091,"endOffset":13271,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13137,"endOffset":13269,"count":8},{"startOffset":13211,"endOffset":13265,"count":0}],"isBlockCoverage":true},{"functionName":"Glob._readdirEntries","ranges":[{"startOffset":13306,"endOffset":13803,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirError","ranges":[{"startOffset":13836,"endOffset":14921,"count":8},{"startOffset":13883,"endOffset":13889,"count":0},{"startOffset":13962,"endOffset":13977,"count":0},{"startOffset":14032,"endOffset":14388,"count":0},{"startOffset":14556,"endOffset":14900,"count":0}],"isBlockCoverage":true},{"functionName":"Glob._processGlobStar","ranges":[{"startOffset":14957,"endOffset":15187,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15070,"endOffset":15184,"count":8}],"isBlockCoverage":true},{"functionName":"Glob._processGlobStar2","ranges":[{"startOffset":15225,"endOffset":16372,"count":8},{"startOffset":15482,"endOffset":15661,"count":0},{"startOffset":15662,"endOffset":15666,"count":0},{"startOffset":15958,"endOffset":15971,"count":0},{"startOffset":15977,"endOffset":16371,"count":0}],"isBlockCoverage":true},{"functionName":"Glob._processSimple","ranges":[{"startOffset":16406,"endOffset":16662,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple2","ranges":[{"startOffset":16696,"endOffset":17378,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat","ranges":[{"startOffset":17445,"endOffset":18836,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat2","ranges":[{"startOffset":18862,"endOffset":19361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/fs.realpath/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"newError","ranges":[{"startOffset":386,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":550,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":867,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"monkeypatch","ranges":[{"startOffset":1125,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"unmonkeypatch","ranges":[{"startOffset":1212,"endOffset":1307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/fs.realpath/old.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8542,"count":1},{"startOffset":1341,"endOffset":1377,"count":0},{"startOffset":2534,"endOffset":2583,"count":0},{"startOffset":2754,"endOffset":2793,"count":0}],"isBlockCoverage":true},{"functionName":"rethrow","ranges":[{"startOffset":1380,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":2226,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":2818,"endOffset":5360,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":5383,"endOffset":8540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"246","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26266,"count":1},{"startOffset":134,"endOffset":151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72,"endOffset":130,"count":1},{"startOffset":117,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1148,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1255,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1337,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1482,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1688,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2732,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2795,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":3070,"endOffset":3676,"count":8},{"startOffset":3146,"endOffset":3194,"count":0},{"startOffset":3243,"endOffset":3255,"count":0}],"isBlockCoverage":true},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3706,"endOffset":3720,"count":152}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":3754,"endOffset":5005,"count":8},{"startOffset":3905,"endOffset":3933,"count":0},{"startOffset":3935,"endOffset":3975,"count":0},{"startOffset":3992,"endOffset":4030,"count":0},{"startOffset":4188,"endOffset":4261,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":4201,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4595,"endOffset":4644,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4718,"endOffset":4780,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4898,"endOffset":4951,"count":8}],"isBlockCoverage":true},{"functionName":"parseNegate","ranges":[{"startOffset":5053,"endOffset":5438,"count":8},{"startOffset":5212,"endOffset":5291,"count":0},{"startOffset":5303,"endOffset":5437,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5714,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5833,"endOffset":6374,"count":8},{"startOffset":5964,"endOffset":5996,"count":0},{"startOffset":6064,"endOffset":6073,"count":0},{"startOffset":6346,"endOffset":6373,"count":0}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":6436,"endOffset":6639,"count":32},{"startOffset":6492,"endOffset":6540,"count":0},{"startOffset":6585,"endOffset":6637,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":7337,"endOffset":17832,"count":16},{"startOffset":7471,"endOffset":7556,"count":8},{"startOffset":7523,"endOffset":7552,"count":0},{"startOffset":7556,"endOffset":7579,"count":8},{"startOffset":7579,"endOffset":7588,"count":0},{"startOffset":7588,"endOffset":7973,"count":8},{"startOffset":7973,"endOffset":7977,"count":0},{"startOffset":8055,"endOffset":8119,"count":8},{"startOffset":8069,"endOffset":8105,"count":0},{"startOffset":8688,"endOffset":8714,"count":96},{"startOffset":8726,"endOffset":13397,"count":96},{"startOffset":8835,"endOffset":8851,"count":0},{"startOffset":8853,"endOffset":8919,"count":0},{"startOffset":8977,"endOffset":9114,"count":0},{"startOffset":9122,"endOffset":9196,"count":0},{"startOffset":9276,"endOffset":9285,"count":0},{"startOffset":9292,"endOffset":9301,"count":8},{"startOffset":9308,"endOffset":9317,"count":8},{"startOffset":9324,"endOffset":9333,"count":8},{"startOffset":9340,"endOffset":10205,"count":8},{"startOffset":9551,"endOffset":9691,"count":0},{"startOffset":10174,"endOffset":10190,"count":0},{"startOffset":10213,"endOffset":10764,"count":0},{"startOffset":10772,"endOffset":11199,"count":0},{"startOffset":11207,"endOffset":11416,"count":0},{"startOffset":11478,"endOffset":11757,"count":0},{"startOffset":11765,"endOffset":13086,"count":0},{"startOffset":13094,"endOffset":13376,"count":88},{"startOffset":13206,"endOffset":13265,"count":0},{"startOffset":13299,"endOffset":13325,"count":8},{"startOffset":13314,"endOffset":13324,"count":0},{"startOffset":13327,"endOffset":13359,"count":8},{"startOffset":13397,"endOffset":13514,"count":8},{"startOffset":13514,"endOffset":13890,"count":0},{"startOffset":13890,"endOffset":14294,"count":8},{"startOffset":14294,"endOffset":15231,"count":0},{"startOffset":15231,"endOffset":15330,"count":8},{"startOffset":15330,"endOffset":15371,"count":0},{"startOffset":15371,"endOffset":15556,"count":8},{"startOffset":15557,"endOffset":15566,"count":8},{"startOffset":15567,"endOffset":15599,"count":8},{"startOffset":15603,"endOffset":15920,"count":8},{"startOffset":15920,"endOffset":16734,"count":0},{"startOffset":16734,"endOffset":16934,"count":8},{"startOffset":16936,"endOffset":17095,"count":8},{"startOffset":17095,"endOffset":17126,"count":0},{"startOffset":17126,"endOffset":17286,"count":8},{"startOffset":17286,"endOffset":17324,"count":0},{"startOffset":17324,"endOffset":17355,"count":8},{"startOffset":17355,"endOffset":17360,"count":0},{"startOffset":17361,"endOffset":17365,"count":8},{"startOffset":17429,"endOffset":17768,"count":0},{"startOffset":17768,"endOffset":17831,"count":8}],"isBlockCoverage":true},{"functionName":"clearStateChar","ranges":[{"startOffset":8141,"endOffset":8628,"count":104},{"startOffset":8189,"endOffset":8624,"count":8},{"startOffset":8395,"endOffset":8466,"count":0},{"startOffset":8475,"endOffset":8530,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14509,"endOffset":15009,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17853,"endOffset":17940,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17978,"endOffset":19165,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":19185,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":19469,"endOffset":20941,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":21192,"endOffset":26081,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":26115,"endOffset":26179,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":26181,"endOffset":26265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"248","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32735,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2728,"endOffset":2916,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":3513,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4133,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4423,"endOffset":5440,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5563,"endOffset":6528,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6532,"endOffset":8211,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8215,"endOffset":9554,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9558,"endOffset":12866,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":12870,"endOffset":13501,"count":24},{"startOffset":12932,"endOffset":13498,"count":0}],"isBlockCoverage":true},{"functionName":"ok","ranges":[{"startOffset":13642,"endOffset":13705,"count":24}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":13975,"endOffset":14360,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":14589,"endOffset":14978,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":15187,"endOffset":15565,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":15780,"endOffset":16166,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":16420,"endOffset":16822,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":17082,"endOffset":17492,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":17706,"endOffset":18031,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":18252,"endOffset":18585,"count":6},{"startOffset":18334,"endOffset":18395,"count":0},{"startOffset":18431,"endOffset":18582,"count":0}],"isBlockCoverage":true},{"functionName":"Comparison","ranges":[{"startOffset":18612,"endOffset":18998,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":19005,"endOffset":19748,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19752,"endOffset":23240,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":23244,"endOffset":23392,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":23396,"endOffset":23768,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23772,"endOffset":24509,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":24513,"endOffset":26177,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":26181,"endOffset":26807,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26811,"endOffset":27484,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":27650,"endOffset":27746,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":27933,"endOffset":28047,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":28217,"endOffset":28313,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":28487,"endOffset":28601,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":28736,"endOffset":30544,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":30549,"endOffset":31654,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":31859,"endOffset":31953,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":32170,"endOffset":32278,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":32419,"endOffset":32490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17691,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1528,"endOffset":1812,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1816,"endOffset":2442,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2446,"endOffset":11232,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11236,"endOffset":11548,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11592,"endOffset":16684,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16690,"endOffset":16767,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16773,"endOffset":17650,"count":0}],"isBlockCoverage":false}]},{"scriptId":"250","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2441,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":419,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"calls","ranges":[{"startOffset":453,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":1512,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":2167,"endOffset":2403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"251","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/path-is-absolute/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1},{"startOffset":542,"endOffset":549,"count":0}],"isBlockCoverage":true},{"functionName":"posix","ranges":[{"startOffset":15,"endOffset":71,"count":0}],"isBlockCoverage":false},{"functionName":"win32","ranges":[{"startOffset":73,"endOffset":486,"count":24},{"startOffset":348,"endOffset":353,"count":8},{"startOffset":383,"endOffset":410,"count":16},{"startOffset":474,"endOffset":482,"count":8}],"isBlockCoverage":true}]},{"scriptId":"252","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/glob/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11931,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":501,"endOffset":790,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync","ranges":[{"startOffset":792,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._finish","ranges":[{"startOffset":1450,"endOffset":2007,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._process","ranges":[{"startOffset":2040,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processReaddir","ranges":[{"startOffset":3581,"endOffset":5539,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._emitMatch","ranges":[{"startOffset":5574,"endOffset":5962,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirInGlobStar","ranges":[{"startOffset":6005,"endOffset":6717,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdir","ranges":[{"startOffset":6749,"endOffset":7180,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirEntries","ranges":[{"startOffset":7219,"endOffset":7700,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirError","ranges":[{"startOffset":7737,"endOffset":8601,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processGlobStar","ranges":[{"startOffset":8641,"endOffset":9739,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processSimple","ranges":[{"startOffset":9777,"endOffset":10523,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._stat","ranges":[{"startOffset":10594,"endOffset":11774,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._mark","ranges":[{"startOffset":11803,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._makeAbs","ranges":[{"startOffset":11881,"endOffset":11930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"253","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/glob/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6048,"count":1}],"isBlockCoverage":true},{"functionName":"ownProp","ranges":[{"startOffset":195,"endOffset":286,"count":16}],"isBlockCoverage":true},{"functionName":"alphasort","ranges":[{"startOffset":457,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"setupIgnores","ranges":[{"startOffset":522,"endOffset":746,"count":8},{"startOffset":639,"endOffset":666,"count":0},{"startOffset":694,"endOffset":744,"count":0}],"isBlockCoverage":true},{"functionName":"ignoreMap","ranges":[{"startOffset":796,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"setopts","ranges":[{"startOffset":1091,"endOffset":3295,"count":8},{"startOffset":1155,"endOffset":1167,"count":0},{"startOffset":1241,"endOffset":1271,"count":0},{"startOffset":1273,"endOffset":1401,"count":0},{"startOffset":1749,"endOffset":1765,"count":0},{"startOffset":2405,"endOffset":2419,"count":0},{"startOffset":2891,"endOffset":2916,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":3297,"endOffset":4614,"count":8},{"startOffset":3364,"endOffset":3368,"count":0},{"startOffset":3501,"endOffset":3537,"count":0},{"startOffset":3564,"endOffset":3769,"count":0},{"startOffset":3775,"endOffset":3969,"count":0},{"startOffset":4128,"endOffset":4490,"count":0},{"startOffset":4522,"endOffset":4592,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3914,"endOffset":3962,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4258,"endOffset":4479,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4539,"endOffset":4591,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4616,"endOffset":5067,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbs","ranges":[{"startOffset":5088,"endOffset":5443,"count":16},{"startOffset":5158,"endOffset":5197,"count":0},{"startOffset":5221,"endOffset":5232,"count":8},{"startOffset":5234,"endOffset":5356,"count":8},{"startOffset":5319,"endOffset":5356,"count":0}],"isBlockCoverage":true},{"functionName":"isIgnored","ranges":[{"startOffset":5639,"endOffset":5853,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIgnored","ranges":[{"startOffset":5855,"endOffset":6047,"count":8},{"startOffset":5938,"endOffset":6046,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5966,"endOffset":6044,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/inflight/inflight.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"inflight","ranges":[{"startOffset":125,"endOffset":274,"count":8},{"startOffset":172,"endOffset":216,"count":0}],"isBlockCoverage":true},{"functionName":"makeres","ranges":[{"startOffset":276,"endOffset":1223,"count":8}],"isBlockCoverage":true},{"functionName":"RES","ranges":[{"startOffset":315,"endOffset":1220,"count":8},{"startOffset":957,"endOffset":1170,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1106,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":1225,"endOffset":1364,"count":8},{"startOffset":1329,"endOffset":1347,"count":0}],"isBlockCoverage":true}]},{"scriptId":"255","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":301,"endOffset":904,"count":3},{"startOffset":344,"endOffset":365,"count":0},{"startOffset":403,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":539,"endOffset":902,"count":24},{"startOffset":645,"endOffset":681,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":831,"endOffset":876,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":430,"endOffset":610,"count":17}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":461,"endOffset":578,"count":16},{"startOffset":493,"endOffset":507,"count":0}],"isBlockCoverage":true},{"functionName":"onceStrict","ranges":[{"startOffset":612,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/plugin-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8391,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":611,"endOffset":923,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":929,"endOffset":1838,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2005,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2660,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"PluginLoader","ranges":[{"startOffset":3633,"endOffset":4623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4435,"endOffset":4487,"count":3}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":4723,"endOffset":5868,"count":3},{"startOffset":4798,"endOffset":4924,"count":0},{"startOffset":4956,"endOffset":5097,"count":0},{"startOffset":5181,"endOffset":5312,"count":0},{"startOffset":5405,"endOffset":5418,"count":0},{"startOffset":5468,"endOffset":5630,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":6119,"endOffset":6956,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":7385,"endOffset":7889,"count":1},{"startOffset":7528,"endOffset":7801,"count":3},{"startOffset":7560,"endOffset":7795,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":8016,"endOffset":8126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"258","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2624,"count":1}],"isBlockCoverage":true},{"functionName":"yaml","ranges":[{"startOffset":880,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"js","ranges":[{"startOffset":958,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":1375,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"exports.loadConfig","ranges":[{"startOffset":1723,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.findConfig","ranges":[{"startOffset":2437,"endOffset":2622,"count":1},{"startOffset":2539,"endOffset":2601,"count":0}],"isBlockCoverage":true}]},{"scriptId":"259","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1940,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":185,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1048,"endOffset":1825,"count":2},{"startOffset":1116,"endOffset":1121,"count":1},{"startOffset":1559,"endOffset":1823,"count":6},{"startOffset":1650,"endOffset":1666,"count":0},{"startOffset":1685,"endOffset":1736,"count":1},{"startOffset":1736,"endOffset":1764,"count":5},{"startOffset":1764,"endOffset":1780,"count":1},{"startOffset":1780,"endOffset":1823,"count":4}],"isBlockCoverage":true},{"functionName":"runMatcher","ranges":[{"startOffset":1216,"endOffset":1491,"count":6},{"startOffset":1323,"endOffset":1490,"count":0}],"isBlockCoverage":true}]},{"scriptId":"260","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1329,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":288,"endOffset":414,"count":6},{"startOffset":358,"endOffset":413,"count":0}],"isBlockCoverage":true},{"functionName":"matchType","ranges":[{"startOffset":434,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":518,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":945,"endOffset":1327,"count":6},{"startOffset":1133,"endOffset":1147,"count":0},{"startOffset":1178,"endOffset":1325,"count":31},{"startOffset":1285,"endOffset":1309,"count":1},{"startOffset":1314,"endOffset":1322,"count":30},{"startOffset":1325,"endOffset":1326,"count":5}],"isBlockCoverage":true}]},{"scriptId":"261","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1157,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":82,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":213,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":347,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":509,"endOffset":1128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"262","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1521,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":68,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"263","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/yocto-queue/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":38,"endOffset":159,"count":0}],"isBlockCoverage":false},{"functionName":"Queue","ranges":[{"startOffset":277,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":314,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":514,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":667,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":752,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":791,"endOffset":921,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":347,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":255,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/node-flags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2844,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isNodeFlag","ranges":[{"startOffset":1079,"endOffset":1831,"count":12},{"startOffset":1125,"endOffset":1360,"count":1},{"startOffset":1225,"endOffset":1252,"count":0},{"startOffset":1595,"endOffset":1607,"count":1},{"startOffset":1608,"endOffset":1630,"count":1}],"isBlockCoverage":true},{"functionName":"exports.impliesNoTimeouts","ranges":[{"startOffset":2107,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unparseNodeFlags","ranges":[{"startOffset":2636,"endOffset":2842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/yargs-unparser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5238,"count":1}],"isBlockCoverage":true},{"functionName":"isAlias","ranges":[{"startOffset":175,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"hasDefaultValue","ranges":[{"startOffset":356,"endOffset":442,"count":0}],"isBlockCoverage":false},{"functionName":"isCamelCased","ranges":[{"startOffset":444,"endOffset":639,"count":0}],"isBlockCoverage":false},{"functionName":"keyToFlag","ranges":[{"startOffset":641,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":724,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOption","ranges":[{"startOffset":1762,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"unparsePositional","ranges":[{"startOffset":2600,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"unparseOptions","ranges":[{"startOffset":3643,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"unparseEndOfOptions","ranges":[{"startOffset":4322,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"unparser","ranges":[{"startOffset":4544,"endOffset":5209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/flat/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3970,"count":1}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":82,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"keyIdentity","ranges":[{"startOffset":240,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":285,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"unflatten","ranges":[{"startOffset":1286,"endOffset":3969,"count":0}],"isBlockCoverage":false}]},{"scriptId":"268","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/camelcase/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"preserveCamelCase","ranges":[{"startOffset":464,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"preserveConsecutiveUppercase","ranges":[{"startOffset":1450,"endOffset":1573,"count":0}],"isBlockCoverage":false},{"functionName":"postProcess","ranges":[{"startOffset":1596,"endOffset":1855,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":1876,"endOffset":3157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"269","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/decamelize/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"270","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/is-plain-obj/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":245,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/cli.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2921,"count":1},{"startOffset":2899,"endOffset":2920,"count":0}],"isBlockCoverage":true},{"functionName":"exports.main","ranges":[{"startOffset":1379,"endOffset":2714,"count":1},{"startOffset":1742,"endOffset":1762,"count":0},{"startOffset":2465,"endOffset":2469,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2004,"endOffset":2226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"272","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/yargs/yargs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.applyExtends","ranges":[{"startOffset":275,"endOffset":375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"273","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/yargs/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107596,"count":1},{"startOffset":106038,"endOffset":106046,"count":0},{"startOffset":106089,"endOffset":106097,"count":0},{"startOffset":106144,"endOffset":106159,"count":0},{"startOffset":106537,"endOffset":106543,"count":0},{"startOffset":106884,"endOffset":106928,"count":0},{"startOffset":107069,"endOffset":107253,"count":0}],"isBlockCoverage":true},{"functionName":"YError","ranges":[{"startOffset":81,"endOffset":219,"count":0}],"isBlockCoverage":false},{"functionName":"applyExtends","ranges":[{"startOffset":268,"endOffset":1455,"count":1},{"startOffset":437,"endOffset":1299,"count":0},{"startOffset":1367,"endOffset":1401,"count":0}],"isBlockCoverage":true},{"functionName":"checkForCircularExtends","ranges":[{"startOffset":1456,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"getPathToDefaultConfig","ranges":[{"startOffset":1643,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"mergeDeep","ranges":[{"startOffset":1747,"endOffset":2225,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":2227,"endOffset":3279,"count":253},{"startOffset":2519,"endOffset":2566,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2718,"endOffset":3249,"count":506},{"startOffset":2833,"endOffset":2865,"count":2},{"startOffset":2879,"endOffset":2895,"count":2},{"startOffset":2925,"endOffset":3077,"count":221},{"startOffset":3077,"endOffset":3243,"count":285}],"isBlockCoverage":true},{"functionName":"argsert","ranges":[{"startOffset":3360,"endOffset":5273,"count":255},{"startOffset":3829,"endOffset":3867,"count":295},{"startOffset":3881,"endOffset":3892,"count":48},{"startOffset":3924,"endOffset":3938,"count":8},{"startOffset":3985,"endOffset":4124,"count":0},{"startOffset":4240,"endOffset":4367,"count":0},{"startOffset":5219,"endOffset":5271,"count":0}],"isBlockCoverage":true},{"functionName":"parseArgs","ranges":[{"startOffset":3401,"endOffset":3648,"count":255},{"startOffset":3476,"endOffset":3522,"count":6},{"startOffset":3535,"endOffset":3641,"count":249}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4400,"endOffset":4756,"count":284},{"startOffset":4663,"endOffset":4719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4555,"endOffset":4600,"count":622},{"startOffset":4585,"endOffset":4600,"count":338}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4791,"endOffset":5206,"count":219},{"startOffset":4856,"endOffset":4863,"count":62},{"startOffset":4863,"endOffset":5113,"count":157},{"startOffset":5113,"endOffset":5169,"count":0},{"startOffset":5169,"endOffset":5205,"count":157}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5005,"endOffset":5050,"count":205},{"startOffset":5035,"endOffset":5050,"count":56}],"isBlockCoverage":true},{"functionName":"guessType","ranges":[{"startOffset":5274,"endOffset":5442,"count":441},{"startOffset":5328,"endOffset":5359,"count":33},{"startOffset":5359,"endOffset":5417,"count":408},{"startOffset":5387,"endOffset":5417,"count":0},{"startOffset":5417,"endOffset":5441,"count":408}],"isBlockCoverage":true},{"functionName":"argumentTypeError","ranges":[{"startOffset":5443,"endOffset":5661,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":5663,"endOffset":5810,"count":7},{"startOffset":5756,"endOffset":5806,"count":4}],"isBlockCoverage":true},{"functionName":"assertNotStrictEqual","ranges":[{"startOffset":5812,"endOffset":5937,"count":6}],"isBlockCoverage":true},{"functionName":"assertSingleKey","ranges":[{"startOffset":5938,"endOffset":6034,"count":0}],"isBlockCoverage":false},{"functionName":"objectKeys","ranges":[{"startOffset":6035,"endOffset":6098,"count":30}],"isBlockCoverage":true},{"functionName":"objFilter","ranges":[{"startOffset":6100,"endOffset":6334,"count":26}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":6143,"endOffset":6153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6210,"endOffset":6314,"count":9},{"startOffset":6259,"endOffset":6308,"count":8}],"isBlockCoverage":true},{"functionName":"globalMiddlewareFactory","ranges":[{"startOffset":6336,"endOffset":7171,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6409,"endOffset":7168,"count":1},{"startOffset":6599,"endOffset":6964,"count":0}],"isBlockCoverage":true},{"functionName":"commandMiddlewareFactory","ranges":[{"startOffset":7172,"endOffset":7409,"count":4},{"startOffset":7273,"endOffset":7408,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7307,"endOffset":7405,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddleware","ranges":[{"startOffset":7410,"endOffset":8413,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7629,"endOffset":8403,"count":2},{"startOffset":7719,"endOffset":7783,"count":1},{"startOffset":7783,"endOffset":8056,"count":0},{"startOffset":8056,"endOffset":8397,"count":1},{"startOffset":8156,"endOffset":8176,"count":0},{"startOffset":8194,"endOffset":8222,"count":0},{"startOffset":8358,"endOffset":8386,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7830,"endOffset":7947,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7971,"endOffset":8044,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8290,"endOffset":8340,"count":1}],"isBlockCoverage":true},{"functionName":"getProcessArgvBinIndex","ranges":[{"startOffset":8415,"endOffset":8516,"count":0}],"isBlockCoverage":false},{"functionName":"isBundledElectronApp","ranges":[{"startOffset":8517,"endOffset":8603,"count":0}],"isBlockCoverage":false},{"functionName":"isElectronApp","ranges":[{"startOffset":8604,"endOffset":8672,"count":0}],"isBlockCoverage":false},{"functionName":"hideBin","ranges":[{"startOffset":8673,"endOffset":8752,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessArgvBin","ranges":[{"startOffset":8753,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"whichModule","ranges":[{"startOffset":8968,"endOffset":9273,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":9314,"endOffset":23717,"count":1}],"isBlockCoverage":true},{"functionName":"addHandler","ranges":[{"startOffset":9501,"endOffset":12153,"count":4},{"startOffset":9715,"endOffset":9729,"count":2},{"startOffset":9763,"endOffset":10015,"count":1},{"startOffset":9863,"endOffset":10005,"count":0},{"startOffset":10015,"endOffset":10686,"count":3},{"startOffset":10066,"endOffset":10460,"count":2},{"startOffset":10121,"endOffset":10155,"count":1},{"startOffset":10202,"endOffset":10219,"count":0},{"startOffset":10266,"endOffset":10315,"count":0},{"startOffset":10460,"endOffset":10686,"count":1},{"startOffset":10515,"endOffset":10686,"count":0},{"startOffset":10686,"endOffset":12147,"count":2},{"startOffset":11191,"endOffset":11203,"count":0},{"startOffset":11221,"endOffset":11246,"count":0},{"startOffset":11274,"endOffset":11463,"count":1},{"startOffset":11870,"endOffset":11875,"count":0},{"startOffset":12092,"endOffset":12137,"count":1}],"isBlockCoverage":true},{"functionName":"handler","ranges":[{"startOffset":9719,"endOffset":9728,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10813,"endOffset":10845,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10960,"endOffset":11145,"count":3},{"startOffset":11011,"endOffset":11102,"count":1},{"startOffset":11102,"endOffset":11144,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11492,"endOffset":11569,"count":0}],"isBlockCoverage":false},{"functionName":"addDirectory","ranges":[{"startOffset":12179,"endOffset":12983,"count":0}],"isBlockCoverage":false},{"functionName":"moduleName","ranges":[{"startOffset":12989,"endOffset":13214,"count":0}],"isBlockCoverage":false},{"functionName":"commandFromFilename","ranges":[{"startOffset":13219,"endOffset":13339,"count":0}],"isBlockCoverage":false},{"functionName":"extractDesc","ranges":[{"startOffset":13344,"endOffset":13639,"count":2},{"startOffset":13459,"endOffset":13611,"count":3},{"startOffset":13502,"endOffset":13519,"count":1},{"startOffset":13537,"endOffset":13549,"count":2},{"startOffset":13549,"endOffset":13611,"count":1},{"startOffset":13611,"endOffset":13638,"count":0}],"isBlockCoverage":true},{"functionName":"self.getCommands","ranges":[{"startOffset":13663,"endOffset":13720,"count":2}],"isBlockCoverage":true},{"functionName":"self.getCommandHandlers","ranges":[{"startOffset":13752,"endOffset":13766,"count":0}],"isBlockCoverage":false},{"functionName":"self.hasDefaultCommand","ranges":[{"startOffset":13797,"endOffset":13819,"count":2}],"isBlockCoverage":true},{"functionName":"runCommand","ranges":[{"startOffset":13843,"endOffset":18015,"count":1},{"startOffset":14297,"endOffset":14430,"count":0},{"startOffset":14678,"endOffset":14685,"count":0},{"startOffset":15081,"endOffset":15734,"count":0},{"startOffset":16691,"endOffset":16791,"count":0},{"startOffset":17547,"endOffset":17699,"count":0},{"startOffset":17731,"endOffset":17832,"count":0},{"startOffset":17930,"endOffset":17983,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15518,"endOffset":15594,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16639,"endOffset":16675,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17027,"endOffset":17178,"count":1},{"startOffset":17084,"endOffset":17160,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17207,"endOffset":17407,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17435,"endOffset":17531,"count":1}],"isBlockCoverage":true},{"functionName":"shouldUpdateUsage","ranges":[{"startOffset":18021,"endOffset":18189,"count":1}],"isBlockCoverage":true},{"functionName":"usageFromParentCommandsCommandHandler","ranges":[{"startOffset":18194,"endOffset":18616,"count":1},{"startOffset":18350,"endOffset":18410,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18491,"endOffset":18551,"count":0}],"isBlockCoverage":false},{"functionName":"self.runDefaultBuilderOn","ranges":[{"startOffset":18648,"endOffset":19382,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositionals","ranges":[{"startOffset":19388,"endOffset":20228,"count":1},{"startOffset":19758,"endOffset":19875,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20076,"endOffset":20087,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositional","ranges":[{"startOffset":20233,"endOffset":20567,"count":1},{"startOffset":20442,"endOffset":20561,"count":0}],"isBlockCoverage":true},{"functionName":"postProcessPositionals","ranges":[{"startOffset":20572,"endOffset":22332,"count":1},{"startOffset":21443,"endOffset":22326,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21115,"endOffset":21391,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21159,"endOffset":21379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21927,"endOffset":22010,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22058,"endOffset":22314,"count":0}],"isBlockCoverage":false},{"functionName":"self.cmdToParseOptions","ranges":[{"startOffset":22362,"endOffset":23211,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22602,"endOffset":22893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22928,"endOffset":23174,"count":1}],"isBlockCoverage":true},{"functionName":"self.reset","ranges":[{"startOffset":23230,"endOffset":23346,"count":1}],"isBlockCoverage":true},{"functionName":"self.freeze","ranges":[{"startOffset":23390,"endOffset":23510,"count":1}],"isBlockCoverage":true},{"functionName":"self.unfreeze","ranges":[{"startOffset":23532,"endOffset":23697,"count":1}],"isBlockCoverage":true},{"functionName":"isCommandBuilderDefinition","ranges":[{"startOffset":23718,"endOffset":23886,"count":1},{"startOffset":23805,"endOffset":23833,"count":0},{"startOffset":23834,"endOffset":23882,"count":0}],"isBlockCoverage":true},{"functionName":"isCommandAndAliases","ranges":[{"startOffset":23887,"endOffset":24039,"count":1},{"startOffset":23998,"endOffset":24037,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23941,"endOffset":23967,"count":2}],"isBlockCoverage":true},{"functionName":"isCommandBuilderCallback","ranges":[{"startOffset":24040,"endOffset":24128,"count":1}],"isBlockCoverage":true},{"functionName":"isCommandBuilderOptionDefinitions","ranges":[{"startOffset":24129,"endOffset":24224,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandHandlerDefinition","ranges":[{"startOffset":24225,"endOffset":24328,"count":3},{"startOffset":24303,"endOffset":24325,"count":2}],"isBlockCoverage":true},{"functionName":"setBlocking","ranges":[{"startOffset":24330,"endOffset":24700,"count":0}],"isBlockCoverage":false},{"functionName":"usage","ranges":[{"startOffset":24702,"endOffset":43891,"count":1}],"isBlockCoverage":true},{"functionName":"failFn","ranges":[{"startOffset":24823,"endOffset":24872,"count":1}],"isBlockCoverage":true},{"functionName":"showHelpOnFailFn","ranges":[{"startOffset":24959,"endOffset":25277,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":25326,"endOffset":26442,"count":0}],"isBlockCoverage":false},{"functionName":"self.usage","ranges":[{"startOffset":26513,"endOffset":26763,"count":1},{"startOffset":26563,"endOffset":26658,"count":0},{"startOffset":26728,"endOffset":26733,"count":0}],"isBlockCoverage":true},{"functionName":"self.getUsage","ranges":[{"startOffset":26785,"endOffset":26821,"count":1}],"isBlockCoverage":true},{"functionName":"self.getUsageDisabled","ranges":[{"startOffset":26851,"endOffset":26894,"count":1}],"isBlockCoverage":true},{"functionName":"self.getPositionalGroupName","ranges":[{"startOffset":26930,"endOffset":26978,"count":84}],"isBlockCoverage":true},{"functionName":"self.example","ranges":[{"startOffset":27022,"endOffset":27100,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":27144,"endOffset":27478,"count":2},{"startOffset":27244,"endOffset":27391,"count":1},{"startOffset":27432,"endOffset":27437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27282,"endOffset":27379,"count":0}],"isBlockCoverage":false},{"functionName":"self.getCommands","ranges":[{"startOffset":27503,"endOffset":27517,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":27566,"endOffset":27994,"count":48},{"startOffset":27641,"endOffset":27745,"count":0},{"startOffset":27794,"endOffset":27919,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27673,"endOffset":27733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27839,"endOffset":27907,"count":0}],"isBlockCoverage":false},{"functionName":"self.getDescriptions","ranges":[{"startOffset":28023,"endOffset":28041,"count":2}],"isBlockCoverage":true},{"functionName":"self.epilog","ranges":[{"startOffset":28083,"endOffset":28124,"count":1}],"isBlockCoverage":true},{"functionName":"self.wrap","ranges":[{"startOffset":28181,"endOffset":28241,"count":1}],"isBlockCoverage":true},{"functionName":"getWrap","ranges":[{"startOffset":28247,"endOffset":28390,"count":1},{"startOffset":28290,"endOffset":28363,"count":0}],"isBlockCoverage":true},{"functionName":"self.deferY18nLookup","ranges":[{"startOffset":28472,"endOffset":28506,"count":3}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":28524,"endOffset":38490,"count":1},{"startOffset":28585,"endOffset":28610,"count":0},{"startOffset":28720,"endOffset":28750,"count":0},{"startOffset":29989,"endOffset":30322,"count":0},{"startOffset":30362,"endOffset":32088,"count":0},{"startOffset":32143,"endOffset":32148,"count":0},{"startOffset":32194,"endOffset":32199,"count":0},{"startOffset":37472,"endOffset":38238,"count":0},{"startOffset":38271,"endOffset":38434,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29365,"endOffset":29476,"count":52}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29714,"endOffset":29947,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30698,"endOffset":30732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30778,"endOffset":32054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32229,"endOffset":32355,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32297,"endOffset":32354,"count":1804},{"startOffset":32328,"endOffset":32333,"count":748}],"isBlockCoverage":true},{"functionName":"isLongSwitch","ranges":[{"startOffset":32575,"endOffset":32606,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32680,"endOffset":32721,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32740,"endOffset":33283,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32874,"endOffset":33221,"count":44},{"startOffset":32948,"endOffset":32959,"count":23},{"startOffset":32959,"endOffset":33048,"count":21},{"startOffset":33048,"endOffset":33179,"count":861},{"startOffset":33100,"endOffset":33105,"count":357},{"startOffset":33145,"endOffset":33161,"count":0},{"startOffset":33179,"endOffset":33220,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33305,"endOffset":33354,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33373,"endOffset":34439,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33461,"endOffset":34363,"count":44},{"startOffset":33557,"endOffset":33562,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33589,"endOffset":34085,"count":69},{"startOffset":33690,"endOffset":33700,"count":1},{"startOffset":33700,"endOffset":34067,"count":68},{"startOffset":33808,"endOffset":33916,"count":0},{"startOffset":33993,"endOffset":33999,"count":48},{"startOffset":34032,"endOffset":34037,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34113,"endOffset":34287,"count":29},{"startOffset":34187,"endOffset":34190,"count":5},{"startOffset":34211,"endOffset":34287,"count":24},{"startOffset":34255,"endOffset":34258,"count":2},{"startOffset":34283,"endOffset":34287,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34512,"endOffset":34574,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34594,"endOffset":34685,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34650,"endOffset":34684,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34773,"endOffset":34835,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34862,"endOffset":35142,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34937,"endOffset":35126,"count":43},{"startOffset":34999,"endOffset":35108,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35187,"endOffset":37440,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35300,"endOffset":37406,"count":44},{"startOffset":35401,"endOffset":35406,"count":0},{"startOffset":35523,"endOffset":35579,"count":0},{"startOffset":35651,"endOffset":35679,"count":24},{"startOffset":35749,"endOffset":35775,"count":0},{"startOffset":35846,"endOffset":35873,"count":8},{"startOffset":35947,"endOffset":35974,"count":2},{"startOffset":36044,"endOffset":36070,"count":10},{"startOffset":36141,"endOffset":36168,"count":2},{"startOffset":36466,"endOffset":36507,"count":0},{"startOffset":36609,"endOffset":36632,"count":0},{"startOffset":36725,"endOffset":36796,"count":0},{"startOffset":37341,"endOffset":37392,"count":0}],"isBlockCoverage":true},{"functionName":"deprecatedExtra","ranges":[{"startOffset":36209,"endOffset":36363,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37540,"endOffset":37631,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37663,"endOffset":38204,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38324,"endOffset":38364,"count":0}],"isBlockCoverage":false},{"functionName":"maxWidth","ranges":[{"startOffset":38496,"endOffset":38973,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38647,"endOffset":38655,"count":454}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38690,"endOffset":38843,"count":454},{"startOffset":38752,"endOffset":38784,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeAliases","ranges":[{"startOffset":38978,"endOffset":40022,"count":1},{"startOffset":39148,"endOffset":39153,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39163,"endOffset":40014,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39211,"endOffset":40002,"count":26},{"startOffset":39283,"endOffset":39323,"count":0},{"startOffset":39390,"endOffset":39438,"count":0},{"startOffset":39512,"endOffset":39531,"count":0},{"startOffset":39603,"endOffset":39620,"count":0},{"startOffset":39693,"endOffset":39711,"count":0},{"startOffset":39787,"endOffset":39808,"count":0},{"startOffset":39880,"endOffset":39897,"count":0},{"startOffset":39970,"endOffset":39988,"count":0}],"isBlockCoverage":true},{"functionName":"self.cacheHelpMessage","ranges":[{"startOffset":40078,"endOffset":40138,"count":1}],"isBlockCoverage":true},{"functionName":"self.clearCachedHelpMessage","ranges":[{"startOffset":40174,"endOffset":40232,"count":1}],"isBlockCoverage":true},{"functionName":"addUngroupedKeys","ranges":[{"startOffset":40238,"endOffset":40737,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40397,"endOffset":40478,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40502,"endOffset":40701,"count":44},{"startOffset":40628,"endOffset":40691,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40591,"endOffset":40625,"count":48}],"isBlockCoverage":true},{"functionName":"filterHiddenOptions","ranges":[{"startOffset":40742,"endOffset":40918,"count":98},{"startOffset":40844,"endOffset":40910,"count":2}],"isBlockCoverage":true},{"functionName":"self.showHelp","ranges":[{"startOffset":40939,"endOffset":41158,"count":0}],"isBlockCoverage":false},{"functionName":"self.functionDescription","ranges":[{"startOffset":41191,"endOffset":41377,"count":0}],"isBlockCoverage":false},{"functionName":"stringifiedValues","ranges":[{"startOffset":41408,"endOffset":41806,"count":0}],"isBlockCoverage":false},{"functionName":"defaultString","ranges":[{"startOffset":41812,"endOffset":42459,"count":44},{"startOffset":41940,"endOffset":41962,"count":36},{"startOffset":41976,"endOffset":41988,"count":31},{"startOffset":41988,"endOffset":42021,"count":13},{"startOffset":42021,"endOffset":42074,"count":5},{"startOffset":42074,"endOffset":42424,"count":8},{"startOffset":42142,"endOffset":42227,"count":2},{"startOffset":42244,"endOffset":42338,"count":3},{"startOffset":42355,"endOffset":42400,"count":3},{"startOffset":42424,"endOffset":42458,"count":13}],"isBlockCoverage":true},{"functionName":"windowWidth","ranges":[{"startOffset":42464,"endOffset":42690,"count":0}],"isBlockCoverage":false},{"functionName":"self.version","ranges":[{"startOffset":42734,"endOffset":42771,"count":3}],"isBlockCoverage":true},{"functionName":"self.showVersion","ranges":[{"startOffset":42796,"endOffset":42889,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":42908,"endOffset":43213,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43164,"endOffset":43184,"count":2}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":43257,"endOffset":43507,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":43529,"endOffset":43871,"count":1}],"isBlockCoverage":true},{"functionName":"isIndentedText","ranges":[{"startOffset":43892,"endOffset":43962,"count":1146}],"isBlockCoverage":true},{"functionName":"addIndentation","ranges":[{"startOffset":43963,"endOffset":44147,"count":23},{"startOffset":44043,"endOffset":44104,"count":0}],"isBlockCoverage":true},{"functionName":"getIndentation","ranges":[{"startOffset":44148,"endOffset":44237,"count":498},{"startOffset":44212,"endOffset":44230,"count":282},{"startOffset":44231,"endOffset":44234,"count":216}],"isBlockCoverage":true},{"functionName":"getText","ranges":[{"startOffset":44238,"endOffset":44316,"count":625},{"startOffset":44295,"endOffset":44306,"count":282},{"startOffset":44307,"endOffset":44313,"count":343}],"isBlockCoverage":true},{"functionName":"completion","ranges":[{"startOffset":45697,"endOffset":50817,"count":1},{"startOffset":45973,"endOffset":46018,"count":0},{"startOffset":46056,"endOffset":46104,"count":0}],"isBlockCoverage":true},{"functionName":"setParsed","ranges":[{"startOffset":45860,"endOffset":45928,"count":1}],"isBlockCoverage":true},{"functionName":"getCompletion","ranges":[{"startOffset":46132,"endOffset":50219,"count":0}],"isBlockCoverage":false},{"functionName":"generateCompletionScript","ranges":[{"startOffset":50257,"endOffset":50686,"count":0}],"isBlockCoverage":false},{"functionName":"self.registerFunction","ranges":[{"startOffset":50751,"endOffset":50797,"count":0}],"isBlockCoverage":false},{"functionName":"isSyncCompletionFunction","ranges":[{"startOffset":50818,"endOffset":50917,"count":0}],"isBlockCoverage":false},{"functionName":"levenshtein","ranges":[{"startOffset":50919,"endOffset":51642,"count":0}],"isBlockCoverage":false},{"functionName":"validation","ranges":[{"startOffset":51683,"endOffset":63616,"count":1}],"isBlockCoverage":true},{"functionName":"nonOptionCount","ranges":[{"startOffset":51828,"endOffset":53555,"count":1},{"startOffset":51982,"endOffset":52001,"count":0},{"startOffset":52112,"endOffset":52187,"count":0},{"startOffset":52189,"endOffset":53549,"count":0}],"isBlockCoverage":true},{"functionName":"positionalCount","ranges":[{"startOffset":53584,"endOffset":53872,"count":1},{"startOffset":53664,"endOffset":53866,"count":0}],"isBlockCoverage":true},{"functionName":"requiredArguments","ranges":[{"startOffset":53903,"endOffset":54878,"count":1},{"startOffset":54082,"endOffset":54321,"count":0},{"startOffset":54343,"endOffset":54872,"count":0}],"isBlockCoverage":true},{"functionName":"unknownArguments","ranges":[{"startOffset":54908,"endOffset":56092,"count":0}],"isBlockCoverage":false},{"functionName":"unknownCommands","ranges":[{"startOffset":56121,"endOffset":56838,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAndSomeAliasIsNotNew","ranges":[{"startOffset":56879,"endOffset":57325,"count":0}],"isBlockCoverage":false},{"functionName":"limitedChoices","ranges":[{"startOffset":57353,"endOffset":58401,"count":1},{"startOffset":57526,"endOffset":58400,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57561,"endOffset":58012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58187,"endOffset":58368,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":58441,"endOffset":58549,"count":1}],"isBlockCoverage":true},{"functionName":"customChecks","ranges":[{"startOffset":58575,"endOffset":59234,"count":1},{"startOffset":58833,"endOffset":58952,"count":0},{"startOffset":58978,"endOffset":59071,"count":0},{"startOffset":59148,"endOffset":59218,"count":0}],"isBlockCoverage":true},{"functionName":"implies","ranges":[{"startOffset":59277,"endOffset":59940,"count":0}],"isBlockCoverage":false},{"functionName":"getImplied","ranges":[{"startOffset":59964,"endOffset":60017,"count":0}],"isBlockCoverage":false},{"functionName":"keyExists","ranges":[{"startOffset":60023,"endOffset":60422,"count":0}],"isBlockCoverage":false},{"functionName":"implications","ranges":[{"startOffset":60447,"endOffset":61176,"count":1},{"startOffset":60986,"endOffset":61170,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60544,"endOffset":60953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61075,"endOffset":61129,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":61225,"endOffset":61837,"count":16},{"startOffset":61378,"endOffset":61492,"count":0},{"startOffset":61574,"endOffset":61628,"count":4},{"startOffset":61667,"endOffset":61742,"count":2},{"startOffset":61742,"endOffset":61821,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61417,"endOffset":61480,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61699,"endOffset":61726,"count":12}],"isBlockCoverage":true},{"functionName":"self.getConflicting","ranges":[{"startOffset":61865,"endOffset":61882,"count":0}],"isBlockCoverage":false},{"functionName":"conflictingFn","ranges":[{"startOffset":61907,"endOffset":62329,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61972,"endOffset":62321,"count":14},{"startOffset":62015,"endOffset":62311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":62058,"endOffset":62295,"count":0}],"isBlockCoverage":false},{"functionName":"recommendCommands","ranges":[{"startOffset":62360,"endOffset":62981,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":63000,"endOffset":63231,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":63067,"endOffset":63087,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63135,"endOffset":63155,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63189,"endOffset":63202,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":63275,"endOffset":63401,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":63423,"endOffset":63596,"count":1}],"isBlockCoverage":true},{"functionName":"YargsWithShim","ranges":[{"startOffset":63630,"endOffset":63701,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs","ranges":[{"startOffset":63702,"endOffset":105257,"count":1},{"startOffset":64430,"endOffset":64502,"count":0},{"startOffset":64730,"endOffset":64782,"count":0},{"startOffset":64784,"endOffset":64921,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.scriptName","ranges":[{"startOffset":64155,"endOffset":64273,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64540,"endOffset":64665,"count":1},{"startOffset":64655,"endOffset":64658,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.getContext","ranges":[{"startOffset":65023,"endOffset":65036,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.exit","ranges":[{"startOffset":65107,"endOffset":65244,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.completion","ranges":[{"startOffset":65302,"endOffset":65839,"count":0}],"isBlockCoverage":false},{"functionName":"resetOptions","ranges":[{"startOffset":65895,"endOffset":68249,"count":2},{"startOffset":65985,"endOffset":65990,"count":1},{"startOffset":66064,"endOffset":66079,"count":1},{"startOffset":66080,"endOffset":66084,"count":1},{"startOffset":66155,"endOffset":66178,"count":1},{"startOffset":66191,"endOffset":66195,"count":1},{"startOffset":67651,"endOffset":67679,"count":1},{"startOffset":67680,"endOffset":67707,"count":1},{"startOffset":67757,"endOffset":67790,"count":1},{"startOffset":67803,"endOffset":67844,"count":1},{"startOffset":67888,"endOffset":67907,"count":1},{"startOffset":67920,"endOffset":67984,"count":1},{"startOffset":68025,"endOffset":68085,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66262,"endOffset":66414,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66483,"endOffset":66707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67323,"endOffset":67418,"count":16},{"startOffset":67370,"endOffset":67375,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67384,"endOffset":67406,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67451,"endOffset":67542,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67510,"endOffset":67530,"count":4}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":68304,"endOffset":68860,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":68865,"endOffset":69563,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.boolean","ranges":[{"startOffset":69583,"endOffset":69738,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.array","ranges":[{"startOffset":69757,"endOffset":69910,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.number","ranges":[{"startOffset":69930,"endOffset":70084,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.normalize","ranges":[{"startOffset":70107,"endOffset":70264,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.count","ranges":[{"startOffset":70283,"endOffset":70436,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.string","ranges":[{"startOffset":70456,"endOffset":70610,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.requiresArg","ranges":[{"startOffset":70635,"endOffset":70968,"count":14},{"startOffset":70790,"endOffset":70826,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.skipValidation","ranges":[{"startOffset":70996,"endOffset":71158,"count":0}],"isBlockCoverage":false},{"functionName":"populateParserHintArray","ranges":[{"startOffset":71164,"endOffset":71363,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71264,"endOffset":71355,"count":49}],"isBlockCoverage":true},{"functionName":"Yargs.self.nargs","ranges":[{"startOffset":71381,"endOffset":71595,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.choices","ranges":[{"startOffset":71616,"endOffset":71835,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.alias","ranges":[{"startOffset":71854,"endOffset":72069,"count":24}],"isBlockCoverage":true},{"functionName":"Yargs.self.default.self.defaults","ranges":[{"startOffset":72106,"endOffset":72786,"count":8},{"startOffset":72289,"endOffset":72408,"count":0},{"startOffset":72450,"endOffset":72673,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.describe","ranges":[{"startOffset":72808,"endOffset":73003,"count":48}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":73009,"endOffset":73137,"count":48}],"isBlockCoverage":true},{"functionName":"demandOption","ranges":[{"startOffset":73142,"endOffset":73383,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.coerce","ranges":[{"startOffset":73440,"endOffset":73662,"count":6}],"isBlockCoverage":true},{"functionName":"populateParserHintSingleValueDictionary","ranges":[{"startOffset":73668,"endOffset":73891,"count":76}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":73810,"endOffset":73883,"count":76}],"isBlockCoverage":true},{"functionName":"populateParserHintArrayDictionary","ranges":[{"startOffset":73896,"endOffset":74148,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74032,"endOffset":74140,"count":23}],"isBlockCoverage":true},{"functionName":"populateParserHintDictionary","ranges":[{"startOffset":74153,"endOffset":74622,"count":100},{"startOffset":74270,"endOffset":74363,"count":0},{"startOffset":74422,"endOffset":74530,"count":1},{"startOffset":74469,"endOffset":74520,"count":21},{"startOffset":74530,"endOffset":74616,"count":99}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74296,"endOffset":74351,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74382,"endOffset":74414,"count":100}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":74627,"endOffset":74747,"count":148},{"startOffset":74700,"endOffset":74721,"count":0}],"isBlockCoverage":true},{"functionName":"deleteFromParserHintObject","ranges":[{"startOffset":74752,"endOffset":75313,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74837,"endOffset":75252,"count":46},{"startOffset":74929,"endOffset":74936,"count":2},{"startOffset":74936,"endOffset":75017,"count":44},{"startOffset":75017,"endOffset":75139,"count":18},{"startOffset":75085,"endOffset":75125,"count":2},{"startOffset":75139,"endOffset":75242,"count":26},{"startOffset":75187,"endOffset":75242,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74869,"endOffset":74901,"count":46}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":75332,"endOffset":76111,"count":2},{"startOffset":75520,"endOffset":75542,"count":1},{"startOffset":75544,"endOffset":75770,"count":1},{"startOffset":75716,"endOffset":75721,"count":0},{"startOffset":75770,"endOffset":75810,"count":1},{"startOffset":75810,"endOffset":75877,"count":0},{"startOffset":75877,"endOffset":75963,"count":1},{"startOffset":75994,"endOffset":75999,"count":0},{"startOffset":76000,"endOffset":76007,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":76017,"endOffset":76082,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.example","ranges":[{"startOffset":76132,"endOffset":76460,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.command","ranges":[{"startOffset":76481,"endOffset":76865,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.commandDir","ranges":[{"startOffset":76889,"endOffset":77151,"count":0}],"isBlockCoverage":false},{"functionName":"demand","ranges":[{"startOffset":77202,"endOffset":78178,"count":0}],"isBlockCoverage":false},{"functionName":"demandCommand","ranges":[{"startOffset":78205,"endOffset":78685,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDemandedOptions","ranges":[{"startOffset":78717,"endOffset":78794,"count":3}],"isBlockCoverage":true},{"functionName":"Yargs.self.getDemandedCommands","ranges":[{"startOffset":78827,"endOffset":78905,"count":2}],"isBlockCoverage":true},{"functionName":"deprecateOption","ranges":[{"startOffset":78934,"endOffset":79140,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDeprecatedOptions","ranges":[{"startOffset":79174,"endOffset":79253,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.implies","ranges":[{"startOffset":79274,"endOffset":79456,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.conflicts","ranges":[{"startOffset":79479,"endOffset":79656,"count":4}],"isBlockCoverage":true},{"functionName":"Yargs.self.usage","ranges":[{"startOffset":79675,"endOffset":80345,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.epilogue.self.epilog","ranges":[{"startOffset":80381,"endOffset":80507,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.fail","ranges":[{"startOffset":80525,"endOffset":80647,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.onFinishCommand","ranges":[{"startOffset":80676,"endOffset":80805,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getHandlerFinishCommand","ranges":[{"startOffset":80842,"endOffset":80868,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.check","ranges":[{"startOffset":80887,"endOffset":81060,"count":1}],"isBlockCoverage":true},{"functionName":"global","ranges":[{"startOffset":81080,"endOffset":81557,"count":16},{"startOffset":81358,"endOffset":81530,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":81316,"endOffset":81346,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81402,"endOffset":81518,"count":0}],"isBlockCoverage":false},{"functionName":"pkgConf","ranges":[{"startOffset":81578,"endOffset":82055,"count":0}],"isBlockCoverage":false},{"functionName":"pkgUp","ranges":[{"startOffset":82082,"endOffset":82959,"count":1},{"startOffset":82185,"endOffset":82204,"count":0},{"startOffset":82361,"endOffset":82434,"count":0},{"startOffset":82875,"endOffset":82892,"count":0},{"startOffset":82919,"endOffset":82924,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82491,"endOffset":82716,"count":2},{"startOffset":82561,"endOffset":82702,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":83030,"endOffset":84057,"count":1},{"startOffset":83258,"endOffset":83453,"count":0},{"startOffset":83500,"endOffset":83589,"count":0},{"startOffset":83638,"endOffset":83719,"count":0},{"startOffset":83812,"endOffset":83832,"count":0},{"startOffset":83973,"endOffset":84008,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self._getParseContext","ranges":[{"startOffset":84087,"endOffset":84111,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._hasParseCallback","ranges":[{"startOffset":84142,"endOffset":84157,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":84192,"endOffset":87432,"count":44},{"startOffset":84332,"endOffset":84444,"count":1},{"startOffset":84444,"endOffset":87405,"count":43},{"startOffset":84501,"endOffset":84542,"count":0},{"startOffset":84623,"endOffset":84650,"count":0},{"startOffset":84741,"endOffset":84810,"count":0},{"startOffset":84905,"endOffset":84962,"count":0},{"startOffset":84997,"endOffset":85121,"count":0},{"startOffset":85153,"endOffset":85220,"count":4},{"startOffset":85255,"endOffset":85318,"count":8},{"startOffset":85362,"endOffset":85425,"count":0},{"startOffset":85467,"endOffset":85526,"count":0},{"startOffset":85555,"endOffset":85622,"count":1},{"startOffset":85654,"endOffset":85706,"count":2},{"startOffset":85736,"endOffset":85799,"count":0},{"startOffset":85828,"endOffset":85889,"count":6},{"startOffset":85917,"endOffset":85976,"count":40},{"startOffset":86032,"endOffset":86158,"count":0},{"startOffset":86210,"endOffset":86332,"count":0},{"startOffset":86386,"endOffset":86510,"count":0},{"startOffset":86564,"endOffset":86688,"count":0},{"startOffset":86740,"endOffset":86788,"count":0},{"startOffset":86838,"endOffset":86899,"count":0},{"startOffset":86940,"endOffset":87029,"count":5},{"startOffset":87066,"endOffset":87123,"count":0},{"startOffset":87181,"endOffset":87192,"count":0},{"startOffset":87260,"endOffset":87307,"count":1},{"startOffset":87341,"endOffset":87395,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":84371,"endOffset":84432,"count":42}],"isBlockCoverage":true},{"functionName":"Yargs.self.getOptions","ranges":[{"startOffset":87456,"endOffset":87469,"count":105}],"isBlockCoverage":true},{"functionName":"Yargs.self.positional","ranges":[{"startOffset":87493,"endOffset":89136,"count":1},{"startOffset":87619,"endOffset":87728,"count":0},{"startOffset":88450,"endOffset":88492,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88090,"endOffset":88311,"count":3},{"startOffset":88189,"endOffset":88241,"count":1},{"startOffset":88259,"endOffset":88274,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88676,"endOffset":89030,"count":4},{"startOffset":88778,"endOffset":88883,"count":1},{"startOffset":88853,"endOffset":88869,"count":0},{"startOffset":88883,"endOffset":89020,"count":3},{"startOffset":88940,"endOffset":88956,"count":0},{"startOffset":88978,"endOffset":89006,"count":0}],"isBlockCoverage":true},{"functionName":"group","ranges":[{"startOffset":89155,"endOffset":89676,"count":41},{"startOffset":89384,"endOffset":89442,"count":0},{"startOffset":89506,"endOffset":89511,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89533,"endOffset":89647,"count":247},{"startOffset":89585,"endOffset":89598,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.getGroups","ranges":[{"startOffset":89699,"endOffset":89747,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.env","ranges":[{"startOffset":89764,"endOffset":90002,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.wrap","ranges":[{"startOffset":90020,"endOffset":90162,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.strict","ranges":[{"startOffset":90206,"endOffset":90348,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrict","ranges":[{"startOffset":90371,"endOffset":90383,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.strictCommands","ranges":[{"startOffset":90443,"endOffset":90593,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrictCommands","ranges":[{"startOffset":90624,"endOffset":90644,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.strictOptions","ranges":[{"startOffset":90702,"endOffset":90851,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrictOptions","ranges":[{"startOffset":90881,"endOffset":90900,"count":0}],"isBlockCoverage":false},{"functionName":"parserConfiguration","ranges":[{"startOffset":90960,"endOffset":91113,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.getParserConfiguration","ranges":[{"startOffset":91149,"endOffset":91167,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.showHelp","ranges":[{"startOffset":91189,"endOffset":91534,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":91582,"endOffset":92607,"count":2},{"startOffset":91775,"endOffset":91909,"count":1},{"startOffset":91946,"endOffset":92322,"count":1},{"startOffset":92070,"endOffset":92217,"count":0},{"startOffset":92259,"endOffset":92322,"count":0},{"startOffset":92374,"endOffset":92393,"count":0},{"startOffset":92413,"endOffset":92462,"count":1},{"startOffset":92492,"endOffset":92504,"count":0}],"isBlockCoverage":true},{"functionName":"guessVersion","ranges":[{"startOffset":92613,"endOffset":92714,"count":1},{"startOffset":92695,"endOffset":92707,"count":0}],"isBlockCoverage":true},{"functionName":"addHelpOpt","ranges":[{"startOffset":92773,"endOffset":93338,"count":2},{"startOffset":92941,"endOffset":93029,"count":1},{"startOffset":93066,"endOffset":93137,"count":0},{"startOffset":93180,"endOffset":93185,"count":1},{"startOffset":93186,"endOffset":93202,"count":1},{"startOffset":93270,"endOffset":93309,"count":1}],"isBlockCoverage":true},{"functionName":"addShowHiddenOpt","ranges":[{"startOffset":93484,"endOffset":93993,"count":0}],"isBlockCoverage":false},{"functionName":"hide","ranges":[{"startOffset":94011,"endOffset":94153,"count":1}],"isBlockCoverage":true},{"functionName":"showHelpOnFail","ranges":[{"startOffset":94181,"endOffset":94385,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.exitProcess","ranges":[{"startOffset":94438,"endOffset":94582,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getExitProcess","ranges":[{"startOffset":94610,"endOffset":94627,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.showCompletionScript","ranges":[{"startOffset":94661,"endOffset":94909,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getCompletion","ranges":[{"startOffset":94936,"endOffset":95084,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.locale","ranges":[{"startOffset":95104,"endOffset":95366,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.updateStrings.self.updateLocale","ranges":[{"startOffset":95413,"endOffset":95572,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.detectLocale","ranges":[{"startOffset":95627,"endOffset":95762,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDetectLocale","ranges":[{"startOffset":95791,"endOffset":95809,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":95841,"endOffset":96077,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":96087,"endOffset":96327,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._getLoggerInstance","ranges":[{"startOffset":96366,"endOffset":96379,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._hasOutput","ranges":[{"startOffset":96403,"endOffset":96418,"count":3}],"isBlockCoverage":true},{"functionName":"Yargs.self._setHasOutput","ranges":[{"startOffset":96445,"endOffset":96484,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.recommendCommands","ranges":[{"startOffset":96542,"endOffset":96698,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getUsageInstance","ranges":[{"startOffset":96728,"endOffset":96741,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.getValidationInstance","ranges":[{"startOffset":96776,"endOffset":96794,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getCommandInstance","ranges":[{"startOffset":96826,"endOffset":96841,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.terminalWidth","ranges":[{"startOffset":96868,"endOffset":96947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":97004,"endOffset":97038,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":97096,"endOffset":102725,"count":2},{"startOffset":97242,"endOffset":97256,"count":1},{"startOffset":97788,"endOffset":97833,"count":0},{"startOffset":98002,"endOffset":98105,"count":0},{"startOffset":98221,"endOffset":98226,"count":0},{"startOffset":98347,"endOffset":98442,"count":0},{"startOffset":98723,"endOffset":98793,"count":0},{"startOffset":98826,"endOffset":100392,"count":0},{"startOffset":100444,"endOffset":100466,"count":1},{"startOffset":100468,"endOffset":100669,"count":1},{"startOffset":100669,"endOffset":101256,"count":0},{"startOffset":101256,"endOffset":102007,"count":1},{"startOffset":102007,"endOffset":102043,"count":0},{"startOffset":102045,"endOffset":102188,"count":0},{"startOffset":102188,"endOffset":102222,"count":1},{"startOffset":102222,"endOffset":102466,"count":0},{"startOffset":102485,"endOffset":102639,"count":0},{"startOffset":102639,"endOffset":102724,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98256,"endOffset":98273,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100946,"endOffset":101151,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101329,"endOffset":101958,"count":14},{"startOffset":101378,"endOffset":101390,"count":0},{"startOffset":101392,"endOffset":101634,"count":0},{"startOffset":101683,"endOffset":101695,"count":0},{"startOffset":101697,"endOffset":101940,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":102103,"endOffset":102172,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._postProcess","ranges":[{"startOffset":102751,"endOffset":103332,"count":3},{"startOffset":102857,"endOffset":102869,"count":1},{"startOffset":102869,"endOffset":102913,"count":2},{"startOffset":102913,"endOffset":103201,"count":1},{"startOffset":103239,"endOffset":103331,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self._copyDoubleDash","ranges":[{"startOffset":103361,"endOffset":103593,"count":1},{"startOffset":103439,"endOffset":103592,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self._parsePositionalNumbers","ranges":[{"startOffset":103630,"endOffset":103987,"count":1},{"startOffset":103680,"endOffset":103692,"count":0},{"startOffset":103768,"endOffset":103960,"count":0}],"isBlockCoverage":true},{"functionName":"runValidation","ranges":[{"startOffset":104015,"endOffset":104874,"count":1},{"startOffset":104146,"endOffset":104184,"count":0},{"startOffset":104344,"endOffset":104426,"count":0},{"startOffset":104446,"endOffset":104470,"count":0},{"startOffset":104472,"endOffset":104574,"count":0},{"startOffset":104607,"endOffset":104694,"count":0}],"isBlockCoverage":true},{"functionName":"guessLocale","ranges":[{"startOffset":104880,"endOffset":105201,"count":2},{"startOffset":104951,"endOffset":105042,"count":0},{"startOffset":105043,"endOffset":105079,"count":0},{"startOffset":105080,"endOffset":105120,"count":0},{"startOffset":105121,"endOffset":105143,"count":0}],"isBlockCoverage":true},{"functionName":"rebase","ranges":[{"startOffset":105273,"endOffset":105319,"count":1}],"isBlockCoverage":true},{"functionName":"isYargsInstance","ranges":[{"startOffset":105321,"endOffset":105406,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":105816,"endOffset":105865,"count":3}],"isBlockCoverage":true},{"functionName":"argv","ranges":[{"startOffset":106229,"endOffset":106247,"count":2}],"isBlockCoverage":true},{"functionName":"execPath","ranges":[{"startOffset":106293,"endOffset":106315,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":106331,"endOffset":106384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/y18n/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6783,"count":1}],"isBlockCoverage":true},{"functionName":"Y18N","ranges":[{"startOffset":123,"endOffset":611,"count":1},{"startOffset":196,"endOffset":201,"count":0},{"startOffset":243,"endOffset":257,"count":0},{"startOffset":343,"endOffset":349,"count":0},{"startOffset":473,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":616,"endOffset":1683,"count":175},{"startOffset":676,"endOffset":755,"count":0},{"startOffset":913,"endOffset":929,"count":0},{"startOffset":946,"endOffset":964,"count":0},{"startOffset":1025,"endOffset":1048,"count":0},{"startOffset":1157,"endOffset":1176,"count":0},{"startOffset":1178,"endOffset":1535,"count":0},{"startOffset":1655,"endOffset":1661,"count":0}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":807,"endOffset":822,"count":175}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":949,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__n","ranges":[{"startOffset":1688,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"setLocale","ranges":[{"startOffset":3216,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"getLocale","ranges":[{"startOffset":3276,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":3328,"endOffset":3607,"count":1},{"startOffset":3453,"endOffset":3601,"count":3}],"isBlockCoverage":true},{"functionName":"_taggedLiteral","ranges":[{"startOffset":3612,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"_enqueueWrite","ranges":[{"startOffset":3957,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"_processWriteQueue","ranges":[{"startOffset":4106,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"_readLocaleFile","ranges":[{"startOffset":4751,"endOffset":5465,"count":1},{"startOffset":5145,"endOffset":5411,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveLocaleFile","ranges":[{"startOffset":5470,"endOffset":5946,"count":1},{"startOffset":5645,"endOffset":5672,"count":0},{"startOffset":5674,"endOffset":5919,"count":0}],"isBlockCoverage":true},{"functionName":"_fileExistsSync","ranges":[{"startOffset":5951,"endOffset":6014,"count":1}],"isBlockCoverage":true},{"functionName":"y18n$1","ranges":[{"startOffset":6017,"endOffset":6358,"count":1}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":6537,"endOffset":6683,"count":1},{"startOffset":6628,"endOffset":6677,"count":0}],"isBlockCoverage":true},{"functionName":"y18n","ranges":[{"startOffset":6701,"endOffset":6757,"count":1}],"isBlockCoverage":true}]},{"scriptId":"275","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/cliui/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9953,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":162,"endOffset":336,"count":1},{"startOffset":299,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"span","ranges":[{"startOffset":341,"endOffset":428,"count":44}],"isBlockCoverage":true},{"functionName":"resetOutput","ranges":[{"startOffset":433,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":483,"endOffset":956,"count":113},{"startOffset":529,"endOffset":566,"count":8},{"startOffset":627,"endOffset":657,"count":0},{"startOffset":659,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":750,"endOffset":897,"count":149},{"startOffset":800,"endOffset":863,"count":60},{"startOffset":863,"endOffset":896,"count":89}],"isBlockCoverage":true},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":961,"endOffset":1101,"count":113},{"startOffset":1026,"endOffset":1056,"count":61},{"startOffset":1057,"endOffset":1094,"count":16}],"isBlockCoverage":true},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1106,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2209,"endOffset":2329,"count":60}],"isBlockCoverage":true},{"functionName":"measurePadding","ranges":[{"startOffset":2334,"endOffset":2546,"count":60}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2551,"endOffset":2880,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2616,"endOffset":2676,"count":113}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2792,"endOffset":2812,"count":112}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2831,"endOffset":2848,"count":77}],"isBlockCoverage":true},{"functionName":"rowToString","ranges":[{"startOffset":2885,"endOffset":4770,"count":113}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2947,"endOffset":4740,"count":112}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3013,"endOffset":4567,"count":162},{"startOffset":3325,"endOffset":3418,"count":156},{"startOffset":3507,"endOffset":3533,"count":44},{"startOffset":3534,"endOffset":3546,"count":44},{"startOffset":3548,"endOffset":3830,"count":44},{"startOffset":3705,"endOffset":3812,"count":0},{"startOffset":3933,"endOffset":3948,"count":0},{"startOffset":3985,"endOffset":4058,"count":94},{"startOffset":4226,"endOffset":4300,"count":50},{"startOffset":4438,"endOffset":4457,"count":149},{"startOffset":4459,"endOffset":4553,"count":148}],"isBlockCoverage":true},{"functionName":"renderInline","ranges":[{"startOffset":4848,"endOffset":5613,"count":148},{"startOffset":4986,"endOffset":4989,"count":0},{"startOffset":5136,"endOffset":5174,"count":104},{"startOffset":5174,"endOffset":5291,"count":44},{"startOffset":5291,"endOffset":5378,"count":0},{"startOffset":5378,"endOffset":5428,"count":44},{"startOffset":5428,"endOffset":5466,"count":9},{"startOffset":5466,"endOffset":5612,"count":35}],"isBlockCoverage":true},{"functionName":"rasterize","ranges":[{"startOffset":5618,"endOffset":7065,"count":113}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5849,"endOffset":7035,"count":149},{"startOffset":6095,"endOffset":6176,"count":0},{"startOffset":6205,"endOffset":6389,"count":0},{"startOffset":6526,"endOffset":6530,"count":148}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6664,"endOffset":7023,"count":157},{"startOffset":6709,"endOffset":6764,"count":112},{"startOffset":6848,"endOffset":6977,"count":50},{"startOffset":6897,"endOffset":6959,"count":5}],"isBlockCoverage":true},{"functionName":"negatePadding","ranges":[{"startOffset":7070,"endOffset":7342,"count":311},{"startOffset":7125,"endOffset":7129,"count":0},{"startOffset":7202,"endOffset":7206,"count":129},{"startOffset":7230,"endOffset":7234,"count":217},{"startOffset":7271,"endOffset":7310,"count":0}],"isBlockCoverage":true},{"functionName":"columnWidths","ranges":[{"startOffset":7347,"endOffset":8184,"count":113},{"startOffset":7391,"endOffset":7519,"count":0},{"startOffset":7952,"endOffset":7988,"count":105},{"startOffset":7989,"endOffset":7992,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7420,"endOffset":7507,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7671,"endOffset":7866,"count":149},{"startOffset":7707,"endOffset":7826,"count":44},{"startOffset":7826,"endOffset":7865,"count":105}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8020,"endOffset":8176,"count":149},{"startOffset":8065,"endOffset":8144,"count":105},{"startOffset":8144,"endOffset":8175,"count":44}],"isBlockCoverage":true},{"functionName":"addBorder","ranges":[{"startOffset":8187,"endOffset":8433,"count":324},{"startOffset":8244,"endOffset":8416,"count":0}],"isBlockCoverage":true},{"functionName":"_minWidth","ranges":[{"startOffset":8512,"endOffset":8727,"count":105},{"startOffset":8570,"endOffset":8575,"count":0},{"startOffset":8617,"endOffset":8621,"count":61},{"startOffset":8668,"endOffset":8704,"count":0}],"isBlockCoverage":true},{"functionName":"getWindowWidth","ranges":[{"startOffset":8728,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":8953,"endOffset":9156,"count":44},{"startOffset":9138,"endOffset":9155,"count":0}],"isBlockCoverage":true},{"functionName":"alignCenter","ranges":[{"startOffset":9157,"endOffset":9400,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9412,"endOffset":9653,"count":1},{"startOffset":9532,"endOffset":9540,"count":0},{"startOffset":9555,"endOffset":9574,"count":0},{"startOffset":9623,"endOffset":9631,"count":0}],"isBlockCoverage":true},{"functionName":"ui","ranges":[{"startOffset":9823,"endOffset":9930,"count":1}],"isBlockCoverage":true}]},{"scriptId":"276","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":2003},{"startOffset":252,"endOffset":268,"count":183},{"startOffset":268,"endOffset":326,"count":1820},{"startOffset":326,"endOffset":342,"count":0},{"startOffset":342,"endOffset":449,"count":1820},{"startOffset":449,"endOffset":787,"count":33302},{"startOffset":557,"endOffset":572,"count":0},{"startOffset":575,"endOffset":593,"count":0},{"startOffset":648,"endOffset":664,"count":0},{"startOffset":666,"endOffset":684,"count":0},{"startOffset":723,"endOffset":736,"count":0},{"startOffset":776,"endOffset":779,"count":0},{"startOffset":787,"endOffset":804,"count":1820}],"isBlockCoverage":true}]},{"scriptId":"277","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":1880},{"startOffset":144,"endOffset":152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"278","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":1880},{"startOffset":327,"endOffset":338,"count":0}],"isBlockCoverage":true}]},{"scriptId":"279","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":70,"endOffset":1667,"count":33302},{"startOffset":115,"endOffset":135,"count":0},{"startOffset":257,"endOffset":1626,"count":0},{"startOffset":1630,"endOffset":1649,"count":0}],"isBlockCoverage":true}]},{"scriptId":"280","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":1820}],"isBlockCoverage":true}]},{"scriptId":"281","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wrap-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5772,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":391,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":501,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":716,"endOffset":784,"count":141}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":748,"endOffset":783,"count":420}],"isBlockCoverage":true},{"functionName":"wrapWord","ranges":[{"startOffset":894,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2205,"endOffset":2490,"count":148},{"startOffset":2296,"endOffset":2367,"count":155},{"startOffset":2338,"endOffset":2353,"count":148},{"startOffset":2353,"endOffset":2367,"count":7},{"startOffset":2397,"endOffset":2418,"count":141},{"startOffset":2418,"endOffset":2489,"count":7}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":2725,"endOffset":5528,"count":149},{"startOffset":2815,"endOffset":2832,"count":8},{"startOffset":2832,"endOffset":3006,"count":141},{"startOffset":3006,"endOffset":4427,"count":420},{"startOffset":3181,"endOffset":3535,"count":279},{"startOffset":3211,"endOffset":3268,"count":0},{"startOffset":3270,"endOffset":3424,"count":0},{"startOffset":3447,"endOffset":3472,"count":0},{"startOffset":3674,"endOffset":4039,"count":0},{"startOffset":4084,"endOffset":4100,"count":7},{"startOffset":4101,"endOffset":4122,"count":7},{"startOffset":4124,"endOffset":4262,"count":7},{"startOffset":4160,"endOffset":4182,"count":0},{"startOffset":4184,"endOffset":4239,"count":0},{"startOffset":4307,"endOffset":4336,"count":7},{"startOffset":4338,"endOffset":4390,"count":0},{"startOffset":4427,"endOffset":4598,"count":141},{"startOffset":4598,"endOffset":5504,"count":2928},{"startOffset":4659,"endOffset":5083,"count":0},{"startOffset":5174,"endOffset":5316,"count":7},{"startOffset":5194,"endOffset":5242,"count":0},{"startOffset":5262,"endOffset":5269,"count":0},{"startOffset":5271,"endOffset":5312,"count":0},{"startOffset":5316,"endOffset":5501,"count":2921},{"startOffset":5346,"endOffset":5501,"count":7},{"startOffset":5366,"endOffset":5373,"count":0},{"startOffset":5375,"endOffset":5422,"count":0},{"startOffset":5442,"endOffset":5497,"count":0},{"startOffset":5504,"endOffset":5527,"count":141}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":5598,"endOffset":5770,"count":149}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5716,"endOffset":5752,"count":149}],"isBlockCoverage":true}]},{"scriptId":"282","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/escalade/sync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":416,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":415,"count":1},{"startOffset":277,"endOffset":413,"count":2},{"startOffset":331,"endOffset":404,"count":1},{"startOffset":404,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"283","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/get-caller-file/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"getCallerFile","ranges":[{"startOffset":233,"endOffset":1073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/require-directory/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":238,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":293,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"checkFileInclusion","ranges":[{"startOffset":340,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"requireDirectory","ranges":[{"startOffset":1272,"endOffset":2788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":188,"count":1}],"isBlockCoverage":true}]},{"scriptId":"286","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":958,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":265,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"exports.handler","ranges":[{"startOffset":368,"endOffset":956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/cli/run.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10931,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":1004,"endOffset":10656,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":3546,"endOffset":3578,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5655,"endOffset":6144,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7801,"endOffset":9901,"count":1},{"startOffset":8125,"endOffset":8164,"count":0},{"startOffset":8166,"endOffset":8359,"count":0},{"startOffset":8386,"endOffset":9438,"count":0},{"startOffset":9466,"endOffset":9649,"count":0},{"startOffset":9672,"endOffset":9875,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7912,"endOffset":8037,"count":2},{"startOffset":7944,"endOffset":8029,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9919,"endOffset":10531,"count":1},{"startOffset":10344,"endOffset":10525,"count":0}],"isBlockCoverage":true},{"functionName":"exports.handler","ranges":[{"startOffset":10677,"endOffset":10929,"count":1},{"startOffset":10816,"endOffset":10927,"count":0}],"isBlockCoverage":true}]},{"scriptId":"288","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mocha/lib/interfaces/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4803,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":551,"endOffset":4801,"count":1}],"isBlockCoverage":true},{"functionName":"shouldBeTested","ranges":[{"startOffset":729,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"runWithSuite","ranges":[{"startOffset":1196,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":1423,"endOffset":1487,"count":2}],"isBlockCoverage":true},{"functionName":"after","ranges":[{"startOffset":1616,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"beforeEach","ranges":[{"startOffset":1815,"endOffset":1880,"count":0}],"isBlockCoverage":false},{"functionName":"afterEach","ranges":[{"startOffset":2014,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"only","ranges":[{"startOffset":2291,"endOffset":2488,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":2690,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3235,"endOffset":4269,"count":5},{"startOffset":3451,"endOffset":3490,"count":0},{"startOffset":3528,"endOffset":3568,"count":0},{"startOffset":3569,"endOffset":3603,"count":0},{"startOffset":3614,"endOffset":3691,"count":0},{"startOffset":3803,"endOffset":4238,"count":0}],"isBlockCoverage":true},{"functionName":"only","ranges":[{"startOffset":4446,"endOffset":4630,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":4733,"endOffset":4788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"289","url":"node:internal/deps/cjs-module-lexer/dist/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33616,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":116,"endOffset":813,"count":1},{"startOffset":146,"endOffset":181,"count":0},{"startOffset":222,"endOffset":237,"count":0},{"startOffset":273,"endOffset":308,"count":0},{"startOffset":332,"endOffset":334,"count":0},{"startOffset":406,"endOffset":553,"count":0},{"startOffset":601,"endOffset":650,"count":0},{"startOffset":663,"endOffset":696,"count":0},{"startOffset":709,"endOffset":773,"count":0}],"isBlockCoverage":true},{"functionName":"B","ranges":[{"startOffset":813,"endOffset":1040,"count":0}],"isBlockCoverage":false},{"functionName":"E","ranges":[{"startOffset":1040,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1141,"endOffset":1215,"count":1},{"startOffset":1192,"endOffset":1214,"count":5241}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1221,"endOffset":33616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1251,"endOffset":33611,"count":1},{"startOffset":33455,"endOffset":33524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33505,"endOffset":33523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/test/authentication.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5241,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":376,"endOffset":911,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":405,"endOffset":908,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":464,"endOffset":817,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":568,"endOffset":605,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":660,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":749,"endOffset":786,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":834,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":970,"endOffset":2179,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":990,"endOffset":1306,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1137,"endOffset":1299,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1339,"endOffset":1451,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1417,"endOffset":1444,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1476,"endOffset":2176,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1620,"endOffset":2169,"count":1},{"startOffset":2035,"endOffset":2132,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2240,"endOffset":4125,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2260,"endOffset":2622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2453,"endOffset":2615,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2646,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2786,"endOffset":3402,"count":1},{"startOffset":3268,"endOffset":3365,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3439,"endOffset":3592,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3558,"endOffset":3585,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3629,"endOffset":4122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4008,"endOffset":4115,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4162,"endOffset":4910,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4196,"endOffset":4635,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4521,"endOffset":4628,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4668,"endOffset":4907,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4792,"endOffset":4900,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4951,"endOffset":5240,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4998,"endOffset":5237,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5122,"endOffset":5230,"count":1}],"isBlockCoverage":true}]},{"scriptId":"292","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"293","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1258,"count":1}],"isBlockCoverage":true},{"functionName":"exports.use","ranges":[{"startOffset":497,"endOffset":607,"count":6}],"isBlockCoverage":true}]},{"scriptId":"294","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/assertion-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2429,"count":1}],"isBlockCoverage":true},{"functionName":"exclude","ranges":[{"startOffset":328,"endOffset":754,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":1083,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError.toJSON","ranges":[{"startOffset":2162,"endOffset":2427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"295","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2540,"count":1}],"isBlockCoverage":true}]},{"scriptId":"296","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/pathval/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7808,"count":1}],"isBlockCoverage":true},{"functionName":"hasProperty","ranges":[{"startOffset":1145,"endOffset":1339,"count":2},{"startOffset":1229,"endOffset":1252,"count":0}],"isBlockCoverage":true},{"functionName":"parsePath","ranges":[{"startOffset":1827,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"internalGetPathValue","ranges":[{"startOffset":2832,"endOffset":3365,"count":0}],"isBlockCoverage":false},{"functionName":"internalSetPathValue","ranges":[{"startOffset":3727,"endOffset":5011,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":5630,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"getPathValue","ranges":[{"startOffset":6735,"endOffset":6829,"count":0}],"isBlockCoverage":false},{"functionName":"setPathValue","ranges":[{"startOffset":7539,"endOffset":7668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"297","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":541,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":422,"endOffset":539,"count":21},{"startOffset":522,"endOffset":529,"count":0}],"isBlockCoverage":true}]},{"scriptId":"298","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/flag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":812,"count":1}],"isBlockCoverage":true},{"functionName":"flag","ranges":[{"startOffset":616,"endOffset":810,"count":320},{"startOffset":675,"endOffset":713,"count":45},{"startOffset":745,"endOffset":774,"count":220},{"startOffset":774,"endOffset":808,"count":100}],"isBlockCoverage":true}]},{"scriptId":"299","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/type-detect/type-detect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15484,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":222,"count":1},{"startOffset":121,"endOffset":219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":230,"endOffset":15479,"count":1},{"startOffset":483,"endOffset":489,"count":0}],"isBlockCoverage":true},{"functionName":"typeDetect","ranges":[{"startOffset":2073,"endOffset":15456,"count":3},{"startOffset":2928,"endOffset":2955,"count":0},{"startOffset":3174,"endOffset":3198,"count":0},{"startOffset":3906,"endOffset":3932,"count":0},{"startOffset":4160,"endOffset":4234,"count":1},{"startOffset":4239,"endOffset":4264,"count":1},{"startOffset":4264,"endOffset":4452,"count":2},{"startOffset":4452,"endOffset":4470,"count":0},{"startOffset":4472,"endOffset":9159,"count":0},{"startOffset":9159,"endOffset":10539,"count":2},{"startOffset":10579,"endOffset":10606,"count":0},{"startOffset":10606,"endOffset":11028,"count":2},{"startOffset":11028,"endOffset":11054,"count":0},{"startOffset":11054,"endOffset":11285,"count":2},{"startOffset":11285,"endOffset":11309,"count":0},{"startOffset":11309,"endOffset":11817,"count":2},{"startOffset":11819,"endOffset":11846,"count":0},{"startOffset":11846,"endOffset":12087,"count":2},{"startOffset":12089,"endOffset":12112,"count":0},{"startOffset":12112,"endOffset":12353,"count":2},{"startOffset":12355,"endOffset":12378,"count":0},{"startOffset":12378,"endOffset":12627,"count":2},{"startOffset":12629,"endOffset":12656,"count":0},{"startOffset":12656,"endOffset":12905,"count":2},{"startOffset":12907,"endOffset":12934,"count":0},{"startOffset":12934,"endOffset":13323,"count":2},{"startOffset":13325,"endOffset":13353,"count":0},{"startOffset":13353,"endOffset":13739,"count":2},{"startOffset":13741,"endOffset":13773,"count":0},{"startOffset":13773,"endOffset":14159,"count":2},{"startOffset":14161,"endOffset":14193,"count":0},{"startOffset":14193,"endOffset":14599,"count":2},{"startOffset":14601,"endOffset":14635,"count":0},{"startOffset":14635,"endOffset":15046,"count":2},{"startOffset":15048,"endOffset":15083,"count":0},{"startOffset":15083,"endOffset":15304,"count":2},{"startOffset":15304,"endOffset":15330,"count":0},{"startOffset":15330,"endOffset":15455,"count":2}],"isBlockCoverage":true}]},{"scriptId":"300","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/expectTypes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1433,"count":1}],"isBlockCoverage":true},{"functionName":"expectTypes","ranges":[{"startOffset":597,"endOffset":1431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"301","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/getMessage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1370,"count":1}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":793,"endOffset":1368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"302","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/getActual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":467,"count":1}],"isBlockCoverage":true},{"functionName":"getActual","ranges":[{"startOffset":385,"endOffset":465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/objDisplay.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1226,"count":1}],"isBlockCoverage":true},{"functionName":"objDisplay","ranges":[{"startOffset":505,"endOffset":1224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"304","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1152,"count":1}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":857,"endOffset":1151,"count":4},{"startOffset":991,"endOffset":998,"count":0},{"startOffset":1095,"endOffset":1105,"count":0}],"isBlockCoverage":true}]},{"scriptId":"305","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/get-func-name/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1123,"count":1}],"isBlockCoverage":true},{"functionName":"getFuncName","ranges":[{"startOffset":563,"endOffset":1091,"count":0}],"isBlockCoverage":false}]},{"scriptId":"306","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/loupe/loupe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27258,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":299,"count":1},{"startOffset":112,"endOffset":296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":307,"endOffset":27253,"count":1},{"startOffset":14041,"endOffset":14082,"count":0},{"startOffset":16801,"endOffset":17314,"count":0},{"startOffset":18424,"endOffset":18431,"count":0},{"startOffset":21717,"endOffset":21735,"count":0},{"startOffset":21918,"endOffset":21925,"count":0},{"startOffset":21931,"endOffset":21983,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":345,"endOffset":773,"count":1},{"startOffset":554,"endOffset":743,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":496,"endOffset":547,"count":4}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":578,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"_slicedToArray","ranges":[{"startOffset":777,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":945,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":1024,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":1636,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2082,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":2281,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"colorise","ranges":[{"startOffset":3506,"endOffset":3768,"count":0}],"isBlockCoverage":false},{"functionName":"normaliseOptions","ranges":[{"startOffset":3772,"endOffset":5466,"count":4},{"startOffset":3883,"endOffset":3887,"count":0},{"startOffset":3988,"endOffset":4005,"count":0},{"startOffset":4078,"endOffset":4081,"count":0},{"startOffset":4179,"endOffset":4192,"count":0},{"startOffset":4304,"endOffset":4324,"count":0},{"startOffset":4421,"endOffset":4437,"count":0},{"startOffset":4557,"endOffset":4578,"count":0},{"startOffset":4686,"endOffset":4704,"count":0},{"startOffset":4778,"endOffset":4789,"count":0},{"startOffset":4874,"endOffset":4884,"count":0},{"startOffset":4990,"endOffset":5004,"count":0},{"startOffset":5400,"endOffset":5441,"count":0}],"isBlockCoverage":true},{"functionName":"truncate","ranges":[{"startOffset":5469,"endOffset":5953,"count":4},{"startOffset":5541,"endOffset":5570,"count":0},{"startOffset":5571,"endOffset":5585,"count":0},{"startOffset":5729,"endOffset":5757,"count":0},{"startOffset":5759,"endOffset":5785,"count":0},{"startOffset":5817,"endOffset":5845,"count":0},{"startOffset":5847,"endOffset":5929,"count":0}],"isBlockCoverage":true},{"functionName":"inspectList","ranges":[{"startOffset":5996,"endOffset":8293,"count":0}],"isBlockCoverage":false},{"functionName":"quoteComplexKey","ranges":[{"startOffset":8297,"endOffset":8505,"count":0}],"isBlockCoverage":false},{"functionName":"inspectProperty","ranges":[{"startOffset":8509,"endOffset":8982,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArray","ranges":[{"startOffset":8986,"endOffset":9750,"count":0}],"isBlockCoverage":false},{"functionName":"getFuncName","ranges":[{"startOffset":10340,"endOffset":10900,"count":0}],"isBlockCoverage":false},{"functionName":"getArrayName","ranges":[{"startOffset":10959,"endOffset":11298,"count":0}],"isBlockCoverage":false},{"functionName":"inspectTypedArray","ranges":[{"startOffset":11303,"endOffset":12648,"count":0}],"isBlockCoverage":false},{"functionName":"inspectDate","ranges":[{"startOffset":12652,"endOffset":12962,"count":0}],"isBlockCoverage":false},{"functionName":"inspectFunction","ranges":[{"startOffset":12966,"endOffset":13231,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMapEntry","ranges":[{"startOffset":13235,"endOffset":13570,"count":0}],"isBlockCoverage":false},{"functionName":"mapToEntries","ranges":[{"startOffset":13615,"endOffset":13771,"count":0}],"isBlockCoverage":false},{"functionName":"inspectMap","ranges":[{"startOffset":13775,"endOffset":14012,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":14044,"endOffset":14082,"count":0}],"isBlockCoverage":false},{"functionName":"inspectNumber","ranges":[{"startOffset":14127,"endOffset":14617,"count":0}],"isBlockCoverage":false},{"functionName":"inspectBigInt","ranges":[{"startOffset":14621,"endOffset":14817,"count":0}],"isBlockCoverage":false},{"functionName":"inspectRegExp","ranges":[{"startOffset":14821,"endOffset":15107,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFromSet","ranges":[{"startOffset":15111,"endOffset":15252,"count":0}],"isBlockCoverage":false},{"functionName":"inspectSet","ranges":[{"startOffset":15256,"endOffset":15436,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":15827,"endOffset":15976,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":15980,"endOffset":16227,"count":4},{"startOffset":16062,"endOffset":16127,"count":0}],"isBlockCoverage":true},{"functionName":"inspectSymbol","ranges":[{"startOffset":16231,"endOffset":16435,"count":0}],"isBlockCoverage":false},{"functionName":"getPromiseValue","ranges":[{"startOffset":16461,"endOffset":16518,"count":0}],"isBlockCoverage":false},{"functionName":"getPromiseValue","ranges":[{"startOffset":16827,"endOffset":17307,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject","ranges":[{"startOffset":17402,"endOffset":18329,"count":0}],"isBlockCoverage":false},{"functionName":"inspectClass","ranges":[{"startOffset":18435,"endOffset":18880,"count":0}],"isBlockCoverage":false},{"functionName":"inspectArguments","ranges":[{"startOffset":18884,"endOffset":19074,"count":0}],"isBlockCoverage":false},{"functionName":"inspectObject$1","ranges":[{"startOffset":19211,"endOffset":19982,"count":0}],"isBlockCoverage":false},{"functionName":"inspectAttribute","ranges":[{"startOffset":19986,"endOffset":20352,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTMLCollection","ranges":[{"startOffset":20355,"endOffset":20529,"count":0}],"isBlockCoverage":false},{"functionName":"inspectHTML","ranges":[{"startOffset":20532,"endOffset":21558,"count":0}],"isBlockCoverage":false},{"functionName":"undefined$1","ranges":[{"startOffset":22086,"endOffset":22186,"count":0}],"isBlockCoverage":false},{"functionName":"_null","ranges":[{"startOffset":22198,"endOffset":22280,"count":0}],"isBlockCoverage":false},{"functionName":"boolean","ranges":[{"startOffset":22295,"endOffset":22383,"count":0}],"isBlockCoverage":false},{"functionName":"Boolean","ranges":[{"startOffset":22398,"endOffset":22486,"count":0}],"isBlockCoverage":false},{"functionName":"WeakSet","ranges":[{"startOffset":23049,"endOffset":23144,"count":0}],"isBlockCoverage":false},{"functionName":"WeakMap","ranges":[{"startOffset":23159,"endOffset":23254,"count":0}],"isBlockCoverage":false},{"functionName":"Generator","ranges":[{"startOffset":23631,"endOffset":23676,"count":0}],"isBlockCoverage":false},{"functionName":"DataView","ranges":[{"startOffset":23692,"endOffset":23736,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBuffer","ranges":[{"startOffset":23755,"endOffset":23802,"count":0}],"isBlockCoverage":false},{"functionName":"inspectCustom","ranges":[{"startOffset":23978,"endOffset":24687,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":24778,"endOffset":26593,"count":4},{"startOffset":24991,"endOffset":24999,"count":0},{"startOffset":25046,"endOffset":25103,"count":0},{"startOffset":25267,"endOffset":25382,"count":0},{"startOffset":25384,"endOffset":25626,"count":0},{"startOffset":25627,"endOffset":25634,"count":0},{"startOffset":25725,"endOffset":25742,"count":0},{"startOffset":25744,"endOffset":25930,"count":0},{"startOffset":25931,"endOffset":25962,"count":0},{"startOffset":25964,"endOffset":26592,"count":0}],"isBlockCoverage":true},{"functionName":"registerConstructor","ranges":[{"startOffset":26596,"endOffset":26789,"count":0}],"isBlockCoverage":false},{"functionName":"registerStringTag","ranges":[{"startOffset":26792,"endOffset":26968,"count":0}],"isBlockCoverage":false}]},{"scriptId":"307","url":"node:internal/legacy/processbinding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":852,"count":1}],"isBlockCoverage":false},{"functionName":"util","ranges":[{"startOffset":216,"endOffset":846,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":335,"endOffset":837,"count":42}],"isBlockCoverage":true}]},{"scriptId":"308","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2937,"count":1}],"isBlockCoverage":true}]},{"scriptId":"309","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/transferFlags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1361,"count":1}],"isBlockCoverage":true},{"functionName":"transferFlags","ranges":[{"startOffset":895,"endOffset":1359,"count":28},{"startOffset":983,"endOffset":1027,"count":0},{"startOffset":1053,"endOffset":1100,"count":0},{"startOffset":1140,"endOffset":1152,"count":0},{"startOffset":1188,"endOffset":1357,"count":112},{"startOffset":1209,"endOffset":1302,"count":0}],"isBlockCoverage":true}]},{"scriptId":"310","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/deep-eql/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14910,"count":1},{"startOffset":628,"endOffset":637,"count":0}],"isBlockCoverage":true},{"functionName":"FakeMap","ranges":[{"startOffset":207,"endOffset":291,"count":0}],"isBlockCoverage":false},{"functionName":"getMap","ranges":[{"startOffset":322,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"setMap","ranges":[{"startOffset":384,"endOffset":565,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCompare","ranges":[{"startOffset":862,"endOffset":1324,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeSet","ranges":[{"startOffset":1520,"endOffset":2039,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":2757,"endOffset":3293,"count":0}],"isBlockCoverage":false},{"functionName":"simpleEqual","ranges":[{"startOffset":3497,"endOffset":4314,"count":0}],"isBlockCoverage":false},{"functionName":"extensiveDeepEqual","ranges":[{"startOffset":4906,"endOffset":6894,"count":0}],"isBlockCoverage":false},{"functionName":"extensiveDeepEqualByType","ranges":[{"startOffset":6896,"endOffset":8482,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEqual","ranges":[{"startOffset":8644,"endOffset":8772,"count":0}],"isBlockCoverage":false},{"functionName":"entriesEqual","ranges":[{"startOffset":8996,"endOffset":9655,"count":0}],"isBlockCoverage":false},{"functionName":"iterableEqual","ranges":[{"startOffset":9905,"endOffset":10304,"count":0}],"isBlockCoverage":false},{"functionName":"generatorEqual","ranges":[{"startOffset":10549,"endOffset":10730,"count":0}],"isBlockCoverage":false},{"functionName":"hasIteratorFunction","ranges":[{"startOffset":10900,"endOffset":11113,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorEntries","ranges":[{"startOffset":11449,"endOffset":11666,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratorEntries","ranges":[{"startOffset":11871,"endOffset":12157,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumerableKeys","ranges":[{"startOffset":12340,"endOffset":12462,"count":0}],"isBlockCoverage":false},{"functionName":"keysEqual","ranges":[{"startOffset":12937,"endOffset":13258,"count":0}],"isBlockCoverage":false},{"functionName":"objectEqual","ranges":[{"startOffset":13571,"endOffset":14586,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":14824,"endOffset":14909,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/addProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2452,"count":1}],"isBlockCoverage":true},{"functionName":"addProperty","ranges":[{"startOffset":998,"endOffset":2450,"count":46},{"startOffset":1072,"endOffset":1088,"count":17},{"startOffset":1089,"endOffset":1097,"count":29}],"isBlockCoverage":true},{"functionName":"getter","ranges":[{"startOffset":1074,"endOffset":1088,"count":12}],"isBlockCoverage":true},{"functionName":"propertyGetter","ranges":[{"startOffset":1146,"endOffset":2417,"count":12},{"startOffset":2102,"endOffset":2128,"count":0},{"startOffset":2130,"endOffset":2187,"count":0},{"startOffset":2273,"endOffset":2287,"count":0}],"isBlockCoverage":true}]},{"scriptId":"312","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/isProxyEnabled.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"isProxyEnabled","ranges":[{"startOffset":448,"endOffset":577,"count":113}],"isBlockCoverage":true}]},{"scriptId":"313","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/addMethod.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2179,"count":1}],"isBlockCoverage":true},{"functionName":"addMethod","ranges":[{"startOffset":1024,"endOffset":2177,"count":53}],"isBlockCoverage":true},{"functionName":"methodWrapper","ranges":[{"startOffset":1086,"endOffset":2083,"count":10},{"startOffset":1955,"endOffset":1969,"count":0}],"isBlockCoverage":true}]},{"scriptId":"314","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/addLengthGuard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2376,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51,"endOffset":65,"count":0}],"isBlockCoverage":false},{"functionName":"addLengthGuard","ranges":[{"startOffset":1768,"endOffset":2374,"count":56},{"startOffset":1861,"endOffset":1871,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1922,"endOffset":2352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"315","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/proxify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5224,"count":1}],"isBlockCoverage":true},{"functionName":"proxify","ranges":[{"startOffset":1055,"endOffset":4029,"count":101},{"startOffset":1128,"endOffset":1139,"count":0}],"isBlockCoverage":true},{"functionName":"proxyGetter","ranges":[{"startOffset":1176,"endOffset":4021,"count":274},{"startOffset":1616,"endOffset":2906,"count":0},{"startOffset":3888,"endOffset":3916,"count":25},{"startOffset":3918,"endOffset":3970,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2225,"endOffset":2658,"count":0}],"isBlockCoverage":false},{"functionName":"stringDistanceCapped","ranges":[{"startOffset":4320,"endOffset":5223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"316","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/getProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":789,"count":1}],"isBlockCoverage":true},{"functionName":"getProperties","ranges":[{"startOffset":387,"endOffset":787,"count":0}],"isBlockCoverage":false}]},{"scriptId":"317","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/overwriteProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3281,"count":1}],"isBlockCoverage":true},{"functionName":"overwriteProperty","ranges":[{"startOffset":1302,"endOffset":3279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"318","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/overwriteMethod.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3100,"count":1}],"isBlockCoverage":true},{"functionName":"overwriteMethod","ranges":[{"startOffset":1338,"endOffset":3098,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/addChainableMethod.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5448,"count":1}],"isBlockCoverage":true},{"functionName":"testFn","ranges":[{"startOffset":703,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":779,"endOffset":1256,"count":5},{"startOffset":1208,"endOffset":1220,"count":0}],"isBlockCoverage":true},{"functionName":"addChainableMethod","ranges":[{"startOffset":2460,"endOffset":5446,"count":8},{"startOffset":2573,"endOffset":2618,"count":2},{"startOffset":2807,"endOffset":2836,"count":1}],"isBlockCoverage":true},{"functionName":"chainingBehavior","ranges":[{"startOffset":2598,"endOffset":2613,"count":3}],"isBlockCoverage":true},{"functionName":"chainableMethodGetter","ranges":[{"startOffset":2927,"endOffset":5413,"count":3},{"startOffset":4841,"endOffset":5303,"count":0}],"isBlockCoverage":true},{"functionName":"chainableMethodWrapper","ranges":[{"startOffset":3055,"endOffset":4344,"count":3},{"startOffset":4166,"endOffset":4206,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5006,"endOffset":5291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2150,"count":1}],"isBlockCoverage":true},{"functionName":"overwriteChainableMethod","ranges":[{"startOffset":1290,"endOffset":2148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/compareByInspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":808,"count":1}],"isBlockCoverage":true},{"functionName":"compareByInspect","ranges":[{"startOffset":728,"endOffset":806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":819,"count":1}],"isBlockCoverage":true},{"functionName":"getOwnEnumerablePropertySymbols","ranges":[{"startOffset":560,"endOffset":817,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":785,"count":1}],"isBlockCoverage":true},{"functionName":"getOwnEnumerableProperties","ranges":[{"startOffset":667,"endOffset":783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/check-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4969,"count":1}],"isBlockCoverage":true},{"functionName":"compatibleInstance","ranges":[{"startOffset":701,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleConstructor","ranges":[{"startOffset":1293,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"compatibleMessage","ranges":[{"startOffset":2244,"endOffset":2621,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionName","ranges":[{"startOffset":2972,"endOffset":3322,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":3559,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":4542,"endOffset":4747,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/isNaN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":590,"count":1},{"startOffset":580,"endOffset":588,"count":0}],"isBlockCoverage":true},{"functionName":"isNaN","ranges":[{"startOffset":341,"endOffset":489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/utils/getOperator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1252,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectType","ranges":[{"startOffset":67,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":671,"endOffset":1250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/assertion.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5975,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":169,"endOffset":5973,"count":1}],"isBlockCoverage":true},{"functionName":"Assertion","ranges":[{"startOffset":2261,"endOffset":2488,"count":45},{"startOffset":2337,"endOffset":2349,"count":33}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2552,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2714,"endOffset":2871,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2937,"endOffset":3076,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3087,"endOffset":3232,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.addProperty","ranges":[{"startOffset":3266,"endOffset":3339,"count":46}],"isBlockCoverage":true},{"functionName":"Assertion.addMethod","ranges":[{"startOffset":3366,"endOffset":3437,"count":53}],"isBlockCoverage":true},{"functionName":"Assertion.addChainableMethod","ranges":[{"startOffset":3473,"endOffset":3589,"count":8}],"isBlockCoverage":true},{"functionName":"Assertion.overwriteProperty","ranges":[{"startOffset":3624,"endOffset":3703,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.overwriteMethod","ranges":[{"startOffset":3736,"endOffset":3813,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.overwriteChainableMethod","ranges":[{"startOffset":3855,"endOffset":3977,"count":0}],"isBlockCoverage":false},{"functionName":"Assertion.assert","ranges":[{"startOffset":4808,"endOffset":5644,"count":21},{"startOffset":4940,"endOffset":4956,"count":13},{"startOffset":4988,"endOffset":5012,"count":5},{"startOffset":5014,"endOffset":5031,"count":5},{"startOffset":5066,"endOffset":5083,"count":0},{"startOffset":5098,"endOffset":5640,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5836,"endOffset":5894,"count":24}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5906,"endOffset":5965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/core/assertions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":134714,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":134712,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":836,"endOffset":892,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1701,"endOffset":1750,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3305,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4094,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4756,"endOffset":4802,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5392,"endOffset":5442,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5939,"endOffset":6015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6706,"endOffset":6782,"count":0}],"isBlockCoverage":false},{"functionName":"an","ranges":[{"startOffset":9049,"endOffset":9446,"count":3},{"startOffset":9088,"endOffset":9115,"count":0},{"startOffset":9261,"endOffset":9267,"count":0}],"isBlockCoverage":true},{"functionName":"SameValueZero","ranges":[{"startOffset":15727,"endOffset":15811,"count":0}],"isBlockCoverage":false},{"functionName":"includeChainingBehavior","ranges":[{"startOffset":15815,"endOffset":15890,"count":0}],"isBlockCoverage":false},{"functionName":"include","ranges":[{"startOffset":15894,"endOffset":19389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20878,"endOffset":21022,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21802,"endOffset":22002,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22789,"endOffset":22990,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23653,"endOffset":23812,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24525,"endOffset":24699,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25346,"endOffset":25507,"count":0}],"isBlockCoverage":false},{"functionName":"assertExist","ranges":[{"startOffset":26516,"endOffset":26723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28645,"endOffset":29813,"count":0}],"isBlockCoverage":false},{"functionName":"checkArguments","ranges":[{"startOffset":30668,"endOffset":30922,"count":0}],"isBlockCoverage":false},{"functionName":"assertEqual","ranges":[{"startOffset":32619,"endOffset":33125,"count":0}],"isBlockCoverage":false},{"functionName":"assertEql","ranges":[{"startOffset":34854,"endOffset":35141,"count":0}],"isBlockCoverage":false},{"functionName":"assertAbove","ranges":[{"startOffset":36723,"endOffset":38605,"count":0}],"isBlockCoverage":false},{"functionName":"assertLeast","ranges":[{"startOffset":40357,"endOffset":42241,"count":0}],"isBlockCoverage":false},{"functionName":"assertBelow","ranges":[{"startOffset":43872,"endOffset":45755,"count":0}],"isBlockCoverage":false},{"functionName":"assertMost","ranges":[{"startOffset":47480,"endOffset":49359,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51281,"endOffset":53452,"count":0}],"isBlockCoverage":false},{"functionName":"assertInstanceOf","ranges":[{"startOffset":54971,"endOffset":55858,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":60668,"endOffset":63431,"count":2},{"startOffset":60724,"endOffset":60751,"count":0},{"startOffset":60991,"endOffset":61007,"count":0},{"startOffset":61033,"endOffset":61254,"count":0},{"startOffset":61294,"endOffset":61318,"count":0},{"startOffset":61319,"endOffset":61343,"count":0},{"startOffset":61345,"endOffset":61519,"count":0},{"startOffset":61544,"endOffset":61552,"count":0},{"startOffset":61554,"endOffset":61704,"count":0},{"startOffset":61749,"endOffset":61886,"count":0},{"startOffset":61990,"endOffset":62016,"count":0},{"startOffset":62049,"endOffset":62065,"count":0},{"startOffset":62121,"endOffset":62143,"count":0},{"startOffset":62159,"endOffset":62180,"count":0},{"startOffset":62199,"endOffset":62223,"count":0},{"startOffset":62292,"endOffset":62354,"count":0},{"startOffset":62378,"endOffset":62408,"count":0},{"startOffset":62819,"endOffset":62844,"count":0},{"startOffset":63070,"endOffset":63393,"count":0}],"isBlockCoverage":true},{"functionName":"assertOwnProperty","ranges":[{"startOffset":63487,"endOffset":63610,"count":0}],"isBlockCoverage":false},{"functionName":"assertOwnPropertyDescriptor","ranges":[{"startOffset":68144,"endOffset":69227,"count":0}],"isBlockCoverage":false},{"functionName":"assertLengthChain","ranges":[{"startOffset":71867,"endOffset":71936,"count":0}],"isBlockCoverage":false},{"functionName":"assertLength","ranges":[{"startOffset":71940,"endOffset":72714,"count":0}],"isBlockCoverage":false},{"functionName":"assertMatch","ranges":[{"startOffset":73691,"endOffset":73936,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74819,"endOffset":75222,"count":0}],"isBlockCoverage":false},{"functionName":"assertKeys","ranges":[{"startOffset":79909,"endOffset":83223,"count":0}],"isBlockCoverage":false},{"functionName":"assertThrows","ranges":[{"startOffset":90865,"endOffset":95841,"count":0}],"isBlockCoverage":false},{"functionName":"respondTo","ranges":[{"startOffset":98373,"endOffset":98828,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99598,"endOffset":99647,"count":0}],"isBlockCoverage":false},{"functionName":"satisfy","ranges":[{"startOffset":100747,"endOffset":101119,"count":0}],"isBlockCoverage":false},{"functionName":"closeTo","ranges":[{"startOffset":102478,"endOffset":103325,"count":0}],"isBlockCoverage":false},{"functionName":"isSubsetOf","ranges":[{"startOffset":103502,"endOffset":104372,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107383,"endOffset":108508,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":109900,"endOffset":111063,"count":0}],"isBlockCoverage":false},{"functionName":"assertChanges","ranges":[{"startOffset":114654,"endOffset":115759,"count":0}],"isBlockCoverage":false},{"functionName":"assertIncreases","ranges":[{"startOffset":119059,"endOffset":120221,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecreases","ranges":[{"startOffset":123541,"endOffset":124703,"count":0}],"isBlockCoverage":false},{"functionName":"assertDelta","ranges":[{"startOffset":127440,"endOffset":128122,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":129068,"endOffset":129718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":130626,"endOffset":131253,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":132003,"endOffset":132630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":134477,"endOffset":134708,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/interface/expect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1142,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":1140,"count":1}],"isBlockCoverage":true},{"functionName":"chai.expect","ranges":[{"startOffset":153,"endOffset":227,"count":0}],"isBlockCoverage":false},{"functionName":"chai.expect.fail","ranges":[{"startOffset":802,"endOffset":1137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/interface/should.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6225,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":6223,"count":1}],"isBlockCoverage":true},{"functionName":"loadShould","ranges":[{"startOffset":174,"endOffset":6163,"count":1}],"isBlockCoverage":true},{"functionName":"shouldGetter","ranges":[{"startOffset":294,"endOffset":698,"count":12},{"startOffset":563,"endOffset":638,"count":0}],"isBlockCoverage":true},{"functionName":"shouldSetter","ranges":[{"startOffset":703,"endOffset":1250,"count":0}],"isBlockCoverage":false},{"functionName":"should.fail","ranges":[{"startOffset":2081,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"should.equal","ranges":[{"startOffset":2829,"endOffset":2910,"count":0}],"isBlockCoverage":false},{"functionName":"should.Throw","ranges":[{"startOffset":3896,"endOffset":3985,"count":0}],"isBlockCoverage":false},{"functionName":"should.exist","ranges":[{"startOffset":4270,"endOffset":4337,"count":0}],"isBlockCoverage":false},{"functionName":"should.not.equal","ranges":[{"startOffset":4784,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"should.not.Throw","ranges":[{"startOffset":5579,"endOffset":5672,"count":0}],"isBlockCoverage":false},{"functionName":"should.not.exist","ranges":[{"startOffset":5981,"endOffset":6052,"count":0}],"isBlockCoverage":false}]},{"scriptId":"331","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai/lib/chai/interface/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":93320,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":93318,"count":1}],"isBlockCoverage":true},{"functionName":"chai.assert","ranges":[{"startOffset":673,"endOffset":864,"count":0}],"isBlockCoverage":false},{"functionName":"assert.fail","ranges":[{"startOffset":1473,"endOffset":1860,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isOk","ranges":[{"startOffset":2217,"endOffset":2296,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotOk","ranges":[{"startOffset":2668,"endOffset":2754,"count":0}],"isBlockCoverage":false},{"functionName":"assert.equal","ranges":[{"startOffset":3120,"endOffset":3398,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notEqual","ranges":[{"startOffset":3775,"endOffset":4056,"count":0}],"isBlockCoverage":false},{"functionName":"assert.strictEqual","ranges":[{"startOffset":4452,"endOffset":4551,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notStrictEqual","ranges":[{"startOffset":4955,"endOffset":5061,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepEqual.assert.deepStrictEqual","ranges":[{"startOffset":5482,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepEqual","ranges":[{"startOffset":5962,"endOffset":6064,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAbove","ranges":[{"startOffset":6468,"endOffset":6566,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtLeast","ranges":[{"startOffset":7049,"endOffset":7153,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBelow","ranges":[{"startOffset":7551,"endOffset":7649,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isAtMost","ranges":[{"startOffset":8125,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isTrue","ranges":[{"startOffset":8552,"endOffset":8638,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotTrue","ranges":[{"startOffset":8972,"endOffset":9069,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFalse","ranges":[{"startOffset":9395,"endOffset":9483,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFalse","ranges":[{"startOffset":9822,"endOffset":9921,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNull","ranges":[{"startOffset":10204,"endOffset":10294,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNull","ranges":[{"startOffset":10628,"endOffset":10725,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNaN","ranges":[{"startOffset":10975,"endOffset":11059,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNaN","ranges":[{"startOffset":11324,"endOffset":11415,"count":0}],"isBlockCoverage":false},{"functionName":"assert.exists","ranges":[{"startOffset":11758,"endOffset":11842,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notExists","ranges":[{"startOffset":12238,"endOffset":12329,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isUndefined","ranges":[{"startOffset":12653,"endOffset":12753,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isDefined","ranges":[{"startOffset":13095,"endOffset":13197,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFunction","ranges":[{"startOffset":13570,"endOffset":13669,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFunction","ranges":[{"startOffset":14061,"endOffset":14167,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isObject","ranges":[{"startOffset":14660,"endOffset":14755,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotObject","ranges":[{"startOffset":15241,"endOffset":15343,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isArray","ranges":[{"startOffset":15696,"endOffset":15790,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotArray","ranges":[{"startOffset":16151,"endOffset":16252,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isString","ranges":[{"startOffset":16578,"endOffset":16673,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotString","ranges":[{"startOffset":17012,"endOffset":17114,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNumber","ranges":[{"startOffset":17429,"endOffset":17524,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotNumber","ranges":[{"startOffset":17870,"endOffset":17972,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFinite","ranges":[{"startOffset":18402,"endOffset":18492,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isBoolean","ranges":[{"startOffset":18922,"endOffset":19019,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotBoolean","ranges":[{"startOffset":19472,"endOffset":19576,"count":0}],"isBlockCoverage":false},{"functionName":"assert.typeOf","ranges":[{"startOffset":20308,"endOffset":20403,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notTypeOf","ranges":[{"startOffset":20820,"endOffset":20922,"count":0}],"isBlockCoverage":false},{"functionName":"assert.instanceOf","ranges":[{"startOffset":21412,"endOffset":21520,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInstanceOf","ranges":[{"startOffset":22028,"endOffset":22150,"count":0}],"isBlockCoverage":false},{"functionName":"assert.include","ranges":[{"startOffset":23450,"endOffset":23544,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notInclude","ranges":[{"startOffset":24947,"endOffset":25048,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepInclude","ranges":[{"startOffset":25743,"endOffset":25846,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepInclude","ranges":[{"startOffset":26565,"endOffset":26675,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedInclude","ranges":[{"startOffset":27379,"endOffset":27486,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedInclude","ranges":[{"startOffset":28209,"endOffset":28330,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedInclude","ranges":[{"startOffset":29098,"endOffset":29220,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedInclude","ranges":[{"startOffset":30008,"endOffset":30137,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownInclude","ranges":[{"startOffset":30607,"endOffset":30707,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnInclude","ranges":[{"startOffset":31225,"endOffset":31332,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnInclude","ranges":[{"startOffset":31856,"endOffset":31972,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnInclude","ranges":[{"startOffset":32507,"endOffset":32630,"count":0}],"isBlockCoverage":false},{"functionName":"assert.match","ranges":[{"startOffset":32986,"endOffset":33077,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notMatch","ranges":[{"startOffset":33459,"endOffset":33557,"count":0}],"isBlockCoverage":false},{"functionName":"assert.property","ranges":[{"startOffset":34020,"endOffset":34126,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notProperty","ranges":[{"startOffset":34549,"endOffset":34669,"count":0}],"isBlockCoverage":false},{"functionName":"assert.propertyVal","ranges":[{"startOffset":35183,"endOffset":35309,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notPropertyVal","ranges":[{"startOffset":35917,"endOffset":36050,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepPropertyVal","ranges":[{"startOffset":36587,"endOffset":36722,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepPropertyVal","ranges":[{"startOffset":37472,"endOffset":37614,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownProperty","ranges":[{"startOffset":38023,"endOffset":38143,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnProperty","ranges":[{"startOffset":38627,"endOffset":38754,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ownPropertyVal","ranges":[{"startOffset":39298,"endOffset":39435,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notOwnPropertyVal","ranges":[{"startOffset":40079,"endOffset":40223,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepOwnPropertyVal","ranges":[{"startOffset":40790,"endOffset":40936,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepOwnPropertyVal","ranges":[{"startOffset":41807,"endOffset":41960,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedProperty","ranges":[{"startOffset":42467,"endOffset":42593,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedProperty","ranges":[{"startOffset":43182,"endOffset":43315,"count":0}],"isBlockCoverage":false},{"functionName":"assert.nestedPropertyVal","ranges":[{"startOffset":43912,"endOffset":44051,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notNestedPropertyVal","ranges":[{"startOffset":44766,"endOffset":44912,"count":0}],"isBlockCoverage":false},{"functionName":"assert.deepNestedPropertyVal","ranges":[{"startOffset":45538,"endOffset":45686,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notDeepNestedPropertyVal","ranges":[{"startOffset":46561,"endOffset":46716,"count":0}],"isBlockCoverage":false},{"functionName":"assert.lengthOf","ranges":[{"startOffset":47315,"endOffset":47419,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyKeys","ranges":[{"startOffset":48234,"endOffset":48342,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllKeys","ranges":[{"startOffset":49141,"endOffset":49249,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllKeys","ranges":[{"startOffset":50440,"endOffset":50563,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyKeys","ranges":[{"startOffset":51418,"endOffset":51545,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllKeys","ranges":[{"startOffset":52418,"endOffset":52545,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAnyDeepKeys","ranges":[{"startOffset":53737,"endOffset":53861,"count":0}],"isBlockCoverage":false},{"functionName":"assert.hasAllDeepKeys","ranges":[{"startOffset":54820,"endOffset":54944,"count":0}],"isBlockCoverage":false},{"functionName":"assert.containsAllDeepKeys","ranges":[{"startOffset":55952,"endOffset":56084,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAnyDeepKeys","ranges":[{"startOffset":57145,"endOffset":57281,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotHaveAllDeepKeys","ranges":[{"startOffset":58350,"endOffset":58486,"count":0}],"isBlockCoverage":false},{"functionName":"assert.throws","ranges":[{"startOffset":59956,"endOffset":60287,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotThrow","ranges":[{"startOffset":61664,"endOffset":61951,"count":0}],"isBlockCoverage":false},{"functionName":"assert.operator","ranges":[{"startOffset":62378,"endOffset":63433,"count":0}],"isBlockCoverage":false},{"functionName":"assert.closeTo","ranges":[{"startOffset":63850,"endOffset":63964,"count":0}],"isBlockCoverage":false},{"functionName":"assert.approximately","ranges":[{"startOffset":64405,"endOffset":64538,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameMembers","ranges":[{"startOffset":64963,"endOffset":65085,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameMembers","ranges":[{"startOffset":65531,"endOffset":65660,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepMembers","ranges":[{"startOffset":66137,"endOffset":66268,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepMembers","ranges":[{"startOffset":66767,"endOffset":66905,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameOrderedMembers","ranges":[{"startOffset":67370,"endOffset":67507,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameOrderedMembers","ranges":[{"startOffset":67994,"endOffset":68138,"count":0}],"isBlockCoverage":false},{"functionName":"assert.sameDeepOrderedMembers","ranges":[{"startOffset":68658,"endOffset":68804,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notSameDeepOrderedMembers","ranges":[{"startOffset":69490,"endOffset":69643,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeMembers","ranges":[{"startOffset":70113,"endOffset":70248,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeMembers","ranges":[{"startOffset":70734,"endOffset":70876,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepMembers","ranges":[{"startOffset":71401,"endOffset":71545,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepMembers","ranges":[{"startOffset":72079,"endOffset":72230,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeOrderedMembers","ranges":[{"startOffset":72766,"endOffset":72916,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeOrderedMembers","ranges":[{"startOffset":73567,"endOffset":73724,"count":0}],"isBlockCoverage":false},{"functionName":"assert.includeDeepOrderedMembers","ranges":[{"startOffset":74308,"endOffset":74467,"count":0}],"isBlockCoverage":false},{"functionName":"assert.notIncludeDeepOrderedMembers","ranges":[{"startOffset":75350,"endOffset":75516,"count":0}],"isBlockCoverage":false},{"functionName":"assert.oneOf","ranges":[{"startOffset":75887,"endOffset":75991,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changes","ranges":[{"startOffset":76512,"endOffset":76725,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesBy","ranges":[{"startOffset":77329,"endOffset":77677,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotChange","ranges":[{"startOffset":78238,"endOffset":78475,"count":0}],"isBlockCoverage":false},{"functionName":"assert.changesButNotBy","ranges":[{"startOffset":79142,"endOffset":79504,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increases","ranges":[{"startOffset":80037,"endOffset":80268,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesBy","ranges":[{"startOffset":80914,"endOffset":81266,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotIncrease","ranges":[{"startOffset":81830,"endOffset":82071,"count":0}],"isBlockCoverage":false},{"functionName":"assert.increasesButNotBy","ranges":[{"startOffset":82746,"endOffset":83112,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreases","ranges":[{"startOffset":83644,"endOffset":83875,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesBy","ranges":[{"startOffset":84518,"endOffset":84870,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecrease","ranges":[{"startOffset":85436,"endOffset":85677,"count":0}],"isBlockCoverage":false},{"functionName":"assert.doesNotDecreaseBy","ranges":[{"startOffset":86352,"endOffset":86721,"count":0}],"isBlockCoverage":false},{"functionName":"assert.decreasesButNotBy","ranges":[{"startOffset":87396,"endOffset":87762,"count":0}],"isBlockCoverage":false},{"functionName":"assert.ifError","ranges":[{"startOffset":88197,"endOffset":88256,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isExtensible","ranges":[{"startOffset":88611,"endOffset":88709,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotExtensible","ranges":[{"startOffset":89320,"endOffset":89425,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isSealed","ranges":[{"startOffset":89955,"endOffset":90045,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotSealed","ranges":[{"startOffset":90359,"endOffset":90456,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isFrozen","ranges":[{"startOffset":90897,"endOffset":90987,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotFrozen","ranges":[{"startOffset":91301,"endOffset":91398,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isEmpty","ranges":[{"startOffset":92033,"endOffset":92120,"count":0}],"isBlockCoverage":false},{"functionName":"assert.isNotEmpty","ranges":[{"startOffset":92789,"endOffset":92883,"count":0}],"isBlockCoverage":false},{"functionName":"alias","ranges":[{"startOffset":92916,"endOffset":92994,"count":12}],"isBlockCoverage":true}]},{"scriptId":"332","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai-http/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"333","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai-http/lib/http.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10068,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":248,"endOffset":10066,"count":1}],"isBlockCoverage":true},{"functionName":"getHeader","ranges":[{"startOffset":985,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1419,"endOffset":2034,"count":8},{"startOffset":1487,"endOffset":1515,"count":0},{"startOffset":1803,"endOffset":1826,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2918,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4326,"endOffset":4546,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4833,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"checkContentType","ranges":[{"startOffset":5297,"endOffset":5789,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5399,"endOffset":5783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6092,"endOffset":6466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6782,"endOffset":7600,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8061,"endOffset":8278,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9078,"endOffset":10062,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"node:internal/blocklist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4043,"count":1}],"isBlockCoverage":false},{"functionName":"BlockList","ranges":[{"startOffset":803,"endOffset":922,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":928,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"addAddress","ranges":[{"startOffset":1198,"endOffset":1529,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":1535,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"addSubnet","ranges":[{"startOffset":2241,"endOffset":2804,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2810,"endOffset":3290,"count":0}],"isBlockCoverage":false},{"functionName":"get rules","ranges":[{"startOffset":3296,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3358,"endOffset":3521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3527,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"InternalBlockList","ranges":[{"startOffset":3689,"endOffset":3825,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"node:internal/socketaddress","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3363,"count":1}],"isBlockCoverage":false},{"functionName":"isSocketAddress","ranges":[{"startOffset":769,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"SocketAddress","ranges":[{"startOffset":848,"endOffset":1842,"count":0}],"isBlockCoverage":false},{"functionName":"get address","ranges":[{"startOffset":1848,"endOffset":1903,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":1909,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"get family","ranges":[{"startOffset":1964,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"get flowlabel","ranges":[{"startOffset":2053,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2170,"endOffset":2418,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2424,"endOffset":2595,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2601,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2821,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSocketAddress","ranges":[{"startOffset":3037,"endOffset":3106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/qs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"337","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/qs/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8913,"count":1}],"isBlockCoverage":true},{"functionName":"brackets","ranges":[{"startOffset":171,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"indices","ranges":[{"startOffset":269,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":361,"endOffset":415,"count":0}],"isBlockCoverage":false},{"functionName":"pushToArray","ranges":[{"startOffset":536,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"serializeDate","ranges":[{"startOffset":1072,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullishPrimitive","ranges":[{"startOffset":1227,"endOffset":1431,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1450,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStringifyOptions","ranges":[{"startOffset":4578,"endOffset":6800,"count":14},{"startOffset":4636,"endOffset":4668,"count":0},{"startOffset":4739,"endOffset":4776,"count":0},{"startOffset":4778,"endOffset":4847,"count":0},{"startOffset":4945,"endOffset":4972,"count":0},{"startOffset":4973,"endOffset":5005,"count":0},{"startOffset":5007,"endOffset":5112,"count":0},{"startOffset":5195,"endOffset":5368,"count":0},{"startOffset":5519,"endOffset":5556,"count":0},{"startOffset":5636,"endOffset":5657,"count":0},{"startOffset":5763,"endOffset":5781,"count":0},{"startOffset":5876,"endOffset":5898,"count":0},{"startOffset":6005,"endOffset":6021,"count":0},{"startOffset":6072,"endOffset":6085,"count":0},{"startOffset":6157,"endOffset":6171,"count":0},{"startOffset":6261,"endOffset":6284,"count":0},{"startOffset":6456,"endOffset":6476,"count":0},{"startOffset":6558,"endOffset":6574,"count":0},{"startOffset":6643,"endOffset":6654,"count":0},{"startOffset":6762,"endOffset":6791,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":6820,"endOffset":8911,"count":14},{"startOffset":7000,"endOffset":7071,"count":0},{"startOffset":7106,"endOffset":7172,"count":0},{"startOffset":7243,"endOffset":7269,"count":0},{"startOffset":7351,"endOffset":7398,"count":0},{"startOffset":7472,"endOffset":7483,"count":0},{"startOffset":7501,"endOffset":7547,"count":0},{"startOffset":7701,"endOffset":7744,"count":0},{"startOffset":7791,"endOffset":8405,"count":0},{"startOffset":8503,"endOffset":8508,"count":0},{"startOffset":8549,"endOffset":8855,"count":0},{"startOffset":8886,"endOffset":8903,"count":0}],"isBlockCoverage":true}]},{"scriptId":"338","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/qs/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6823,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":141,"endOffset":317,"count":1},{"startOffset":209,"endOffset":296,"count":256},{"startOffset":245,"endOffset":250,"count":16},{"startOffset":251,"endOffset":255,"count":240}],"isBlockCoverage":true},{"functionName":"compactQueue","ranges":[{"startOffset":342,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToObject","ranges":[{"startOffset":803,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1094,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"assignSingleSource","ranges":[{"startOffset":2722,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2913,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3310,"endOffset":5309,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":5326,"endOffset":5934,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":5952,"endOffset":6048,"count":14}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":6066,"endOffset":6257,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":6274,"endOffset":6328,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMap","ranges":[{"startOffset":6346,"endOffset":6571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"339","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/qs/lib/formats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"RFC1738","ranges":[{"startOffset":237,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"RFC3986","ranges":[{"startOffset":346,"endOffset":408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/qs/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9181,"count":1}],"isBlockCoverage":true},{"functionName":"interpretNumericEntities","ranges":[{"startOffset":543,"endOffset":693,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayValue","ranges":[{"startOffset":718,"endOffset":883,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringValues","ranges":[{"startOffset":1526,"endOffset":3655,"count":0}],"isBlockCoverage":false},{"functionName":"parseObject","ranges":[{"startOffset":3676,"endOffset":4801,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringKeys","ranges":[{"startOffset":4820,"endOffset":6322,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParseOptions","ranges":[{"startOffset":6353,"endOffset":8472,"count":14},{"startOffset":6407,"endOffset":6439,"count":0},{"startOffset":6501,"endOffset":6538,"count":0},{"startOffset":6540,"endOffset":6609,"count":0},{"startOffset":6655,"endOffset":6682,"count":0},{"startOffset":6683,"endOffset":6715,"count":0},{"startOffset":6717,"endOffset":6822,"count":0},{"startOffset":6896,"endOffset":6910,"count":0},{"startOffset":7004,"endOffset":7022,"count":0},{"startOffset":7114,"endOffset":7140,"count":0},{"startOffset":7198,"endOffset":7215,"count":0},{"startOffset":7332,"endOffset":7354,"count":0},{"startOffset":7430,"endOffset":7442,"count":0},{"startOffset":7513,"endOffset":7527,"count":0},{"startOffset":7636,"endOffset":7652,"count":0},{"startOffset":7821,"endOffset":7834,"count":0},{"startOffset":7998,"endOffset":8029,"count":0},{"startOffset":8131,"endOffset":8152,"count":0},{"startOffset":8290,"endOffset":8309,"count":0},{"startOffset":8408,"endOffset":8433,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":8492,"endOffset":9179,"count":14},{"startOffset":8598,"endOffset":8627,"count":0},{"startOffset":8667,"endOffset":8688,"count":0},{"startOffset":8700,"endOffset":8771,"count":0},{"startOffset":8772,"endOffset":8777,"count":0},{"startOffset":8814,"endOffset":8835,"count":0},{"startOffset":8836,"endOffset":8840,"count":0},{"startOffset":8977,"endOffset":9178,"count":0}],"isBlockCoverage":true}]},{"scriptId":"341","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/cookiejar/cookiejar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10054,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25,"endOffset":10049,"count":1}],"isBlockCoverage":true},{"functionName":"CookieAccessInfo","ranges":[{"startOffset":62,"endOffset":431,"count":0}],"isBlockCoverage":false},{"functionName":"Cookie","ranges":[{"startOffset":549,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1407,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"toValueString","ranges":[{"startOffset":2001,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2176,"endOffset":4405,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":4439,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"collidesWith","ranges":[{"startOffset":4813,"endOffset":5882,"count":0}],"isBlockCoverage":false},{"functionName":"CookieJar","ranges":[{"startOffset":5889,"endOffset":9239,"count":0}],"isBlockCoverage":false},{"functionName":"setCookies","ranges":[{"startOffset":9423,"endOffset":10046,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/chai-http/lib/request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9622,"count":1},{"startOffset":8493,"endOffset":8503,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":5889,"endOffset":6798,"count":10},{"startOffset":6066,"endOffset":6071,"count":0}],"isBlockCoverage":true},{"functionName":"obj.keepOpen","ranges":[{"startOffset":6281,"endOffset":6333,"count":0}],"isBlockCoverage":false},{"functionName":"obj.close","ranges":[{"startOffset":6348,"endOffset":6511,"count":10},{"startOffset":6438,"endOffset":6486,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6530,"endOffset":6756,"count":340}],"isBlockCoverage":true},{"functionName":"obj.<computed>","ranges":[{"startOffset":6568,"endOffset":6751,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6649,"endOffset":6743,"count":10}],"isBlockCoverage":true},{"functionName":"Test","ranges":[{"startOffset":7157,"endOffset":7372,"count":10},{"startOffset":7284,"endOffset":7296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7335,"endOffset":7368,"count":10}],"isBlockCoverage":true},{"functionName":"serverAddress","ranges":[{"startOffset":7404,"endOffset":7897,"count":10},{"startOffset":7472,"endOffset":7500,"count":0},{"startOffset":7542,"endOffset":7594,"count":0},{"startOffset":7642,"endOffset":7651,"count":0}],"isBlockCoverage":true},{"functionName":"TestAgent","ranges":[{"startOffset":8137,"endOffset":8461,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":8535,"endOffset":8646,"count":0}],"isBlockCoverage":false},{"functionName":"keepOpen","ranges":[{"startOffset":8678,"endOffset":8715,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8763,"endOffset":9564,"count":34}],"isBlockCoverage":true},{"functionName":"TestAgent.<computed>","ranges":[{"startOffset":8813,"endOffset":9561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4333,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2001,"endOffset":2095,"count":11}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":3095,"endOffset":3181,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3355,"endOffset":3461,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3895,"endOffset":4111,"count":8},{"startOffset":3941,"endOffset":4077,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4221,"endOffset":4268,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4273,"endOffset":4326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16994,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1739,"endOffset":1766,"count":1}],"isBlockCoverage":true},{"functionName":"ReusedHandle","ranges":[{"startOffset":2809,"endOffset":2891,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2898,"endOffset":3082,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":3086,"endOffset":6523,"count":16},{"startOffset":3150,"endOffset":3176,"count":0},{"startOffset":4063,"endOffset":4321,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4393,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6635,"endOffset":7174,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":7354,"endOffset":7857,"count":42},{"startOffset":7409,"endOffset":7423,"count":0},{"startOffset":7543,"endOffset":7572,"count":0},{"startOffset":7739,"endOffset":7768,"count":0},{"startOffset":7803,"endOffset":7836,"count":0}],"isBlockCoverage":true},{"functionName":"addRequest","ranges":[{"startOffset":7891,"endOffset":10122,"count":14},{"startOffset":8117,"endOffset":8227,"count":0},{"startOffset":8325,"endOffset":8359,"count":0},{"startOffset":8670,"endOffset":8978,"count":0},{"startOffset":9012,"endOffset":9032,"count":0},{"startOffset":9111,"endOffset":9279,"count":0},{"startOffset":9659,"endOffset":10119,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9517,"endOffset":9652,"count":14},{"startOffset":9561,"endOffset":9587,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":10158,"endOffset":11084,"count":14},{"startOffset":10295,"endOffset":10329,"count":0},{"startOffset":10394,"endOffset":10449,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10622,"endOffset":10964,"count":14},{"startOffset":10657,"endOffset":10672,"count":0},{"startOffset":10703,"endOffset":10743,"count":0}],"isBlockCoverage":true},{"functionName":"calculateServerName","ranges":[{"startOffset":11089,"endOffset":11935,"count":14},{"startOffset":11434,"endOffset":11722,"count":0}],"isBlockCoverage":true},{"functionName":"installListeners","ranges":[{"startOffset":11939,"endOffset":13474,"count":14},{"startOffset":13426,"endOffset":13471,"count":0}],"isBlockCoverage":true},{"functionName":"onFree","ranges":[{"startOffset":11989,"endOffset":12086,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":12117,"endOffset":12447,"count":14}],"isBlockCoverage":true},{"functionName":"onTimeout","ranges":[{"startOffset":12480,"endOffset":12835,"count":0}],"isBlockCoverage":false},{"functionName":"onRemove","ranges":[{"startOffset":12872,"endOffset":13364,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":13509,"endOffset":15366,"count":14},{"startOffset":13862,"endOffset":14185,"count":28},{"startOffset":13921,"endOffset":14180,"count":14},{"startOffset":14227,"endOffset":14256,"count":0},{"startOffset":14258,"endOffset":14358,"count":0},{"startOffset":14689,"endOffset":15050,"count":0},{"startOffset":15069,"endOffset":15079,"count":0},{"startOffset":15081,"endOffset":15361,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15235,"endOffset":15354,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":15405,"endOffset":15668,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":15703,"endOffset":15876,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":15907,"endOffset":16268,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":16273,"endOffset":16521,"count":14},{"startOffset":16431,"endOffset":16462,"count":0},{"startOffset":16483,"endOffset":16520,"count":0}],"isBlockCoverage":true},{"functionName":"asyncResetHandle","ranges":[{"startOffset":16525,"endOffset":16928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26788,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2740,"endOffset":2767,"count":1}],"isBlockCoverage":true},{"functionName":"validateHost","ranges":[{"startOffset":2959,"endOffset":3259,"count":28},{"startOffset":3038,"endOffset":3065,"count":14},{"startOffset":3067,"endOffset":3240,"count":0}],"isBlockCoverage":true},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3298,"endOffset":3371,"count":14}],"isBlockCoverage":true},{"functionName":"ClientRequest","ranges":[{"startOffset":3378,"endOffset":10827,"count":14},{"startOffset":3508,"endOffset":3589,"count":0},{"startOffset":3634,"endOffset":3696,"count":0},{"startOffset":3698,"endOffset":3767,"count":0},{"startOffset":3880,"endOffset":3933,"count":0},{"startOffset":4172,"endOffset":4672,"count":0},{"startOffset":5025,"endOffset":5076,"count":0},{"startOffset":5122,"endOffset":5193,"count":0},{"startOffset":5349,"endOffset":5363,"count":0},{"startOffset":5364,"endOffset":5369,"count":0},{"startOffset":5512,"endOffset":5526,"count":0},{"startOffset":5580,"endOffset":5607,"count":0},{"startOffset":5698,"endOffset":5758,"count":0},{"startOffset":5810,"endOffset":5851,"count":0},{"startOffset":6007,"endOffset":6086,"count":0},{"startOffset":6160,"endOffset":6227,"count":0},{"startOffset":6296,"endOffset":6343,"count":0},{"startOffset":6435,"endOffset":6486,"count":0},{"startOffset":6626,"endOffset":6675,"count":0},{"startOffset":6677,"endOffset":6789,"count":0},{"startOffset":6869,"endOffset":6875,"count":0},{"startOffset":6888,"endOffset":6926,"count":0},{"startOffset":6953,"endOffset":6980,"count":6},{"startOffset":6981,"endOffset":7010,"count":6},{"startOffset":7011,"endOffset":7041,"count":6},{"startOffset":7042,"endOffset":7070,"count":6},{"startOffset":7071,"endOffset":7101,"count":6},{"startOffset":7103,"endOffset":7156,"count":8},{"startOffset":7156,"endOffset":7214,"count":6},{"startOffset":7933,"endOffset":8010,"count":0},{"startOffset":8123,"endOffset":8430,"count":0},{"startOffset":8802,"endOffset":8870,"count":0},{"startOffset":8871,"endOffset":8932,"count":0},{"startOffset":8943,"endOffset":8994,"count":0},{"startOffset":9159,"endOffset":9194,"count":0},{"startOffset":9196,"endOffset":9323,"count":0},{"startOffset":9361,"endOffset":9578,"count":0},{"startOffset":9583,"endOffset":9708,"count":0},{"startOffset":9780,"endOffset":9876,"count":0},{"startOffset":9983,"endOffset":10824,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10195,"endOffset":10365,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":10995,"endOffset":11135,"count":14}],"isBlockCoverage":true},{"functionName":"_implicitHeader","ranges":[{"startOffset":11182,"endOffset":11400,"count":14},{"startOffset":11232,"endOffset":11286,"count":0}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":11437,"endOffset":11582,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":11621,"endOffset":11912,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":11917,"endOffset":11969,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":11973,"endOffset":12139,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":12143,"endOffset":13353,"count":14},{"startOffset":12546,"endOffset":12605,"count":0},{"startOffset":12694,"endOffset":12725,"count":0},{"startOffset":12730,"endOffset":13067,"count":0},{"startOffset":13284,"endOffset":13350,"count":0}],"isBlockCoverage":true},{"functionName":"socketErrorListener","ranges":[{"startOffset":13357,"endOffset":14020,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":14024,"endOffset":14526,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":14530,"endOffset":16980,"count":14},{"startOffset":14760,"endOffset":15055,"count":0},{"startOffset":15109,"endOffset":16334,"count":0}],"isBlockCoverage":true},{"functionName":"statusIsInformational","ranges":[{"startOffset":16984,"endOffset":17225,"count":28},{"startOffset":17186,"endOffset":17202,"count":0},{"startOffset":17203,"endOffset":17220,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":17240,"endOffset":19740,"count":14},{"startOffset":17421,"endOffset":17588,"count":0},{"startOffset":17672,"endOffset":17681,"count":0},{"startOffset":17801,"endOffset":17883,"count":0},{"startOffset":17932,"endOffset":18654,"count":0},{"startOffset":18684,"endOffset":18703,"count":0},{"startOffset":18704,"endOffset":18728,"count":0},{"startOffset":18730,"endOffset":18953,"count":0},{"startOffset":19483,"endOffset":19495,"count":0},{"startOffset":19529,"endOffset":19538,"count":0},{"startOffset":19614,"endOffset":19696,"count":0}],"isBlockCoverage":true},{"functionName":"responseKeepAlive","ranges":[{"startOffset":19755,"endOffset":20853,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":20857,"endOffset":21786,"count":14},{"startOffset":20982,"endOffset":21035,"count":0},{"startOffset":21311,"endOffset":21346,"count":0},{"startOffset":21389,"endOffset":21783,"count":0}],"isBlockCoverage":true},{"functionName":"responseOnTimeout","ranges":[{"startOffset":21790,"endOffset":21947,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnPrefinish","ranges":[{"startOffset":21951,"endOffset":22079,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":22083,"endOffset":22213,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":22217,"endOffset":23397,"count":14},{"startOffset":22388,"endOffset":22412,"count":0},{"startOffset":22608,"endOffset":22621,"count":0},{"startOffset":22909,"endOffset":22970,"count":0},{"startOffset":23326,"endOffset":23363,"count":0}],"isBlockCoverage":true},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":23401,"endOffset":23514,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":23518,"endOffset":23923,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":23962,"endOffset":24137,"count":14}],"isBlockCoverage":true},{"functionName":"onSocketNT","ranges":[{"startOffset":24142,"endOffset":24873,"count":14},{"startOffset":24211,"endOffset":24807,"count":0}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":24247,"endOffset":24493,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24668,"endOffset":24725,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":24937,"endOffset":25714,"count":14},{"startOffset":25682,"endOffset":25711,"count":0}],"isBlockCoverage":true},{"functionName":"callSocketMethod","ranges":[{"startOffset":25348,"endOffset":25444,"count":14}],"isBlockCoverage":true},{"functionName":"onSocket","ranges":[{"startOffset":25468,"endOffset":25615,"count":14},{"startOffset":25542,"endOffset":25610,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":25755,"endOffset":26136,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":26141,"endOffset":26335,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":26376,"endOffset":26459,"count":14}],"isBlockCoverage":true},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":26514,"endOffset":26641,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":26685,"endOffset":26742,"count":0}],"isBlockCoverage":false}]},{"scriptId":"346","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8746,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1715,"endOffset":1742,"count":1}],"isBlockCoverage":true},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2502,"endOffset":2756,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2975,"endOffset":4609,"count":28},{"startOffset":3267,"endOffset":3332,"count":0},{"startOffset":3361,"endOffset":3414,"count":14},{"startOffset":3516,"endOffset":3584,"count":14},{"startOffset":3586,"endOffset":3638,"count":14},{"startOffset":4366,"endOffset":4548,"count":14}],"isBlockCoverage":true},{"functionName":"parserOnBody","ranges":[{"startOffset":4613,"endOffset":5018,"count":20},{"startOffset":4776,"endOffset":4783,"count":0},{"startOffset":4988,"endOffset":5010,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":5022,"endOffset":5529,"count":28},{"startOffset":5273,"endOffset":5391,"count":0}],"isBlockCoverage":true},{"functionName":"parsersCb","ranges":[{"startOffset":5581,"endOffset":5880,"count":3}],"isBlockCoverage":true},{"functionName":"closeParserInstance","ranges":[{"startOffset":5886,"endOffset":5942,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":6274,"endOffset":6899,"count":28},{"startOffset":6368,"endOffset":6387,"count":14},{"startOffset":6455,"endOffset":6637,"count":0},{"startOffset":6817,"endOffset":6847,"count":14}],"isBlockCoverage":true},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":7119,"endOffset":7203,"count":155}],"isBlockCoverage":true},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7474,"endOffset":7568,"count":155}],"isBlockCoverage":true},{"functionName":"cleanParser","ranges":[{"startOffset":7572,"endOffset":7928,"count":31}],"isBlockCoverage":true},{"functionName":"prepareError","ranges":[{"startOffset":7932,"endOffset":8129,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":8163,"endOffset":8354,"count":28},{"startOffset":8212,"endOffset":8229,"count":0},{"startOffset":8231,"endOffset":8321,"count":0}],"isBlockCoverage":true}]},{"scriptId":"347","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":83,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":212,"endOffset":335,"count":28},{"startOffset":255,"endOffset":279,"count":25},{"startOffset":280,"endOffset":329,"count":3}],"isBlockCoverage":true},{"functionName":"free","ranges":[{"startOffset":341,"endOffset":471,"count":28},{"startOffset":447,"endOffset":470,"count":0}],"isBlockCoverage":true}]},{"scriptId":"348","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13338,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1578,"endOffset":1684,"count":34}],"isBlockCoverage":true},{"functionName":"readStop","ranges":[{"startOffset":1688,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1823,"endOffset":2812,"count":28}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3008,"endOffset":3050,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3060,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3182,"endOffset":3491,"count":188},{"startOffset":3221,"endOffset":3458,"count":28},{"startOffset":3382,"endOffset":3451,"count":167}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3501,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3627,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3952,"endOffset":4000,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":4048,"endOffset":4191,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":4680,"endOffset":5068,"count":6}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":5316,"endOffset":6016,"count":28},{"startOffset":5391,"endOffset":5450,"count":0},{"startOffset":5820,"endOffset":5972,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5896,"endOffset":5965,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":6083,"endOffset":6561,"count":28},{"startOffset":6197,"endOffset":6304,"count":0},{"startOffset":6432,"endOffset":6553,"count":0}],"isBlockCoverage":true},{"functionName":"matchKnownFields","ranges":[{"startOffset":7296,"endOffset":11285,"count":181},{"startOffset":7375,"endOffset":7457,"count":0},{"startOffset":7463,"endOffset":7816,"count":42},{"startOffset":7499,"endOffset":7518,"count":28},{"startOffset":7520,"endOffset":7534,"count":14},{"startOffset":7534,"endOffset":7582,"count":28},{"startOffset":7584,"endOffset":7598,"count":0},{"startOffset":7598,"endOffset":7627,"count":28},{"startOffset":7627,"endOffset":7646,"count":20},{"startOffset":7648,"endOffset":7662,"count":8},{"startOffset":7662,"endOffset":7691,"count":20},{"startOffset":7691,"endOffset":7710,"count":6},{"startOffset":7712,"endOffset":7732,"count":14},{"startOffset":7732,"endOffset":7761,"count":6},{"startOffset":7761,"endOffset":7780,"count":0},{"startOffset":7782,"endOffset":7802,"count":6},{"startOffset":7802,"endOffset":7816,"count":0},{"startOffset":7822,"endOffset":8217,"count":7},{"startOffset":7883,"endOffset":7899,"count":0},{"startOffset":7930,"endOffset":7951,"count":2},{"startOffset":7975,"endOffset":8027,"count":0},{"startOffset":8029,"endOffset":8103,"count":0},{"startOffset":8105,"endOffset":8179,"count":0},{"startOffset":8181,"endOffset":8217,"count":0},{"startOffset":8223,"endOffset":8469,"count":0},{"startOffset":8475,"endOffset":8672,"count":6},{"startOffset":8515,"endOffset":8538,"count":0},{"startOffset":8567,"endOffset":8623,"count":0},{"startOffset":8634,"endOffset":8672,"count":0},{"startOffset":8678,"endOffset":8975,"count":44},{"startOffset":8721,"endOffset":8746,"count":34},{"startOffset":8757,"endOffset":8777,"count":14},{"startOffset":8777,"endOffset":8812,"count":30},{"startOffset":8812,"endOffset":8837,"count":28},{"startOffset":8848,"endOffset":8864,"count":2},{"startOffset":8864,"endOffset":8899,"count":28},{"startOffset":8899,"endOffset":8924,"count":0},{"startOffset":8935,"endOffset":8961,"count":28},{"startOffset":8961,"endOffset":8975,"count":0},{"startOffset":8981,"endOffset":9097,"count":0},{"startOffset":9103,"endOffset":9319,"count":48},{"startOffset":9148,"endOffset":9175,"count":28},{"startOffset":9186,"endOffset":9208,"count":20},{"startOffset":9208,"endOffset":9272,"count":28},{"startOffset":9283,"endOffset":9305,"count":0},{"startOffset":9305,"endOffset":9319,"count":28},{"startOffset":9325,"endOffset":9759,"count":0},{"startOffset":9765,"endOffset":9890,"count":20},{"startOffset":9812,"endOffset":9841,"count":0},{"startOffset":9876,"endOffset":9890,"count":0},{"startOffset":9896,"endOffset":10254,"count":14},{"startOffset":9944,"endOffset":9974,"count":4},{"startOffset":10016,"endOffset":10086,"count":0},{"startOffset":10097,"endOffset":10198,"count":0},{"startOffset":10209,"endOffset":10254,"count":0},{"startOffset":10260,"endOffset":10512,"count":0},{"startOffset":10518,"endOffset":10888,"count":0},{"startOffset":10894,"endOffset":11152,"count":0},{"startOffset":11157,"endOffset":11177,"count":28},{"startOffset":11177,"endOffset":11284,"count":14}],"isBlockCoverage":true},{"functionName":"_addHeaderLine","ranges":[{"startOffset":11907,"endOffset":12627,"count":167},{"startOffset":12060,"endOffset":12073,"count":91},{"startOffset":12075,"endOffset":12307,"count":83},{"startOffset":12194,"endOffset":12260,"count":0},{"startOffset":12307,"endOffset":12624,"count":84},{"startOffset":12329,"endOffset":12531,"count":2},{"startOffset":12428,"endOffset":12475,"count":0},{"startOffset":12531,"endOffset":12624,"count":82}],"isBlockCoverage":true},{"functionName":"_dump","ranges":[{"startOffset":12755,"endOffset":13004,"count":8}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":13009,"endOffset":13264,"count":28},{"startOffset":13216,"endOffset":13233,"count":18},{"startOffset":13233,"endOffset":13261,"count":10}],"isBlockCoverage":true}]},{"scriptId":"349","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29766,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2757,"endOffset":2784,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2893,"endOffset":2901,"count":54}],"isBlockCoverage":true},{"functionName":"isCookieField","ranges":[{"startOffset":3151,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3257,"endOffset":4565,"count":28}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4758,"endOffset":4906,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4990,"endOffset":5021,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5101,"endOffset":5191,"count":20},{"startOffset":5152,"endOffset":5180,"count":14},{"startOffset":5181,"endOffset":5184,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5278,"endOffset":5369,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5449,"endOffset":5563,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5665,"endOffset":5713,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5810,"endOffset":6308,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6453,"endOffset":6495,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6505,"endOffset":6549,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6655,"endOffset":7126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7227,"endOffset":7691,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":7813,"endOffset":8335,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":8373,"endOffset":8474,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":8514,"endOffset":8636,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":8680,"endOffset":8988,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":9237,"endOffset":9537,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":9651,"endOffset":10419,"count":48},{"startOffset":9923,"endOffset":10364,"count":28},{"startOffset":9959,"endOffset":10030,"count":20},{"startOffset":10017,"endOffset":10029,"count":12},{"startOffset":10032,"endOffset":10075,"count":20},{"startOffset":10075,"endOffset":10329,"count":8}],"isBlockCoverage":true},{"functionName":"_writeRaw","ranges":[{"startOffset":10476,"endOffset":11341,"count":48},{"startOffset":10564,"endOffset":10581,"count":28},{"startOffset":10583,"endOffset":10734,"count":0},{"startOffset":10776,"endOffset":10830,"count":0},{"startOffset":10845,"endOffset":10874,"count":28},{"startOffset":10875,"endOffset":10891,"count":28},{"startOffset":10893,"endOffset":11120,"count":28},{"startOffset":10991,"endOffset":11031,"count":8},{"startOffset":11120,"endOffset":11340,"count":20}],"isBlockCoverage":true},{"functionName":"_storeHeader","ranges":[{"startOffset":11403,"endOffset":15998,"count":28},{"startOffset":11844,"endOffset":11955,"count":125},{"startOffset":11962,"endOffset":12705,"count":0},{"startOffset":12781,"endOffset":12795,"count":14},{"startOffset":12797,"endOffset":12849,"count":14},{"startOffset":13456,"endOffset":13543,"count":0},{"startOffset":13545,"endOffset":13733,"count":0},{"startOffset":13791,"endOffset":13856,"count":0},{"startOffset":13941,"endOffset":14018,"count":0},{"startOffset":14049,"endOffset":14087,"count":0},{"startOffset":14089,"endOffset":14139,"count":0},{"startOffset":14170,"endOffset":14435,"count":0},{"startOffset":14547,"endOffset":14559,"count":8},{"startOffset":14561,"endOffset":15396,"count":8},{"startOffset":14588,"endOffset":14707,"count":0},{"startOffset":14786,"endOffset":15391,"count":0},{"startOffset":15723,"endOffset":15772,"count":0},{"startOffset":15980,"endOffset":15995,"count":0}],"isBlockCoverage":true},{"functionName":"processHeader","ranges":[{"startOffset":16002,"endOffset":16535,"count":125},{"startOffset":16084,"endOffset":16108,"count":0},{"startOffset":16137,"endOffset":16481,"count":0}],"isBlockCoverage":true},{"functionName":"storeHeader","ranges":[{"startOffset":16539,"endOffset":16743,"count":125},{"startOffset":16619,"endOffset":16651,"count":0}],"isBlockCoverage":true},{"functionName":"matchHeader","ranges":[{"startOffset":16747,"endOffset":17650,"count":125},{"startOffset":16848,"endOffset":16855,"count":0},{"startOffset":16927,"endOffset":17163,"count":0},{"startOffset":17169,"endOffset":17356,"count":0},{"startOffset":17362,"endOffset":17464,"count":20},{"startOffset":17470,"endOffset":17482,"count":0},{"startOffset":17488,"endOffset":17502,"count":0},{"startOffset":17508,"endOffset":17565,"count":0},{"startOffset":17571,"endOffset":17642,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17697,"endOffset":17847,"count":141},{"startOffset":17778,"endOffset":17844,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17897,"endOffset":18175,"count":141},{"startOffset":17944,"endOffset":18009,"count":0},{"startOffset":18048,"endOffset":18172,"count":0}],"isBlockCoverage":true},{"functionName":"setHeader","ranges":[{"startOffset":18219,"endOffset":18592,"count":141},{"startOffset":18274,"endOffset":18325,"count":0},{"startOffset":18460,"endOffset":18509,"count":28}],"isBlockCoverage":true},{"functionName":"getHeader","ranges":[{"startOffset":18637,"endOffset":18868,"count":116},{"startOffset":18767,"endOffset":18774,"count":14},{"startOffset":18774,"endOffset":18853,"count":102},{"startOffset":18853,"endOffset":18864,"count":42}],"isBlockCoverage":true},{"functionName":"getHeaderNames","ranges":[{"startOffset":18985,"endOffset":19090,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":19214,"endOffset":19628,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":19734,"endOffset":20157,"count":8},{"startOffset":20039,"endOffset":20134,"count":44}],"isBlockCoverage":true},{"functionName":"hasHeader","ranges":[{"startOffset":20202,"endOffset":20364,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":20412,"endOffset":21004,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":21055,"endOffset":21148,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21270,"endOffset":21307,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21391,"endOffset":21427,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21515,"endOffset":21599,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":21681,"endOffset":21944,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":21949,"endOffset":22318,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":22322,"endOffset":22476,"count":0}],"isBlockCoverage":false},{"functionName":"write_","ranges":[{"startOffset":22480,"endOffset":24093,"count":20},{"startOffset":22636,"endOffset":22683,"count":0},{"startOffset":22720,"endOffset":22773,"count":12},{"startOffset":22773,"endOffset":22944,"count":8},{"startOffset":22835,"endOffset":22944,"count":0},{"startOffset":22980,"endOffset":23031,"count":0},{"startOffset":23056,"endOffset":23108,"count":0},{"startOffset":23123,"endOffset":23272,"count":0},{"startOffset":23415,"endOffset":23571,"count":0},{"startOffset":23590,"endOffset":23603,"count":0},{"startOffset":23604,"endOffset":23633,"count":0},{"startOffset":23635,"endOffset":23718,"count":0},{"startOffset":23760,"endOffset":23781,"count":0},{"startOffset":23783,"endOffset":23980,"count":0}],"isBlockCoverage":true},{"functionName":"connectionCorkNT","ranges":[{"startOffset":24099,"endOffset":24153,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":24199,"endOffset":25072,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":25077,"endOffset":25200,"count":28},{"startOffset":25164,"endOffset":25171,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":25236,"endOffset":27094,"count":28},{"startOffset":25314,"endOffset":25384,"count":0},{"startOffset":25426,"endOffset":25480,"count":0},{"startOffset":25497,"endOffset":25801,"count":20},{"startOffset":25523,"endOffset":25686,"count":0},{"startOffset":25711,"endOffset":25746,"count":14},{"startOffset":25801,"endOffset":26209,"count":8},{"startOffset":25826,"endOffset":26059,"count":0},{"startOffset":26108,"endOffset":26143,"count":0},{"startOffset":26256,"endOffset":26286,"count":0},{"startOffset":26387,"endOffset":26462,"count":0},{"startOffset":26490,"endOffset":26512,"count":20},{"startOffset":26513,"endOffset":26521,"count":0},{"startOffset":26568,"endOffset":26611,"count":0},{"startOffset":26634,"endOffset":26753,"count":14},{"startOffset":26979,"endOffset":27000,"count":14},{"startOffset":27001,"endOffset":27044,"count":14},{"startOffset":27046,"endOffset":27073,"count":14}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":27137,"endOffset":27211,"count":28}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":28034,"endOffset":28479,"count":28},{"startOffset":28260,"endOffset":28471,"count":14},{"startOffset":28382,"endOffset":28401,"count":0},{"startOffset":28403,"endOffset":28471,"count":0}],"isBlockCoverage":true},{"functionName":"_flushOutput","ranges":[{"startOffset":28525,"endOffset":29194,"count":36},{"startOffset":28582,"endOffset":28630,"count":0},{"startOffset":28712,"endOffset":28729,"count":14},{"startOffset":28729,"endOffset":28947,"count":22},{"startOffset":28947,"endOffset":29061,"count":28},{"startOffset":29061,"endOffset":29193,"count":22}],"isBlockCoverage":true},{"functionName":"flushHeaders","ranges":[{"startOffset":29242,"endOffset":29380,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":29418,"endOffset":29563,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":29624,"endOffset":29671,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1185,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":366,"endOffset":436,"count":14},{"startOffset":405,"endOffset":413,"count":2}],"isBlockCoverage":true},{"functionName":"cache","ranges":[{"startOffset":440,"endOffset":601,"count":2}],"isBlockCoverage":true},{"functionName":"resetCache","ranges":[{"startOffset":605,"endOffset":656,"count":1}],"isBlockCoverage":true},{"functionName":"emitStatistics","ranges":[{"startOffset":660,"endOffset":1050,"count":14},{"startOffset":726,"endOffset":747,"count":0},{"startOffset":756,"endOffset":1049,"count":0}],"isBlockCoverage":true}]},{"scriptId":"351","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33672,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2603,"endOffset":2630,"count":1}],"isBlockCoverage":true},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":6850,"endOffset":6932,"count":14}],"isBlockCoverage":true},{"functionName":"ServerResponse","ranges":[{"startOffset":6939,"endOffset":7544,"count":14},{"startOffset":7033,"endOffset":7055,"count":0},{"startOffset":7225,"endOffset":7420,"count":0},{"startOffset":7451,"endOffset":7541,"count":0}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":7715,"endOffset":7884,"count":14}],"isBlockCoverage":true},{"functionName":"onServerResponseClose","ranges":[{"startOffset":7990,"endOffset":9079,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":9123,"endOffset":9342,"count":14}],"isBlockCoverage":true},{"functionName":"detachSocket","ranges":[{"startOffset":9387,"endOffset":9574,"count":14}],"isBlockCoverage":true},{"functionName":"writeContinue","ranges":[{"startOffset":9620,"endOffset":9741,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":9789,"endOffset":9889,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":9937,"endOffset":10004,"count":14}],"isBlockCoverage":true},{"functionName":"writeHead","ranges":[{"startOffset":10058,"endOffset":12734,"count":14},{"startOffset":10213,"endOffset":10284,"count":0},{"startOffset":10324,"endOffset":10419,"count":0},{"startOffset":10551,"endOffset":10563,"count":0},{"startOffset":10778,"endOffset":11020,"count":0},{"startOffset":11035,"endOffset":11313,"count":0},{"startOffset":11356,"endOffset":11414,"count":0},{"startOffset":11490,"endOffset":11554,"count":0},{"startOffset":11613,"endOffset":11657,"count":0},{"startOffset":11836,"endOffset":12431,"count":0},{"startOffset":12608,"endOffset":12625,"count":0},{"startOffset":12627,"endOffset":12668,"count":0}],"isBlockCoverage":true},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":12850,"endOffset":13434,"count":11},{"startOffset":13119,"endOffset":13170,"count":0},{"startOffset":13316,"endOffset":13382,"count":0}],"isBlockCoverage":true},{"functionName":"Server","ranges":[{"startOffset":13438,"endOffset":14513,"count":11},{"startOffset":13516,"endOffset":13560,"count":0},{"startOffset":13658,"endOffset":13832,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":14655,"endOffset":14789,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":14840,"endOffset":15429,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":15434,"endOffset":15582,"count":14}],"isBlockCoverage":true},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":15586,"endOffset":19579,"count":14},{"startOffset":16018,"endOffset":16060,"count":0},{"startOffset":16067,"endOffset":16101,"count":0},{"startOffset":16261,"endOffset":16288,"count":0},{"startOffset":16603,"endOffset":16616,"count":0},{"startOffset":16660,"endOffset":16664,"count":0},{"startOffset":16840,"endOffset":16904,"count":0}],"isBlockCoverage":true},{"functionName":"socketSetEncoding","ranges":[{"startOffset":19583,"endOffset":19657,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":19661,"endOffset":19780,"count":16}],"isBlockCoverage":true},{"functionName":"socketOnDrain","ranges":[{"startOffset":19784,"endOffset":20254,"count":16},{"startOffset":19977,"endOffset":19990,"count":0},{"startOffset":19992,"endOffset":20104,"count":0},{"startOffset":20191,"endOffset":20251,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnTimeout","ranges":[{"startOffset":20258,"endOffset":20640,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":20644,"endOffset":20797,"count":14}],"isBlockCoverage":true},{"functionName":"abortIncoming","ranges":[{"startOffset":20801,"endOffset":20990,"count":14},{"startOffset":20863,"endOffset":20953,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnEnd","ranges":[{"startOffset":20994,"endOffset":21532,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":21536,"endOffset":21771,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":21775,"endOffset":21992,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":21996,"endOffset":22503,"count":14}],"isBlockCoverage":true},{"functionName":"onParserTimeout","ranges":[{"startOffset":22507,"endOffset":22657,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":22674,"endOffset":22682,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":23096,"endOffset":23756,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":23760,"endOffset":25762,"count":14},{"startOffset":23909,"endOffset":24020,"count":0},{"startOffset":24074,"endOffset":25220,"count":0},{"startOffset":25283,"endOffset":25350,"count":0},{"startOffset":25606,"endOffset":25622,"count":0},{"startOffset":25624,"endOffset":25759,"count":0}],"isBlockCoverage":true},{"functionName":"clearIncoming","ranges":[{"startOffset":25766,"endOffset":26115,"count":22},{"startOffset":25809,"endOffset":25816,"count":8},{"startOffset":26017,"endOffset":26056,"count":14},{"startOffset":26056,"endOffset":26107,"count":8}],"isBlockCoverage":true},{"functionName":"setRequestTimeout","ranges":[{"startOffset":26119,"endOffset":26461,"count":28},{"startOffset":26271,"endOffset":26299,"count":0},{"startOffset":26305,"endOffset":26458,"count":0}],"isBlockCoverage":true},{"functionName":"clearRequestTimeout","ranges":[{"startOffset":26465,"endOffset":26712,"count":28},{"startOffset":26514,"endOffset":26537,"count":14},{"startOffset":26589,"endOffset":26711,"count":0}],"isBlockCoverage":true},{"functionName":"resOnFinish","ranges":[{"startOffset":26716,"endOffset":28431,"count":14},{"startOffset":26819,"endOffset":26945,"count":0},{"startOffset":27415,"endOffset":27453,"count":8},{"startOffset":27460,"endOffset":27472,"count":8},{"startOffset":28023,"endOffset":28058,"count":0},{"startOffset":28063,"endOffset":28428,"count":0}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":28435,"endOffset":28539,"count":14}],"isBlockCoverage":true},{"functionName":"parserOnIncoming","ranges":[{"startOffset":28710,"endOffset":31793,"count":14},{"startOffset":28845,"endOffset":28993,"count":0},{"startOffset":29339,"endOffset":29566,"count":0},{"startOffset":29927,"endOffset":30051,"count":0},{"startOffset":30082,"endOffset":30175,"count":0},{"startOffset":30722,"endOffset":30868,"count":0},{"startOffset":30899,"endOffset":30960,"count":0},{"startOffset":30962,"endOffset":31040,"count":0},{"startOffset":31084,"endOffset":31638,"count":0}],"isBlockCoverage":true},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":31797,"endOffset":31983,"count":28},{"startOffset":31897,"endOffset":31940,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketResume","ranges":[{"startOffset":31987,"endOffset":32525,"count":14},{"startOffset":32364,"endOffset":32402,"count":0},{"startOffset":32451,"endOffset":32522,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketPause","ranges":[{"startOffset":32529,"endOffset":32675,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":32679,"endOffset":32939,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":32943,"endOffset":33513,"count":42}],"isBlockCoverage":true},{"functionName":"socketListenerWrap","ranges":[{"startOffset":33010,"endOffset":33509,"count":28},{"startOffset":33204,"endOffset":33401,"count":0},{"startOffset":33456,"endOffset":33485,"count":0}],"isBlockCoverage":true}]},{"scriptId":"352","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2824,"count":1}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":567,"endOffset":708,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":714,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":1177,"endOffset":1222,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":1228,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":1566,"endOffset":1649,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1662,"endOffset":1851,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":1857,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2015,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":2060,"endOffset":2106,"count":28}],"isBlockCoverage":true},{"functionName":"publish","ranges":[{"startOffset":2112,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":2171,"endOffset":2557,"count":2},{"startOffset":2255,"endOffset":2275,"count":0},{"startOffset":2292,"endOffset":2307,"count":0},{"startOffset":2342,"endOffset":2369,"count":0},{"startOffset":2371,"endOffset":2453,"count":0}],"isBlockCoverage":true},{"functionName":"hasSubscribers","ranges":[{"startOffset":2561,"endOffset":2754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"node:https","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10447,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1782,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":1895,"endOffset":2966,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":3433,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":3553,"endOffset":4698,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":5066,"endOffset":5471,"count":1},{"startOffset":5130,"endOffset":5156,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":5857,"endOffset":7650,"count":0}],"isBlockCoverage":false},{"functionName":"_getSession","ranges":[{"startOffset":7685,"endOffset":7754,"count":0}],"isBlockCoverage":false},{"functionName":"_cacheSession","ranges":[{"startOffset":7791,"endOffset":8384,"count":0}],"isBlockCoverage":false},{"functionName":"_evictSession","ranges":[{"startOffset":8421,"endOffset":8658,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":8807,"endOffset":9468,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10236,"endOffset":10346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"node:tls","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12780,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3709,"endOffset":3773,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3806,"endOffset":3902,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4011,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"convertProtocols","ranges":[{"startOffset":4281,"endOffset":4913,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4948,"endOffset":5293,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":5298,"endOffset":5376,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":5488,"endOffset":5584,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":5588,"endOffset":5730,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":5734,"endOffset":7782,"count":0}],"isBlockCoverage":false},{"functionName":"splitEscapedAltNames","ranges":[{"startOffset":8156,"endOffset":9422,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":9456,"endOffset":12143,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"node:_tls_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5530,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1866,"endOffset":2166,"count":0}],"isBlockCoverage":false},{"functionName":"SecureContext","ranges":[{"startOffset":2252,"endOffset":3111,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureContext","ranges":[{"startOffset":3115,"endOffset":3596,"count":0}],"isBlockCoverage":false},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":3840,"endOffset":5431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"node:internal/tls/secure-context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9580,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEcdhCurve","ranges":[{"startOffset":694,"endOffset":949,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCiphers","ranges":[{"startOffset":953,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"addCACerts","ranges":[{"startOffset":1194,"endOffset":1363,"count":0}],"isBlockCoverage":false},{"functionName":"setCerts","ranges":[{"startOffset":1367,"endOffset":1532,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":1536,"endOffset":1828,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":1832,"endOffset":2079,"count":0}],"isBlockCoverage":false},{"functionName":"processCiphers","ranges":[{"startOffset":2083,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"configSecureContext","ranges":[{"startOffset":2945,"endOffset":9528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11011,"count":1}],"isBlockCoverage":false},{"functionName":"lazyRequire","ranges":[{"startOffset":1256,"endOffset":1416,"count":12},{"startOffset":1353,"endOffset":1398,"count":1}],"isBlockCoverage":true},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":1455,"endOffset":1518,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":1522,"endOffset":1583,"count":8}],"isBlockCoverage":true},{"functionName":"toBuf","ranges":[{"startOffset":1763,"endOffset":1949,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1985,"endOffset":2028,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2063,"endOffset":2105,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2140,"endOffset":2182,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2188,"endOffset":2511,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2560,"endOffset":3045,"count":8},{"startOffset":2628,"endOffset":2642,"count":0},{"startOffset":2719,"endOffset":2737,"count":0},{"startOffset":2785,"endOffset":3044,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":4660,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":4883,"endOffset":5860,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":5864,"endOffset":6008,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":6012,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":6370,"endOffset":6572,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6619,"endOffset":6900,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":6906,"endOffset":7008,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":7012,"endOffset":7180,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":7725,"endOffset":8016,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":8020,"endOffset":8265,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":8269,"endOffset":8439,"count":8},{"startOffset":8339,"endOffset":8372,"count":0},{"startOffset":8379,"endOffset":8419,"count":0}],"isBlockCoverage":true},{"functionName":"getUsagesUnion","ranges":[{"startOffset":8443,"endOffset":8662,"count":0}],"isBlockCoverage":false},{"functionName":"getHashLength","ranges":[{"startOffset":8666,"endOffset":8853,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":9005,"endOffset":10000,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":10004,"endOffset":10396,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2876,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":2174,"endOffset":2423,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"node:internal/tls/parse-cert-string","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":924,"count":1}],"isBlockCoverage":false},{"functionName":"parseCertString","ranges":[{"startOffset":299,"endOffset":876,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"node:_tls_wrap","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51218,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1998,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakestart","ranges":[{"startOffset":4181,"endOffset":4993,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":4997,"endOffset":5303,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":5309,"endOffset":6549,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":6555,"endOffset":7232,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":7238,"endOffset":8607,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":8611,"endOffset":8814,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":8818,"endOffset":9062,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsession","ranges":[{"startOffset":9066,"endOffset":9933,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":9937,"endOffset":10615,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":10619,"endOffset":11351,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":11355,"endOffset":11449,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":11453,"endOffset":11572,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":11576,"endOffset":12427,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":12575,"endOffset":13139,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket","ranges":[{"startOffset":13223,"endOffset":15602,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":16060,"endOffset":16240,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":16103,"endOffset":16236,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":16413,"endOffset":17132,"count":0}],"isBlockCoverage":false},{"functionName":"disableRenegotiation","ranges":[{"startOffset":17180,"endOffset":17255,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":17294,"endOffset":18330,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":18473,"endOffset":18703,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":18707,"endOffset":18858,"count":0}],"isBlockCoverage":false},{"functionName":"destroySSL","ranges":[{"startOffset":18862,"endOffset":18915,"count":0}],"isBlockCoverage":false},{"functionName":"_destroySSL","ranges":[{"startOffset":18953,"endOffset":19255,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._init","ranges":[{"startOffset":19399,"endOffset":24284,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":24323,"endOffset":25605,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":25653,"endOffset":25985,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":26031,"endOffset":26156,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":26198,"endOffset":26269,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":26310,"endOffset":26400,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":26437,"endOffset":26550,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":26593,"endOffset":26755,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":26794,"endOffset":27880,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._start","ranges":[{"startOffset":27914,"endOffset":28432,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":28473,"endOffset":28649,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":28687,"endOffset":28829,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":28875,"endOffset":29046,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":29088,"endOffset":29302,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerX509Certificate","ranges":[{"startOffset":29352,"endOffset":29495,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getX509Certificate","ranges":[{"startOffset":29541,"endOffset":29672,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":29712,"endOffset":29916,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":29761,"endOffset":29912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30147,"endOffset":30227,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":30274,"endOffset":30787,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":30791,"endOffset":31033,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":31037,"endOffset":31126,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":31130,"endOffset":31494,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":31498,"endOffset":32372,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":35205,"endOffset":37089,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":37248,"endOffset":37334,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":37377,"endOffset":40400,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":40441,"endOffset":40528,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":40569,"endOffset":40648,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":40688,"endOffset":40770,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":40810,"endOffset":41011,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41058,"endOffset":43168,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":43294,"endOffset":43673,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":43724,"endOffset":43990,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":43995,"endOffset":44314,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":44564,"endOffset":45309,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectSecure","ranges":[{"startOffset":45313,"endOffset":47678,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectEnd","ranges":[{"startOffset":47682,"endOffset":48245,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":48314,"endOffset":51215,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7927,"count":1}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3471,"endOffset":3555,"count":8}],"isBlockCoverage":true},{"functionName":"createCipher","ranges":[{"startOffset":3559,"endOffset":3661,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3665,"endOffset":3769,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3773,"endOffset":3879,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3883,"endOffset":3991,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3995,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4157,"endOffset":4241,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4245,"endOffset":4303,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4307,"endOffset":4391,"count":8}],"isBlockCoverage":true},{"functionName":"createSign","ranges":[{"startOffset":4395,"endOffset":4479,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4483,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsForced","ranges":[{"startOffset":5772,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsForced","ranges":[{"startOffset":5867,"endOffset":5909,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7055,"endOffset":7120,"count":12}],"isBlockCoverage":true}]},{"scriptId":"362","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15669,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1174,"endOffset":1550,"count":6},{"startOffset":1414,"endOffset":1498,"count":0}],"isBlockCoverage":true},{"functionName":"assertSize","ranges":[{"startOffset":1554,"endOffset":2029,"count":6},{"startOffset":1737,"endOffset":1858,"count":0},{"startOffset":1892,"endOffset":1979,"count":0}],"isBlockCoverage":true},{"functionName":"randomBytes","ranges":[{"startOffset":2033,"endOffset":2582,"count":3},{"startOffset":2147,"endOffset":2186,"count":0},{"startOffset":2324,"endOffset":2581,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2431,"endOffset":2577,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2586,"endOffset":3286,"count":6},{"startOffset":2665,"endOffset":2691,"count":3},{"startOffset":2693,"endOffset":2806,"count":0},{"startOffset":2854,"endOffset":2858,"count":3},{"startOffset":2954,"endOffset":3076,"count":3},{"startOffset":3103,"endOffset":3114,"count":0},{"startOffset":3256,"endOffset":3266,"count":0}],"isBlockCoverage":true},{"functionName":"randomFill","ranges":[{"startOffset":3290,"endOffset":4366,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":4931,"endOffset":7226,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7230,"endOffset":8131,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8137,"endOffset":8302,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8541,"endOffset":9175,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9554,"endOffset":9862,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":9866,"endOffset":10615,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10619,"endOffset":10930,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":10934,"endOffset":11178,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11182,"endOffset":11502,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11506,"endOffset":12791,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12795,"endOffset":13253,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13257,"endOffset":13517,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":13521,"endOffset":13642,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":13646,"endOffset":13919,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":13923,"endOffset":14731,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":14735,"endOffset":15468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3421,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":613,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1445,"endOffset":1978,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1982,"endOffset":2336,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2340,"endOffset":3346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4896,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":776,"endOffset":1602,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1606,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2139,"endOffset":3771,"count":0}],"isBlockCoverage":false},{"functionName":"scryptDeriveBits","ranges":[{"startOffset":3775,"endOffset":4821,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3863,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":948,"endOffset":1458,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1464,"endOffset":2004,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":2008,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2485,"endOffset":2838,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2842,"endOffset":3794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21133,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2355,"endOffset":6128,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2468,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3008,"endOffset":3057,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3072,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3275,"endOffset":3335,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3343,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3433,"endOffset":3791,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":3930,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4320,"endOffset":4382,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4390,"endOffset":4545,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":4553,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5010,"endOffset":5070,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5078,"endOffset":5377,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":5446,"endOffset":5507,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5515,"endOffset":6043,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6134,"endOffset":6529,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":6533,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7411,"endOffset":7535,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":7539,"endOffset":8256,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8260,"endOffset":8401,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8405,"endOffset":9803,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10007,"endOffset":10145,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10350,"endOffset":10468,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":10472,"endOffset":11068,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11072,"endOffset":11593,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":11597,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14280,"endOffset":15826,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":15830,"endOffset":15920,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":15924,"endOffset":16021,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16025,"endOffset":16744,"count":8},{"startOffset":16137,"endOffset":16282,"count":0},{"startOffset":16310,"endOffset":16467,"count":0},{"startOffset":16504,"endOffset":16537,"count":0},{"startOffset":16538,"endOffset":16570,"count":0},{"startOffset":16572,"endOffset":16687,"count":0}],"isBlockCoverage":true},{"functionName":"createSecretKey","ranges":[{"startOffset":16748,"endOffset":17060,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":17064,"endOffset":17412,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17416,"endOffset":17768,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":17772,"endOffset":17856,"count":8}],"isBlockCoverage":true},{"functionName":"CryptoKey","ranges":[{"startOffset":18426,"endOffset":18488,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18494,"endOffset":18856,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":18862,"endOffset":18914,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":18920,"endOffset":18976,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":18982,"endOffset":19034,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":19040,"endOffset":19100,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19106,"endOffset":19472,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19478,"endOffset":19687,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":19935,"endOffset":20350,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":20486,"endOffset":20572,"count":8}],"isBlockCoverage":true},{"functionName":"isJwk","ranges":[{"startOffset":20576,"endOffset":20648,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11893,"count":1}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1331,"endOffset":1491,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1495,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2271,"endOffset":2390,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2394,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2790,"endOffset":4069,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":4073,"endOffset":10360,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":10395,"endOffset":10951,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":10955,"endOffset":11166,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":11170,"endOffset":11644,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":11648,"endOffset":11785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17565,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1635,"endOffset":3596,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3602,"endOffset":3915,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":4033,"endOffset":4199,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":4320,"endOffset":4688,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4794,"endOffset":4954,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":5072,"endOffset":5248,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":5366,"endOffset":5530,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":5651,"endOffset":5817,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5862,"endOffset":6056,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":6103,"endOffset":6299,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":6306,"endOffset":6466,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":6784,"endOffset":6910,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6945,"endOffset":7148,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":7171,"endOffset":7529,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":7534,"endOffset":7673,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":7677,"endOffset":8010,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":8088,"endOffset":9182,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBitsECDH","ranges":[{"startOffset":9305,"endOffset":9780,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBitsDH","ranges":[{"startOffset":9901,"endOffset":10327,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAcceptableDhKeyUse","ranges":[{"startOffset":10331,"endOffset":10716,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKey","ranges":[{"startOffset":10720,"endOffset":11947,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDeriveBitsECDH","ranges":[{"startOffset":11951,"endOffset":13982,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDeriveBitsDH","ranges":[{"startOffset":13986,"endOffset":15747,"count":0}],"isBlockCoverage":false},{"functionName":"dhExportKey","ranges":[{"startOffset":15751,"endOffset":15898,"count":0}],"isBlockCoverage":false},{"functionName":"dhImportKey","ranges":[{"startOffset":15902,"endOffset":17337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10574,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1291,"endOffset":2056,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1360,"endOffset":2052,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2568,"endOffset":2794,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2798,"endOffset":3040,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3044,"endOffset":3474,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3478,"endOffset":3718,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3722,"endOffset":4067,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4317,"endOffset":4523,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4671,"endOffset":4790,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4821,"endOffset":4967,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4998,"endOffset":5668,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5700,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":6054,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":6240,"endOffset":6405,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6412,"endOffset":6629,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6659,"endOffset":7008,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":7263,"endOffset":7478,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7482,"endOffset":8085,"count":3},{"startOffset":7884,"endOffset":7959,"count":1},{"startOffset":7959,"endOffset":8023,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8497,"endOffset":8710,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":9126,"endOffset":9348,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9516,"endOffset":10402,"count":0}],"isBlockCoverage":false}]},{"scriptId":"370","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1581,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":487,"endOffset":551,"count":16}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":687,"endOffset":1006,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":725,"endOffset":1002,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":1010,"endOffset":1214,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1048,"endOffset":1210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7390,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":944,"endOffset":1211,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1339,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1463,"endOffset":1836,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1841,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1922,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":2009,"endOffset":2372,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2376,"endOffset":2630,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2656,"endOffset":3340,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3345,"endOffset":4602,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4606,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":5117,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5779,"endOffset":7308,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4735,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1019,"endOffset":1552,"count":8},{"startOffset":1092,"endOffset":1128,"count":0},{"startOffset":1258,"endOffset":1277,"count":0},{"startOffset":1278,"endOffset":1305,"count":0},{"startOffset":1353,"endOffset":1400,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":1688,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1895,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2032,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2144,"endOffset":2673,"count":16},{"startOffset":2201,"endOffset":2224,"count":8},{"startOffset":2290,"endOffset":2328,"count":0},{"startOffset":2364,"endOffset":2558,"count":8},{"startOffset":2445,"endOffset":2558,"count":0},{"startOffset":2612,"endOffset":2654,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":2704,"endOffset":3059,"count":8},{"startOffset":2800,"endOffset":2838,"count":0},{"startOffset":2874,"endOffset":2897,"count":0}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":3064,"endOffset":3475,"count":8},{"startOffset":3137,"endOffset":3173,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":3663,"endOffset":4095,"count":8},{"startOffset":3763,"endOffset":3786,"count":0},{"startOffset":3816,"endOffset":3934,"count":0}],"isBlockCoverage":true},{"functionName":"asyncDigest","ranges":[{"startOffset":4257,"endOffset":4673,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9864,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1163,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1252,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2492,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"InternalX509Certificate","ranges":[{"startOffset":2531,"endOffset":2600,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2657,"endOffset":2689,"count":0}],"isBlockCoverage":false},{"functionName":"X509Certificate","ranges":[{"startOffset":2696,"endOffset":3029,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3035,"endOffset":3680,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3686,"endOffset":3856,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3862,"endOffset":3924,"count":0}],"isBlockCoverage":false},{"functionName":"get subject","ranges":[{"startOffset":3930,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"get subjectAltName","ranges":[{"startOffset":4159,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"get issuer","ranges":[{"startOffset":4416,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"get issuerCertificate","ranges":[{"startOffset":4641,"endOffset":4999,"count":0}],"isBlockCoverage":false},{"functionName":"get infoAccess","ranges":[{"startOffset":5005,"endOffset":5240,"count":0}],"isBlockCoverage":false},{"functionName":"get validFrom","ranges":[{"startOffset":5246,"endOffset":5477,"count":0}],"isBlockCoverage":false},{"functionName":"get validTo","ranges":[{"startOffset":5483,"endOffset":5706,"count":0}],"isBlockCoverage":false},{"functionName":"get fingerprint","ranges":[{"startOffset":5712,"endOffset":5951,"count":0}],"isBlockCoverage":false},{"functionName":"get fingerprint256","ranges":[{"startOffset":5957,"endOffset":6208,"count":0}],"isBlockCoverage":false},{"functionName":"get fingerprint512","ranges":[{"startOffset":6214,"endOffset":6465,"count":0}],"isBlockCoverage":false},{"functionName":"get keyUsage","ranges":[{"startOffset":6471,"endOffset":6698,"count":0}],"isBlockCoverage":false},{"functionName":"get serialNumber","ranges":[{"startOffset":6704,"endOffset":6947,"count":0}],"isBlockCoverage":false},{"functionName":"get raw","ranges":[{"startOffset":6953,"endOffset":7160,"count":0}],"isBlockCoverage":false},{"functionName":"get publicKey","ranges":[{"startOffset":7166,"endOffset":7418,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":7424,"endOffset":7632,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":7761,"endOffset":7797,"count":0}],"isBlockCoverage":false},{"functionName":"get ca","ranges":[{"startOffset":7803,"endOffset":8011,"count":0}],"isBlockCoverage":false},{"functionName":"checkHost","ranges":[{"startOffset":8017,"endOffset":8145,"count":0}],"isBlockCoverage":false},{"functionName":"checkEmail","ranges":[{"startOffset":8151,"endOffset":8285,"count":0}],"isBlockCoverage":false},{"functionName":"checkIP","ranges":[{"startOffset":8291,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"checkIssued","ranges":[{"startOffset":8795,"endOffset":9005,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrivateKey","ranges":[{"startOffset":9011,"endOffset":9280,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":9286,"endOffset":9536,"count":0}],"isBlockCoverage":false},{"functionName":"toLegacyObject","ranges":[{"startOffset":9542,"endOffset":9603,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1599,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":401,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":528,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":663,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1161,"endOffset":1258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"node:internal/js_stream_socket","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7690,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":348,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":717,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":784,"endOffset":849,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":853,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":920,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":995,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1847,"endOffset":3596,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3740,"endOffset":3791,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3797,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":3867,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":3933,"endOffset":3991,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":3997,"endOffset":5020,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":5091,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5396,"endOffset":6355,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":6426,"endOffset":6882,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":6888,"endOffset":7649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"node:internal/tls/secure-pair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2015,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":363,"endOffset":456,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":462,"endOffset":593,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":599,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":816,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":945,"endOffset":1137,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":1187,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1815,"endOffset":1893,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":1927,"endOffset":2012,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/methods/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1040,"count":1},{"startOffset":299,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentNodeMethods","ranges":[{"startOffset":383,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"lowerCaseMethod","ranges":[{"startOffset":460,"endOffset":531,"count":34}],"isBlockCoverage":true},{"functionName":"getBasicNodeMethods","ranges":[{"startOffset":624,"endOffset":1039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26629,"count":1}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":842,"endOffset":1125,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1314,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"_initHeaders","ranges":[{"startOffset":2202,"endOffset":2433,"count":14}],"isBlockCoverage":true},{"functionName":"Request","ranges":[{"startOffset":2583,"endOffset":3127,"count":10},{"startOffset":2666,"endOffset":2684,"count":0},{"startOffset":2879,"endOffset":2882,"count":0}],"isBlockCoverage":true},{"functionName":"Request.attach","ranges":[{"startOffset":3901,"endOffset":4480,"count":0}],"isBlockCoverage":false},{"functionName":"Request._getFormData","ranges":[{"startOffset":4516,"endOffset":4720,"count":0}],"isBlockCoverage":false},{"functionName":"Request.agent","ranges":[{"startOffset":4986,"endOffset":5087,"count":0}],"isBlockCoverage":false},{"functionName":"Request.type","ranges":[{"startOffset":5617,"endOffset":5729,"count":6},{"startOffset":5696,"endOffset":5702,"count":0}],"isBlockCoverage":true},{"functionName":"Request.accept","ranges":[{"startOffset":6163,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"Request.query","ranges":[{"startOffset":6515,"endOffset":6646,"count":0}],"isBlockCoverage":false},{"functionName":"Request.write","ranges":[{"startOffset":6830,"endOffset":6989,"count":0}],"isBlockCoverage":false},{"functionName":"Request.pipe","ranges":[{"startOffset":7155,"endOffset":7297,"count":0}],"isBlockCoverage":false},{"functionName":"Request._pipeContinue","ranges":[{"startOffset":7334,"endOffset":8183,"count":0}],"isBlockCoverage":false},{"functionName":"Request.buffer","ranges":[{"startOffset":8332,"endOffset":8397,"count":0}],"isBlockCoverage":false},{"functionName":"Request._redirect","ranges":[{"startOffset":8544,"endOffset":10058,"count":4},{"startOffset":8605,"endOffset":8687,"count":0},{"startOffset":9288,"endOffset":9296,"count":0},{"startOffset":9410,"endOffset":9635,"count":0}],"isBlockCoverage":true},{"functionName":"Request.auth","ranges":[{"startOffset":10501,"endOffset":10915,"count":0}],"isBlockCoverage":false},{"functionName":"Request.ca","ranges":[{"startOffset":11093,"endOffset":11144,"count":0}],"isBlockCoverage":false},{"functionName":"Request.key","ranges":[{"startOffset":11325,"endOffset":11377,"count":0}],"isBlockCoverage":false},{"functionName":"Request.pfx","ranges":[{"startOffset":11579,"endOffset":11775,"count":0}],"isBlockCoverage":false},{"functionName":"Request.cert","ranges":[{"startOffset":11953,"endOffset":12006,"count":0}],"isBlockCoverage":false},{"functionName":"Request.request","ranges":[{"startOffset":12124,"endOffset":14979,"count":14},{"startOffset":12152,"endOffset":12168,"count":0},{"startOffset":12320,"endOffset":12378,"count":0},{"startOffset":12416,"endOffset":12465,"count":0},{"startOffset":12579,"endOffset":12601,"count":0},{"startOffset":12701,"endOffset":12956,"count":0},{"startOffset":14252,"endOffset":14328,"count":0},{"startOffset":14349,"endOffset":14365,"count":0},{"startOffset":14367,"endOffset":14417,"count":0},{"startOffset":14451,"endOffset":14541,"count":35},{"startOffset":14580,"endOffset":14962,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13638,"endOffset":13667,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13691,"endOffset":14222,"count":0}],"isBlockCoverage":false},{"functionName":"Request.callback","ranges":[{"startOffset":15157,"endOffset":16289,"count":10},{"startOffset":15212,"endOffset":15243,"count":0},{"startOffset":15380,"endOffset":15387,"count":0},{"startOffset":15431,"endOffset":15486,"count":0},{"startOffset":15570,"endOffset":15791,"count":0},{"startOffset":15798,"endOffset":15842,"count":0},{"startOffset":15986,"endOffset":16234,"count":0},{"startOffset":16236,"endOffset":16288,"count":0}],"isBlockCoverage":true},{"functionName":"_isHost","ranges":[{"startOffset":16427,"endOffset":16535,"count":12}],"isBlockCoverage":true},{"functionName":"Request._emitResponse","ranges":[{"startOffset":16744,"endOffset":17017,"count":10},{"startOffset":16904,"endOffset":16935,"count":0}],"isBlockCoverage":true},{"functionName":"Request.end","ranges":[{"startOffset":17044,"endOffset":17353,"count":14},{"startOffset":17142,"endOffset":17250,"count":0},{"startOffset":17320,"endOffset":17327,"count":0}],"isBlockCoverage":true},{"functionName":"Request._end","ranges":[{"startOffset":17381,"endOffset":24435,"count":14},{"startOffset":17797,"endOffset":17837,"count":6},{"startOffset":17913,"endOffset":17935,"count":8},{"startOffset":17937,"endOffset":18005,"count":0},{"startOffset":18027,"endOffset":18050,"count":6},{"startOffset":18093,"endOffset":18128,"count":6},{"startOffset":18130,"endOffset":18239,"count":6},{"startOffset":18192,"endOffset":18205,"count":0},{"startOffset":23710,"endOffset":24286,"count":0},{"startOffset":24319,"endOffset":24387,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18282,"endOffset":22481,"count":14},{"startOffset":18393,"endOffset":18448,"count":0},{"startOffset":18470,"endOffset":18491,"count":0},{"startOffset":18585,"endOffset":18590,"count":0},{"startOffset":18592,"endOffset":18607,"count":0},{"startOffset":18869,"endOffset":18896,"count":4},{"startOffset":18898,"endOffset":18939,"count":4},{"startOffset":18939,"endOffset":18972,"count":10},{"startOffset":18972,"endOffset":19066,"count":0},{"startOffset":19066,"endOffset":19120,"count":10},{"startOffset":19120,"endOffset":19150,"count":0},{"startOffset":19150,"endOffset":20055,"count":10},{"startOffset":19195,"endOffset":19299,"count":0},{"startOffset":19320,"endOffset":19444,"count":0},{"startOffset":19476,"endOffset":19620,"count":0},{"startOffset":19651,"endOffset":19698,"count":0},{"startOffset":19863,"endOffset":20049,"count":0},{"startOffset":20055,"endOffset":20160,"count":10},{"startOffset":20160,"endOffset":20175,"count":0},{"startOffset":20177,"endOffset":20192,"count":10},{"startOffset":20194,"endOffset":20222,"count":0},{"startOffset":20222,"endOffset":21726,"count":10},{"startOffset":21655,"endOffset":21720,"count":0},{"startOffset":21726,"endOffset":21784,"count":10},{"startOffset":21784,"endOffset":22095,"count":0},{"startOffset":22095,"endOffset":22259,"count":10},{"startOffset":22259,"endOffset":22477,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20421,"endOffset":20901,"count":10},{"startOffset":20524,"endOffset":20893,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21133,"endOffset":21644,"count":10},{"startOffset":21185,"endOffset":21275,"count":0},{"startOffset":21421,"endOffset":21438,"count":0},{"startOffset":21440,"endOffset":21492,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21981,"endOffset":22073,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22145,"endOffset":22223,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22275,"endOffset":22475,"count":0}],"isBlockCoverage":false},{"functionName":"getProgressMonitor","ranges":[{"startOffset":22545,"endOffset":22968,"count":0}],"isBlockCoverage":false},{"functionName":"bufferToChunks","ranges":[{"startOffset":22996,"endOffset":23578,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23983,"endOffset":24280,"count":0}],"isBlockCoverage":false},{"functionName":"Request._shouldUnzip","ranges":[{"startOffset":24541,"endOffset":25033,"count":10},{"startOffset":24606,"endOffset":24675,"count":0},{"startOffset":24811,"endOffset":24932,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25288,"endOffset":25735,"count":35},{"startOffset":25350,"endOffset":25360,"count":1},{"startOffset":25361,"endOffset":25369,"count":34}],"isBlockCoverage":true},{"functionName":"request.<computed>","ranges":[{"startOffset":25423,"endOffset":25732,"count":0}],"isBlockCoverage":false},{"functionName":"isText","ranges":[{"startOffset":25862,"endOffset":26037,"count":0}],"isBlockCoverage":false},{"functionName":"isImageOrVideo","ranges":[{"startOffset":26039,"endOffset":26153,"count":10}],"isBlockCoverage":true},{"functionName":"isJSON","ranges":[{"startOffset":26294,"endOffset":26418,"count":18}],"isBlockCoverage":true},{"functionName":"isRedirect","ranges":[{"startOffset":26543,"endOffset":26628,"count":14}],"isBlockCoverage":true}]},{"scriptId":"379","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":331,"count":1},{"startOffset":232,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"380","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4415,"count":1},{"startOffset":643,"endOffset":659,"count":0},{"startOffset":1052,"endOffset":1068,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1376,"endOffset":1425,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1434,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1987,"endOffset":2123,"count":1},{"startOffset":2051,"endOffset":2088,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2196,"endOffset":2671,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":2673,"endOffset":2794,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":2883,"endOffset":2975,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3057,"endOffset":3325,"count":1},{"startOffset":3103,"endOffset":3144,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3442,"endOffset":3489,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3654,"endOffset":3861,"count":1},{"startOffset":3791,"endOffset":3859,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4031,"endOffset":4215,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4308,"endOffset":4412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2771,"count":1},{"startOffset":197,"endOffset":221,"count":0},{"startOffset":325,"endOffset":348,"count":0},{"startOffset":375,"endOffset":461,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":463,"endOffset":621,"count":2},{"startOffset":514,"endOffset":534,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":623,"endOffset":2524,"count":2},{"startOffset":683,"endOffset":699,"count":0},{"startOffset":787,"endOffset":803,"count":0},{"startOffset":832,"endOffset":848,"count":0},{"startOffset":879,"endOffset":901,"count":0},{"startOffset":903,"endOffset":919,"count":0},{"startOffset":945,"endOffset":948,"count":0},{"startOffset":1640,"endOffset":1643,"count":0},{"startOffset":1648,"endOffset":2523,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1745,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2526,"endOffset":2631,"count":2}],"isBlockCoverage":true}]},{"scriptId":"382","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":320,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":318,"count":15},{"startOffset":116,"endOffset":120,"count":0},{"startOffset":142,"endOffset":147,"count":0},{"startOffset":261,"endOffset":315,"count":0}],"isBlockCoverage":true}]},{"scriptId":"383","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5929,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":121,"endOffset":5902,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":410,"endOffset":463,"count":8}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1108,"endOffset":1399,"count":1},{"startOffset":1208,"endOffset":1319,"count":10}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1579,"endOffset":3602,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1636,"endOffset":3096,"count":32},{"startOffset":1725,"endOffset":1996,"count":0},{"startOffset":2181,"endOffset":3058,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2380,"endOffset":2914,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3606,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3802,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":4122,"endOffset":4922,"count":1},{"startOffset":4301,"endOffset":4313,"count":0},{"startOffset":4478,"endOffset":4735,"count":0},{"startOffset":4798,"endOffset":4918,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4984,"endOffset":5036,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5188,"endOffset":5617,"count":1},{"startOffset":5252,"endOffset":5278,"count":0},{"startOffset":5367,"endOffset":5449,"count":0},{"startOffset":5513,"endOffset":5594,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":5715,"endOffset":5835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"384","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"385","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/formidable/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":133,"count":1}],"isBlockCoverage":true}]},{"scriptId":"386","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/formidable/lib/incoming_form.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13860,"count":1},{"startOffset":19,"endOffset":52,"count":0}],"isBlockCoverage":true},{"functionName":"IncomingForm","ranges":[{"startOffset":633,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm.parse","ranges":[{"startOffset":1594,"endOffset":3512,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm.writeHeaders","ranges":[{"startOffset":3553,"endOffset":3658,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm.write","ranges":[{"startOffset":3692,"endOffset":4271,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm.pause","ranges":[{"startOffset":4305,"endOffset":4400,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm.resume","ranges":[{"startOffset":4435,"endOffset":4530,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm.onPart","ranges":[{"startOffset":4565,"endOffset":4656,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm.handlePart","ranges":[{"startOffset":4695,"endOffset":6132,"count":0}],"isBlockCoverage":false},{"functionName":"dummyParser","ranges":[{"startOffset":6135,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._parseContentType","ranges":[{"startOffset":6323,"endOffset":7281,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._error","ranges":[{"startOffset":7316,"endOffset":7675,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._parseContentLength","ranges":[{"startOffset":7723,"endOffset":8079,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._newParser","ranges":[{"startOffset":8118,"endOffset":8164,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._initMultipart","ranges":[{"startOffset":8207,"endOffset":11002,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._fileName","ranges":[{"startOffset":11040,"endOffset":11524,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._initUrlencoded","ranges":[{"startOffset":11568,"endOffset":11870,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._initOctetStream","ranges":[{"startOffset":11915,"endOffset":13062,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._initJSONencoded","ranges":[{"startOffset":13107,"endOffset":13386,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._uploadPath","ranges":[{"startOffset":13426,"endOffset":13716,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingForm._maybeEnd","ranges":[{"startOffset":13754,"endOffset":13858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"387","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23515,"count":1}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1318,"endOffset":1337,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":1342,"endOffset":2913,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":2917,"endOffset":4164,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":4168,"endOffset":5993,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":5997,"endOffset":7189,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":7193,"endOffset":8396,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":8400,"endOffset":9300,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":9304,"endOffset":10901,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":10905,"endOffset":11576,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":11580,"endOffset":13385,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":13389,"endOffset":15422,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":15519,"endOffset":16118,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":16217,"endOffset":17073,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":17077,"endOffset":18544,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":18548,"endOffset":18638,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":18642,"endOffset":18756,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":18760,"endOffset":20492,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":20496,"endOffset":20627,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":20631,"endOffset":20762,"count":0}],"isBlockCoverage":false},{"functionName":"get subtle","ranges":[{"startOffset":20979,"endOffset":21018,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/formidable/lib/file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1643,"count":1},{"startOffset":19,"endOffset":52,"count":0}],"isBlockCoverage":true},{"functionName":"File","ranges":[{"startOffset":190,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"File.open","ranges":[{"startOffset":687,"endOffset":754,"count":0}],"isBlockCoverage":false},{"functionName":"File.toJSON","ranges":[{"startOffset":781,"endOffset":1091,"count":0}],"isBlockCoverage":false},{"functionName":"File.write","ranges":[{"startOffset":1117,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"File.end","ranges":[{"startOffset":1467,"endOffset":1641,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/formidable/lib/multipart_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8460,"count":1},{"startOffset":661,"endOffset":685,"count":13}],"isBlockCoverage":true},{"functionName":"lower","ranges":[{"startOffset":603,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"MultipartParser","ranges":[{"startOffset":687,"endOffset":875,"count":0}],"isBlockCoverage":false},{"functionName":"MultipartParser.stateToString","ranges":[{"startOffset":952,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"MultipartParser.initWithBoundary","ranges":[{"startOffset":1127,"endOffset":1467,"count":0}],"isBlockCoverage":false},{"functionName":"MultipartParser.write","ranges":[{"startOffset":1504,"endOffset":7766,"count":0}],"isBlockCoverage":false},{"functionName":"MultipartParser.end","ranges":[{"startOffset":7801,"endOffset":8340,"count":0}],"isBlockCoverage":false},{"functionName":"MultipartParser.explain","ranges":[{"startOffset":8379,"endOffset":8458,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/formidable/lib/querystring_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":740,"count":1},{"startOffset":19,"endOffset":52,"count":0}],"isBlockCoverage":true},{"functionName":"QuerystringParser","ranges":[{"startOffset":234,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"QuerystringParser.write","ranges":[{"startOffset":404,"endOffset":491,"count":0}],"isBlockCoverage":false},{"functionName":"QuerystringParser.end","ranges":[{"startOffset":528,"endOffset":737,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/formidable/lib/octet_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"OctetParser","ranges":[{"startOffset":78,"endOffset":205,"count":0}],"isBlockCoverage":false},{"functionName":"OctetParser.write","ranges":[{"startOffset":316,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"OctetParser.end","ranges":[{"startOffset":421,"endOffset":454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/formidable/lib/json_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":650,"count":1},{"startOffset":19,"endOffset":52,"count":0}],"isBlockCoverage":true},{"functionName":"JSONParser","ranges":[{"startOffset":94,"endOffset":194,"count":0}],"isBlockCoverage":false},{"functionName":"JSONParser.write","ranges":[{"startOffset":258,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"JSONParser.end","ranges":[{"startOffset":398,"endOffset":648,"count":0}],"isBlockCoverage":false}]},{"scriptId":"393","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/form-data/lib/form_data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13199,"count":1}],"isBlockCoverage":true},{"functionName":"FormData","ranges":[{"startOffset":689,"endOffset":1001,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.append","ranges":[{"startOffset":1122,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._trackLength","ranges":[{"startOffset":1990,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lengthRetriever","ranges":[{"startOffset":3027,"endOffset":4558,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartHeader","ranges":[{"startOffset":4599,"endOffset":5947,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentDisposition","ranges":[{"startOffset":5994,"endOffset":6787,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentType","ranges":[{"startOffset":6827,"endOffset":7741,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartFooter","ranges":[{"startOffset":7782,"endOffset":8009,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lastBoundary","ranges":[{"startOffset":8047,"endOffset":8126,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getHeaders","ranges":[{"startOffset":8161,"endOffset":8476,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBoundary","ranges":[{"startOffset":8512,"endOffset":8611,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBuffer","ranges":[{"startOffset":8645,"endOffset":9557,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._generateBoundary","ranges":[{"startOffset":9599,"endOffset":9915,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLengthSync","ranges":[{"startOffset":10099,"endOffset":10764,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.hasKnownLength","ranges":[{"startOffset":10967,"endOffset":11107,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLength","ranges":[{"startOffset":11141,"endOffset":11665,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.submit","ranges":[{"startOffset":11696,"endOffset":12977,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._error","ranges":[{"startOffset":13008,"endOffset":13119,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.toString","ranges":[{"startOffset":13152,"endOffset":13197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/combined-stream/lib/combined_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"CombinedStream","ranges":[{"startOffset":148,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.create","ranges":[{"startOffset":514,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.isStreamLike","ranges":[{"startOffset":739,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.append","ranges":[{"startOffset":980,"endOffset":1491,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pipe","ranges":[{"startOffset":1526,"endOffset":1636,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._getNext","ranges":[{"startOffset":1675,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._realGetNext","ranges":[{"startOffset":2035,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._pipeNext","ranges":[{"startOffset":2567,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._handleErrors","ranges":[{"startOffset":2908,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.write","ranges":[{"startOffset":3052,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pause","ranges":[{"startOffset":3133,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.resume","ranges":[{"startOffset":3378,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.end","ranges":[{"startOffset":3682,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.destroy","ranges":[{"startOffset":3771,"endOffset":3824,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._reset","ranges":[{"startOffset":3861,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._checkDataSize","ranges":[{"startOffset":3997,"endOffset":4229,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._updateDataSize","ranges":[{"startOffset":4275,"endOffset":4583,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._emitError","ranges":[{"startOffset":4624,"endOffset":4685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/delayed-stream/lib/delayed_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2319,"count":1}],"isBlockCoverage":true},{"functionName":"DelayedStream","ranges":[{"startOffset":100,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.create","ranges":[{"startOffset":388,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":982,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.setEncoding","ranges":[{"startOffset":1075,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.resume","ranges":[{"startOffset":1189,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pause","ranges":[{"startOffset":1312,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.release","ranges":[{"startOffset":1386,"endOffset":1553,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pipe","ranges":[{"startOffset":1587,"endOffset":1686,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._handleEmit","ranges":[{"startOffset":1727,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._checkIfMaxDataSizeExceeded","ranges":[{"startOffset":2021,"endOffset":2317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mime-types/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3663,"count":1}],"isBlockCoverage":true},{"functionName":"charset","ranges":[{"startOffset":841,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":1366,"endOffset":1822,"count":0}],"isBlockCoverage":false},{"functionName":"extension","ranges":[{"startOffset":1934,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2374,"endOffset":2678,"count":0}],"isBlockCoverage":false},{"functionName":"populateMaps","ranges":[{"startOffset":2744,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"forEachMimeType","ranges":[{"startOffset":2912,"endOffset":3659,"count":2269},{"startOffset":3016,"endOffset":3031,"count":958},{"startOffset":3033,"endOffset":3053,"count":1311},{"startOffset":3053,"endOffset":3177,"count":958},{"startOffset":3177,"endOffset":3655,"count":1213},{"startOffset":3238,"endOffset":3583,"count":38},{"startOffset":3417,"endOffset":3511,"count":32},{"startOffset":3441,"endOffset":3510,"count":17},{"startOffset":3457,"endOffset":3509,"count":9},{"startOffset":3513,"endOffset":3575,"count":21},{"startOffset":3583,"endOffset":3655,"count":1192}],"isBlockCoverage":true}]},{"scriptId":"397","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mime-db/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":136,"count":1}],"isBlockCoverage":true}]},{"scriptId":"398","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true}]},{"scriptId":"399","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/parallel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1017,"count":1}],"isBlockCoverage":true},{"functionName":"parallel","ranges":[{"startOffset":492,"endOffset":1016,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/lib/iterate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1794,"count":1}],"isBlockCoverage":true},{"functionName":"iterate","ranges":[{"startOffset":390,"endOffset":1078,"count":0}],"isBlockCoverage":false},{"functionName":"runJob","ranges":[{"startOffset":1455,"endOffset":1793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/lib/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":251,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/lib/defer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":140,"endOffset":440,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/lib/abort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":497,"count":1}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":122,"endOffset":246,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":400,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/lib/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":941,"count":1}],"isBlockCoverage":true},{"functionName":"state","ranges":[{"startOffset":341,"endOffset":940,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/lib/terminator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":533,"count":1}],"isBlockCoverage":true},{"functionName":"terminator","ranges":[{"startOffset":270,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/serial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1}],"isBlockCoverage":true},{"functionName":"serial","ranges":[{"startOffset":399,"endOffset":500,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/asynckit/serialOrdered.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1751,"count":1}],"isBlockCoverage":true},{"functionName":"serialOrdered","ranges":[{"startOffset":657,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"ascending","ranges":[{"startOffset":1427,"endOffset":1492,"count":0}],"isBlockCoverage":false},{"functionName":"descending","ranges":[{"startOffset":1690,"endOffset":1750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/form-data/lib/populate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":45,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/node/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2366,"count":1}],"isBlockCoverage":true},{"functionName":"Response","ranges":[{"startOffset":480,"endOffset":1138,"count":10},{"startOffset":667,"endOffset":677,"count":0}],"isBlockCoverage":true},{"functionName":"Response.destroy","ranges":[{"startOffset":1325,"endOffset":1366,"count":0}],"isBlockCoverage":false},{"functionName":"Response.pause","ranges":[{"startOffset":1415,"endOffset":1448,"count":0}],"isBlockCoverage":false},{"functionName":"Response.resume","ranges":[{"startOffset":1499,"endOffset":1533,"count":0}],"isBlockCoverage":false},{"functionName":"Response.toError","ranges":[{"startOffset":1665,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"Response.setStatusProperties","ranges":[{"startOffset":2001,"endOffset":2141,"count":0}],"isBlockCoverage":false},{"functionName":"Response.toJSON","ranges":[{"startOffset":2231,"endOffset":2364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/response-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2869,"count":1}],"isBlockCoverage":true},{"functionName":"ResponseBase","ranges":[{"startOffset":211,"endOffset":271,"count":1}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":379,"endOffset":508,"count":1},{"startOffset":443,"endOffset":492,"count":3}],"isBlockCoverage":true},{"functionName":"ResponseBase.get","ranges":[{"startOffset":650,"endOffset":712,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseBase._setHeaderProperties","ranges":[{"startOffset":1013,"endOffset":1463,"count":10},{"startOffset":1137,"endOffset":1142,"count":0},{"startOffset":1350,"endOffset":1417,"count":0},{"startOffset":1424,"endOffset":1461,"count":0}],"isBlockCoverage":true},{"functionName":"ResponseBase._setStatusProperties","ranges":[{"startOffset":2118,"endOffset":2867,"count":10},{"startOffset":2480,"endOffset":2496,"count":0}],"isBlockCoverage":true}]},{"scriptId":"411","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"exports.type","ranges":[{"startOffset":146,"endOffset":199,"count":24}],"isBlockCoverage":true},{"functionName":"exports.params","ranges":[{"startOffset":325,"endOffset":553,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":375,"endOffset":545,"count":20},{"startOffset":510,"endOffset":525,"count":10}],"isBlockCoverage":true},{"functionName":"exports.parseLinks","ranges":[{"startOffset":677,"endOffset":922,"count":0}],"isBlockCoverage":false},{"functionName":"exports.cleanHeader","ranges":[{"startOffset":1075,"endOffset":1363,"count":4},{"startOffset":1274,"endOffset":1344,"count":0}],"isBlockCoverage":true}]},{"scriptId":"412","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/node/unzip.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1516,"count":1}],"isBlockCoverage":true},{"functionName":"exports.unzip","ranges":[{"startOffset":337,"endOffset":1514,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"node:zlib","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30343,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3627,"endOffset":4270,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":4274,"endOffset":4616,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4620,"endOffset":4708,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4712,"endOffset":5055,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":5059,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5621,"endOffset":5973,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6204,"endOffset":6558,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6869,"endOffset":7169,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":7416,"endOffset":9529,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9742,"endOffset":9781,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10214,"endOffset":10262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10411,"endOffset":10465,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":10609,"endOffset":10721,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":10871,"endOffset":10945,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._final","ranges":[{"startOffset":11015,"endOffset":11053,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":11668,"endOffset":11745,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":12200,"endOffset":12617,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":12649,"endOffset":12734,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":12769,"endOffset":12832,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":12869,"endOffset":13416,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":13456,"endOffset":13691,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":13696,"endOffset":16066,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":16070,"endOffset":16678,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":16682,"endOffset":19056,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":19060,"endOffset":19257,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":19462,"endOffset":21846,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":22204,"endOffset":22478,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":22506,"endOffset":22984,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":23032,"endOffset":23171,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":23271,"endOffset":23410,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":23510,"endOffset":23637,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":23731,"endOffset":23866,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":23964,"endOffset":24174,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":24280,"endOffset":24431,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":24537,"endOffset":24668,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":24764,"endOffset":25166,"count":18},{"startOffset":24824,"endOffset":25165,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":24838,"endOffset":24941,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":24958,"endOffset":25162,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25255,"endOffset":25344,"count":107},{"startOffset":25313,"endOffset":25334,"count":9},{"startOffset":25335,"endOffset":25343,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":25571,"endOffset":26943,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":27041,"endOffset":27209,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":27327,"endOffset":27501,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":27625,"endOffset":27797,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":27729,"endOffset":27788,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28012,"endOffset":28048,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28053,"endOffset":28094,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/extend/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3321,"count":1}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":203,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainObject","ranges":[{"startOffset":374,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"setProperty","ranges":[{"startOffset":1146,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"getProperty","ranges":[{"startOffset":1535,"endOffset":1880,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":1900,"endOffset":3319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/mime/mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2726,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":53,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":562,"endOffset":1094,"count":2},{"startOffset":603,"endOffset":1092,"count":845},{"startOffset":673,"endOffset":953,"count":1072},{"startOffset":708,"endOffset":730,"count":0},{"startOffset":732,"endOffset":912,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.load","ranges":[{"startOffset":1346,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"Mime.lookup","ranges":[{"startOffset":1852,"endOffset":1999,"count":21},{"startOffset":1964,"endOffset":1975,"count":0},{"startOffset":1976,"endOffset":1996,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.extension","ranges":[{"startOffset":2090,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2538,"endOffset":2698,"count":14},{"startOffset":2683,"endOffset":2693,"count":0}],"isBlockCoverage":true}]},{"scriptId":"416","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/request-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15709,"count":1}],"isBlockCoverage":true},{"functionName":"RequestBase","ranges":[{"startOffset":258,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":425,"endOffset":552,"count":1},{"startOffset":488,"endOffset":536,"count":30}],"isBlockCoverage":true},{"functionName":"_clearTimeout","ranges":[{"startOffset":679,"endOffset":853,"count":20}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1053,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.responseType","ranges":[{"startOffset":1524,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1809,"endOffset":1874,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":2391,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"retry","ranges":[{"startOffset":3136,"endOffset":3389,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._shouldRetry","ranges":[{"startOffset":3692,"endOffset":4378,"count":10},{"startOffset":3737,"endOffset":3775,"count":0},{"startOffset":3800,"endOffset":4094,"count":0},{"startOffset":4095,"endOffset":4115,"count":0},{"startOffset":4116,"endOffset":4136,"count":0},{"startOffset":4138,"endOffset":4377,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase._retry","ranges":[{"startOffset":4491,"endOffset":4688,"count":0}],"isBlockCoverage":false},{"functionName":"then","ranges":[{"startOffset":4831,"endOffset":5364,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.catch","ranges":[{"startOffset":5400,"endOffset":5451,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":5514,"endOffset":5561,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.ok","ranges":[{"startOffset":5591,"endOffset":5713,"count":10},{"startOffset":5638,"endOffset":5671,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase._isResponseOK","ranges":[{"startOffset":5754,"endOffset":5921,"count":10},{"startOffset":5782,"endOffset":5805,"count":0},{"startOffset":5870,"endOffset":5918,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.get","ranges":[{"startOffset":6076,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.set","ranges":[{"startOffset":6979,"endOffset":7202,"count":25},{"startOffset":7024,"endOffset":7114,"count":4},{"startOffset":7053,"endOffset":7093,"count":10},{"startOffset":7114,"endOffset":7201,"count":21}],"isBlockCoverage":true},{"functionName":"RequestBase.unset","ranges":[{"startOffset":7414,"endOffset":7520,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.field","ranges":[{"startOffset":8000,"endOffset":8812,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.abort","ranges":[{"startOffset":8943,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._auth","ranges":[{"startOffset":9200,"endOffset":9630,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.withCredentials","ranges":[{"startOffset":9940,"endOffset":10096,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.redirects","ranges":[{"startOffset":10291,"endOffset":10346,"count":10}],"isBlockCoverage":true},{"functionName":"RequestBase.maxResponseSize","ranges":[{"startOffset":10552,"endOffset":10686,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.toJSON","ranges":[{"startOffset":10991,"endOffset":11114,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase.send","ranges":[{"startOffset":12089,"endOffset":13249,"count":6},{"startOffset":12201,"endOffset":12337,"count":0},{"startOffset":12398,"endOffset":12428,"count":0},{"startOffset":12493,"endOffset":12605,"count":0},{"startOffset":12683,"endOffset":12725,"count":19},{"startOffset":12729,"endOffset":13118,"count":0},{"startOffset":13156,"endOffset":13178,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase.sortQuery","ranges":[{"startOffset":13866,"endOffset":14027,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._finalizeQueryString","ranges":[{"startOffset":14146,"endOffset":14694,"count":14},{"startOffset":14208,"endOffset":14279,"count":0},{"startOffset":14354,"endOffset":14692,"count":0}],"isBlockCoverage":true},{"functionName":"RequestBase._appendQueryString","ranges":[{"startOffset":14769,"endOffset":14811,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._timeoutError","ranges":[{"startOffset":14918,"endOffset":15186,"count":0}],"isBlockCoverage":false},{"functionName":"RequestBase._setTimeouts","ranges":[{"startOffset":15226,"endOffset":15707,"count":14},{"startOffset":15293,"endOffset":15308,"count":0},{"startOffset":15310,"endOffset":15444,"count":0},{"startOffset":15495,"endOffset":15525,"count":0},{"startOffset":15527,"endOffset":15705,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15341,"endOffset":15423,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15573,"endOffset":15676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/is-object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":119,"endOffset":195,"count":37}],"isBlockCoverage":true}]},{"scriptId":"418","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/node/agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1987,"count":1}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":416,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"Agent._saveCookies","ranges":[{"startOffset":998,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"Agent._attachCookies","ranges":[{"startOffset":1246,"endOffset":1482,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1501,"endOffset":1934,"count":34}],"isBlockCoverage":true},{"functionName":"Agent.<computed>","ranges":[{"startOffset":1574,"endOffset":1931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/agent-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":622,"count":1}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":0,"endOffset":43,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":249,"endOffset":447,"count":21}],"isBlockCoverage":true},{"functionName":"Agent.<computed>","ranges":[{"startOffset":346,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"Agent._setDefaults","ranges":[{"startOffset":482,"endOffset":595,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/node/parsers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":313,"count":1}],"isBlockCoverage":true}]},{"scriptId":"421","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/node/parsers/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":92,"endOffset":331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/node/parsers/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":571,"count":1}],"isBlockCoverage":true},{"functionName":"parseJSON","ranges":[{"startOffset":32,"endOffset":569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/node/parsers/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":176,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":174,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":112,"endOffset":149,"count":10}],"isBlockCoverage":true}]},{"scriptId":"424","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/superagent/lib/node/parsers/image.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/app.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4997,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":827,"endOffset":897,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":924,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1024,"endOffset":1130,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1162,"endOffset":1743,"count":3},{"startOffset":1291,"endOffset":1312,"count":0},{"startOffset":1536,"endOffset":1568,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1777,"endOffset":2190,"count":1},{"startOffset":1906,"endOffset":1935,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2219,"endOffset":2966,"count":1},{"startOffset":2332,"endOffset":2366,"count":0},{"startOffset":2551,"endOffset":2573,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2998,"endOffset":3765,"count":1},{"startOffset":3112,"endOffset":3146,"count":0},{"startOffset":3332,"endOffset":3361,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3814,"endOffset":4287,"count":2},{"startOffset":3931,"endOffset":3958,"count":0},{"startOffset":4142,"endOffset":4164,"count":0},{"startOffset":4209,"endOffset":4238,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4315,"endOffset":4857,"count":2},{"startOffset":4431,"endOffset":4458,"count":0},{"startOffset":4611,"endOffset":4653,"count":0}],"isBlockCoverage":true}]},{"scriptId":"426","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true}]},{"scriptId":"427","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/express.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2409,"count":1}],"isBlockCoverage":true},{"functionName":"createApplication","ranges":[{"startOffset":696,"endOffset":1263,"count":1}],"isBlockCoverage":true},{"functionName":"app","ranges":[{"startOffset":739,"endOffset":801,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2406,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2164,"endOffset":2374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"428","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/body-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2656,"count":1}],"isBlockCoverage":true},{"functionName":"bodyParser","ranges":[{"startOffset":1413,"endOffset":1861,"count":0}],"isBlockCoverage":false},{"functionName":"createParserGetter","ranges":[{"startOffset":1925,"endOffset":2022,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1971,"endOffset":2020,"count":4}],"isBlockCoverage":true},{"functionName":"loadParser","ranges":[{"startOffset":2070,"endOffset":2655,"count":4},{"startOffset":2169,"endOffset":2192,"count":0},{"startOffset":2274,"endOffset":2341,"count":1},{"startOffset":2346,"endOffset":2411,"count":1},{"startOffset":2416,"endOffset":2483,"count":1},{"startOffset":2488,"endOffset":2567,"count":1}],"isBlockCoverage":true}]},{"scriptId":"429","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/depd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10669,"count":1}],"isBlockCoverage":true},{"functionName":"containsNamespace","ranges":[{"startOffset":479,"endOffset":798,"count":18},{"startOffset":705,"endOffset":749,"count":0},{"startOffset":751,"endOffset":776,"count":0}],"isBlockCoverage":true},{"functionName":"convertDataDescriptorToAccessor","ranges":[{"startOffset":862,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"createArgumentsString","ranges":[{"startOffset":1356,"endOffset":1501,"count":16}],"isBlockCoverage":true},{"functionName":"createStackString","ranges":[{"startOffset":1547,"endOffset":1813,"count":0}],"isBlockCoverage":false},{"functionName":"depd","ranges":[{"startOffset":1869,"endOffset":2447,"count":9},{"startOffset":1915,"endOffset":1978,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":2069,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"isignored","ranges":[{"startOffset":2496,"endOffset":2783,"count":9},{"startOffset":2615,"endOffset":2668,"count":0}],"isBlockCoverage":true},{"functionName":"istraced","ranges":[{"startOffset":2831,"endOffset":3125,"count":9},{"startOffset":2952,"endOffset":3008,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":3168,"endOffset":4875,"count":0}],"isBlockCoverage":false},{"functionName":"callSiteLocation","ranges":[{"startOffset":4922,"endOffset":5292,"count":25},{"startOffset":4997,"endOffset":5013,"count":0},{"startOffset":5118,"endOffset":5173,"count":0}],"isBlockCoverage":true},{"functionName":"defaultMessage","ranges":[{"startOffset":5348,"endOffset":5931,"count":0}],"isBlockCoverage":false},{"functionName":"formatPlain","ranges":[{"startOffset":5987,"endOffset":6430,"count":0}],"isBlockCoverage":false},{"functionName":"formatColor","ranges":[{"startOffset":6483,"endOffset":7033,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":7074,"endOffset":7201,"count":0}],"isBlockCoverage":false},{"functionName":"getStack","ranges":[{"startOffset":7253,"endOffset":7672,"count":25}],"isBlockCoverage":true},{"functionName":"prepareObjectStackTrace","ranges":[{"startOffset":7719,"endOffset":7783,"count":25}],"isBlockCoverage":true},{"functionName":"wrapfunction","ranges":[{"startOffset":7849,"endOffset":8423,"count":16},{"startOffset":7919,"endOffset":7982,"count":0}],"isBlockCoverage":true},{"functionName":"wrapproperty","ranges":[{"startOffset":8477,"endOffset":9638,"count":0}],"isBlockCoverage":false},{"functionName":"DeprecationError","ranges":[{"startOffset":9692,"endOffset":10668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/depd/lib/compat/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1421,"count":1}],"isBlockCoverage":true},{"functionName":"callSiteToString","ranges":[{"startOffset":284,"endOffset":804,"count":1},{"startOffset":770,"endOffset":802,"count":0}],"isBlockCoverage":true},{"functionName":"prepareObjectStackTrace","ranges":[{"startOffset":406,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"eventListenerCount","ranges":[{"startOffset":858,"endOffset":965,"count":1},{"startOffset":927,"endOffset":963,"count":0}],"isBlockCoverage":true},{"functionName":"lazyProperty","ranges":[{"startOffset":1004,"endOffset":1328,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1050,"endOffset":1224,"count":2}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1369,"endOffset":1420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":102,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":101,"count":0}],"isBlockCoverage":true}]},{"scriptId":"432","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/merge-descriptors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1215,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":612,"endOffset":1214,"count":2},{"startOffset":663,"endOffset":721,"count":0},{"startOffset":735,"endOffset":792,"count":0},{"startOffset":824,"endOffset":872,"count":0}],"isBlockCoverage":true},{"functionName":"forEachOwnPropertyName","ranges":[{"startOffset":916,"endOffset":1196,"count":71},{"startOffset":1010,"endOffset":1054,"count":0}],"isBlockCoverage":true}]},{"scriptId":"433","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/application.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14271,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1329,"endOffset":1442,"count":1}],"isBlockCoverage":true},{"functionName":"defaultConfiguration","ranges":[{"startOffset":1534,"endOffset":3141,"count":1},{"startOffset":2888,"endOffset":2924,"count":0}],"isBlockCoverage":true},{"functionName":"onmount","ranges":[{"startOffset":2041,"endOffset":2540,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2977,"endOffset":3133,"count":0}],"isBlockCoverage":false},{"functionName":"lazyrouter","ranges":[{"startOffset":3381,"endOffset":3683,"count":5},{"startOffset":3426,"endOffset":3681,"count":1}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":3932,"endOffset":4269,"count":14},{"startOffset":4165,"endOffset":4233,"count":0}],"isBlockCoverage":true},{"functionName":"use","ranges":[{"startOffset":4513,"endOffset":5688,"count":5},{"startOffset":4658,"endOffset":4869,"count":1},{"startOffset":4709,"endOffset":4728,"count":0},{"startOffset":4730,"endOffset":4757,"count":0},{"startOffset":4948,"endOffset":5021,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5106,"endOffset":5662,"count":5},{"startOffset":5171,"endOffset":5181,"count":1},{"startOffset":5225,"endOffset":5661,"count":0}],"isBlockCoverage":true},{"functionName":"mounted_app","ranges":[{"startOffset":5378,"endOffset":5605,"count":0}],"isBlockCoverage":false},{"functionName":"route","ranges":[{"startOffset":5916,"endOffset":5996,"count":0}],"isBlockCoverage":false},{"functionName":"engine","ranges":[{"startOffset":7253,"endOffset":7522,"count":1},{"startOffset":7312,"endOffset":7368,"count":0},{"startOffset":7447,"endOffset":7452,"count":0}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":7803,"endOffset":8034,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8343,"endOffset":9065,"count":84},{"startOffset":8402,"endOffset":8466,"count":71},{"startOffset":8466,"endOffset":8613,"count":13},{"startOffset":8613,"endOffset":8683,"count":1},{"startOffset":8688,"endOffset":8781,"count":1},{"startOffset":8786,"endOffset":9043,"count":1},{"startOffset":9047,"endOffset":9064,"count":13}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":9365,"endOffset":9457,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":9703,"endOffset":9769,"count":24}],"isBlockCoverage":true},{"functionName":"disabled","ranges":[{"startOffset":10010,"endOffset":10069,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":10186,"endOffset":10248,"count":1}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":10367,"endOffset":10431,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10513,"endOffset":10826,"count":34}],"isBlockCoverage":true},{"functionName":"app.<computed>","ranges":[{"startOffset":10547,"endOffset":10823,"count":47},{"startOffset":10677,"endOffset":10822,"count":0}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":11058,"endOffset":11289,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":11759,"endOffset":13208,"count":8},{"startOffset":12024,"endOffset":12064,"count":0},{"startOffset":12454,"endOffset":12483,"count":0},{"startOffset":12701,"endOffset":13062,"count":0},{"startOffset":13116,"endOffset":13149,"count":0}],"isBlockCoverage":true},{"functionName":"listen","ranges":[{"startOffset":13764,"endOffset":13874,"count":1}],"isBlockCoverage":true},{"functionName":"logerror","ranges":[{"startOffset":13957,"endOffset":14090,"count":0}],"isBlockCoverage":false},{"functionName":"tryRender","ranges":[{"startOffset":14138,"endOffset":14270,"count":8},{"startOffset":14232,"endOffset":14268,"count":0}],"isBlockCoverage":true}]},{"scriptId":"434","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/finalhandler/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6518,"count":1},{"startOffset":617,"endOffset":683,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":619,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":810,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"finalhandler","ranges":[{"startOffset":1455,"endOffset":2786,"count":14},{"startOffset":1520,"endOffset":1525,"count":0},{"startOffset":1569,"endOffset":1592,"count":0},{"startOffset":1593,"endOffset":1609,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1674,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorHeaders","ranges":[{"startOffset":2888,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":3381,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorStatusCode","ranges":[{"startOffset":3828,"endOffset":4164,"count":0}],"isBlockCoverage":false},{"functionName":"getResourceName","ranges":[{"startOffset":4411,"endOffset":4538,"count":0}],"isBlockCoverage":false},{"functionName":"getResponseStatusCode","ranges":[{"startOffset":4650,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":5006,"endOffset":5131,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5319,"endOffset":6181,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":6306,"endOffset":6517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"436","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":11},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":11},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"437","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":11},{"startOffset":895,"endOffset":1003,"count":170}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":11}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":278},{"startOffset":1304,"endOffset":1422,"count":0},{"startOffset":1649,"endOffset":2583,"count":0},{"startOffset":2584,"endOffset":2612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":2445,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":11},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1586,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1411,"endOffset":1585,"count":6}],"isBlockCoverage":true}]},{"scriptId":"440","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/escape-html/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1362,"count":1}],"isBlockCoverage":true},{"functionName":"escapeHtml","ranges":[{"startOffset":493,"endOffset":1361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/on-finished/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3686,"count":1},{"startOffset":449,"endOffset":513,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":451,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":710,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":1034,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"attachFinishedListener","ranges":[{"startOffset":1554,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"attachListener","ranges":[{"startOffset":2502,"endOffset":2799,"count":0}],"isBlockCoverage":false},{"functionName":"createListener","ranges":[{"startOffset":2901,"endOffset":3236,"count":0}],"isBlockCoverage":false},{"functionName":"patchAssignSocket","ranges":[{"startOffset":3387,"endOffset":3685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/ee-first/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1684,"count":1}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":288,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"listener","ranges":[{"startOffset":1327,"endOffset":1683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/parseurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2809,"count":1}],"isBlockCoverage":true},{"functionName":"parseurl","ranges":[{"startOffset":467,"endOffset":806,"count":134},{"startOffset":539,"endOffset":589,"count":0},{"startOffset":648,"endOffset":702,"count":120},{"startOffset":702,"endOffset":805,"count":14}],"isBlockCoverage":true},{"functionName":"originalurl","ranges":[{"startOffset":945,"endOffset":1313,"count":8},{"startOffset":1034,"endOffset":1080,"count":0},{"startOffset":1147,"endOffset":1201,"count":0}],"isBlockCoverage":true},{"functionName":"fastparse","ranges":[{"startOffset":1432,"endOffset":2477,"count":22},{"startOffset":1528,"endOffset":1555,"count":0},{"startOffset":1809,"endOffset":2268,"count":161},{"startOffset":1850,"endOffset":2040,"count":0},{"startOffset":2047,"endOffset":2057,"count":0},{"startOffset":2073,"endOffset":2083,"count":0},{"startOffset":2099,"endOffset":2109,"count":0},{"startOffset":2125,"endOffset":2135,"count":0},{"startOffset":2151,"endOffset":2161,"count":0},{"startOffset":2177,"endOffset":2187,"count":0},{"startOffset":2203,"endOffset":2213,"count":0},{"startOffset":2220,"endOffset":2258,"count":0},{"startOffset":2320,"endOffset":2324,"count":0},{"startOffset":2410,"endOffset":2461,"count":0}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":2623,"endOffset":2808,"count":142},{"startOffset":2696,"endOffset":2721,"count":120},{"startOffset":2722,"endOffset":2776,"count":120},{"startOffset":2777,"endOffset":2806,"count":120}],"isBlockCoverage":true}]},{"scriptId":"444","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/statuses/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2088,"count":1}],"isBlockCoverage":true},{"functionName":"populateStatusesMap","ranges":[{"startOffset":827,"endOffset":1208,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":921,"endOffset":1191,"count":64}],"isBlockCoverage":true},{"functionName":"status","ranges":[{"startOffset":1583,"endOffset":2087,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/unpipe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1118,"count":1}],"isBlockCoverage":true},{"functionName":"hasPipeDataListeners","ranges":[{"startOffset":242,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":553,"endOffset":1117,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/router/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15033,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":923,"endOffset":1317,"count":2},{"startOffset":964,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"router","ranges":[{"startOffset":974,"endOffset":1046,"count":14}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":2470,"endOffset":3285,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":3364,"endOffset":8017,"count":28},{"startOffset":4065,"endOffset":4223,"count":0},{"startOffset":4316,"endOffset":4326,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4089,"endOffset":4217,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4342,"endOffset":6775,"count":112},{"startOffset":4406,"endOffset":4412,"count":0},{"startOffset":4473,"endOffset":4541,"count":0},{"startOffset":4604,"endOffset":4734,"count":0},{"startOffset":4798,"endOffset":4849,"count":0},{"startOffset":4911,"endOffset":4970,"count":0},{"startOffset":5059,"endOffset":5097,"count":0},{"startOffset":5203,"endOffset":5224,"count":168},{"startOffset":5226,"endOffset":6103,"count":168},{"startOffset":5361,"endOffset":5445,"count":0},{"startOffset":5473,"endOffset":5500,"count":52},{"startOffset":5500,"endOffset":5520,"count":116},{"startOffset":5520,"endOffset":5594,"count":98},{"startOffset":5594,"endOffset":5618,"count":18},{"startOffset":5618,"endOffset":5720,"count":0},{"startOffset":5720,"endOffset":5875,"count":18},{"startOffset":5875,"endOffset":5898,"count":4},{"startOffset":5900,"endOffset":5959,"count":0},{"startOffset":5959,"endOffset":6025,"count":18},{"startOffset":6025,"endOffset":6045,"count":4},{"startOffset":6047,"endOffset":6097,"count":4},{"startOffset":6145,"endOffset":6183,"count":0},{"startOffset":6242,"endOffset":6274,"count":14},{"startOffset":6353,"endOffset":6394,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6545,"endOffset":6769,"count":112},{"startOffset":6577,"endOffset":6626,"count":0},{"startOffset":6645,"endOffset":6707,"count":14},{"startOffset":6707,"endOffset":6768,"count":98}],"isBlockCoverage":true},{"functionName":"trim_prefix","ranges":[{"startOffset":6779,"endOffset":8015,"count":98},{"startOffset":6870,"endOffset":7805,"count":0},{"startOffset":7893,"endOffset":7954,"count":0}],"isBlockCoverage":true},{"functionName":"process_params","ranges":[{"startOffset":8105,"endOffset":9798,"count":112},{"startOffset":8348,"endOffset":9797,"count":0}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":8531,"endOffset":9352,"count":0}],"isBlockCoverage":false},{"functionName":"paramCallback","ranges":[{"startOffset":9384,"endOffset":9784,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":10344,"endOffset":11371,"count":7},{"startOffset":10492,"endOffset":10703,"count":5},{"startOffset":10543,"endOffset":10562,"count":0},{"startOffset":10564,"endOffset":10591,"count":0},{"startOffset":10794,"endOffset":10870,"count":0},{"startOffset":10981,"endOffset":11086,"count":0},{"startOffset":11151,"endOffset":11167,"count":0}],"isBlockCoverage":true},{"functionName":"route","ranges":[{"startOffset":11667,"endOffset":11930,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11995,"endOffset":12161,"count":35}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":12031,"endOffset":12158,"count":9}],"isBlockCoverage":true},{"functionName":"appendMethods","ranges":[{"startOffset":12204,"endOffset":12396,"count":0}],"isBlockCoverage":false},{"functionName":"getPathname","ranges":[{"startOffset":12425,"endOffset":12541,"count":112},{"startOffset":12500,"endOffset":12539,"count":0}],"isBlockCoverage":true},{"functionName":"getProtohost","ranges":[{"startOffset":12580,"endOffset":12972,"count":28},{"startOffset":12704,"endOffset":12798,"count":0},{"startOffset":12803,"endOffset":12815,"count":0},{"startOffset":12906,"endOffset":12954,"count":0},{"startOffset":12959,"endOffset":12970,"count":0}],"isBlockCoverage":true},{"functionName":"gettype","ranges":[{"startOffset":13004,"endOffset":13201,"count":0}],"isBlockCoverage":false},{"functionName":"matchLayer","ranges":[{"startOffset":13301,"endOffset":13413,"count":168},{"startOffset":13378,"endOffset":13411,"count":0}],"isBlockCoverage":true},{"functionName":"mergeParams","ranges":[{"startOffset":13450,"endOffset":14108,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":14146,"endOffset":14548,"count":28},{"startOffset":14309,"endOffset":14376,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14387,"endOffset":14545,"count":0}],"isBlockCoverage":false},{"functionName":"sendOptionsResponse","ranges":[{"startOffset":14578,"endOffset":14757,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":14778,"endOffset":15032,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/router/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4149,"count":1}],"isBlockCoverage":true},{"functionName":"Route","ranges":[{"startOffset":663,"endOffset":818,"count":9}],"isBlockCoverage":true},{"functionName":"_handles_method","ranges":[{"startOffset":925,"endOffset":1157,"count":18},{"startOffset":985,"endOffset":1007,"count":0},{"startOffset":1067,"endOffset":1091,"count":0},{"startOffset":1093,"endOffset":1116,"count":0}],"isBlockCoverage":true},{"functionName":"_options","ranges":[{"startOffset":1250,"endOffset":1557,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":1645,"endOffset":2422,"count":14},{"startOffset":1748,"endOffset":1772,"count":0},{"startOffset":1839,"endOffset":1863,"count":0},{"startOffset":1865,"endOffset":1890,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":1926,"endOffset":2420,"count":19},{"startOffset":1987,"endOffset":2005,"count":0},{"startOffset":2007,"endOffset":2035,"count":0},{"startOffset":2078,"endOffset":2097,"count":0},{"startOffset":2099,"endOffset":2129,"count":0},{"startOffset":2177,"endOffset":2208,"count":0},{"startOffset":2259,"endOffset":2290,"count":0},{"startOffset":2305,"endOffset":2359,"count":0}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":3031,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3537,"endOffset":4146,"count":34}],"isBlockCoverage":true},{"functionName":"Route.<computed>","ranges":[{"startOffset":3583,"endOffset":4143,"count":9},{"startOffset":3691,"endOffset":4121,"count":11},{"startOffset":3765,"endOffset":3936,"count":0}],"isBlockCoverage":true}]},{"scriptId":"448","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/array-flatten/array-flatten.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1195,"count":1}],"isBlockCoverage":true},{"functionName":"flattenWithDepth","ranges":[{"startOffset":230,"endOffset":510,"count":0}],"isBlockCoverage":false},{"functionName":"flattenForever","ranges":[{"startOffset":659,"endOffset":904,"count":21},{"startOffset":742,"endOffset":885,"count":23},{"startOffset":800,"endOffset":843,"count":0}],"isBlockCoverage":true},{"functionName":"arrayFlatten","ranges":[{"startOffset":1045,"endOffset":1194,"count":21},{"startOffset":1147,"endOffset":1193,"count":0}],"isBlockCoverage":true}]},{"scriptId":"449","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/router/layer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3296,"count":1}],"isBlockCoverage":true},{"functionName":"Layer","ranges":[{"startOffset":486,"endOffset":951,"count":38},{"startOffset":554,"endOffset":600,"count":11},{"startOffset":600,"endOffset":647,"count":27},{"startOffset":647,"endOffset":652,"count":0},{"startOffset":697,"endOffset":713,"count":9},{"startOffset":928,"endOffset":949,"count":19}],"isBlockCoverage":true},{"functionName":"handle_error","ranges":[{"startOffset":1146,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":1561,"endOffset":1775,"count":131},{"startOffset":1641,"endOffset":1703,"count":0},{"startOffset":1741,"endOffset":1773,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":1943,"endOffset":2872,"count":168},{"startOffset":2092,"endOffset":2161,"count":98},{"startOffset":2161,"endOffset":2249,"count":70},{"startOffset":2249,"endOffset":2343,"count":0},{"startOffset":2343,"endOffset":2421,"count":70},{"startOffset":2421,"endOffset":2500,"count":52},{"startOffset":2500,"endOffset":2658,"count":18},{"startOffset":2658,"endOffset":2854,"count":0},{"startOffset":2854,"endOffset":2871,"count":18}],"isBlockCoverage":true},{"functionName":"decode_param","ranges":[{"startOffset":2965,"endOffset":3295,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/path-to-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3328,"count":1}],"isBlockCoverage":true},{"functionName":"pathtoRegexp","ranges":[{"startOffset":520,"endOffset":3326,"count":27},{"startOffset":585,"endOffset":590,"count":0},{"startOffset":606,"endOffset":611,"count":0},{"startOffset":711,"endOffset":715,"count":0},{"startOffset":847,"endOffset":1033,"count":0},{"startOffset":1062,"endOffset":1447,"count":0},{"startOffset":1480,"endOffset":1484,"count":0},{"startOffset":1517,"endOffset":1522,"count":19},{"startOffset":1523,"endOffset":1529,"count":8},{"startOffset":2645,"endOffset":3148,"count":0},{"startOffset":3229,"endOffset":3234,"count":20},{"startOffset":3235,"endOffset":3287,"count":7},{"startOffset":3268,"endOffset":3272,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1300,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1654,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2302,"endOffset":2530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/utils-merge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":276,"endOffset":379,"count":27},{"startOffset":331,"endOffset":361,"count":30}],"isBlockCoverage":true}]},{"scriptId":"452","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/setprototypeof/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1},{"startOffset":77,"endOffset":147,"count":0}],"isBlockCoverage":true},{"functionName":"setProtoOf","ranges":[{"startOffset":149,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"mixinProperties","ranges":[{"startOffset":224,"endOffset":406,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/middleware/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"exports.init","ranges":[{"startOffset":502,"endOffset":850,"count":1}],"isBlockCoverage":true},{"functionName":"expressInit","ranges":[{"startOffset":526,"endOffset":847,"count":14}],"isBlockCoverage":true}]},{"scriptId":"454","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/middleware/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":885,"count":1}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":400,"endOffset":883,"count":1},{"startOffset":605,"endOffset":642,"count":0},{"startOffset":644,"endOffset":715,"count":0}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":726,"endOffset":880,"count":14}],"isBlockCoverage":true}]},{"scriptId":"455","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/view.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3326,"count":1}],"isBlockCoverage":true},{"functionName":"View","ranges":[{"startOffset":854,"endOffset":1854,"count":8},{"startOffset":906,"endOffset":911,"count":0},{"startOffset":1071,"endOffset":1163,"count":0},{"startOffset":1338,"endOffset":1358,"count":0},{"startOffset":1423,"endOffset":1731,"count":0}],"isBlockCoverage":true},{"functionName":"lookup","ranges":[{"startOffset":1963,"endOffset":2344,"count":8}],"isBlockCoverage":true},{"functionName":"render","ranges":[{"startOffset":2486,"endOffset":2604,"count":8}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2751,"endOffset":3092,"count":8},{"startOffset":2932,"endOffset":3066,"count":0},{"startOffset":3068,"endOffset":3090,"count":0}],"isBlockCoverage":true},{"functionName":"tryStat","ranges":[{"startOffset":3190,"endOffset":3325,"count":8},{"startOffset":3286,"endOffset":3323,"count":0}],"isBlockCoverage":true}]},{"scriptId":"456","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5930,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":1107,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeType","ranges":[{"startOffset":1717,"endOffset":1835,"count":6},{"startOffset":1765,"endOffset":1785,"count":0}],"isBlockCoverage":true},{"functionName":"exports.normalizeTypes","ranges":[{"startOffset":1996,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"acceptParams","ranges":[{"startOffset":2722,"endOffset":3094,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compileETag","ranges":[{"startOffset":3246,"endOffset":3605,"count":1},{"startOffset":3306,"endOffset":3327,"count":0},{"startOffset":3350,"endOffset":3360,"count":0},{"startOffset":3421,"endOffset":3445,"count":0},{"startOffset":3450,"endOffset":3502,"count":0},{"startOffset":3507,"endOffset":3585,"count":0}],"isBlockCoverage":true},{"functionName":"compileQueryParser","ranges":[{"startOffset":3764,"endOffset":4192,"count":1},{"startOffset":3843,"endOffset":3864,"count":0},{"startOffset":3887,"endOffset":3897,"count":0},{"startOffset":3902,"endOffset":3959,"count":0},{"startOffset":3964,"endOffset":4010,"count":0},{"startOffset":4086,"endOffset":4172,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compileTrust","ranges":[{"startOffset":4365,"endOffset":4827,"count":1},{"startOffset":4414,"endOffset":4425,"count":0},{"startOffset":4447,"endOffset":4522,"count":0},{"startOffset":4555,"endOffset":4639,"count":0},{"startOffset":4672,"endOffset":4785,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4492,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4602,"endOffset":4634,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4748,"endOffset":4780,"count":0}],"isBlockCoverage":false},{"functionName":"setCharset","ranges":[{"startOffset":5000,"endOffset":5255,"count":8},{"startOffset":5062,"endOffset":5084,"count":0}],"isBlockCoverage":true},{"functionName":"createETagGenerator","ranges":[{"startOffset":5413,"endOffset":5626,"count":2}],"isBlockCoverage":true},{"functionName":"generateETag","ranges":[{"startOffset":5463,"endOffset":5624,"count":8},{"startOffset":5547,"endOffset":5576,"count":0}],"isBlockCoverage":true},{"functionName":"parseExtendedQueryString","ranges":[{"startOffset":5715,"endOffset":5814,"count":14}],"isBlockCoverage":true},{"functionName":"newObject","ranges":[{"startOffset":5892,"endOffset":5929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1670,"count":1},{"startOffset":438,"endOffset":550,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":241,"endOffset":327,"count":1},{"startOffset":296,"endOffset":325,"count":11}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":552,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":796,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":1002,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1363,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1526,"endOffset":1669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/content-disposition/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10594,"count":1}],"isBlockCoverage":true},{"functionName":"contentDisposition","ranges":[{"startOffset":4223,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"createparams","ranges":[{"startOffset":4683,"endOffset":5943,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":6124,"endOffset":6792,"count":0}],"isBlockCoverage":false},{"functionName":"decodefield","ranges":[{"startOffset":6908,"endOffset":7503,"count":0}],"isBlockCoverage":false},{"functionName":"getlatin1","ranges":[{"startOffset":7609,"endOffset":7739,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7854,"endOffset":9380,"count":0}],"isBlockCoverage":false},{"functionName":"pdecode","ranges":[{"startOffset":9510,"endOffset":9589,"count":0}],"isBlockCoverage":false},{"functionName":"pencode","ranges":[{"startOffset":9697,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":9905,"endOffset":10011,"count":0}],"isBlockCoverage":false},{"functionName":"ustring","ranges":[{"startOffset":10128,"endOffset":10331,"count":0}],"isBlockCoverage":false},{"functionName":"ContentDisposition","ranges":[{"startOffset":10493,"endOffset":10593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/content-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4809,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":1666,"endOffset":2358,"count":8},{"startOffset":1729,"endOffset":1786,"count":0},{"startOffset":1885,"endOffset":1930,"count":0},{"startOffset":2201,"endOffset":2264,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2467,"endOffset":3754,"count":14},{"startOffset":2508,"endOffset":2568,"count":0},{"startOffset":2662,"endOffset":2686,"count":6},{"startOffset":2691,"endOffset":2699,"count":8},{"startOffset":2735,"endOffset":2810,"count":0},{"startOffset":2876,"endOffset":2908,"count":8},{"startOffset":2913,"endOffset":2928,"count":6},{"startOffset":2961,"endOffset":3012,"count":0},{"startOffset":3105,"endOffset":3738,"count":8},{"startOffset":3267,"endOffset":3332,"count":0},{"startOffset":3452,"endOffset":3597,"count":0},{"startOffset":3673,"endOffset":3734,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":3861,"endOffset":4264,"count":6},{"startOffset":3950,"endOffset":4014,"count":0},{"startOffset":4170,"endOffset":4245,"count":0}],"isBlockCoverage":true},{"functionName":"qstring","ranges":[{"startOffset":4365,"endOffset":4658,"count":8},{"startOffset":4494,"endOffset":4542,"count":0},{"startOffset":4544,"endOffset":4657,"count":0}],"isBlockCoverage":true},{"functionName":"ContentType","ranges":[{"startOffset":4718,"endOffset":4808,"count":14}],"isBlockCoverage":true}]},{"scriptId":"460","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/send/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23355,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":1552,"endOffset":1634,"count":8}],"isBlockCoverage":true},{"functionName":"SendStream","ranges":[{"startOffset":1789,"endOffset":3540,"count":8},{"startOffset":1874,"endOffset":1879,"count":0},{"startOffset":1999,"endOffset":2027,"count":0},{"startOffset":2099,"endOffset":2127,"count":0},{"startOffset":2183,"endOffset":2203,"count":0},{"startOffset":2267,"endOffset":2282,"count":0},{"startOffset":2333,"endOffset":2362,"count":0},{"startOffset":2363,"endOffset":2391,"count":0},{"startOffset":2393,"endOffset":2478,"count":0},{"startOffset":2552,"endOffset":2652,"count":0},{"startOffset":2802,"endOffset":2855,"count":0},{"startOffset":2919,"endOffset":2944,"count":0},{"startOffset":3003,"endOffset":3046,"count":0},{"startOffset":3128,"endOffset":3156,"count":0},{"startOffset":3267,"endOffset":3285,"count":0},{"startOffset":3409,"endOffset":3412,"count":0},{"startOffset":3468,"endOffset":3474,"count":0},{"startOffset":3494,"endOffset":3506,"count":0},{"startOffset":3508,"endOffset":3538,"count":0}],"isBlockCoverage":true},{"functionName":"etag","ranges":[{"startOffset":3773,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"hidden","ranges":[{"startOffset":4074,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"index","ranges":[{"startOffset":4456,"endOffset":4612,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":4774,"endOffset":4880,"count":0}],"isBlockCoverage":false},{"functionName":"maxage","ranges":[{"startOffset":5258,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":5691,"endOffset":6461,"count":8},{"startOffset":5892,"endOffset":5961,"count":0},{"startOffset":6102,"endOffset":6116,"count":0},{"startOffset":6118,"endOffset":6460,"count":0}],"isBlockCoverage":true},{"functionName":"hasTrailingSlash","ranges":[{"startOffset":6588,"endOffset":6669,"count":8}],"isBlockCoverage":true},{"functionName":"isConditionalGET","ranges":[{"startOffset":6807,"endOffset":7010,"count":0}],"isBlockCoverage":false},{"functionName":"isPreconditionFailure","ranges":[{"startOffset":7148,"endOffset":7794,"count":0}],"isBlockCoverage":false},{"functionName":"removeContentHeaderFields","ranges":[{"startOffset":7903,"endOffset":8195,"count":0}],"isBlockCoverage":false},{"functionName":"notModified","ranges":[{"startOffset":8294,"endOffset":8436,"count":0}],"isBlockCoverage":false},{"functionName":"headersAlreadySent","ranges":[{"startOffset":8550,"endOffset":8704,"count":0}],"isBlockCoverage":false},{"functionName":"isCachable","ranges":[{"startOffset":8894,"endOffset":9034,"count":0}],"isBlockCoverage":false},{"functionName":"onStatError","ranges":[{"startOffset":9143,"endOffset":9362,"count":8},{"startOffset":9202,"endOffset":9222,"count":0},{"startOffset":9307,"endOffset":9356,"count":0}],"isBlockCoverage":true},{"functionName":"isFresh","ranges":[{"startOffset":9476,"endOffset":9634,"count":0}],"isBlockCoverage":false},{"functionName":"isRangeFresh","ranges":[{"startOffset":9753,"endOffset":10180,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":10283,"endOffset":11012,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":11133,"endOffset":12800,"count":8},{"startOffset":11300,"endOffset":11340,"count":0},{"startOffset":11387,"endOffset":11427,"count":0},{"startOffset":11602,"endOffset":11689,"count":0},{"startOffset":11835,"endOffset":12125,"count":0},{"startOffset":12179,"endOffset":12638,"count":0},{"startOffset":12717,"endOffset":12762,"count":3},{"startOffset":12762,"endOffset":12799,"count":5}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":12901,"endOffset":15124,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":15238,"endOffset":16093,"count":5}],"isBlockCoverage":true},{"functionName":"onstat","ranges":[{"startOffset":15339,"endOffset":15686,"count":5},{"startOffset":15525,"endOffset":15685,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":15691,"endOffset":16091,"count":5},{"startOffset":15810,"endOffset":15827,"count":0},{"startOffset":15833,"endOffset":16090,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15924,"endOffset":16086,"count":0}],"isBlockCoverage":false},{"functionName":"sendIndex","ranges":[{"startOffset":16209,"endOffset":16670,"count":3}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":16271,"endOffset":16658,"count":6},{"startOffset":16328,"endOffset":16408,"count":3},{"startOffset":16373,"endOffset":16408,"count":0},{"startOffset":16408,"endOffset":16657,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16491,"endOffset":16653,"count":3},{"startOffset":16545,"endOffset":16652,"count":0}],"isBlockCoverage":true},{"functionName":"stream","ranges":[{"startOffset":16815,"endOffset":17515,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":17670,"endOffset":18010,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":18187,"endOffset":19056,"count":0}],"isBlockCoverage":false},{"functionName":"clearHeaders","ranges":[{"startOffset":19143,"endOffset":19293,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":19393,"endOffset":19575,"count":0}],"isBlockCoverage":false},{"functionName":"containsDotFile","ranges":[{"startOffset":19651,"endOffset":19844,"count":8},{"startOffset":19727,"endOffset":19826,"count":11},{"startOffset":19777,"endOffset":19795,"count":5},{"startOffset":19797,"endOffset":19822,"count":0}],"isBlockCoverage":true},{"functionName":"contentRange","ranges":[{"startOffset":19966,"endOffset":20092,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":20202,"endOffset":20497,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":20646,"endOffset":20752,"count":8},{"startOffset":20719,"endOffset":20750,"count":0}],"isBlockCoverage":true},{"functionName":"getHeaderNames","ranges":[{"startOffset":20867,"endOffset":21015,"count":0}],"isBlockCoverage":false},{"functionName":"hasListeners","ranges":[{"startOffset":21325,"endOffset":21515,"count":8},{"startOffset":21427,"endOffset":21459,"count":0}],"isBlockCoverage":true},{"functionName":"headersSent","ranges":[{"startOffset":21639,"endOffset":21764,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeList","ranges":[{"startOffset":21896,"endOffset":22146,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":22233,"endOffset":22375,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":22452,"endOffset":23057,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":23176,"endOffset":23354,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/http-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6521,"count":1}],"isBlockCoverage":true},{"functionName":"codeClass","ranges":[{"startOffset":783,"endOffset":863,"count":64}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":936,"endOffset":2436,"count":8},{"startOffset":1095,"endOffset":1577,"count":24},{"startOffset":1154,"endOffset":1246,"count":8},{"startOffset":1246,"endOffset":1279,"count":16},{"startOffset":1279,"endOffset":1325,"count":0},{"startOffset":1332,"endOffset":1512,"count":8},{"startOffset":1389,"endOffset":1498,"count":0},{"startOffset":1519,"endOffset":1567,"count":8},{"startOffset":1648,"endOffset":1726,"count":0},{"startOffset":1787,"endOffset":1821,"count":0},{"startOffset":1824,"endOffset":1846,"count":0},{"startOffset":1903,"endOffset":1936,"count":0},{"startOffset":1950,"endOffset":2111,"count":0},{"startOffset":2161,"endOffset":2185,"count":0}],"isBlockCoverage":true},{"functionName":"createHttpErrorConstructor","ranges":[{"startOffset":2501,"endOffset":2682,"count":1}],"isBlockCoverage":true},{"functionName":"HttpError","ranges":[{"startOffset":2544,"endOffset":2630,"count":0}],"isBlockCoverage":false},{"functionName":"createClientErrorConstructor","ranges":[{"startOffset":2749,"endOffset":3768,"count":29}],"isBlockCoverage":true},{"functionName":"ClientError","ranges":[{"startOffset":2852,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"createIsHttpErrorFunction","ranges":[{"startOffset":3845,"endOffset":4217,"count":1}],"isBlockCoverage":true},{"functionName":"isHttpError","ranges":[{"startOffset":3903,"endOffset":4215,"count":0}],"isBlockCoverage":false},{"functionName":"createServerErrorConstructor","ranges":[{"startOffset":4284,"endOffset":5304,"count":12}],"isBlockCoverage":true},{"functionName":"ServerError","ranges":[{"startOffset":4387,"endOffset":5089,"count":0}],"isBlockCoverage":false},{"functionName":"nameFunc","ranges":[{"startOffset":5371,"endOffset":5572,"count":41}],"isBlockCoverage":true},{"functionName":"populateConstructorExports","ranges":[{"startOffset":5667,"endOffset":6353,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":5749,"endOffset":6210,"count":64},{"startOffset":5879,"endOffset":5974,"count":29},{"startOffset":5981,"endOffset":6076,"count":12},{"startOffset":6103,"endOffset":6206,"count":41}],"isBlockCoverage":true},{"functionName":"toClassName","ranges":[{"startOffset":6420,"endOffset":6520,"count":41},{"startOffset":6491,"endOffset":6507,"count":40},{"startOffset":6512,"endOffset":6518,"count":1}],"isBlockCoverage":true}]},{"scriptId":"462","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/toidentifier/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":298,"endOffset":503,"count":64}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":366,"endOffset":452,"count":134}],"isBlockCoverage":true}]},{"scriptId":"463","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":102,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":101,"count":0}],"isBlockCoverage":true}]},{"scriptId":"464","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/destroy/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1043,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":338,"endOffset":594,"count":0}],"isBlockCoverage":false},{"functionName":"destroyReadStream","ranges":[{"startOffset":671,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"onOpenClose","ranges":[{"startOffset":924,"endOffset":1042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/etag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2479,"count":1}],"isBlockCoverage":true},{"functionName":"entitytag","ranges":[{"startOffset":459,"endOffset":918,"count":8},{"startOffset":516,"endOffset":589,"count":0},{"startOffset":809,"endOffset":844,"count":0}],"isBlockCoverage":true},{"functionName":"etag","ranges":[{"startOffset":1091,"endOffset":1679,"count":8},{"startOffset":1147,"endOffset":1207,"count":0},{"startOffset":1351,"endOffset":1360,"count":0},{"startOffset":1459,"endOffset":1543,"count":0},{"startOffset":1594,"endOffset":1611,"count":0},{"startOffset":1672,"endOffset":1677,"count":0}],"isBlockCoverage":true},{"functionName":"isstats","ranges":[{"startOffset":1795,"endOffset":2226,"count":8},{"startOffset":1901,"endOffset":1922,"count":0},{"startOffset":2003,"endOffset":2050,"count":0},{"startOffset":2051,"endOffset":2072,"count":0},{"startOffset":2073,"endOffset":2120,"count":0},{"startOffset":2121,"endOffset":2140,"count":0},{"startOffset":2141,"endOffset":2171,"count":0},{"startOffset":2172,"endOffset":2192,"count":0},{"startOffset":2193,"endOffset":2224,"count":0}],"isBlockCoverage":true},{"functionName":"stattag","ranges":[{"startOffset":2326,"endOffset":2478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/fresh/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2711,"count":1}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":522,"endOffset":1800,"count":8},{"startOffset":762,"endOffset":1036,"count":0},{"startOffset":1038,"endOffset":1117,"count":0},{"startOffset":1119,"endOffset":1799,"count":0}],"isBlockCoverage":true},{"functionName":"parseHttpDate","ranges":[{"startOffset":1887,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":2175,"endOffset":2710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/send/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/range-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2900,"count":1}],"isBlockCoverage":true},{"functionName":"rangeParser","ranges":[{"startOffset":401,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"combineRanges","ranges":[{"startOffset":1600,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithIndex","ranges":[{"startOffset":2350,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithoutIndex","ranges":[{"startOffset":2540,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeIndex","ranges":[{"startOffset":2699,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeStart","ranges":[{"startOffset":2836,"endOffset":2899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/proxy-addr/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6000,"count":1}],"isBlockCoverage":true},{"functionName":"alladdrs","ranges":[{"startOffset":879,"endOffset":1227,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1323,"endOffset":1948,"count":1},{"startOffset":1360,"endOffset":1413,"count":0},{"startOffset":1459,"endOffset":1482,"count":0},{"startOffset":1541,"endOffset":1606,"count":0},{"startOffset":1649,"endOffset":1895,"count":0}],"isBlockCoverage":true},{"functionName":"compileRangeSubnets","ranges":[{"startOffset":2042,"endOffset":2238,"count":1},{"startOffset":2162,"endOffset":2213,"count":0}],"isBlockCoverage":true},{"functionName":"compileTrust","ranges":[{"startOffset":2346,"endOffset":2586,"count":1},{"startOffset":2503,"endOffset":2584,"count":0}],"isBlockCoverage":true},{"functionName":"parseipNotation","ranges":[{"startOffset":2683,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"parseNetmask","ranges":[{"startOffset":3625,"endOffset":3786,"count":0}],"isBlockCoverage":false},{"functionName":"proxyaddr","ranges":[{"startOffset":3919,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"trustNone","ranges":[{"startOffset":4256,"endOffset":4296,"count":0}],"isBlockCoverage":false},{"functionName":"trustMulti","ranges":[{"startOffset":4396,"endOffset":5273,"count":0}],"isBlockCoverage":false},{"functionName":"trustSingle","ranges":[{"startOffset":5370,"endOffset":5999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/forwarded/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"forwarded","ranges":[{"startOffset":310,"endOffset":625,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketAddr","ranges":[{"startOffset":735,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":942,"endOffset":1577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/ipaddr.js/lib/ipaddr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19333,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19319,"count":1},{"startOffset":257,"endOffset":297,"count":0}],"isBlockCoverage":true},{"functionName":"matchCIDR","ranges":[{"startOffset":313,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.subnetMatch","ranges":[{"startOffset":828,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1495,"endOffset":4290,"count":1}],"isBlockCoverage":true},{"functionName":"IPv4","ranges":[{"startOffset":1512,"endOffset":1917,"count":15},{"startOffset":1592,"endOffset":1666,"count":0},{"startOffset":1720,"endOffset":1883,"count":60},{"startOffset":1794,"endOffset":1875,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv4.IPv4.kind","ranges":[{"startOffset":1945,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toString","ranges":[{"startOffset":2017,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toNormalizedString","ranges":[{"startOffset":2114,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toByteArray","ranges":[{"startOffset":2198,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.match","ranges":[{"startOffset":2281,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.range","ranges":[{"startOffset":3342,"endOffset":3419,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toIPv4MappedAddress","ranges":[{"startOffset":3463,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.prefixLengthFromSubnetMask","ranges":[{"startOffset":3595,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parser","ranges":[{"startOffset":4545,"endOffset":5637,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5657,"endOffset":11106,"count":1}],"isBlockCoverage":true},{"functionName":"IPv6","ranges":[{"startOffset":5674,"endOffset":6372,"count":11},{"startOffset":5771,"endOffset":5921,"count":0},{"startOffset":5988,"endOffset":6073,"count":0},{"startOffset":6148,"endOffset":6308,"count":88},{"startOffset":6219,"endOffset":6300,"count":0},{"startOffset":6327,"endOffset":6366,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv6.IPv6.kind","ranges":[{"startOffset":6400,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toString","ranges":[{"startOffset":6472,"endOffset":6564,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toRFC5952String","ranges":[{"startOffset":6604,"endOffset":7192,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toByteArray","ranges":[{"startOffset":7228,"endOffset":7491,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toNormalizedString","ranges":[{"startOffset":7534,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toFixedLengthString","ranges":[{"startOffset":8040,"endOffset":8519,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.match","ranges":[{"startOffset":8549,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.range","ranges":[{"startOffset":9656,"endOffset":9733,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.isIPv4MappedAddress","ranges":[{"startOffset":9777,"endOffset":9839,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toIPv4Address","ranges":[{"startOffset":9877,"endOffset":10196,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.prefixLengthFromSubnetMask","ranges":[{"startOffset":10247,"endOffset":11082,"count":0}],"isBlockCoverage":false},{"functionName":"expandIPv6","ranges":[{"startOffset":11548,"endOffset":12889,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parser","ranges":[{"startOffset":12915,"endOffset":13759,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isIPv4.ipaddr.IPv6.isIPv6","ranges":[{"startOffset":13806,"endOffset":13869,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValid","ranges":[{"startOffset":13896,"endOffset":14062,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValidFourPartDecimal","ranges":[{"startOffset":14104,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.isValid","ranges":[{"startOffset":14303,"endOffset":14607,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parse","ranges":[{"startOffset":14632,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parse","ranges":[{"startOffset":14861,"endOffset":15086,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parseCIDR","ranges":[{"startOffset":15115,"endOffset":15620,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.subnetMaskFromPrefixLength","ranges":[{"startOffset":15666,"endOffset":16169,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.broadcastAddressFromCIDR","ranges":[{"startOffset":16213,"endOffset":16814,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.networkAddressFromCIDR","ranges":[{"startOffset":16856,"endOffset":17451,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parseCIDR","ranges":[{"startOffset":17480,"endOffset":17986,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.isValid","ranges":[{"startOffset":18008,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parse","ranges":[{"startOffset":18121,"endOffset":18406,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parseCIDR","ranges":[{"startOffset":18430,"endOffset":18761,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.fromByteArray","ranges":[{"startOffset":18789,"endOffset":19089,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.process","ranges":[{"startOffset":19111,"endOffset":19315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":108,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":107,"count":0}],"isBlockCoverage":true}]},{"scriptId":"473","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":108,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":107,"count":0}],"isBlockCoverage":true}]},{"scriptId":"474","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12505,"count":1}],"isBlockCoverage":true},{"functionName":"header","ranges":[{"startOffset":1150,"endOffset":1565,"count":0}],"isBlockCoverage":false},{"functionName":"req.accepts","ranges":[{"startOffset":2913,"endOffset":3004,"count":6}],"isBlockCoverage":true},{"functionName":"req.acceptsEncodings","ranges":[{"startOffset":3158,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsCharsets","ranges":[{"startOffset":3585,"endOffset":3679,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsLanguages","ranges":[{"startOffset":4002,"endOffset":4097,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":5220,"endOffset":5351,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":5806,"endOffset":6298,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":6898,"endOffset":7154,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":7546,"endOffset":8029,"count":0}],"isBlockCoverage":false},{"functionName":"secure","ranges":[{"startOffset":8158,"endOffset":8214,"count":0}],"isBlockCoverage":false},{"functionName":"ip","ranges":[{"startOffset":8416,"endOffset":8511,"count":0}],"isBlockCoverage":false},{"functionName":"ips","ranges":[{"startOffset":8860,"endOffset":9086,"count":0}],"isBlockCoverage":false},{"functionName":"subdomains","ranges":[{"startOffset":9633,"endOffset":9894,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":10016,"endOffset":10066,"count":0}],"isBlockCoverage":false},{"functionName":"hostname","ranges":[{"startOffset":10314,"endOffset":10948,"count":0}],"isBlockCoverage":false},{"functionName":"host","ranges":[{"startOffset":11052,"endOffset":11094,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11295,"endOffset":11736,"count":8},{"startOffset":11462,"endOffset":11482,"count":0},{"startOffset":11484,"endOffset":11497,"count":0},{"startOffset":11574,"endOffset":11591,"count":0},{"startOffset":11717,"endOffset":11735,"count":0}],"isBlockCoverage":true},{"functionName":"stale","ranges":[{"startOffset":11921,"endOffset":11962,"count":0}],"isBlockCoverage":false},{"functionName":"xhr","ranges":[{"startOffset":12084,"endOffset":12198,"count":0}],"isBlockCoverage":false},{"functionName":"defineGetter","ranges":[{"startOffset":12355,"endOffset":12504,"count":11}],"isBlockCoverage":true}]},{"scriptId":"475","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/accepts/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5252,"count":1}],"isBlockCoverage":true},{"functionName":"Accepts","ranges":[{"startOffset":411,"endOffset":575,"count":12},{"startOffset":470,"endOffset":574,"count":6}],"isBlockCoverage":true},{"functionName":"Accepts.type.Accepts.types","ranges":[{"startOffset":1772,"endOffset":2431,"count":6},{"startOffset":1885,"endOffset":2011,"count":0},{"startOffset":2091,"endOffset":2136,"count":0},{"startOffset":2238,"endOffset":2417,"count":0},{"startOffset":2422,"endOffset":2429,"count":0}],"isBlockCoverage":true},{"functionName":"Accepts.encoding.Accepts.encodings","ranges":[{"startOffset":2760,"endOffset":3232,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.charset.Accepts.charsets","ranges":[{"startOffset":3591,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.lang.Accepts.langs.Accepts.language.Accepts.languages","ranges":[{"startOffset":4422,"endOffset":4894,"count":0}],"isBlockCoverage":false},{"functionName":"extToMime","ranges":[{"startOffset":4993,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"validMime","ranges":[{"startOffset":5188,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/negotiator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"Negotiator","ranges":[{"startOffset":593,"endOffset":731,"count":6},{"startOffset":661,"endOffset":702,"count":0}],"isBlockCoverage":true},{"functionName":"charset","ranges":[{"startOffset":764,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"charsets","ranges":[{"startOffset":892,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"encoding","ranges":[{"startOffset":1038,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"encodings","ranges":[{"startOffset":1169,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"language","ranges":[{"startOffset":1318,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"languages","ranges":[{"startOffset":1449,"endOffset":1563,"count":0}],"isBlockCoverage":false},{"functionName":"mediaType","ranges":[{"startOffset":1599,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"mediaTypes","ranges":[{"startOffset":1733,"endOffset":1837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/negotiator/lib/charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptCharset","ranges":[{"startOffset":471,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"parseCharset","ranges":[{"startOffset":846,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"getCharsetPriority","ranges":[{"startOffset":1339,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1741,"endOffset":1995,"count":0}],"isBlockCoverage":false},{"functionName":"preferredCharsets","ranges":[{"startOffset":2078,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":2762,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"getFullCharset","ranges":[{"startOffset":2916,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3031,"endOffset":3080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/negotiator/lib/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3506,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptEncoding","ranges":[{"startOffset":476,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"parseEncoding","ranges":[{"startOffset":1309,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingPriority","ranges":[{"startOffset":1810,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2216,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"preferredEncodings","ranges":[{"startOffset":2560,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3184,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"getFullEncoding","ranges":[{"startOffset":3339,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3456,"endOffset":3505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/negotiator/lib/language.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptLanguage","ranges":[{"startOffset":493,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"parseLanguage","ranges":[{"startOffset":875,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguagePriority","ranges":[{"startOffset":1445,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1851,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"preferredLanguages","ranges":[{"startOffset":2400,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3091,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"getFullLanguage","ranges":[{"startOffset":3246,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3359,"endOffset":3408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/negotiator/lib/mediaType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5358,"count":1}],"isBlockCoverage":true},{"functionName":"parseAccept","ranges":[{"startOffset":484,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parseMediaType","ranges":[{"startOffset":861,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"getMediaTypePriority","ranges":[{"startOffset":1754,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2155,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"preferredMediaTypes","ranges":[{"startOffset":2948,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3621,"endOffset":3724,"count":0}],"isBlockCoverage":false},{"functionName":"getFullType","ranges":[{"startOffset":3772,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3902,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"quoteCount","ranges":[{"startOffset":4017,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"splitKeyValuePair","ranges":[{"startOffset":4236,"endOffset":4465,"count":0}],"isBlockCoverage":false},{"functionName":"splitMediaTypes","ranges":[{"startOffset":4532,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"splitParameters","ranges":[{"startOffset":4913,"endOffset":5357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/type-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5562,"count":1}],"isBlockCoverage":true},{"functionName":"typeis","ranges":[{"startOffset":798,"endOffset":1524,"count":6},{"startOffset":972,"endOffset":994,"count":0},{"startOffset":1269,"endOffset":1289,"count":0},{"startOffset":1460,"endOffset":1465,"count":0},{"startOffset":1490,"endOffset":1523,"count":0}],"isBlockCoverage":true},{"functionName":"hasbody","ranges":[{"startOffset":1805,"endOffset":1932,"count":28}],"isBlockCoverage":true},{"functionName":"typeofrequest","ranges":[{"startOffset":2796,"endOffset":3211,"count":6},{"startOffset":2891,"endOffset":2912,"count":0},{"startOffset":2975,"endOffset":3109,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":3577,"endOffset":3986,"count":6},{"startOffset":3637,"endOffset":3679,"count":0},{"startOffset":3703,"endOffset":3770,"count":0},{"startOffset":3775,"endOffset":3819,"count":0},{"startOffset":3848,"endOffset":3914,"count":0},{"startOffset":3954,"endOffset":3973,"count":0}],"isBlockCoverage":true},{"functionName":"mimeMatch","ranges":[{"startOffset":4188,"endOffset":4984,"count":6},{"startOffset":4272,"endOffset":4294,"count":0},{"startOffset":4476,"endOffset":4498,"count":0},{"startOffset":4590,"endOffset":4612,"count":0},{"startOffset":4690,"endOffset":4850,"count":0},{"startOffset":4945,"endOffset":4967,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeType","ranges":[{"startOffset":5098,"endOffset":5288,"count":6}],"isBlockCoverage":true},{"functionName":"tryNormalizeType","ranges":[{"startOffset":5409,"endOffset":5561,"count":6},{"startOffset":5459,"endOffset":5480,"count":0},{"startOffset":5526,"endOffset":5559,"count":0}],"isBlockCoverage":true}]},{"scriptId":"482","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/media-typer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6375,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2747,"endOffset":3799,"count":6},{"startOffset":2809,"endOffset":2866,"count":0},{"startOffset":3022,"endOffset":3067,"count":0},{"startOffset":3121,"endOffset":3169,"count":0},{"startOffset":3270,"endOffset":3393,"count":0},{"startOffset":3435,"endOffset":3468,"count":0},{"startOffset":3470,"endOffset":3780,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3912,"endOffset":5027,"count":6},{"startOffset":3952,"endOffset":4012,"count":0},{"startOffset":4094,"endOffset":4135,"count":0},{"startOffset":4171,"endOffset":4246,"count":0},{"startOffset":4312,"endOffset":4337,"count":0},{"startOffset":4509,"endOffset":4878,"count":0},{"startOffset":4899,"endOffset":4925,"count":0},{"startOffset":4927,"endOffset":4984,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":5138,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":5497,"endOffset":5786,"count":0}],"isBlockCoverage":false},{"functionName":"splitType","ranges":[{"startOffset":5905,"endOffset":6374,"count":6},{"startOffset":6001,"endOffset":6052,"count":0},{"startOffset":6199,"endOffset":6282,"count":0}],"isBlockCoverage":true}]},{"scriptId":"483","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":98,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":97,"count":0}],"isBlockCoverage":true}]},{"scriptId":"484","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":98,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":97,"count":0}],"isBlockCoverage":true}]},{"scriptId":"485","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express/lib/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27287,"count":1}],"isBlockCoverage":true},{"functionName":"status","ranges":[{"startOffset":1351,"endOffset":1417,"count":0}],"isBlockCoverage":false},{"functionName":"res.links","ranges":[{"startOffset":1709,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2173,"endOffset":5178,"count":8},{"startOffset":2358,"endOffset":2785,"count":0},{"startOffset":2880,"endOffset":2905,"count":0},{"startOffset":2907,"endOffset":3171,"count":0},{"startOffset":3342,"endOffset":3357,"count":0},{"startOffset":3362,"endOffset":3376,"count":0},{"startOffset":3381,"endOffset":3634,"count":0},{"startOffset":4155,"endOffset":4217,"count":0},{"startOffset":4241,"endOffset":4263,"count":0},{"startOffset":4265,"endOffset":4377,"count":0},{"startOffset":4768,"endOffset":4790,"count":0},{"startOffset":4880,"endOffset":5025,"count":0},{"startOffset":5056,"endOffset":5103,"count":0}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":5358,"endOffset":6185,"count":0}],"isBlockCoverage":false},{"functionName":"jsonp","ranges":[{"startOffset":6396,"endOffset":8218,"count":0}],"isBlockCoverage":false},{"functionName":"sendStatus","ranges":[{"startOffset":8554,"endOffset":8725,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":10109,"endOffset":11088,"count":0}],"isBlockCoverage":false},{"functionName":"res.sendfile","ranges":[{"startOffset":12472,"endOffset":13083,"count":0}],"isBlockCoverage":false},{"functionName":"download","ranges":[{"startOffset":13836,"endOffset":14835,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":15263,"endOffset":15405,"count":8},{"startOffset":15356,"endOffset":15362,"count":0}],"isBlockCoverage":true},{"functionName":"res.format","ranges":[{"startOffset":16840,"endOffset":17408,"count":6},{"startOffset":17043,"endOffset":17050,"count":0},{"startOffset":17180,"endOffset":17390,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17340,"endOffset":17369,"count":0}],"isBlockCoverage":false},{"functionName":"attachment","ranges":[{"startOffset":17585,"endOffset":17756,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":18160,"endOffset":18450,"count":2},{"startOffset":18252,"endOffset":18414,"count":0}],"isBlockCoverage":true},{"functionName":"header","ranges":[{"startOffset":18869,"endOffset":19531,"count":52},{"startOffset":18972,"endOffset":18989,"count":0},{"startOffset":19095,"endOffset":19396,"count":22},{"startOffset":19129,"endOffset":19209,"count":0},{"startOffset":19248,"endOffset":19390,"count":14},{"startOffset":19435,"endOffset":19514,"count":0}],"isBlockCoverage":true},{"functionName":"res.get","ranges":[{"startOffset":19645,"endOffset":19695,"count":48}],"isBlockCoverage":true},{"functionName":"clearCookie","ranges":[{"startOffset":19857,"endOffset":20001,"count":0}],"isBlockCoverage":false},{"functionName":"res.cookie","ranges":[{"startOffset":20632,"endOffset":21272,"count":2},{"startOffset":20773,"endOffset":20783,"count":0},{"startOffset":20785,"endOffset":20865,"count":0},{"startOffset":20909,"endOffset":20939,"count":0},{"startOffset":20976,"endOffset":21017,"count":0}],"isBlockCoverage":true},{"functionName":"location","ranges":[{"startOffset":21648,"endOffset":21870,"count":6},{"startOffset":21754,"endOffset":21802,"count":0}],"isBlockCoverage":true},{"functionName":"redirect","ranges":[{"startOffset":22338,"endOffset":23344,"count":6},{"startOffset":22471,"endOffset":22712,"count":2},{"startOffset":22581,"endOffset":22708,"count":0},{"startOffset":23290,"endOffset":23311,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":22860,"endOffset":22939,"count":6}],"isBlockCoverage":true},{"functionName":"html","ranges":[{"startOffset":22952,"endOffset":23101,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":23117,"endOffset":23151,"count":0}],"isBlockCoverage":false},{"functionName":"res.vary","ranges":[{"startOffset":23550,"endOffset":23765,"count":6},{"startOffset":23633,"endOffset":23649,"count":0},{"startOffset":23652,"endOffset":23725,"count":0}],"isBlockCoverage":true},{"functionName":"render","ranges":[{"startOffset":24151,"endOffset":24668,"count":8},{"startOffset":24264,"endOffset":24269,"count":0},{"startOffset":24395,"endOffset":24435,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":24540,"endOffset":24620,"count":8},{"startOffset":24575,"endOffset":24596,"count":0}],"isBlockCoverage":true},{"functionName":"sendfile","ranges":[{"startOffset":24700,"endOffset":26334,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":26615,"endOffset":27286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/cookie-signature/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1230,"count":1}],"isBlockCoverage":true},{"functionName":"exports.sign","ranges":[{"startOffset":217,"endOffset":554,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unsign","ranges":[{"startOffset":781,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"sha1","ranges":[{"startOffset":1146,"endOffset":1229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/cookie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4047,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":842,"endOffset":1594,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1978,"endOffset":3814,"count":2},{"startOffset":2039,"endOffset":2044,"count":0},{"startOffset":2114,"endOffset":2172,"count":0},{"startOffset":2212,"endOffset":2270,"count":0},{"startOffset":2345,"endOffset":2402,"count":0},{"startOffset":2543,"endOffset":2604,"count":0},{"startOffset":2675,"endOffset":2827,"count":0},{"startOffset":2891,"endOffset":2951,"count":0},{"startOffset":3067,"endOffset":3130,"count":0},{"startOffset":3210,"endOffset":3240,"count":0},{"startOffset":3260,"endOffset":3288,"count":0},{"startOffset":3310,"endOffset":3797,"count":0}],"isBlockCoverage":true},{"functionName":"tryDecode","ranges":[{"startOffset":3943,"endOffset":4046,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/vary/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2930,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":695,"endOffset":1759,"count":6},{"startOffset":763,"endOffset":823,"count":0},{"startOffset":839,"endOffset":898,"count":0},{"startOffset":990,"endOffset":997,"count":0},{"startOffset":1122,"endOffset":1205,"count":0},{"startOffset":1265,"endOffset":1288,"count":0},{"startOffset":1465,"endOffset":1485,"count":0},{"startOffset":1689,"endOffset":1713,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1868,"endOffset":2409,"count":12},{"startOffset":2013,"endOffset":2332,"count":36},{"startOffset":2057,"endOffset":2158,"count":0},{"startOffset":2165,"endOffset":2273,"count":0}],"isBlockCoverage":true},{"functionName":"vary","ranges":[{"startOffset":2540,"endOffset":2929,"count":6},{"startOffset":2617,"endOffset":2693,"count":0},{"startOffset":2798,"endOffset":2814,"count":0}],"isBlockCoverage":true}]},{"scriptId":"489","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":113,"count":0}],"isBlockCoverage":true}]},{"scriptId":"490","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/body-parser/lib/types/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4918,"count":1}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":1001,"endOffset":3216,"count":1},{"startOffset":1145,"endOffset":1157,"count":0},{"startOffset":1368,"endOffset":1399,"count":0},{"startOffset":1401,"endOffset":1464,"count":0},{"startOffset":1592,"endOffset":1598,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1602,"endOffset":2226,"count":6},{"startOffset":1653,"endOffset":1823,"count":0},{"startOffset":1902,"endOffset":1918,"count":0},{"startOffset":1920,"endOffset":2014,"count":0},{"startOffset":2103,"endOffset":2222,"count":0}],"isBlockCoverage":true},{"functionName":"jsonParser","ranges":[{"startOffset":2237,"endOffset":3214,"count":14},{"startOffset":2295,"endOffset":2363,"count":0},{"startOffset":2462,"endOffset":2526,"count":8},{"startOffset":2526,"endOffset":2659,"count":6},{"startOffset":2659,"endOffset":2720,"count":0},{"startOffset":2720,"endOffset":2809,"count":6},{"startOffset":2851,"endOffset":3059,"count":0},{"startOffset":3059,"endOffset":3213,"count":6}],"isBlockCoverage":true},{"functionName":"createStrictSyntaxError","ranges":[{"startOffset":3371,"endOffset":3734,"count":0}],"isBlockCoverage":false},{"functionName":"firstchar","ranges":[{"startOffset":3860,"endOffset":3928,"count":6}],"isBlockCoverage":true},{"functionName":"getCharset","ranges":[{"startOffset":4014,"endOffset":4167,"count":6},{"startOffset":4129,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeJsonSyntaxError","ranges":[{"startOffset":4302,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":4808,"endOffset":4917,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":4847,"endOffset":4915,"count":6}],"isBlockCoverage":true}]},{"scriptId":"491","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/bytes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3613,"count":1}],"isBlockCoverage":true},{"functionName":"bytes","ranges":[{"startOffset":941,"endOffset":1130,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1598,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":3612,"count":8},{"startOffset":3049,"endOffset":3063,"count":6},{"startOffset":3065,"endOffset":3086,"count":6},{"startOffset":3086,"endOffset":3119,"count":2},{"startOffset":3119,"endOffset":3141,"count":0},{"startOffset":3141,"endOffset":3275,"count":2},{"startOffset":3275,"endOffset":3387,"count":0},{"startOffset":3387,"endOffset":3542,"count":2},{"startOffset":3542,"endOffset":3564,"count":0},{"startOffset":3564,"endOffset":3611,"count":2}],"isBlockCoverage":true}]},{"scriptId":"492","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/body-parser/lib/read.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3894,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":600,"endOffset":2772,"count":6},{"startOffset":826,"endOffset":832,"count":0},{"startOffset":1013,"endOffset":1051,"count":0},{"startOffset":1131,"endOffset":1137,"count":0},{"startOffset":1216,"endOffset":1236,"count":0},{"startOffset":1237,"endOffset":1271,"count":0},{"startOffset":1273,"endOffset":1450,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1512,"endOffset":2769,"count":6},{"startOffset":1552,"endOffset":2105,"count":0},{"startOffset":2137,"endOffset":2393,"count":0},{"startOffset":2500,"endOffset":2520,"count":0},{"startOffset":2529,"endOffset":2559,"count":0},{"startOffset":2609,"endOffset":2753,"count":0}],"isBlockCoverage":true},{"functionName":"onfinished","ranges":[{"startOffset":2014,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"contentstream","ranges":[{"startOffset":2949,"endOffset":3893,"count":6},{"startOffset":3202,"endOffset":3228,"count":0},{"startOffset":3230,"endOffset":3364,"count":0},{"startOffset":3392,"endOffset":3506,"count":0},{"startOffset":3511,"endOffset":3620,"count":0},{"startOffset":3706,"endOffset":3870,"count":0}],"isBlockCoverage":true}]},{"scriptId":"493","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/raw-body/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6059,"count":1}],"isBlockCoverage":true},{"functionName":"getDecoder","ranges":[{"startOffset":593,"endOffset":982,"count":6},{"startOffset":643,"endOffset":654,"count":0},{"startOffset":706,"endOffset":980,"count":0}],"isBlockCoverage":true},{"functionName":"getRawBody","ranges":[{"startOffset":1160,"endOffset":2418,"count":6},{"startOffset":1253,"endOffset":1258,"count":0},{"startOffset":1315,"endOffset":1393,"count":0},{"startOffset":1432,"endOffset":1470,"count":0},{"startOffset":1578,"endOffset":1647,"count":0},{"startOffset":1704,"endOffset":1722,"count":0},{"startOffset":1724,"endOffset":1786,"count":0},{"startOffset":1870,"endOffset":1879,"count":0},{"startOffset":2098,"endOffset":2104,"count":0},{"startOffset":2214,"endOffset":2417,"count":0}],"isBlockCoverage":true},{"functionName":"executor","ranges":[{"startOffset":2237,"endOffset":2415,"count":0}],"isBlockCoverage":false},{"functionName":"halt","ranges":[{"startOffset":2488,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"readStream","ranges":[{"startOffset":2850,"endOffset":6058,"count":6},{"startOffset":3162,"endOffset":3335,"count":0},{"startOffset":3667,"endOffset":3809,"count":0},{"startOffset":3892,"endOffset":3930,"count":0},{"startOffset":3968,"endOffset":3972,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":4193,"endOffset":4677,"count":6},{"startOffset":4320,"endOffset":4356,"count":12},{"startOffset":4414,"endOffset":4460,"count":0}],"isBlockCoverage":true},{"functionName":"invokeCallback","ranges":[{"startOffset":4502,"endOffset":4673,"count":6},{"startOffset":4567,"endOffset":4633,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":4681,"endOffset":4919,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":4923,"endOffset":5312,"count":6},{"startOffset":4967,"endOffset":4973,"count":0},{"startOffset":5049,"endOffset":5207,"count":0},{"startOffset":5270,"endOffset":5308,"count":0}],"isBlockCoverage":true},{"functionName":"onEnd","ranges":[{"startOffset":5316,"endOffset":5792,"count":6},{"startOffset":5357,"endOffset":5363,"count":0},{"startOffset":5377,"endOffset":5393,"count":0},{"startOffset":5443,"endOffset":5650,"count":0},{"startOffset":5734,"endOffset":5757,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":5796,"endOffset":6056,"count":6}],"isBlockCoverage":true}]},{"scriptId":"494","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5120,"count":1},{"startOffset":4754,"endOffset":4776,"count":0},{"startOffset":4924,"endOffset":5119,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":585,"endOffset":877,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":894,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"encodingExists","ranges":[{"startOffset":1501,"endOffset":1639,"count":0}],"isBlockCoverage":false},{"functionName":"getCodec","ranges":[{"startOffset":1879,"endOffset":3589,"count":6},{"startOffset":1943,"endOffset":1985,"count":1},{"startOffset":2269,"endOffset":3587,"count":7},{"startOffset":2350,"endOffset":2363,"count":5},{"startOffset":2363,"endOffset":2458,"count":2},{"startOffset":2458,"endOffset":2562,"count":0},{"startOffset":2576,"endOffset":2905,"count":1},{"startOffset":2692,"endOffset":2726,"count":2},{"startOffset":2919,"endOffset":3444,"count":1},{"startOffset":3021,"endOffset":3053,"count":0},{"startOffset":3458,"endOffset":3571,"count":0}],"isBlockCoverage":true},{"functionName":"iconv._canonicalizeEncoding","ranges":[{"startOffset":3621,"endOffset":3804,"count":6}],"isBlockCoverage":true},{"functionName":"getEncoder","ranges":[{"startOffset":3825,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":4122,"endOffset":4411,"count":6},{"startOffset":4295,"endOffset":4324,"count":0}],"isBlockCoverage":true}]},{"scriptId":"495","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/safer-buffer/safer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2110,"count":1},{"startOffset":163,"endOffset":294,"count":11},{"startOffset":200,"endOffset":208,"count":0},{"startOffset":236,"endOffset":255,"count":10},{"startOffset":257,"endOffset":265,"count":2},{"startOffset":265,"endOffset":294,"count":9},{"startOffset":346,"endOffset":487,"count":11},{"startOffset":383,"endOffset":391,"count":0},{"startOffset":420,"endOffset":448,"count":10},{"startOffset":450,"endOffset":458,"count":2},{"startOffset":458,"endOffset":487,"count":9},{"startOffset":583,"endOffset":1070,"count":0},{"startOffset":1090,"endOffset":1642,"count":0},{"startOffset":1673,"endOffset":1900,"count":0},{"startOffset":1924,"endOffset":2085,"count":0}],"isBlockCoverage":true},{"functionName":"Safer.from","ranges":[{"startOffset":600,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"Safer.alloc","ranges":[{"startOffset":1108,"endOffset":1640,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/lib/bom-handling.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1109,"count":1}],"isBlockCoverage":true},{"functionName":"PrependBOMWrapper","ranges":[{"startOffset":79,"endOffset":179,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.write","ranges":[{"startOffset":217,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.end","ranges":[{"startOffset":394,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper","ranges":[{"startOffset":560,"endOffset":691,"count":6}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.write","ranges":[{"startOffset":727,"endOffset":1028,"count":6},{"startOffset":817,"endOffset":828,"count":0},{"startOffset":858,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.end","ranges":[{"startOffset":1062,"endOffset":1107,"count":6}],"isBlockCoverage":true}]},{"scriptId":"497","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/lib/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3387,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":199,"endOffset":824,"count":1}],"isBlockCoverage":true},{"functionName":"encodeStream","ranges":[{"startOffset":277,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStream","ranges":[{"startOffset":441,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream","ranges":[{"startOffset":905,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._transform","ranges":[{"startOffset":1312,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._flush","ranges":[{"startOffset":1670,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream.collect","ranges":[{"startOffset":1886,"endOffset":2109,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream","ranges":[{"startOffset":2189,"endOffset":2394,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._transform","ranges":[{"startOffset":2570,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._flush","ranges":[{"startOffset":2942,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream.collect","ranges":[{"startOffset":3189,"endOffset":3385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/lib/extend-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8701,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":229,"endOffset":8700,"count":1},{"startOffset":564,"endOffset":602,"count":0}],"isBlockCoverage":true},{"functionName":"extendNodeEncodings","ranges":[{"startOffset":638,"endOffset":7624,"count":0}],"isBlockCoverage":false},{"functionName":"undoExtendNodeEncodings","ranges":[{"startOffset":7714,"endOffset":8698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/body-parser/lib/types/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1884,"count":1}],"isBlockCoverage":true},{"functionName":"raw","ranges":[{"startOffset":452,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":1774,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/serve-static/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4570,"count":1}],"isBlockCoverage":true},{"functionName":"serveStatic","ranges":[{"startOffset":621,"endOffset":2702,"count":1},{"startOffset":673,"endOffset":724,"count":0},{"startOffset":758,"endOffset":817,"count":0},{"startOffset":1093,"endOffset":1128,"count":0},{"startOffset":1130,"endOffset":1197,"count":0},{"startOffset":1411,"endOffset":1446,"count":0}],"isBlockCoverage":true},{"functionName":"serveStatic","ranges":[{"startOffset":1457,"endOffset":2700,"count":14},{"startOffset":1526,"endOffset":1550,"count":6},{"startOffset":1552,"endOffset":1784,"count":6},{"startOffset":1608,"endOffset":1784,"count":0},{"startOffset":1784,"endOffset":1969,"count":8},{"startOffset":1969,"endOffset":2011,"count":3},{"startOffset":2013,"endOffset":2036,"count":0},{"startOffset":2036,"endOffset":2222,"count":8},{"startOffset":2222,"endOffset":2268,"count":0},{"startOffset":2268,"endOffset":2699,"count":8}],"isBlockCoverage":true},{"functionName":"onFile","ranges":[{"startOffset":2358,"endOffset":2471,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":2525,"endOffset":2661,"count":8},{"startOffset":2599,"endOffset":2641,"count":0}],"isBlockCoverage":true},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":2776,"endOffset":2978,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":3088,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"createNotFoundDirectoryListener","ranges":[{"startOffset":3453,"endOffset":3556,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectDirectoryListener","ranges":[{"startOffset":3636,"endOffset":4569,"count":1}],"isBlockCoverage":true},{"functionName":"redirect","ranges":[{"startOffset":3691,"endOffset":4567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/body-parser/lib/types/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2285,"count":1}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":497,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":1930,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":2175,"endOffset":2284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/body-parser/lib/types/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5797,"count":1}],"isBlockCoverage":true},{"functionName":"urlencoded","ranges":[{"startOffset":717,"endOffset":2669,"count":1},{"startOffset":770,"endOffset":775,"count":0},{"startOffset":871,"endOffset":937,"count":0},{"startOffset":1109,"endOffset":1121,"count":0},{"startOffset":1244,"endOffset":1275,"count":0},{"startOffset":1277,"endOffset":1340,"count":0},{"startOffset":1442,"endOffset":1462,"count":0},{"startOffset":1590,"endOffset":1596,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1600,"endOffset":1686,"count":0}],"isBlockCoverage":false},{"functionName":"urlencodedParser","ranges":[{"startOffset":1697,"endOffset":2667,"count":14},{"startOffset":1761,"endOffset":1829,"count":6},{"startOffset":1829,"endOffset":1855,"count":8},{"startOffset":1855,"endOffset":1860,"count":0},{"startOffset":1928,"endOffset":1992,"count":8},{"startOffset":1992,"endOffset":2254,"count":0},{"startOffset":2284,"endOffset":2666,"count":0}],"isBlockCoverage":true},{"functionName":"extendedparser","ranges":[{"startOffset":2744,"endOffset":3638,"count":1},{"startOffset":2844,"endOffset":2868,"count":0},{"startOffset":2959,"endOffset":3039,"count":0}],"isBlockCoverage":true},{"functionName":"queryparse","ranges":[{"startOffset":3129,"endOffset":3636,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":3724,"endOffset":3877,"count":0}],"isBlockCoverage":false},{"functionName":"parameterCount","ranges":[{"startOffset":4019,"endOffset":4248,"count":0}],"isBlockCoverage":false},{"functionName":"parser","ranges":[{"startOffset":4367,"endOffset":4755,"count":1},{"startOffset":4444,"endOffset":4470,"count":0},{"startOffset":4599,"endOffset":4665,"count":0}],"isBlockCoverage":true},{"functionName":"simpleparser","ranges":[{"startOffset":4828,"endOffset":5595,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":5687,"endOffset":5796,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":5726,"endOffset":5794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express-handlebars/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":739,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":425,"endOffset":549,"count":1},{"startOffset":478,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"engine","ranges":[{"startOffset":575,"endOffset":680,"count":1}],"isBlockCoverage":true}]},{"scriptId":"504","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express-handlebars/dist/express-handlebars.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22337,"count":1}],"isBlockCoverage":true},{"functionName":"__assign","ranges":[{"startOffset":216,"endOffset":555,"count":2},{"startOffset":259,"endOffset":508,"count":0}],"isBlockCoverage":true},{"functionName":"__assign","ranges":[{"startOffset":262,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"__awaiter","ranges":[{"startOffset":601,"endOffset":1236,"count":88}],"isBlockCoverage":true},{"functionName":"adopt","ranges":[{"startOffset":652,"endOffset":760,"count":112},{"startOffset":710,"endOffset":757,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":718,"endOffset":756,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":797,"endOffset":1232,"count":88}],"isBlockCoverage":true},{"functionName":"fulfilled","ranges":[{"startOffset":834,"endOffset":925,"count":112},{"startOffset":899,"endOffset":923,"count":0}],"isBlockCoverage":true},{"functionName":"rejected","ranges":[{"startOffset":934,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"step","ranges":[{"startOffset":1037,"endOffset":1147,"count":200},{"startOffset":1073,"endOffset":1096,"count":88},{"startOffset":1097,"endOffset":1144,"count":112}],"isBlockCoverage":true},{"functionName":"__generator","ranges":[{"startOffset":1286,"endOffset":3027,"count":88}],"isBlockCoverage":true},{"functionName":"sent","ranges":[{"startOffset":1343,"endOffset":1396,"count":112},{"startOffset":1370,"endOffset":1381,"count":0}],"isBlockCoverage":true},{"functionName":"g.<computed>","ranges":[{"startOffset":1556,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"verb","ranges":[{"startOffset":1593,"endOffset":1659,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1619,"endOffset":1656,"count":200}],"isBlockCoverage":true},{"functionName":"step","ranges":[{"startOffset":1664,"endOffset":3025,"count":200},{"startOffset":1699,"endOffset":1754,"count":0},{"startOffset":1773,"endOffset":2929,"count":464},{"startOffset":1804,"endOffset":1905,"count":0},{"startOffset":1906,"endOffset":1937,"count":0},{"startOffset":1939,"endOffset":1948,"count":0},{"startOffset":1975,"endOffset":2001,"count":0},{"startOffset":2047,"endOffset":2054,"count":200},{"startOffset":2055,"endOffset":2077,"count":200},{"startOffset":2094,"endOffset":2150,"count":112},{"startOffset":2167,"endOffset":2216,"count":0},{"startOffset":2233,"endOffset":2282,"count":0},{"startOffset":2299,"endOffset":2808,"count":152},{"startOffset":2363,"endOffset":2381,"count":48},{"startOffset":2383,"endOffset":2414,"count":104},{"startOffset":2416,"endOffset":2436,"count":88},{"startOffset":2436,"endOffset":2473,"count":64},{"startOffset":2473,"endOffset":2514,"count":24},{"startOffset":2480,"endOffset":2513,"count":8},{"startOffset":2516,"endOffset":2543,"count":16},{"startOffset":2543,"endOffset":2580,"count":48},{"startOffset":2580,"endOffset":2597,"count":0},{"startOffset":2599,"endOffset":2633,"count":0},{"startOffset":2633,"endOffset":2677,"count":48},{"startOffset":2679,"endOffset":2721,"count":0},{"startOffset":2721,"endOffset":2752,"count":48},{"startOffset":2752,"endOffset":2764,"count":0},{"startOffset":2764,"endOffset":2808,"count":48},{"startOffset":2822,"endOffset":2873,"count":216},{"startOffset":2873,"endOffset":2906,"count":0},{"startOffset":2906,"endOffset":2907,"count":216},{"startOffset":2929,"endOffset":2953,"count":88},{"startOffset":2953,"endOffset":2965,"count":0},{"startOffset":2965,"endOffset":2995,"count":88},{"startOffset":2996,"endOffset":3004,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3742,"endOffset":22249,"count":1}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars","ranges":[{"startOffset":3760,"endOffset":4468,"count":1},{"startOffset":3828,"endOffset":3844,"count":0},{"startOffset":4204,"endOffset":4262,"count":0}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars.getPartials","ranges":[{"startOffset":4515,"endOffset":8840,"count":8},{"startOffset":4568,"endOffset":4585,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4633,"endOffset":8832,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4877,"endOffset":8820,"count":16},{"startOffset":4949,"endOffset":7765,"count":8},{"startOffset":5026,"endOffset":5108,"count":0},{"startOffset":5180,"endOffset":5198,"count":0},{"startOffset":7786,"endOffset":8788,"count":8},{"startOffset":8277,"endOffset":8285,"count":0},{"startOffset":8451,"endOffset":8705,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5295,"endOffset":7761,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5352,"endOffset":7757,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5522,"endOffset":7725,"count":16},{"startOffset":5634,"endOffset":7035,"count":8},{"startOffset":6022,"endOffset":6443,"count":0},{"startOffset":6610,"endOffset":6626,"count":0},{"startOffset":6628,"endOffset":6792,"count":0},{"startOffset":6908,"endOffset":6932,"count":0},{"startOffset":7076,"endOffset":7203,"count":8},{"startOffset":7244,"endOffset":7653,"count":8}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars.getTemplate","ranges":[{"startOffset":8888,"endOffset":10551,"count":16},{"startOffset":8951,"endOffset":8968,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9016,"endOffset":10543,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9147,"endOffset":10531,"count":32},{"startOffset":9219,"endOffset":9677,"count":16},{"startOffset":9338,"endOffset":9354,"count":0},{"startOffset":9408,"endOffset":9426,"count":0},{"startOffset":9493,"endOffset":9511,"count":0},{"startOffset":9551,"endOffset":9639,"count":0},{"startOffset":9698,"endOffset":10230,"count":16},{"startOffset":10251,"endOffset":10292,"count":16},{"startOffset":10313,"endOffset":10448,"count":0},{"startOffset":10469,"endOffset":10499,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9903,"endOffset":10165,"count":16},{"startOffset":9992,"endOffset":10019,"count":0}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars.getTemplates","ranges":[{"startOffset":10600,"endOffset":11743,"count":8},{"startOffset":10662,"endOffset":10679,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10727,"endOffset":11735,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10862,"endOffset":11723,"count":24},{"startOffset":10934,"endOffset":11075,"count":8},{"startOffset":11096,"endOffset":11374,"count":8},{"startOffset":11395,"endOffset":11691,"count":8},{"startOffset":11548,"endOffset":11638,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11222,"endOffset":11370,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressHandlebars.render","ranges":[{"startOffset":11786,"endOffset":13358,"count":16},{"startOffset":11858,"endOffset":11875,"count":0},{"startOffset":11908,"endOffset":11925,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11973,"endOffset":13350,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12111,"endOffset":13338,"count":32},{"startOffset":12183,"endOffset":12576,"count":16},{"startOffset":12243,"endOffset":12259,"count":0},{"startOffset":12476,"endOffset":12541,"count":0},{"startOffset":12597,"endOffset":13306,"count":16}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars.renderView","ranges":[{"startOffset":13405,"endOffset":17035,"count":8},{"startOffset":13478,"endOffset":13495,"count":0},{"startOffset":13529,"endOffset":13549,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13597,"endOffset":17027,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13779,"endOffset":17015,"count":40},{"startOffset":13851,"endOffset":15244,"count":8},{"startOffset":13918,"endOffset":14035,"count":0},{"startOffset":14158,"endOffset":14411,"count":0},{"startOffset":15265,"endOffset":15957,"count":8},{"startOffset":15661,"endOffset":15681,"count":0},{"startOffset":15978,"endOffset":16129,"count":8},{"startOffset":16150,"endOffset":16531,"count":8},{"startOffset":16325,"endOffset":16349,"count":0},{"startOffset":16552,"endOffset":16639,"count":8},{"startOffset":16660,"endOffset":16762,"count":8},{"startOffset":16783,"endOffset":16923,"count":0},{"startOffset":16944,"endOffset":16983,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14210,"endOffset":14383,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressHandlebars._compileTemplate","ranges":[{"startOffset":17173,"endOffset":17325,"count":16}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars._precompileTemplate","ranges":[{"startOffset":17381,"endOffset":17536,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressHandlebars._renderTemplate","ranges":[{"startOffset":17588,"endOffset":17783,"count":16},{"startOffset":17660,"endOffset":17677,"count":0},{"startOffset":17710,"endOffset":17727,"count":0}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars._getDir","ranges":[{"startOffset":17912,"endOffset":19555,"count":8},{"startOffset":17974,"endOffset":17991,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18039,"endOffset":19547,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18134,"endOffset":19535,"count":24},{"startOffset":18206,"endOffset":18490,"count":8},{"startOffset":18362,"endOffset":18379,"count":0},{"startOffset":18439,"endOffset":18490,"count":0},{"startOffset":18511,"endOffset":18563,"count":0},{"startOffset":18584,"endOffset":18686,"count":8},{"startOffset":18707,"endOffset":19224,"count":8},{"startOffset":19093,"endOffset":19173,"count":0},{"startOffset":19245,"endOffset":19297,"count":8},{"startOffset":19318,"endOffset":19452,"count":0},{"startOffset":19473,"endOffset":19503,"count":0}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars._getFile","ranges":[{"startOffset":19600,"endOffset":20861,"count":16},{"startOffset":19663,"endOffset":19680,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19728,"endOffset":20853,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19825,"endOffset":20841,"count":32},{"startOffset":19897,"endOffset":20302,"count":16},{"startOffset":20063,"endOffset":20079,"count":0},{"startOffset":20126,"endOffset":20144,"count":0},{"startOffset":20180,"endOffset":20264,"count":0},{"startOffset":20323,"endOffset":20540,"count":16},{"startOffset":20464,"endOffset":20473,"count":0},{"startOffset":20561,"endOffset":20602,"count":16},{"startOffset":20623,"endOffset":20758,"count":0},{"startOffset":20779,"endOffset":20809,"count":0}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars._getTemplateName","ranges":[{"startOffset":20914,"endOffset":21262,"count":8},{"startOffset":21181,"endOffset":21235,"count":0}],"isBlockCoverage":true},{"functionName":"ExpressHandlebars._resolveViewsPath","ranges":[{"startOffset":21316,"endOffset":21915,"count":8},{"startOffset":21413,"endOffset":21914,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21535,"endOffset":21575,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressHandlebars._resolveLayoutPath","ranges":[{"startOffset":21970,"endOffset":22216,"count":8},{"startOffset":22019,"endOffset":22055,"count":0},{"startOffset":22095,"endOffset":22146,"count":3},{"startOffset":22191,"endOffset":22196,"count":0}],"isBlockCoverage":true}]},{"scriptId":"505","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1}],"isBlockCoverage":true},{"functionName":"extension","ranges":[{"startOffset":432,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4900,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":164,"count":5},{"startOffset":135,"endOffset":140,"count":1},{"startOffset":141,"endOffset":161,"count":4}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1179,"endOffset":1822,"count":1}],"isBlockCoverage":true},{"functionName":"hb.compile","ranges":[{"startOffset":1237,"endOffset":1336,"count":16}],"isBlockCoverage":true},{"functionName":"hb.precompile","ranges":[{"startOffset":1356,"endOffset":1458,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars.runtime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4606,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":164,"count":3},{"startOffset":135,"endOffset":140,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":191,"endOffset":463,"count":3},{"startOffset":273,"endOffset":461,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1467,"endOffset":1844,"count":2}],"isBlockCoverage":true},{"functionName":"hb.template","ranges":[{"startOffset":1767,"endOffset":1827,"count":16}],"isBlockCoverage":true}]},{"scriptId":"508","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9636,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":122,"endOffset":219,"count":2},{"startOffset":190,"endOffset":195,"count":0}],"isBlockCoverage":true},{"functionName":"HandlebarsEnvironment","ranges":[{"startOffset":1162,"endOffset":1420,"count":2}],"isBlockCoverage":true},{"functionName":"registerHelper","ranges":[{"startOffset":1579,"endOffset":1871,"count":16},{"startOffset":1666,"endOffset":1823,"count":0}],"isBlockCoverage":true},{"functionName":"unregisterHelper","ranges":[{"startOffset":1893,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"registerPartial","ranges":[{"startOffset":1983,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"unregisterPartial","ranges":[{"startOffset":2367,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"registerDecorator","ranges":[{"startOffset":2461,"endOffset":2765,"count":2},{"startOffset":2551,"endOffset":2714,"count":0}],"isBlockCoverage":true},{"functionName":"unregisterDecorator","ranges":[{"startOffset":2790,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"resetLoggedPropertyAccesses","ranges":[{"startOffset":3053,"endOffset":3147,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10309,"count":1},{"startOffset":1168,"endOffset":1319,"count":0},{"startOffset":1441,"endOffset":1561,"count":0}],"isBlockCoverage":true},{"functionName":"escapeChar","ranges":[{"startOffset":473,"endOffset":523,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":525,"endOffset":790,"count":102},{"startOffset":611,"endOffset":773,"count":167},{"startOffset":647,"endOffset":769,"count":421}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":998,"endOffset":1066,"count":2}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":1206,"endOffset":1316,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":1444,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":1682,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"escapeExpression","ranges":[{"startOffset":1841,"endOffset":2509,"count":11},{"startOffset":1911,"endOffset":2404,"count":7},{"startOffset":2006,"endOffset":2043,"count":0},{"startOffset":2069,"endOffset":2093,"count":0},{"startOffset":2112,"endOffset":2145,"count":0},{"startOffset":2460,"endOffset":2508,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":2511,"endOffset":2689,"count":0}],"isBlockCoverage":false},{"functionName":"createFrame","ranges":[{"startOffset":2691,"endOffset":2799,"count":17}],"isBlockCoverage":true},{"functionName":"blockParams","ranges":[{"startOffset":2801,"endOffset":2876,"count":1}],"isBlockCoverage":true},{"functionName":"appendContextPath","ranges":[{"startOffset":2878,"endOffset":2979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/exception.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5950,"count":1}],"isBlockCoverage":true},{"functionName":"Exception","ranges":[{"startOffset":158,"endOffset":1558,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3909,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":171,"endOffset":268,"count":7},{"startOffset":239,"endOffset":244,"count":0}],"isBlockCoverage":true},{"functionName":"registerDefaultHelpers","ranges":[{"startOffset":1103,"endOffset":1436,"count":2}],"isBlockCoverage":true},{"functionName":"moveHelperToHooks","ranges":[{"startOffset":1438,"endOffset":1679,"count":32}],"isBlockCoverage":true}]},{"scriptId":"512","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3831,"count":1}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":99,"endOffset":946,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":169,"endOffset":942,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/each.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9894,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":164,"count":1},{"startOffset":135,"endOffset":140,"count":0}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":320,"endOffset":2785,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":376,"endOffset":2781,"count":1},{"startOffset":424,"endOffset":502,"count":0},{"startOffset":694,"endOffset":795,"count":0},{"startOffset":833,"endOffset":876,"count":0},{"startOffset":1662,"endOffset":2701,"count":0},{"startOffset":2726,"endOffset":2760,"count":0}],"isBlockCoverage":true},{"functionName":"execIteration","ranges":[{"startOffset":960,"endOffset":1404,"count":1},{"startOffset":1165,"endOffset":1226,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2103,"endOffset":2689,"count":0}],"isBlockCoverage":true}]},{"scriptId":"514","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2013,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":164,"count":1},{"startOffset":135,"endOffset":140,"count":0}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":285,"endOffset":688,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":350,"endOffset":684,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/if.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4458,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":164,"count":1},{"startOffset":135,"endOffset":140,"count":0}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":320,"endOffset":1437,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":374,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1129,"endOffset":1433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/log.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2507,"count":1}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":64,"endOffset":586,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":119,"endOffset":582,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":64,"endOffset":303,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":122,"endOffset":299,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/with.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3759,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":164,"count":1},{"startOffset":135,"endOffset":140,"count":0}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":320,"endOffset":1090,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":376,"endOffset":1086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/decorators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1000,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":130,"endOffset":227,"count":1},{"startOffset":198,"endOffset":203,"count":0}],"isBlockCoverage":true},{"functionName":"registerDefaultDecorators","ranges":[{"startOffset":355,"endOffset":446,"count":2}],"isBlockCoverage":true}]},{"scriptId":"520","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2696,"count":1}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":99,"endOffset":683,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":160,"endOffset":679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/logger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3883,"count":1}],"isBlockCoverage":true},{"functionName":"lookupLevel","ranges":[{"startOffset":238,"endOffset":522,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":579,"endOffset":1139,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8678,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":226,"endOffset":498,"count":1},{"startOffset":293,"endOffset":308,"count":0},{"startOffset":373,"endOffset":452,"count":4}],"isBlockCoverage":true},{"functionName":"createProtoAccessControl","ranges":[{"startOffset":699,"endOffset":1599,"count":16}],"isBlockCoverage":true},{"functionName":"resultIsAllowed","ranges":[{"startOffset":1601,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"checkWhiteList","ranges":[{"startOffset":1867,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"logUnexpecedPropertyAccessOnce","ranges":[{"startOffset":2266,"endOffset":2771,"count":0}],"isBlockCoverage":false},{"functionName":"resetLoggedProperties","ranges":[{"startOffset":2773,"endOffset":2924,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1783,"count":1}],"isBlockCoverage":true},{"functionName":"createNewLookupObject","ranges":[{"startOffset":435,"endOffset":685,"count":32},{"startOffset":560,"endOffset":602,"count":64}],"isBlockCoverage":true}]},{"scriptId":"524","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/safe-string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1164,"count":1}],"isBlockCoverage":true},{"functionName":"SafeString","ranges":[{"startOffset":81,"endOffset":136,"count":0}],"isBlockCoverage":false},{"functionName":"SafeString.toString.SafeString.toHTML","ranges":[{"startOffset":200,"endOffset":242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/runtime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44768,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":271,"endOffset":368,"count":1},{"startOffset":339,"endOffset":344,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":395,"endOffset":667,"count":1},{"startOffset":477,"endOffset":665,"count":0}],"isBlockCoverage":true},{"functionName":"checkRevision","ranges":[{"startOffset":1041,"endOffset":2126,"count":16},{"startOffset":1137,"endOffset":1141,"count":0},{"startOffset":1324,"endOffset":2124,"count":0}],"isBlockCoverage":true},{"functionName":"template","ranges":[{"startOffset":2128,"endOffset":9147,"count":16},{"startOffset":2208,"endOffset":2288,"count":0},{"startOffset":2332,"endOffset":2426,"count":0}],"isBlockCoverage":true},{"functionName":"invokePartialWrapper","ranges":[{"startOffset":2892,"endOffset":4118,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":4172,"endOffset":4419,"count":0}],"isBlockCoverage":false},{"functionName":"lookupProperty","ranges":[{"startOffset":4441,"endOffset":4855,"count":40},{"startOffset":4556,"endOffset":4588,"count":8},{"startOffset":4588,"endOffset":4691,"count":32},{"startOffset":4691,"endOffset":4854,"count":0}],"isBlockCoverage":true},{"functionName":"lookup","ranges":[{"startOffset":4869,"endOffset":5134,"count":0}],"isBlockCoverage":false},{"functionName":"lambda","ranges":[{"startOffset":5148,"endOffset":5267,"count":11},{"startOffset":5227,"endOffset":5250,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":5366,"endOffset":5485,"count":1}],"isBlockCoverage":true},{"functionName":"program","ranges":[{"startOffset":5519,"endOffset":5974,"count":1},{"startOffset":5676,"endOffset":5685,"count":0},{"startOffset":5686,"endOffset":5700,"count":0},{"startOffset":5701,"endOffset":5723,"count":0},{"startOffset":5833,"endOffset":5939,"count":0}],"isBlockCoverage":true},{"functionName":"data","ranges":[{"startOffset":5987,"endOffset":6114,"count":0}],"isBlockCoverage":false},{"functionName":"mergeIfNeeded","ranges":[{"startOffset":6135,"endOffset":6337,"count":0}],"isBlockCoverage":false},{"functionName":"ret","ranges":[{"startOffset":6508,"endOffset":7408,"count":16},{"startOffset":6602,"endOffset":6606,"count":0},{"startOffset":6853,"endOffset":6857,"count":0},{"startOffset":6903,"endOffset":7088,"count":0}],"isBlockCoverage":true},{"functionName":"main","ranges":[{"startOffset":7094,"endOffset":7261,"count":16}],"isBlockCoverage":true},{"functionName":"ret._setup","ranges":[{"startOffset":7446,"endOffset":8736,"count":16},{"startOffset":7711,"endOffset":7892,"count":0},{"startOffset":7958,"endOffset":8052,"count":0},{"startOffset":8459,"endOffset":8732,"count":0}],"isBlockCoverage":true},{"functionName":"ret._child","ranges":[{"startOffset":8754,"endOffset":9130,"count":0}],"isBlockCoverage":false},{"functionName":"wrapProgram","ranges":[{"startOffset":9149,"endOffset":9925,"count":1},{"startOffset":9841,"endOffset":9856,"count":0}],"isBlockCoverage":true},{"functionName":"prog","ranges":[{"startOffset":9240,"endOffset":9720,"count":1},{"startOffset":9335,"endOffset":9339,"count":0},{"startOffset":9404,"endOffset":9427,"count":0},{"startOffset":9428,"endOffset":9489,"count":0},{"startOffset":9491,"endOffset":9546,"count":0},{"startOffset":9634,"endOffset":9641,"count":0},{"startOffset":9655,"endOffset":9699,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePartial","ranges":[{"startOffset":10039,"endOffset":10464,"count":0}],"isBlockCoverage":false},{"functionName":"invokePartial","ranges":[{"startOffset":10466,"endOffset":11969,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":11971,"endOffset":12003,"count":0}],"isBlockCoverage":false},{"functionName":"initData","ranges":[{"startOffset":12005,"endOffset":12169,"count":16},{"startOffset":12118,"endOffset":12122,"count":0}],"isBlockCoverage":true},{"functionName":"executeDecorators","ranges":[{"startOffset":12171,"endOffset":12438,"count":17},{"startOffset":12268,"endOffset":12421,"count":0}],"isBlockCoverage":true},{"functionName":"wrapHelpersToPassLookupProperty","ranges":[{"startOffset":12440,"endOffset":12698,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12546,"endOffset":12694,"count":128}],"isBlockCoverage":true},{"functionName":"passLookupPropertyOption","ranges":[{"startOffset":12700,"endOffset":12950,"count":128}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12852,"endOffset":12946,"count":1}],"isBlockCoverage":true}]},{"scriptId":"526","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2192,"count":1}],"isBlockCoverage":true},{"functionName":"wrapHelper","ranges":[{"startOffset":76,"endOffset":642,"count":128},{"startOffset":162,"endOffset":397,"count":0}],"isBlockCoverage":true},{"functionName":"wrapper","ranges":[{"startOffset":414,"endOffset":621,"count":1}],"isBlockCoverage":true}]},{"scriptId":"527","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/no-conflict.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1532,"count":1}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":64,"endOffset":399,"count":2},{"startOffset":169,"endOffset":177,"count":0}],"isBlockCoverage":true},{"functionName":"Handlebars.noConflict","ranges":[{"startOffset":271,"endOffset":396,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3425,"count":1}],"isBlockCoverage":true},{"functionName":"helperExpression","ranges":[{"startOffset":300,"endOffset":510,"count":20},{"startOffset":415,"endOffset":448,"count":1},{"startOffset":490,"endOffset":502,"count":19}],"isBlockCoverage":true},{"functionName":"scopedId","ranges":[{"startOffset":527,"endOffset":614,"count":29}],"isBlockCoverage":true},{"functionName":"simpleId","ranges":[{"startOffset":723,"endOffset":838,"count":20},{"startOffset":786,"endOffset":816,"count":9},{"startOffset":817,"endOffset":831,"count":9}],"isBlockCoverage":true}]},{"scriptId":"529","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3926,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":147,"endOffset":419,"count":1},{"startOffset":229,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":446,"endOffset":543,"count":2},{"startOffset":514,"endOffset":519,"count":0}],"isBlockCoverage":true},{"functionName":"parseWithoutProcessing","ranges":[{"startOffset":964,"endOffset":1420,"count":16},{"startOffset":1105,"endOffset":1128,"count":0}],"isBlockCoverage":true},{"functionName":"yy.locInfo","ranges":[{"startOffset":1260,"endOffset":1355,"count":79}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1422,"endOffset":1596,"count":16}],"isBlockCoverage":true}]},{"scriptId":"530","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":205666,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":152,"endOffset":48683,"count":1}],"isBlockCoverage":true},{"functionName":"trace","ranges":[{"startOffset":192,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"anonymous","ranges":[{"startOffset":3569,"endOffset":13282,"count":344},{"startOffset":3721,"endOffset":3794,"count":16},{"startOffset":3767,"endOffset":3794,"count":0},{"startOffset":3811,"endOffset":3901,"count":17},{"startOffset":3918,"endOffset":3989,"count":19},{"startOffset":4006,"endOffset":4077,"count":1},{"startOffset":4094,"endOffset":4165,"count":0},{"startOffset":4182,"endOffset":4253,"count":0},{"startOffset":4270,"endOffset":4341,"count":0},{"startOffset":4358,"endOffset":4429,"count":37},{"startOffset":4446,"endOffset":4752,"count":0},{"startOffset":4769,"endOffset":5039,"count":37},{"startOffset":5056,"endOffset":5181,"count":0},{"startOffset":5198,"endOffset":5322,"count":0},{"startOffset":5339,"endOffset":5480,"count":1},{"startOffset":5497,"endOffset":5637,"count":0},{"startOffset":5654,"endOffset":5863,"count":1},{"startOffset":5880,"endOffset":6071,"count":0},{"startOffset":6088,"endOffset":6279,"count":0},{"startOffset":6296,"endOffset":6427,"count":0},{"startOffset":6444,"endOffset":6801,"count":0},{"startOffset":6818,"endOffset":6890,"count":0},{"startOffset":6907,"endOffset":7035,"count":1},{"startOffset":7052,"endOffset":7228,"count":11},{"startOffset":7245,"endOffset":7421,"count":8},{"startOffset":7438,"endOffset":7857,"count":0},{"startOffset":7874,"endOffset":8003,"count":0},{"startOffset":8020,"endOffset":8186,"count":0},{"startOffset":8203,"endOffset":8275,"count":1},{"startOffset":8292,"endOffset":8364,"count":0},{"startOffset":8381,"endOffset":8695,"count":0},{"startOffset":8712,"endOffset":8835,"count":0},{"startOffset":8852,"endOffset":9003,"count":0},{"startOffset":9020,"endOffset":9103,"count":0},{"startOffset":9120,"endOffset":9192,"count":22},{"startOffset":9209,"endOffset":9281,"count":0},{"startOffset":9298,"endOffset":9448,"count":0},{"startOffset":9465,"endOffset":9631,"count":0},{"startOffset":9648,"endOffset":9821,"count":0},{"startOffset":9838,"endOffset":9997,"count":0},{"startOffset":10014,"endOffset":10158,"count":0},{"startOffset":10175,"endOffset":10247,"count":0},{"startOffset":10264,"endOffset":10336,"count":0},{"startOffset":10353,"endOffset":10456,"count":0},{"startOffset":10473,"endOffset":10577,"count":22},{"startOffset":10594,"endOffset":10752,"count":11},{"startOffset":10769,"endOffset":10878,"count":22},{"startOffset":10895,"endOffset":10963,"count":17},{"startOffset":10980,"endOffset":11060,"count":57},{"startOffset":11077,"endOffset":11145,"count":0},{"startOffset":11162,"endOffset":11242,"count":0},{"startOffset":11259,"endOffset":11327,"count":0},{"startOffset":11344,"endOffset":11424,"count":0},{"startOffset":11441,"endOffset":11509,"count":1},{"startOffset":11526,"endOffset":11606,"count":1},{"startOffset":11623,"endOffset":11691,"count":0},{"startOffset":11708,"endOffset":11788,"count":0},{"startOffset":11805,"endOffset":11873,"count":0},{"startOffset":11890,"endOffset":11970,"count":0},{"startOffset":11987,"endOffset":12055,"count":11},{"startOffset":12072,"endOffset":12152,"count":0},{"startOffset":12169,"endOffset":12237,"count":8},{"startOffset":12254,"endOffset":12334,"count":0},{"startOffset":12351,"endOffset":12419,"count":0},{"startOffset":12436,"endOffset":12516,"count":0},{"startOffset":12533,"endOffset":12601,"count":0},{"startOffset":12618,"endOffset":12698,"count":0},{"startOffset":12715,"endOffset":12783,"count":0},{"startOffset":12800,"endOffset":12880,"count":0},{"startOffset":12897,"endOffset":12971,"count":0},{"startOffset":12988,"endOffset":13068,"count":0},{"startOffset":13085,"endOffset":13160,"count":0},{"startOffset":13177,"endOffset":13258,"count":0}],"isBlockCoverage":true},{"functionName":"parseError","ranges":[{"startOffset":28473,"endOffset":28549,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":28566,"endOffset":34281,"count":16},{"startOffset":29127,"endOffset":29150,"count":0},{"startOffset":29358,"endOffset":29395,"count":0},{"startOffset":30159,"endOffset":34246,"count":483},{"startOffset":30258,"endOffset":30334,"count":16},{"startOffset":30334,"endOffset":30563,"count":467},{"startOffset":30382,"endOffset":30413,"count":344},{"startOffset":30415,"endOffset":30478,"count":139},{"startOffset":30647,"endOffset":31667,"count":0},{"startOffset":31715,"endOffset":31735,"count":0},{"startOffset":31737,"endOffset":31877,"count":0},{"startOffset":31935,"endOffset":32714,"count":139},{"startOffset":32507,"endOffset":32520,"count":0},{"startOffset":32546,"endOffset":32683,"count":0},{"startOffset":32735,"endOffset":34149,"count":344},{"startOffset":32946,"endOffset":32950,"count":59},{"startOffset":33055,"endOffset":33059,"count":59},{"startOffset":33166,"endOffset":33321,"count":0},{"startOffset":33498,"endOffset":33563,"count":16},{"startOffset":33563,"endOffset":33597,"count":328},{"startOffset":33597,"endOffset":33818,"count":269},{"startOffset":33818,"endOffset":34149,"count":328},{"startOffset":34170,"endOffset":34214,"count":0},{"startOffset":34246,"endOffset":34280,"count":0}],"isBlockCoverage":true},{"functionName":"popStack","ranges":[{"startOffset":29408,"endOffset":29599,"count":0}],"isBlockCoverage":false},{"functionName":"lex","ranges":[{"startOffset":29612,"endOffset":29872,"count":139},{"startOffset":29697,"endOffset":29701,"count":0},{"startOffset":29750,"endOffset":29828,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34338,"endOffset":48525,"count":1}],"isBlockCoverage":true},{"functionName":"parseError","ranges":[{"startOffset":34406,"endOffset":34633,"count":0}],"isBlockCoverage":false},{"functionName":"setInput","ranges":[{"startOffset":34657,"endOffset":35184,"count":16},{"startOffset":35081,"endOffset":35108,"count":0}],"isBlockCoverage":true},{"functionName":"input","ranges":[{"startOffset":35205,"endOffset":35848,"count":0}],"isBlockCoverage":false},{"functionName":"unput","ranges":[{"startOffset":35869,"endOffset":37109,"count":0}],"isBlockCoverage":false},{"functionName":"more","ranges":[{"startOffset":37129,"endOffset":37224,"count":0}],"isBlockCoverage":false},{"functionName":"less","ranges":[{"startOffset":37244,"endOffset":37325,"count":0}],"isBlockCoverage":false},{"functionName":"pastInput","ranges":[{"startOffset":37350,"endOffset":37572,"count":0}],"isBlockCoverage":false},{"functionName":"upcomingInput","ranges":[{"startOffset":37601,"endOffset":37905,"count":0}],"isBlockCoverage":false},{"functionName":"showPosition","ranges":[{"startOffset":37933,"endOffset":38145,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":38165,"endOffset":40582,"count":140},{"startOffset":38214,"endOffset":38270,"count":0},{"startOffset":38305,"endOffset":38322,"count":16},{"startOffset":38621,"endOffset":38958,"count":2311},{"startOffset":38730,"endOffset":38782,"count":140},{"startOffset":38741,"endOffset":38781,"count":0},{"startOffset":38784,"endOffset":38940,"count":140},{"startOffset":39082,"endOffset":39112,"count":37},{"startOffset":39344,"endOffset":39428,"count":37},{"startOffset":39429,"endOffset":39472,"count":103},{"startOffset":39706,"endOffset":39816,"count":0},{"startOffset":40148,"endOffset":40162,"count":16},{"startOffset":40164,"endOffset":40182,"count":0},{"startOffset":40214,"endOffset":40227,"count":139},{"startOffset":40227,"endOffset":40239,"count":1},{"startOffset":40257,"endOffset":40568,"count":0}],"isBlockCoverage":true},{"functionName":"lex","ranges":[{"startOffset":40601,"endOffset":40828,"count":140},{"startOffset":40701,"endOffset":40750,"count":139},{"startOffset":40750,"endOffset":40814,"count":1}],"isBlockCoverage":true},{"functionName":"begin","ranges":[{"startOffset":40849,"endOffset":40943,"count":21}],"isBlockCoverage":true},{"functionName":"popState","ranges":[{"startOffset":40967,"endOffset":41052,"count":21}],"isBlockCoverage":true},{"functionName":"_currentRules","ranges":[{"startOffset":41081,"endOffset":41220,"count":140}],"isBlockCoverage":true},{"functionName":"topState","ranges":[{"startOffset":41244,"endOffset":41355,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":41380,"endOffset":41460,"count":0}],"isBlockCoverage":false},{"functionName":"anonymous","ranges":[{"startOffset":41522,"endOffset":46999,"count":140},{"startOffset":41838,"endOffset":42295,"count":21},{"startOffset":41903,"endOffset":42005,"count":0},{"startOffset":42046,"endOffset":42149,"count":0},{"startOffset":42267,"endOffset":42295,"count":0},{"startOffset":42312,"endOffset":42377,"count":16},{"startOffset":42350,"endOffset":42377,"count":0},{"startOffset":42394,"endOffset":42497,"count":0},{"startOffset":42514,"endOffset":42597,"count":0},{"startOffset":42614,"endOffset":43192,"count":0},{"startOffset":43209,"endOffset":43274,"count":0},{"startOffset":43291,"endOffset":43394,"count":0},{"startOffset":43411,"endOffset":43476,"count":0},{"startOffset":43493,"endOffset":43558,"count":0},{"startOffset":43575,"endOffset":43640,"count":0},{"startOffset":43657,"endOffset":43800,"count":0},{"startOffset":43817,"endOffset":43883,"count":0},{"startOffset":43900,"endOffset":43966,"count":0},{"startOffset":43983,"endOffset":44049,"count":1},{"startOffset":44022,"endOffset":44049,"count":0},{"startOffset":44066,"endOffset":44132,"count":1},{"startOffset":44105,"endOffset":44132,"count":0},{"startOffset":44149,"endOffset":44231,"count":0},{"startOffset":44248,"endOffset":44330,"count":0},{"startOffset":44347,"endOffset":44413,"count":0},{"startOffset":44430,"endOffset":44496,"count":0},{"startOffset":44513,"endOffset":44579,"count":8},{"startOffset":44552,"endOffset":44579,"count":0},{"startOffset":44596,"endOffset":44662,"count":0},{"startOffset":44679,"endOffset":44835,"count":0},{"startOffset":44852,"endOffset":44956,"count":0},{"startOffset":44973,"endOffset":45039,"count":11},{"startOffset":45012,"endOffset":45039,"count":0},{"startOffset":45056,"endOffset":45122,"count":0},{"startOffset":45139,"endOffset":45205,"count":0},{"startOffset":45222,"endOffset":45288,"count":0},{"startOffset":45305,"endOffset":45371,"count":11},{"startOffset":45344,"endOffset":45371,"count":0},{"startOffset":45388,"endOffset":45464,"count":1},{"startOffset":45481,"endOffset":45563,"count":8},{"startOffset":45536,"endOffset":45563,"count":0},{"startOffset":45580,"endOffset":45662,"count":13},{"startOffset":45635,"endOffset":45662,"count":0},{"startOffset":45679,"endOffset":45791,"count":0},{"startOffset":45808,"endOffset":45920,"count":0},{"startOffset":45937,"endOffset":46003,"count":0},{"startOffset":46020,"endOffset":46086,"count":0},{"startOffset":46103,"endOffset":46169,"count":0},{"startOffset":46186,"endOffset":46252,"count":0},{"startOffset":46269,"endOffset":46335,"count":0},{"startOffset":46352,"endOffset":46418,"count":0},{"startOffset":46435,"endOffset":46501,"count":0},{"startOffset":46518,"endOffset":46584,"count":0},{"startOffset":46601,"endOffset":46667,"count":33},{"startOffset":46640,"endOffset":46667,"count":0},{"startOffset":46684,"endOffset":46803,"count":0},{"startOffset":46820,"endOffset":46893,"count":0},{"startOffset":46910,"endOffset":46975,"count":16},{"startOffset":46948,"endOffset":46975,"count":0}],"isBlockCoverage":true},{"functionName":"strip","ranges":[{"startOffset":41602,"endOffset":41735,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":48560,"endOffset":48607,"count":1}],"isBlockCoverage":true}]},{"scriptId":"531","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23162,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":164,"count":1},{"startOffset":135,"endOffset":140,"count":0}],"isBlockCoverage":true},{"functionName":"WhitespaceControl","ranges":[{"startOffset":255,"endOffset":403,"count":16},{"startOffset":354,"endOffset":358,"count":0}],"isBlockCoverage":true},{"functionName":"WhitespaceControl.Program","ranges":[{"startOffset":501,"endOffset":2077,"count":17},{"startOffset":710,"endOffset":2056,"count":57},{"startOffset":794,"endOffset":817,"count":37},{"startOffset":817,"endOffset":991,"count":20},{"startOffset":991,"endOffset":1011,"count":1},{"startOffset":1061,"endOffset":1081,"count":1},{"startOffset":1133,"endOffset":1153,"count":0},{"startOffset":1154,"endOffset":1174,"count":0},{"startOffset":1198,"endOffset":1237,"count":0},{"startOffset":1237,"endOffset":1258,"count":20},{"startOffset":1258,"endOffset":1296,"count":0},{"startOffset":1296,"endOffset":1338,"count":20},{"startOffset":1340,"endOffset":1678,"count":0},{"startOffset":1678,"endOffset":1717,"count":20},{"startOffset":1719,"endOffset":1881,"count":1},{"startOffset":1754,"endOffset":1772,"count":0},{"startOffset":1881,"endOffset":1921,"count":20},{"startOffset":1923,"endOffset":2052,"count":1}],"isBlockCoverage":true},{"functionName":"WhitespaceControl.BlockStatement.WhitespaceControl.DecoratorBlock.WhitespaceControl.PartialBlockStatement","ranges":[{"startOffset":2222,"endOffset":3904,"count":1},{"startOffset":2405,"endOffset":2421,"count":0},{"startOffset":2545,"endOffset":2563,"count":0},{"startOffset":2565,"endOffset":2816,"count":0},{"startOffset":3222,"endOffset":3268,"count":0},{"startOffset":3285,"endOffset":3807,"count":0},{"startOffset":3840,"endOffset":3885,"count":0}],"isBlockCoverage":true},{"functionName":"WhitespaceControl.Decorator.WhitespaceControl.MustacheStatement","ranges":[{"startOffset":3995,"endOffset":4043,"count":19}],"isBlockCoverage":true},{"functionName":"WhitespaceControl.PartialStatement.WhitespaceControl.CommentStatement","ranges":[{"startOffset":4140,"endOffset":4309,"count":0}],"isBlockCoverage":false},{"functionName":"isPrevWhitespace","ranges":[{"startOffset":4312,"endOffset":4746,"count":21},{"startOffset":4380,"endOffset":4406,"count":1},{"startOffset":4586,"endOffset":4610,"count":0},{"startOffset":4674,"endOffset":4684,"count":13},{"startOffset":4685,"endOffset":4699,"count":9},{"startOffset":4700,"endOffset":4718,"count":12}],"isBlockCoverage":true},{"functionName":"isNextWhitespace","ranges":[{"startOffset":4747,"endOffset":5062,"count":21},{"startOffset":4815,"endOffset":4832,"count":1},{"startOffset":4902,"endOffset":4926,"count":0},{"startOffset":4990,"endOffset":5000,"count":13},{"startOffset":5001,"endOffset":5015,"count":9},{"startOffset":5016,"endOffset":5034,"count":12}],"isBlockCoverage":true},{"functionName":"omitRight","ranges":[{"startOffset":5356,"endOffset":5722,"count":2},{"startOffset":5427,"endOffset":5430,"count":1},{"startOffset":5431,"endOffset":5438,"count":1},{"startOffset":5534,"endOffset":5551,"count":0},{"startOffset":5634,"endOffset":5642,"count":0}],"isBlockCoverage":true},{"functionName":"omitLeft","ranges":[{"startOffset":6013,"endOffset":6506,"count":2},{"startOffset":6083,"endOffset":6100,"count":1},{"startOffset":6101,"endOffset":6108,"count":1},{"startOffset":6203,"endOffset":6220,"count":0},{"startOffset":6394,"endOffset":6402,"count":0}],"isBlockCoverage":true}]},{"scriptId":"532","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12631,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":164,"count":1},{"startOffset":135,"endOffset":140,"count":0}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":264,"endOffset":307,"count":2}],"isBlockCoverage":true},{"functionName":"acceptKey","ranges":[{"startOffset":465,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"acceptRequired","ranges":[{"startOffset":1093,"endOffset":1269,"count":0}],"isBlockCoverage":false},{"functionName":"acceptArray","ranges":[{"startOffset":1386,"endOffset":1595,"count":0}],"isBlockCoverage":false},{"functionName":"accept","ranges":[{"startOffset":1608,"endOffset":2132,"count":75},{"startOffset":1651,"endOffset":1672,"count":1},{"startOffset":1672,"endOffset":1746,"count":74},{"startOffset":1746,"endOffset":1833,"count":0},{"startOffset":1833,"endOffset":1857,"count":74},{"startOffset":1857,"endOffset":1906,"count":58},{"startOffset":1906,"endOffset":2042,"count":74},{"startOffset":2042,"endOffset":2048,"count":0},{"startOffset":2050,"endOffset":2075,"count":74},{"startOffset":2075,"endOffset":2128,"count":0}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":2146,"endOffset":2213,"count":0}],"isBlockCoverage":false},{"functionName":"PartialBlockStatement","ranges":[{"startOffset":2411,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"ContentStatement","ranges":[{"startOffset":2558,"endOffset":2601,"count":37}],"isBlockCoverage":true},{"functionName":"CommentStatement","ranges":[{"startOffset":2623,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"PathExpression","ranges":[{"startOffset":2725,"endOffset":2763,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":2783,"endOffset":2822,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteral","ranges":[{"startOffset":2841,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":2900,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"UndefinedLiteral","ranges":[{"startOffset":2960,"endOffset":3003,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":3020,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":3069,"endOffset":3128,"count":0}],"isBlockCoverage":false},{"functionName":"HashPair","ranges":[{"startOffset":3142,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"visitSubExpression","ranges":[{"startOffset":3216,"endOffset":3371,"count":0}],"isBlockCoverage":false},{"functionName":"visitBlock","ranges":[{"startOffset":3372,"endOffset":3515,"count":0}],"isBlockCoverage":false},{"functionName":"visitPartial","ranges":[{"startOffset":3516,"endOffset":3661,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19212,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":445,"endOffset":542,"count":1},{"startOffset":513,"endOffset":518,"count":0}],"isBlockCoverage":true},{"functionName":"validateClose","ranges":[{"startOffset":642,"endOffset":918,"count":1},{"startOffset":723,"endOffset":730,"count":0},{"startOffset":769,"endOffset":916,"count":0}],"isBlockCoverage":true},{"functionName":"SourceLocation","ranges":[{"startOffset":920,"endOffset":1154,"count":79}],"isBlockCoverage":true},{"functionName":"id","ranges":[{"startOffset":1156,"endOffset":1292,"count":33},{"startOffset":1207,"endOffset":1261,"count":0}],"isBlockCoverage":true},{"functionName":"stripFlags","ranges":[{"startOffset":1294,"endOffset":1430,"count":21}],"isBlockCoverage":true},{"functionName":"stripComment","ranges":[{"startOffset":1432,"endOffset":1539,"count":0}],"isBlockCoverage":false},{"functionName":"preparePath","ranges":[{"startOffset":1541,"endOffset":2429,"count":22},{"startOffset":1632,"endOffset":1637,"count":0},{"startOffset":1726,"endOffset":2295,"count":33},{"startOffset":1987,"endOffset":1992,"count":22},{"startOffset":2077,"endOffset":2256,"count":0}],"isBlockCoverage":true},{"functionName":"prepareMustache","ranges":[{"startOffset":2431,"endOffset":2886,"count":19},{"startOffset":2630,"endOffset":2651,"count":11},{"startOffset":2720,"endOffset":2733,"count":0}],"isBlockCoverage":true},{"functionName":"prepareRawBlock","ranges":[{"startOffset":2888,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"prepareBlock","ranges":[{"startOffset":3364,"endOffset":4460,"count":1},{"startOffset":3703,"endOffset":4029,"count":0},{"startOffset":4047,"endOffset":4123,"count":0},{"startOffset":4156,"endOffset":4174,"count":0}],"isBlockCoverage":true},{"functionName":"prepareProgram","ranges":[{"startOffset":4462,"endOffset":5054,"count":17}],"isBlockCoverage":true},{"functionName":"preparePartialBlock","ranges":[{"startOffset":5056,"endOffset":5386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":58116,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":283,"count":2},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"Compiler","ranges":[{"startOffset":514,"endOffset":536,"count":17}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":912,"endOffset":1597,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1623,"endOffset":2202,"count":17},{"startOffset":1892,"endOffset":1897,"count":16}],"isBlockCoverage":true},{"functionName":"compileProgram","ranges":[{"startOffset":2223,"endOffset":2603,"count":1}],"isBlockCoverage":true},{"functionName":"accept","ranges":[{"startOffset":2616,"endOffset":2915,"count":94},{"startOffset":2710,"endOffset":2793,"count":0}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":2929,"endOffset":3333,"count":17},{"startOffset":3121,"endOffset":3156,"count":57},{"startOffset":3278,"endOffset":3306,"count":0}],"isBlockCoverage":true},{"functionName":"BlockStatement","ranges":[{"startOffset":3354,"endOffset":4459,"count":1},{"startOffset":3567,"endOffset":3598,"count":0},{"startOffset":3727,"endOffset":4427,"count":0}],"isBlockCoverage":true},{"functionName":"DecoratorBlock","ranges":[{"startOffset":4480,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"PartialStatement","ranges":[{"startOffset":4831,"endOffset":5903,"count":0}],"isBlockCoverage":false},{"functionName":"PartialBlockStatement","ranges":[{"startOffset":5930,"endOffset":6021,"count":0}],"isBlockCoverage":false},{"functionName":"MustacheStatement","ranges":[{"startOffset":6045,"endOffset":6260,"count":19},{"startOffset":6144,"endOffset":6169,"count":11},{"startOffset":6171,"endOffset":6214,"count":11},{"startOffset":6214,"endOffset":6256,"count":8}],"isBlockCoverage":true},{"functionName":"Decorator","ranges":[{"startOffset":6275,"endOffset":6346,"count":0}],"isBlockCoverage":false},{"functionName":"ContentStatement","ranges":[{"startOffset":6369,"endOffset":6491,"count":37}],"isBlockCoverage":true},{"functionName":"CommentStatement","ranges":[{"startOffset":6514,"endOffset":6544,"count":0}],"isBlockCoverage":false},{"functionName":"SubExpression","ranges":[{"startOffset":6564,"endOffset":6857,"count":19},{"startOffset":6701,"endOffset":6739,"count":11},{"startOffset":6739,"endOffset":6853,"count":8},{"startOffset":6768,"endOffset":6806,"count":0}],"isBlockCoverage":true},{"functionName":"ambiguousSexpr","ranges":[{"startOffset":6877,"endOffset":7269,"count":8}],"isBlockCoverage":true},{"functionName":"simpleSexpr","ranges":[{"startOffset":7287,"endOffset":7436,"count":11}],"isBlockCoverage":true},{"functionName":"helperSexpr","ranges":[{"startOffset":7454,"endOffset":8107,"count":1},{"startOffset":7741,"endOffset":8103,"count":0}],"isBlockCoverage":true},{"functionName":"PathExpression","ranges":[{"startOffset":8128,"endOffset":8844,"count":20},{"startOffset":8423,"endOffset":8495,"count":0},{"startOffset":8512,"endOffset":8614,"count":0},{"startOffset":8635,"endOffset":8744,"count":0}],"isBlockCoverage":true},{"functionName":"StringLiteral","ranges":[{"startOffset":8864,"endOffset":8945,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteral","ranges":[{"startOffset":8965,"endOffset":9047,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":9068,"endOffset":9147,"count":0}],"isBlockCoverage":false},{"functionName":"UndefinedLiteral","ranges":[{"startOffset":9170,"endOffset":9248,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":9266,"endOffset":9334,"count":0}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":9345,"endOffset":9640,"count":0}],"isBlockCoverage":false},{"functionName":"opcode","ranges":[{"startOffset":9666,"endOffset":9817,"count":144}],"isBlockCoverage":true},{"functionName":"addDepth","ranges":[{"startOffset":9832,"endOffset":9928,"count":20},{"startOffset":9896,"endOffset":9927,"count":0}],"isBlockCoverage":true},{"functionName":"classifySexpr","ranges":[{"startOffset":9948,"endOffset":11104,"count":20},{"startOffset":10079,"endOffset":10125,"count":9},{"startOffset":10522,"endOffset":10533,"count":19},{"startOffset":10718,"endOffset":10730,"count":9},{"startOffset":10732,"endOffset":10959,"count":8},{"startOffset":10846,"endOffset":10880,"count":0},{"startOffset":10916,"endOffset":10953,"count":0},{"startOffset":10979,"endOffset":11009,"count":1},{"startOffset":11009,"endOffset":11100,"count":19},{"startOffset":11031,"endOffset":11064,"count":8},{"startOffset":11064,"endOffset":11100,"count":11}],"isBlockCoverage":true},{"functionName":"pushParams","ranges":[{"startOffset":11121,"endOffset":11246,"count":1}],"isBlockCoverage":true},{"functionName":"pushParam","ranges":[{"startOffset":11262,"endOffset":12538,"count":1},{"startOffset":11322,"endOffset":11333,"count":0},{"startOffset":11349,"endOffset":11354,"count":0},{"startOffset":11384,"endOffset":11832,"count":0},{"startOffset":11865,"endOffset":12504,"count":0}],"isBlockCoverage":true},{"functionName":"setupFullMustacheParams","ranges":[{"startOffset":12568,"endOffset":12921,"count":1},{"startOffset":12803,"endOffset":12841,"count":0}],"isBlockCoverage":true},{"functionName":"blockParamIndex","ranges":[{"startOffset":12943,"endOffset":13275,"count":29},{"startOffset":13061,"endOffset":13271,"count":34},{"startOffset":13150,"endOffset":13186,"count":0},{"startOffset":13210,"endOffset":13223,"count":0},{"startOffset":13225,"endOffset":13265,"count":0}],"isBlockCoverage":true},{"functionName":"precompile","ranges":[{"startOffset":13280,"endOffset":13852,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":13854,"endOffset":15185,"count":16},{"startOffset":13923,"endOffset":13936,"count":0},{"startOffset":13987,"endOffset":14014,"count":0},{"startOffset":14016,"endOffset":14146,"count":0},{"startOffset":14269,"endOffset":14304,"count":0}],"isBlockCoverage":true},{"functionName":"compileInput","ranges":[{"startOffset":14337,"endOffset":14610,"count":16}],"isBlockCoverage":true},{"functionName":"ret","ranges":[{"startOffset":14687,"endOffset":14841,"count":16}],"isBlockCoverage":true},{"functionName":"ret._setup","ranges":[{"startOffset":14857,"endOffset":14988,"count":0}],"isBlockCoverage":false},{"functionName":"ret._child","ranges":[{"startOffset":15005,"endOffset":15168,"count":0}],"isBlockCoverage":false},{"functionName":"argEquals","ranges":[{"startOffset":15187,"endOffset":15461,"count":0}],"isBlockCoverage":false},{"functionName":"transformLiteralToPath","ranges":[{"startOffset":15463,"endOffset":15870,"count":20},{"startOffset":15529,"endOffset":15868,"count":0}],"isBlockCoverage":true}]},{"scriptId":"535","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":121362,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":67,"endOffset":164,"count":2},{"startOffset":135,"endOffset":140,"count":0}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":422,"endOffset":471,"count":47}],"isBlockCoverage":true},{"functionName":"JavaScriptCompiler","ranges":[{"startOffset":473,"endOffset":505,"count":17}],"isBlockCoverage":true},{"functionName":"nameLookup","ranges":[{"startOffset":699,"endOffset":801,"count":48}],"isBlockCoverage":true},{"functionName":"depthedLookup","ranges":[{"startOffset":820,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"compilerInfo","ranges":[{"startOffset":962,"endOffset":1121,"count":16}],"isBlockCoverage":true},{"functionName":"appendToBuffer","ranges":[{"startOffset":1142,"endOffset":1836,"count":57},{"startOffset":1287,"endOffset":1319,"count":46},{"startOffset":1405,"endOffset":1451,"count":4},{"startOffset":1451,"endOffset":1832,"count":53},{"startOffset":1471,"endOffset":1762,"count":0}],"isBlockCoverage":true},{"functionName":"initializeBuffer","ranges":[{"startOffset":1859,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"internalNameLookup","ranges":[{"startOffset":1970,"endOffset":2135,"count":48}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":2189,"endOffset":6040,"count":17},{"startOffset":2537,"endOffset":2612,"count":16},{"startOffset":3282,"endOffset":3458,"count":144},{"startOffset":3386,"endOffset":3399,"count":17},{"startOffset":3697,"endOffset":3792,"count":0},{"startOffset":3830,"endOffset":4427,"count":0},{"startOffset":4551,"endOffset":6006,"count":16},{"startOffset":4664,"endOffset":4778,"count":0},{"startOffset":4951,"endOffset":5153,"count":2},{"startOffset":4978,"endOffset":5145,"count":1},{"startOffset":5041,"endOffset":5135,"count":0},{"startOffset":5194,"endOffset":5234,"count":0},{"startOffset":5328,"endOffset":5367,"count":0},{"startOffset":5399,"endOffset":5443,"count":0},{"startOffset":5475,"endOffset":5511,"count":0},{"startOffset":5534,"endOffset":5922,"count":0},{"startOffset":6006,"endOffset":6036,"count":1}],"isBlockCoverage":true},{"functionName":"preamble","ranges":[{"startOffset":6055,"endOffset":6361,"count":17}],"isBlockCoverage":true},{"functionName":"createFunctionContext","ranges":[{"startOffset":6389,"endOffset":8025,"count":17},{"startOffset":6603,"endOffset":6661,"count":13},{"startOffset":7384,"endOffset":7468,"count":13},{"startOffset":7591,"endOffset":7632,"count":0},{"startOffset":7657,"endOffset":7693,"count":0},{"startOffset":7920,"endOffset":8021,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7096,"endOffset":7337,"count":33},{"startOffset":7206,"endOffset":7331,"count":8}],"isBlockCoverage":true},{"functionName":"mergeSource","ranges":[{"startOffset":8042,"endOffset":9525,"count":17},{"startOffset":8934,"endOffset":9011,"count":13},{"startOffset":9011,"endOffset":9083,"count":4},{"startOffset":9034,"endOffset":9083,"count":0},{"startOffset":9089,"endOffset":9359,"count":0},{"startOffset":9386,"endOffset":9488,"count":13},{"startOffset":9467,"endOffset":9471,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8318,"endOffset":8885,"count":57},{"startOffset":8367,"endOffset":8518,"count":53},{"startOffset":8394,"endOffset":8437,"count":40},{"startOffset":8437,"endOffset":8484,"count":13},{"startOffset":8518,"endOffset":8879,"count":4},{"startOffset":8551,"endOffset":8778,"count":0},{"startOffset":8830,"endOffset":8871,"count":0}],"isBlockCoverage":true},{"functionName":"lookupPropertyFunctionVarDeclaration","ranges":[{"startOffset":9568,"endOffset":9893,"count":13}],"isBlockCoverage":true},{"functionName":"blockValue","ranges":[{"startOffset":10272,"endOffset":10621,"count":0}],"isBlockCoverage":false},{"functionName":"ambiguousBlockValue","ranges":[{"startOffset":10911,"endOffset":11435,"count":0}],"isBlockCoverage":false},{"functionName":"appendContent","ranges":[{"startOffset":11604,"endOffset":11832,"count":37},{"startOffset":11667,"endOffset":11721,"count":0}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":12124,"endOffset":12637,"count":9},{"startOffset":12343,"endOffset":12633,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12195,"endOffset":12273,"count":9}],"isBlockCoverage":true},{"functionName":"appendEscaped","ranges":[{"startOffset":12796,"endOffset":12943,"count":11}],"isBlockCoverage":true},{"functionName":"getContext","ranges":[{"startOffset":13155,"endOffset":13217,"count":28}],"isBlockCoverage":true},{"functionName":"pushContext","ranges":[{"startOffset":13394,"endOffset":13485,"count":20}],"isBlockCoverage":true},{"functionName":"lookupOnContext","ranges":[{"startOffset":13707,"endOffset":14167,"count":20},{"startOffset":13819,"endOffset":13839,"count":0},{"startOffset":13841,"endOffset":14065,"count":0}],"isBlockCoverage":true},{"functionName":"lookupBlockParam","ranges":[{"startOffset":14390,"endOffset":14596,"count":0}],"isBlockCoverage":false},{"functionName":"lookupData","ranges":[{"startOffset":14735,"endOffset":14979,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePath","ranges":[{"startOffset":14997,"endOffset":15891,"count":20},{"startOffset":15163,"endOffset":15265,"count":0},{"startOffset":15320,"endOffset":15887,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15386,"endOffset":15840,"count":31},{"startOffset":15723,"endOffset":15832,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePossibleLambda","ranges":[{"startOffset":16130,"endOffset":16275,"count":11}],"isBlockCoverage":true},{"functionName":"pushStringParam","ranges":[{"startOffset":16576,"endOffset":16940,"count":0}],"isBlockCoverage":false},{"functionName":"emptyHash","ranges":[{"startOffset":16956,"endOffset":17225,"count":9},{"startOffset":17011,"endOffset":17052,"count":0},{"startOffset":17080,"endOffset":17162,"count":0},{"startOffset":17199,"endOffset":17212,"count":0}],"isBlockCoverage":true},{"functionName":"pushHash","ranges":[{"startOffset":17239,"endOffset":17392,"count":0}],"isBlockCoverage":false},{"functionName":"popHash","ranges":[{"startOffset":17405,"endOffset":17754,"count":0}],"isBlockCoverage":false},{"functionName":"pushString","ranges":[{"startOffset":17928,"endOffset":18015,"count":0}],"isBlockCoverage":false},{"functionName":"pushLiteral","ranges":[{"startOffset":18252,"endOffset":18319,"count":0}],"isBlockCoverage":false},{"functionName":"pushProgram","ranges":[{"startOffset":18576,"endOffset":18745,"count":18},{"startOffset":18627,"endOffset":18693,"count":1},{"startOffset":18693,"endOffset":18741,"count":17}],"isBlockCoverage":true},{"functionName":"registerDecorator","ranges":[{"startOffset":19005,"endOffset":19324,"count":0}],"isBlockCoverage":false},{"functionName":"invokeHelper","ranges":[{"startOffset":19667,"endOffset":20380,"count":0}],"isBlockCoverage":false},{"functionName":"itemsSeparatedBy","ranges":[{"startOffset":20403,"endOffset":20610,"count":0}],"isBlockCoverage":false},{"functionName":"invokeKnownHelper","ranges":[{"startOffset":20895,"endOffset":21077,"count":1}],"isBlockCoverage":true},{"functionName":"invokeAmbiguous","ranges":[{"startOffset":21564,"endOffset":22310,"count":8},{"startOffset":22126,"endOffset":22154,"count":0}],"isBlockCoverage":true},{"functionName":"invokePartial","ranges":[{"startOffset":22575,"endOffset":23335,"count":0}],"isBlockCoverage":false},{"functionName":"assignToHash","ranges":[{"startOffset":23533,"endOffset":24051,"count":0}],"isBlockCoverage":false},{"functionName":"pushId","ranges":[{"startOffset":24064,"endOffset":24482,"count":0}],"isBlockCoverage":false},{"functionName":"compileChildren","ranges":[{"startOffset":24551,"endOffset":25871,"count":17},{"startOffset":24752,"endOffset":25867,"count":1},{"startOffset":25617,"endOffset":25861,"count":0}],"isBlockCoverage":true},{"functionName":"matchExistingProgram","ranges":[{"startOffset":25897,"endOffset":26165,"count":1},{"startOffset":26010,"endOffset":26161,"count":0}],"isBlockCoverage":true},{"functionName":"programExpression","ranges":[{"startOffset":26189,"endOffset":26574,"count":1},{"startOffset":26387,"endOffset":26435,"count":0},{"startOffset":26460,"endOffset":26503,"count":0}],"isBlockCoverage":true},{"functionName":"useRegister","ranges":[{"startOffset":26592,"endOffset":26736,"count":8}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":26747,"endOffset":26904,"count":127},{"startOffset":26805,"endOffset":26849,"count":80}],"isBlockCoverage":true},{"functionName":"pushStackLiteral","ranges":[{"startOffset":26927,"endOffset":26998,"count":47}],"isBlockCoverage":true},{"functionName":"pushSource","ranges":[{"startOffset":27015,"endOffset":27295,"count":37},{"startOffset":27252,"endOffset":27291,"count":20}],"isBlockCoverage":true},{"functionName":"replaceStack","ranges":[{"startOffset":27314,"endOffset":28319,"count":40},{"startOffset":27524,"endOffset":27601,"count":0},{"startOffset":27755,"endOffset":28122,"count":20},{"startOffset":28190,"endOffset":28220,"count":20},{"startOffset":28243,"endOffset":28274,"count":20}],"isBlockCoverage":true},{"functionName":"incrStack","ranges":[{"startOffset":28335,"endOffset":28524,"count":20},{"startOffset":28428,"endOffset":28488,"count":13}],"isBlockCoverage":true},{"functionName":"topStackName","ranges":[{"startOffset":28542,"endOffset":28608,"count":20}],"isBlockCoverage":true},{"functionName":"flushInline","ranges":[{"startOffset":28625,"endOffset":29083,"count":0}],"isBlockCoverage":false},{"functionName":"isInline","ranges":[{"startOffset":29097,"endOffset":29158,"count":196}],"isBlockCoverage":true},{"functionName":"popStack","ranges":[{"startOffset":29173,"endOffset":29616,"count":127},{"startOffset":29278,"endOffset":29297,"count":0},{"startOffset":29324,"endOffset":29350,"count":87},{"startOffset":29352,"endOffset":29384,"count":27},{"startOffset":29384,"endOffset":29612,"count":100},{"startOffset":29411,"endOffset":29587,"count":0}],"isBlockCoverage":true},{"functionName":"topStack","ranges":[{"startOffset":29631,"endOffset":29896,"count":20},{"startOffset":29704,"endOffset":29723,"count":0},{"startOffset":29828,"endOffset":29860,"count":0}],"isBlockCoverage":true},{"functionName":"contextName","ranges":[{"startOffset":29914,"endOffset":30077,"count":49},{"startOffset":29969,"endOffset":29979,"count":0},{"startOffset":29981,"endOffset":30028,"count":0}],"isBlockCoverage":true},{"functionName":"quotedString","ranges":[{"startOffset":30096,"endOffset":30170,"count":9}],"isBlockCoverage":true},{"functionName":"objectLiteral","ranges":[{"startOffset":30190,"endOffset":30266,"count":9}],"isBlockCoverage":true},{"functionName":"aliasable","ranges":[{"startOffset":30282,"endOffset":30540,"count":47},{"startOffset":30356,"endOffset":30409,"count":14},{"startOffset":30409,"endOffset":30539,"count":33}],"isBlockCoverage":true},{"functionName":"setupHelper","ranges":[{"startOffset":30558,"endOffset":31061,"count":9}],"isBlockCoverage":true},{"functionName":"setupParams","ranges":[{"startOffset":31079,"endOffset":32861,"count":9},{"startOffset":31290,"endOffset":31316,"count":0},{"startOffset":31424,"endOffset":31472,"count":0},{"startOffset":31500,"endOffset":31596,"count":0},{"startOffset":31804,"endOffset":31814,"count":8},{"startOffset":31816,"endOffset":31924,"count":1},{"startOffset":31845,"endOffset":31864,"count":0},{"startOffset":32123,"endOffset":32370,"count":1},{"startOffset":32207,"endOffset":32250,"count":0},{"startOffset":32280,"endOffset":32364,"count":0},{"startOffset":32392,"endOffset":32455,"count":0},{"startOffset":32480,"endOffset":32539,"count":0},{"startOffset":32567,"endOffset":32692,"count":0},{"startOffset":32787,"endOffset":32837,"count":0}],"isBlockCoverage":true},{"functionName":"setupHelperArgs","ranges":[{"startOffset":32883,"endOffset":33357,"count":9},{"startOffset":33140,"endOffset":33248,"count":0},{"startOffset":33318,"endOffset":33353,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33363,"endOffset":34067,"count":1},{"startOffset":34016,"endOffset":34065,"count":62}],"isBlockCoverage":true},{"functionName":"JavaScriptCompiler.isValidJavaScriptVariableName","ranges":[{"startOffset":34188,"endOffset":34301,"count":0}],"isBlockCoverage":false},{"functionName":"strictLookup","ranges":[{"startOffset":34304,"endOffset":34793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15857,"count":1},{"startOffset":197,"endOffset":211,"count":0},{"startOffset":481,"endOffset":495,"count":0},{"startOffset":604,"endOffset":1276,"count":0}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":621,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":801,"endOffset":933,"count":0}],"isBlockCoverage":false},{"functionName":"prepend","ranges":[{"startOffset":948,"endOffset":1094,"count":0}],"isBlockCoverage":false},{"functionName":"toStringWithSourceMap","ranges":[{"startOffset":1123,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1219,"endOffset":1269,"count":0}],"isBlockCoverage":false},{"functionName":"castChunk","ranges":[{"startOffset":1278,"endOffset":1671,"count":1166},{"startOffset":1349,"endOffset":1496,"count":283},{"startOffset":1424,"endOffset":1476,"count":1045},{"startOffset":1496,"endOffset":1653,"count":883},{"startOffset":1563,"endOffset":1653,"count":0},{"startOffset":1653,"endOffset":1670,"count":883}],"isBlockCoverage":true},{"functionName":"CodeGen","ranges":[{"startOffset":1673,"endOffset":1748,"count":34}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":1783,"endOffset":1839,"count":17}],"isBlockCoverage":true},{"functionName":"prepend","ranges":[{"startOffset":1852,"endOffset":1936,"count":13}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":1946,"endOffset":2024,"count":57}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":2036,"endOffset":2186,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2100,"endOffset":2161,"count":70}],"isBlockCoverage":true},{"functionName":"each","ranges":[{"startOffset":2197,"endOffset":2318,"count":34},{"startOffset":2279,"endOffset":2314,"count":127}],"isBlockCoverage":true},{"functionName":"empty","ranges":[{"startOffset":2330,"endOffset":2480,"count":35},{"startOffset":2384,"endOffset":2400,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":2490,"endOffset":2829,"count":1294},{"startOffset":2549,"endOffset":2578,"count":1172},{"startOffset":2579,"endOffset":2618,"count":326},{"startOffset":2602,"endOffset":2618,"count":0},{"startOffset":2619,"endOffset":2633,"count":968},{"startOffset":2673,"endOffset":2700,"count":223},{"startOffset":2700,"endOffset":2828,"count":1071}],"isBlockCoverage":true},{"functionName":"functionCall","ranges":[{"startOffset":2848,"endOffset":3005,"count":9},{"startOffset":2980,"endOffset":2985,"count":0}],"isBlockCoverage":true},{"functionName":"quotedString","ranges":[{"startOffset":3024,"endOffset":3272,"count":84}],"isBlockCoverage":true},{"functionName":"objectLiteral","ranges":[{"startOffset":3292,"endOffset":3697,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3424,"endOffset":3594,"count":38}],"isBlockCoverage":true},{"functionName":"generateList","ranges":[{"startOffset":3716,"endOffset":3952,"count":18},{"startOffset":3834,"endOffset":3931,"count":57},{"startOffset":3849,"endOffset":3880,"count":39}],"isBlockCoverage":true},{"functionName":"generateArray","ranges":[{"startOffset":3972,"endOffset":4108,"count":0}],"isBlockCoverage":false}]},{"scriptId":"537","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"538","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14356,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":3228,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":4246,"endOffset":5137,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":6124,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9271,"endOffset":10865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":11038,"endOffset":12997,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":13057,"endOffset":13526,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13608,"endOffset":14111,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":14218,"endOffset":14304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12938,"count":1},{"startOffset":6427,"endOffset":6440,"count":0},{"startOffset":6604,"endOffset":6619,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4734,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5859,"endOffset":5939,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5945,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":6273,"endOffset":6375,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6443,"endOffset":6550,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6622,"endOffset":7404,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7741,"endOffset":8377,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8830,"endOffset":9477,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9562,"endOffset":9817,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9947,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"parseSourceMapInput","ranges":[{"startOffset":10788,"endOffset":10881,"count":0}],"isBlockCoverage":false},{"functionName":"computeSourceURL","ranges":[{"startOffset":11047,"endOffset":12892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"542","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"544","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40562,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":805,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2628,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2970,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3188,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3567,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4634,"endOffset":5706,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6792,"endOffset":9416,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10950,"endOffset":13394,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer._findSourceIndex","ranges":[{"startOffset":13679,"endOffset":14207,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":14544,"endOffset":16555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16796,"endOffset":16855,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":16922,"endOffset":17098,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":17346,"endOffset":20551,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":20750,"endOffset":21569,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":21724,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":23769,"endOffset":25022,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":25195,"endOffset":25452,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":25678,"endOffset":27289,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":28401,"endOffset":29507,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":31455,"endOffset":32949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33343,"endOffset":33607,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":34426,"endOffset":35605,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":35780,"endOffset":35951,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":36179,"endOffset":36618,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":37381,"endOffset":38292,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":38543,"endOffset":40498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13808,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":1106},{"startOffset":1422,"endOffset":1428,"count":0},{"startOffset":1470,"endOffset":1476,"count":0},{"startOffset":1527,"endOffset":1536,"count":0},{"startOffset":1573,"endOffset":1580,"count":0},{"startOffset":1634,"endOffset":1652,"count":1071}],"isBlockCoverage":true},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6512,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6757,"endOffset":7182,"count":2514},{"startOffset":6820,"endOffset":6900,"count":353},{"startOffset":6900,"endOffset":7165,"count":2161},{"startOffset":6933,"endOffset":6962,"count":1027},{"startOffset":7027,"endOffset":7165,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6841,"endOffset":6888,"count":1255}],"isBlockCoverage":true},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7448,"endOffset":7865,"count":62},{"startOffset":7515,"endOffset":7606,"count":0},{"startOffset":7710,"endOffset":7848,"count":0}],"isBlockCoverage":true},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8168,"endOffset":8584,"count":1151},{"startOffset":8273,"endOffset":8582,"count":2268},{"startOffset":8334,"endOffset":8578,"count":1134}],"isBlockCoverage":true},{"functionName":"SourceNode_join","ranges":[{"startOffset":8763,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9399,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10120,"endOffset":10264,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10508,"endOffset":10922,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11111,"endOffset":11230,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11172,"endOffset":11212,"count":1134}],"isBlockCoverage":true},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11371,"endOffset":13772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/printer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18175,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":156,"endOffset":253,"count":1},{"startOffset":224,"endOffset":229,"count":0}],"isBlockCoverage":true},{"functionName":"print","ranges":[{"startOffset":344,"endOffset":408,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor","ranges":[{"startOffset":410,"endOffset":457,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.pad","ranges":[{"startOffset":542,"endOffset":690,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.Program","ranges":[{"startOffset":726,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.MustacheStatement","ranges":[{"startOffset":1249,"endOffset":1337,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.Decorator","ranges":[{"startOffset":1374,"endOffset":1472,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.BlockStatement.PrintVisitor.DecoratorBlock","ranges":[{"startOffset":1555,"endOffset":2155,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.PartialStatement","ranges":[{"startOffset":2200,"endOffset":2477,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.PartialBlockStatement","ranges":[{"startOffset":2526,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.ContentStatement","ranges":[{"startOffset":2976,"endOffset":3055,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.CommentStatement","ranges":[{"startOffset":3100,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.SubExpression","ranges":[{"startOffset":3217,"endOffset":3583,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.PathExpression","ranges":[{"startOffset":3626,"endOffset":3724,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.StringLiteral","ranges":[{"startOffset":3766,"endOffset":3822,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.NumberLiteral","ranges":[{"startOffset":3864,"endOffset":3926,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.BooleanLiteral","ranges":[{"startOffset":3969,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.UndefinedLiteral","ranges":[{"startOffset":4073,"endOffset":4110,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.NullLiteral","ranges":[{"startOffset":4150,"endOffset":4182,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.Hash","ranges":[{"startOffset":4215,"endOffset":4434,"count":0}],"isBlockCoverage":false},{"functionName":"PrintVisitor.HashPair","ranges":[{"startOffset":4470,"endOffset":4540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/graceful-fs/graceful-fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12164,"count":1},{"startOffset":529,"endOffset":624,"count":0},{"startOffset":859,"endOffset":1061,"count":0},{"startOffset":2292,"endOffset":2430,"count":0},{"startOffset":2590,"endOffset":2606,"count":0},{"startOffset":2608,"endOffset":2667,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":626,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"publishQueue","ranges":[{"startOffset":647,"endOffset":790,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":746,"endOffset":783,"count":1069}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":927,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1492,"endOffset":1899,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1518,"endOffset":1797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1930,"endOffset":2221,"count":1}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":1960,"endOffset":2107,"count":534}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2317,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":2669,"endOffset":9519,"count":1},{"startOffset":6244,"endOffset":6361,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":2948,"endOffset":3507,"count":16},{"startOffset":3033,"endOffset":3061,"count":0}],"isBlockCoverage":true},{"functionName":"go$readFile","ranges":[{"startOffset":3110,"endOffset":3503,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3204,"endOffset":3496,"count":16},{"startOffset":3237,"endOffset":3288,"count":0},{"startOffset":3300,"endOffset":3385,"count":0}],"isBlockCoverage":true},{"functionName":"writeFile","ranges":[{"startOffset":3572,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":4258,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":4939,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":5573,"endOffset":6195,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6779,"endOffset":6822,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6833,"endOffset":6878,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6984,"endOffset":7028,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7039,"endOffset":7085,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7247,"endOffset":7294,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7305,"endOffset":7354,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7500,"endOffset":7548,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7559,"endOffset":7609,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":7664,"endOffset":7884,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream$open","ranges":[{"startOffset":7888,"endOffset":8209,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8213,"endOffset":8438,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream$open","ranges":[{"startOffset":8442,"endOffset":8713,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":8717,"endOffset":8808,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":8812,"endOffset":8905,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":8950,"endOffset":9504,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":9521,"endOffset":9631,"count":0}],"isBlockCoverage":false},{"functionName":"resetQueue","ranges":[{"startOffset":9880,"endOffset":10348,"count":534},{"startOffset":9981,"endOffset":10271,"count":0}],"isBlockCoverage":true},{"functionName":"retry","ranges":[{"startOffset":10350,"endOffset":12163,"count":534},{"startOffset":10545,"endOffset":12161,"count":0}],"isBlockCoverage":true}]},{"scriptId":"550","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/graceful-fs/polyfills.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9771,"count":1},{"startOffset":259,"endOffset":272,"count":0}],"isBlockCoverage":true},{"functionName":"process.cwd","ranges":[{"startOffset":163,"endOffset":234,"count":10},{"startOffset":192,"endOffset":219,"count":1}],"isBlockCoverage":true},{"functionName":"process.chdir","ranges":[{"startOffset":416,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":577,"endOffset":9770,"count":1},{"startOffset":774,"endOffset":830,"count":0},{"startOffset":832,"endOffset":857,"count":0},{"startOffset":916,"endOffset":942,"count":0},{"startOffset":2095,"endOffset":2224,"count":0}],"isBlockCoverage":true},{"functionName":"fs.lchmod","ranges":[{"startOffset":1969,"endOffset":2037,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchmodSync","ranges":[{"startOffset":2058,"endOffset":2072,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchown","ranges":[{"startOffset":2113,"endOffset":2185,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchownSync","ranges":[{"startOffset":2206,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2870,"endOffset":3522,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2900,"endOffset":3521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3608,"endOffset":4339,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":3633,"endOffset":4174,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4368,"endOffset":4742,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4400,"endOffset":4741,"count":0}],"isBlockCoverage":false},{"functionName":"patchLchmod","ranges":[{"startOffset":4760,"endOffset":5928,"count":0}],"isBlockCoverage":false},{"functionName":"patchLutimes","ranges":[{"startOffset":5932,"endOffset":6958,"count":0}],"isBlockCoverage":false},{"functionName":"chmodFix","ranges":[{"startOffset":6962,"endOffset":7211,"count":3},{"startOffset":7004,"endOffset":7015,"count":1},{"startOffset":7015,"endOffset":7210,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7027,"endOffset":7207,"count":0}],"isBlockCoverage":false},{"functionName":"chmodFixSync","ranges":[{"startOffset":7215,"endOffset":7440,"count":3},{"startOffset":7261,"endOffset":7272,"count":1},{"startOffset":7272,"endOffset":7439,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7284,"endOffset":7436,"count":0}],"isBlockCoverage":false},{"functionName":"chownFix","ranges":[{"startOffset":7445,"endOffset":7702,"count":3},{"startOffset":7487,"endOffset":7498,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7510,"endOffset":7698,"count":0}],"isBlockCoverage":false},{"functionName":"chownFixSync","ranges":[{"startOffset":7706,"endOffset":7939,"count":3},{"startOffset":7752,"endOffset":7763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7775,"endOffset":7935,"count":0}],"isBlockCoverage":false},{"functionName":"statFix","ranges":[{"startOffset":7943,"endOffset":8566,"count":3},{"startOffset":7984,"endOffset":7995,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8096,"endOffset":8562,"count":0}],"isBlockCoverage":false},{"functionName":"statFixSync","ranges":[{"startOffset":8570,"endOffset":9007,"count":3},{"startOffset":8615,"endOffset":8626,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8727,"endOffset":9003,"count":0}],"isBlockCoverage":false},{"functionName":"chownErOk","ranges":[{"startOffset":9480,"endOffset":9768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"node:constants","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1754,"count":1}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/graceful-fs/legacy-streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2655,"count":1}],"isBlockCoverage":true},{"functionName":"legacy","ranges":[{"startOffset":64,"endOffset":2654,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/graceful-fs/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":496,"count":1},{"startOffset":81,"endOffset":125,"count":0}],"isBlockCoverage":true},{"functionName":"getPrototypeOf","ranges":[{"startOffset":84,"endOffset":125,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":127,"endOffset":495,"count":1},{"startOffset":201,"endOffset":211,"count":0},{"startOffset":291,"endOffset":333,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":377,"endOffset":477,"count":101}],"isBlockCoverage":true}]},{"scriptId":"554","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/cookie-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3397,"count":1}],"isBlockCoverage":true},{"functionName":"cookieParser","ranges":[{"startOffset":772,"endOffset":1536,"count":1},{"startOffset":838,"endOffset":862,"count":0},{"startOffset":888,"endOffset":898,"count":0}],"isBlockCoverage":true},{"functionName":"cookieParser","ranges":[{"startOffset":909,"endOffset":1534,"count":14},{"startOffset":971,"endOffset":998,"count":0},{"startOffset":1185,"endOffset":1322,"count":7},{"startOffset":1322,"endOffset":1448,"count":0},{"startOffset":1448,"endOffset":1533,"count":7}],"isBlockCoverage":true},{"functionName":"JSONCookie","ranges":[{"startOffset":1679,"endOffset":1883,"count":28},{"startOffset":1793,"endOffset":1881,"count":0}],"isBlockCoverage":true},{"functionName":"JSONCookies","ranges":[{"startOffset":1974,"endOffset":2216,"count":7},{"startOffset":2100,"endOffset":2200,"count":28},{"startOffset":2168,"endOffset":2196,"count":0}],"isBlockCoverage":true},{"functionName":"signedCookie","ranges":[{"startOffset":2410,"endOffset":2820,"count":0}],"isBlockCoverage":false},{"functionName":"signedCookies","ranges":[{"startOffset":3048,"endOffset":3396,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/cookie-parser/node_modules/cookie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4076,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":871,"endOffset":1623,"count":7},{"startOffset":933,"endOffset":996,"count":0},{"startOffset":1158,"endOffset":1606,"count":28},{"startOffset":1292,"endOffset":1315,"count":0},{"startOffset":1463,"endOffset":1500,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":2007,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"tryDecode","ranges":[{"startOffset":3972,"endOffset":4075,"count":28},{"startOffset":4042,"endOffset":4073,"count":0}],"isBlockCoverage":true}]},{"scriptId":"556","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"557","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/models.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1208,"count":1}],"isBlockCoverage":true}]},{"scriptId":"558","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6959,"count":1}],"isBlockCoverage":true},{"functionName":"internals.root","ranges":[{"startOffset":1245,"endOffset":2392,"count":1},{"startOffset":1391,"endOffset":1659,"count":12},{"startOffset":1879,"endOffset":1990,"count":17},{"startOffset":2112,"endOffset":2204,"count":3}],"isBlockCoverage":true},{"functionName":"root.<computed>","ranges":[{"startOffset":1414,"endOffset":1652,"count":16},{"startOffset":1468,"endOffset":1520,"count":3}],"isBlockCoverage":true},{"functionName":"root.<computed>","ranges":[{"startOffset":1904,"endOffset":1983,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":2525,"endOffset":2644,"count":0}],"isBlockCoverage":false},{"functionName":"attempt","ranges":[{"startOffset":2651,"endOffset":2779,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2786,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"checkPreferences","ranges":[{"startOffset":2945,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":3024,"endOffset":3112,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":3119,"endOffset":3609,"count":0}],"isBlockCoverage":false},{"functionName":"expression","ranges":[{"startOffset":3616,"endOffset":3682,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3689,"endOffset":4828,"count":0}],"isBlockCoverage":false},{"functionName":"in","ranges":[{"startOffset":4973,"endOffset":5025,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":5072,"endOffset":5129,"count":0}],"isBlockCoverage":false},{"functionName":"types","ranges":[{"startOffset":5136,"endOffset":5398,"count":0}],"isBlockCoverage":false},{"functionName":"internals.assert","ranges":[{"startOffset":5435,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"internals.generate","ranges":[{"startOffset":6219,"endOffset":6481,"count":16},{"startOffset":6369,"endOffset":6392,"count":3},{"startOffset":6394,"endOffset":6425,"count":13},{"startOffset":6425,"endOffset":6480,"count":3}],"isBlockCoverage":true},{"functionName":"internals.expandExtension","ranges":[{"startOffset":6513,"endOffset":6920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":306,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":97,"endOffset":304,"count":3298},{"startOffset":172,"endOffset":235,"count":0},{"startOffset":237,"endOffset":303,"count":0}],"isBlockCoverage":true}]},{"scriptId":"560","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":127,"endOffset":591,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":56,"endOffset":231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4164,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.clone","ranges":[{"startOffset":261,"endOffset":2835,"count":2851},{"startOffset":339,"endOffset":362,"count":1036},{"startOffset":364,"endOffset":392,"count":1883},{"startOffset":392,"endOffset":475,"count":968},{"startOffset":475,"endOffset":628,"count":48},{"startOffset":515,"endOffset":587,"count":0},{"startOffset":628,"endOffset":795,"count":920},{"startOffset":648,"endOffset":752,"count":849},{"startOffset":708,"endOffset":746,"count":86},{"startOffset":752,"endOffset":795,"count":71},{"startOffset":795,"endOffset":914,"count":882},{"startOffset":914,"endOffset":1002,"count":0},{"startOffset":1002,"endOffset":1038,"count":882},{"startOffset":1038,"endOffset":1085,"count":0},{"startOffset":1085,"endOffset":1122,"count":882},{"startOffset":1122,"endOffset":1161,"count":0},{"startOffset":1161,"endOffset":1271,"count":882},{"startOffset":1271,"endOffset":1298,"count":252},{"startOffset":1298,"endOffset":1314,"count":630},{"startOffset":1314,"endOffset":1418,"count":582},{"startOffset":1418,"endOffset":1453,"count":630},{"startOffset":1453,"endOffset":1558,"count":0},{"startOffset":1558,"endOffset":1714,"count":630},{"startOffset":1597,"endOffset":1714,"count":78},{"startOffset":1639,"endOffset":1708,"count":93},{"startOffset":1714,"endOffset":1787,"count":630},{"startOffset":1787,"endOffset":2813,"count":2702},{"startOffset":1822,"endOffset":1855,"count":0},{"startOffset":1895,"endOffset":1926,"count":174},{"startOffset":1928,"endOffset":2002,"count":114},{"startOffset":2002,"endOffset":2561,"count":2588},{"startOffset":2131,"endOffset":2164,"count":2558},{"startOffset":2166,"endOffset":2246,"count":30},{"startOffset":2246,"endOffset":2551,"count":2558},{"startOffset":2291,"endOffset":2368,"count":1538},{"startOffset":2368,"endOffset":2551,"count":1020},{"startOffset":2561,"endOffset":2807,"count":0},{"startOffset":2813,"endOffset":2834,"count":630}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":605,"endOffset":621,"count":33}],"isBlockCoverage":true},{"functionName":"internals.cloneWithShallow","ranges":[{"startOffset":2868,"endOffset":3285,"count":0}],"isBlockCoverage":false},{"functionName":"internals.base","ranges":[{"startOffset":3306,"endOffset":4162,"count":882},{"startOffset":3381,"endOffset":3591,"count":0},{"startOffset":3683,"endOffset":3711,"count":252},{"startOffset":3711,"endOffset":3748,"count":630},{"startOffset":3748,"endOffset":3901,"count":114},{"startOffset":3810,"endOffset":3871,"count":0},{"startOffset":3901,"endOffset":3952,"count":516},{"startOffset":3952,"endOffset":4126,"count":78},{"startOffset":4035,"endOffset":4096,"count":0},{"startOffset":4126,"endOffset":4161,"count":438}],"isBlockCoverage":true}]},{"scriptId":"563","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/reach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1881,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":94,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"internals.iterables","ranges":[{"startOffset":1743,"endOffset":1879,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1263,"count":1}],"isBlockCoverage":true},{"functionName":"exports.getInternalProto","ranges":[{"startOffset":735,"endOffset":1261,"count":882},{"startOffset":781,"endOffset":818,"count":114},{"startOffset":818,"endOffset":859,"count":768},{"startOffset":861,"endOffset":933,"count":0},{"startOffset":933,"endOffset":964,"count":768},{"startOffset":964,"endOffset":1000,"count":0},{"startOffset":1000,"endOffset":1033,"count":768},{"startOffset":1033,"endOffset":1070,"count":0},{"startOffset":1070,"endOffset":1102,"count":768},{"startOffset":1102,"endOffset":1139,"count":0},{"startOffset":1139,"endOffset":1240,"count":768},{"startOffset":1240,"endOffset":1258,"count":690}],"isBlockCoverage":true}]},{"scriptId":"565","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":205,"count":1}],"isBlockCoverage":true},{"functionName":"exports.keys","ranges":[{"startOffset":54,"endOffset":203,"count":630},{"startOffset":146,"endOffset":179,"count":0}],"isBlockCoverage":true}]},{"scriptId":"566","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2565,"count":1}],"isBlockCoverage":true},{"functionName":"provision","ranges":[{"startOffset":285,"endOffset":357,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Cache","ranges":[{"startOffset":430,"endOffset":873,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":879,"endOffset":931,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":937,"endOffset":1341,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1347,"endOffset":1509,"count":0}],"isBlockCoverage":false},{"functionName":"_compact","ranges":[{"startOffset":1515,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"internals.List","ranges":[{"startOffset":1705,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":1785,"endOffset":2051,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2057,"endOffset":2198,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":2204,"endOffset":2258,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":2264,"endOffset":2561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4963,"count":1}],"isBlockCoverage":true},{"functionName":"exports.assertOptions","ranges":[{"startOffset":1684,"endOffset":2009,"count":397}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1895,"endOffset":1919,"count":1337}],"isBlockCoverage":true},{"functionName":"exports.checkPreferences","ranges":[{"startOffset":2040,"endOffset":2262,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compare","ranges":[{"startOffset":2284,"endOffset":2510,"count":16},{"startOffset":2345,"endOffset":2370,"count":0},{"startOffset":2379,"endOffset":2402,"count":0},{"startOffset":2411,"endOffset":2434,"count":0},{"startOffset":2443,"endOffset":2468,"count":8},{"startOffset":2477,"endOffset":2502,"count":8}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":2532,"endOffset":2622,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isIsoDate","ranges":[{"startOffset":2646,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isNumber","ranges":[{"startOffset":2730,"endOffset":2806,"count":3}],"isBlockCoverage":true},{"functionName":"exports.isResolvable","ranges":[{"startOffset":2833,"endOffset":2967,"count":24},{"startOffset":2865,"endOffset":2894,"count":1},{"startOffset":2894,"endOffset":2964,"count":23}],"isBlockCoverage":true},{"functionName":"exports.isSchema","ranges":[{"startOffset":2990,"endOffset":3254,"count":129},{"startOffset":3048,"endOffset":3078,"count":111},{"startOffset":3094,"endOffset":3123,"count":77},{"startOffset":3123,"endOffset":3185,"count":52}],"isBlockCoverage":true},{"functionName":"exports.isValues","ranges":[{"startOffset":3277,"endOffset":3336,"count":0}],"isBlockCoverage":false},{"functionName":"exports.limit","ranges":[{"startOffset":3356,"endOffset":3431,"count":10}],"isBlockCoverage":true},{"functionName":"exports.preferences","ranges":[{"startOffset":3457,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"exports.tryWithPath","ranges":[{"startOffset":4065,"endOffset":4428,"count":26},{"startOffset":4142,"endOffset":4426,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validateArg","ranges":[{"startOffset":4454,"endOffset":4782,"count":10},{"startOffset":4536,"endOffset":4687,"count":0},{"startOffset":4717,"endOffset":4780,"count":0}],"isBlockCoverage":true},{"functionName":"exports.verifyFlat","ranges":[{"startOffset":4807,"endOffset":4961,"count":2}],"isBlockCoverage":true}]},{"scriptId":"568","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8034,"count":1}],"isBlockCoverage":true},{"functionName":"exports.schema","ranges":[{"startOffset":174,"endOffset":535,"count":13},{"startOffset":353,"endOffset":533,"count":0}],"isBlockCoverage":true},{"functionName":"internals.schema","ranges":[{"startOffset":558,"endOffset":1985,"count":13},{"startOffset":687,"endOffset":833,"count":0},{"startOffset":1066,"endOffset":1108,"count":0},{"startOffset":1148,"endOffset":1190,"count":0},{"startOffset":1312,"endOffset":1354,"count":0},{"startOffset":1419,"endOffset":1984,"count":0}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":853,"endOffset":1029,"count":0}],"isBlockCoverage":false},{"functionName":"exports.ref","ranges":[{"startOffset":2003,"endOffset":2087,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compile","ranges":[{"startOffset":2109,"endOffset":2936,"count":0}],"isBlockCoverage":false},{"functionName":"internals.walk","ranges":[{"startOffset":2957,"endOffset":3699,"count":0}],"isBlockCoverage":false},{"functionName":"internals.simple","ranges":[{"startOffset":3722,"endOffset":3828,"count":13}],"isBlockCoverage":true},{"functionName":"exports.when","ranges":[{"startOffset":3847,"endOffset":7720,"count":0}],"isBlockCoverage":false},{"functionName":"internals.condition","ranges":[{"startOffset":7746,"endOffset":8032,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10254,"count":1}],"isBlockCoverage":true},{"functionName":"exports.create","ranges":[{"startOffset":514,"endOffset":2152,"count":190},{"startOffset":759,"endOffset":796,"count":0},{"startOffset":1120,"endOffset":2034,"count":4},{"startOffset":1148,"endOffset":1365,"count":0},{"startOffset":1489,"endOffset":2028,"count":0},{"startOffset":2077,"endOffset":2081,"count":4},{"startOffset":2082,"endOffset":2104,"count":186},{"startOffset":2106,"endOffset":2113,"count":0}],"isBlockCoverage":true},{"functionName":"exports.in","ranges":[{"startOffset":2169,"endOffset":2260,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRef","ranges":[{"startOffset":2280,"endOffset":2351,"count":26},{"startOffset":2341,"endOffset":2348,"count":0}],"isBlockCoverage":true},{"functionName":"internals.Ref","ranges":[{"startOffset":2384,"endOffset":3677,"count":190},{"startOffset":2955,"endOffset":2994,"count":0},{"startOffset":3062,"endOffset":3091,"count":0},{"startOffset":3154,"endOffset":3172,"count":0},{"startOffset":3314,"endOffset":3344,"count":186},{"startOffset":3436,"endOffset":3489,"count":0},{"startOffset":3566,"endOffset":3598,"count":186},{"startOffset":3599,"endOffset":3605,"count":4}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3683,"endOffset":4476,"count":0}],"isBlockCoverage":false},{"functionName":"_resolve","ranges":[{"startOffset":4482,"endOffset":5281,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":5287,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"absolute","ranges":[{"startOffset":5341,"endOffset":5436,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":5442,"endOffset":5498,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":5504,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"updateDisplay","ranges":[{"startOffset":6247,"endOffset":7033,"count":190},{"startOffset":6304,"endOffset":6314,"count":186},{"startOffset":6315,"endOffset":6319,"count":4},{"startOffset":6356,"endOffset":6441,"count":186},{"startOffset":6441,"endOffset":6472,"count":4},{"startOffset":6472,"endOffset":6544,"count":0},{"startOffset":6544,"endOffset":6663,"count":4},{"startOffset":6663,"endOffset":7024,"count":0}],"isBlockCoverage":true},{"functionName":"exports.build","ranges":[{"startOffset":7109,"endOffset":7328,"count":0}],"isBlockCoverage":false},{"functionName":"internals.context","ranges":[{"startOffset":7352,"endOffset":8163,"count":190},{"startOffset":7493,"endOffset":7508,"count":0},{"startOffset":7584,"endOffset":7667,"count":0},{"startOffset":7724,"endOffset":7738,"count":0},{"startOffset":7810,"endOffset":7890,"count":186},{"startOffset":7890,"endOffset":7944,"count":4},{"startOffset":7945,"endOffset":7958,"count":0},{"startOffset":7991,"endOffset":8026,"count":4},{"startOffset":8028,"endOffset":8119,"count":0},{"startOffset":8125,"endOffset":8162,"count":4}],"isBlockCoverage":true},{"functionName":"internals.ancestor","ranges":[{"startOffset":8188,"endOffset":8621,"count":0}],"isBlockCoverage":false},{"functionName":"exports.Manager","ranges":[{"startOffset":8704,"endOffset":8834,"count":49}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":8840,"endOffset":9917,"count":26},{"startOffset":8889,"endOffset":8920,"count":0},{"startOffset":8979,"endOffset":8987,"count":0},{"startOffset":9043,"endOffset":9173,"count":0},{"startOffset":9231,"endOffset":9489,"count":13},{"startOffset":9283,"endOffset":9458,"count":0},{"startOffset":9489,"endOffset":9547,"count":13},{"startOffset":9547,"endOffset":9585,"count":0},{"startOffset":9586,"endOffset":9630,"count":0},{"startOffset":9632,"endOffset":9731,"count":0},{"startOffset":9731,"endOffset":9782,"count":13},{"startOffset":9782,"endOffset":9806,"count":1},{"startOffset":9850,"endOffset":9911,"count":0}],"isBlockCoverage":true},{"functionName":"get length","ranges":[{"startOffset":9923,"endOffset":9977,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":9983,"endOffset":10102,"count":48}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":10108,"endOffset":10148,"count":3}],"isBlockCoverage":true},{"functionName":"roots","ranges":[{"startOffset":10154,"endOffset":10250,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10197,"endOffset":10219,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10225,"endOffset":10242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6064,"count":1}],"isBlockCoverage":true},{"functionName":"exports.Report","ranges":[{"startOffset":187,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"_setTemplate","ranges":[{"startOffset":997,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1309,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"_template","ranges":[{"startOffset":2193,"endOffset":2325,"count":0}],"isBlockCoverage":false},{"functionName":"exports.path","ranges":[{"startOffset":2346,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"exports.template","ranges":[{"startOffset":2805,"endOffset":3472,"count":0}],"isBlockCoverage":false},{"functionName":"exports.label","ranges":[{"startOffset":3492,"endOffset":4066,"count":0}],"isBlockCoverage":false},{"functionName":"exports.process","ranges":[{"startOffset":4088,"endOffset":4623,"count":6},{"startOffset":4171,"endOffset":4622,"count":0}],"isBlockCoverage":true},{"functionName":"exports.details","ranges":[{"startOffset":4645,"endOffset":5602,"count":0}],"isBlockCoverage":false},{"functionName":"exports.ValidationError","ranges":[{"startOffset":5659,"endOffset":5798,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":5811,"endOffset":5887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/annotate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5217,"count":1}],"isBlockCoverage":true},{"functionName":"exports.error","ranges":[{"startOffset":181,"endOffset":2763,"count":0}],"isBlockCoverage":false},{"functionName":"internals.safeStringify","ranges":[{"startOffset":2829,"endOffset":2920,"count":0}],"isBlockCoverage":false},{"functionName":"internals.serializer","ranges":[{"startOffset":2947,"endOffset":5215,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/template.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10369,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.Template","ranges":[{"startOffset":757,"endOffset":1170,"count":114}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":1176,"endOffset":2860,"count":114},{"startOffset":1306,"endOffset":1337,"count":3},{"startOffset":1337,"endOffset":1656,"count":111},{"startOffset":1656,"endOffset":1701,"count":0},{"startOffset":1701,"endOffset":1737,"count":111},{"startOffset":1737,"endOffset":2717,"count":186},{"startOffset":1810,"endOffset":1815,"count":13},{"startOffset":1816,"endOffset":1822,"count":173},{"startOffset":1993,"endOffset":2148,"count":0},{"startOffset":2192,"endOffset":2195,"count":13},{"startOffset":2196,"endOffset":2199,"count":173},{"startOffset":2281,"endOffset":2342,"count":20},{"startOffset":2636,"endOffset":2707,"count":148},{"startOffset":2717,"endOffset":2738,"count":111},{"startOffset":2738,"endOffset":2817,"count":0},{"startOffset":2817,"endOffset":2859,"count":111}],"isBlockCoverage":true},{"functionName":"date","ranges":[{"startOffset":2873,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":2971,"endOffset":3261,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":3274,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamic","ranges":[{"startOffset":3368,"endOffset":3421,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplate","ranges":[{"startOffset":3434,"endOffset":3534,"count":138},{"startOffset":3520,"endOffset":3527,"count":0}],"isBlockCoverage":true},{"functionName":"refs","ranges":[{"startOffset":3540,"endOffset":3818,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":3824,"endOffset":4116,"count":0}],"isBlockCoverage":false},{"functionName":"_part","ranges":[{"startOffset":4122,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":4282,"endOffset":5160,"count":0}],"isBlockCoverage":false},{"functionName":"_ref","ranges":[{"startOffset":5166,"endOffset":6101,"count":186},{"startOffset":5594,"endOffset":5737,"count":0},{"startOffset":5767,"endOffset":6055,"count":180},{"startOffset":5919,"endOffset":5965,"count":160},{"startOffset":5982,"endOffset":6055,"count":0},{"startOffset":6055,"endOffset":6100,"count":6}],"isBlockCoverage":true},{"functionName":"reference","ranges":[{"startOffset":5252,"endOffset":5425,"count":190}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5378,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":6107,"endOffset":6154,"count":0}],"isBlockCoverage":false},{"functionName":"internals.encode","ranges":[{"startOffset":6357,"endOffset":6621,"count":111}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6425,"endOffset":6505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6536,"endOffset":6617,"count":0}],"isBlockCoverage":false},{"functionName":"internals.decode","ranges":[{"startOffset":6644,"endOffset":6751,"count":334}],"isBlockCoverage":true},{"functionName":"internals.split","ranges":[{"startOffset":6773,"endOffset":7300,"count":111},{"startOffset":6883,"endOffset":7254,"count":5562},{"startOffset":6944,"endOffset":7194,"count":186},{"startOffset":7014,"endOffset":7054,"count":359},{"startOffset":7056,"endOffset":7122,"count":173},{"startOffset":7194,"endOffset":7248,"count":5376}],"isBlockCoverage":true},{"functionName":"internals.wrap","ranges":[{"startOffset":7321,"endOffset":7514,"count":0}],"isBlockCoverage":false},{"functionName":"internals.stringify","ranges":[{"startOffset":7540,"endOffset":8911,"count":0}],"isBlockCoverage":false},{"functionName":"if","ranges":[{"startOffset":9121,"endOffset":9205,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":9212,"endOffset":9520,"count":0}],"isBlockCoverage":false},{"functionName":"msg","ranges":[{"startOffset":9527,"endOffset":9976,"count":0}],"isBlockCoverage":false},{"functionName":"number","ranges":[{"startOffset":9983,"endOffset":10365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/escapeHtml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":56,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"internals.escapeHtmlChar","ranges":[{"startOffset":464,"endOffset":787,"count":0}],"isBlockCoverage":false},{"functionName":"internals.isSafe","ranges":[{"startOffset":810,"endOffset":905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1167,"endOffset":1757,"count":1},{"startOffset":1239,"endOffset":1737,"count":91},{"startOffset":1264,"endOffset":1325,"count":65},{"startOffset":1314,"endOffset":1324,"count":32},{"startOffset":1326,"endOffset":1376,"count":39},{"startOffset":1365,"endOffset":1375,"count":23},{"startOffset":1377,"endOffset":1415,"count":29},{"startOffset":1416,"endOffset":1468,"count":28},{"startOffset":1469,"endOffset":1517,"count":27},{"startOffset":1518,"endOffset":1566,"count":26},{"startOffset":1567,"endOffset":1615,"count":25},{"startOffset":1616,"endOffset":1664,"count":24},{"startOffset":1666,"endOffset":1731,"count":68}],"isBlockCoverage":true}]},{"scriptId":"574","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@sideway/formula/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12970,"count":1}],"isBlockCoverage":true},{"functionName":"exports.Parser","ranges":[{"startOffset":659,"endOffset":1404,"count":203},{"startOffset":737,"endOffset":769,"count":186},{"startOffset":771,"endOffset":1161,"count":186},{"startOffset":828,"endOffset":1151,"count":1302},{"startOffset":924,"endOffset":1002,"count":1116},{"startOffset":1004,"endOffset":1137,"count":0},{"startOffset":1215,"endOffset":1224,"count":17},{"startOffset":1225,"endOffset":1311,"count":186}],"isBlockCoverage":true},{"functionName":"_parse","ranges":[{"startOffset":1410,"endOffset":7817,"count":203},{"startOffset":4232,"endOffset":5508,"count":1738},{"startOffset":4259,"endOffset":4470,"count":99},{"startOffset":4296,"endOffset":4381,"count":17},{"startOffset":4381,"endOffset":4456,"count":82},{"startOffset":4470,"endOffset":5498,"count":1639},{"startOffset":4505,"endOffset":4989,"count":289},{"startOffset":4538,"endOffset":4626,"count":1},{"startOffset":4626,"endOffset":4975,"count":288},{"startOffset":4663,"endOffset":4900,"count":8},{"startOffset":4738,"endOffset":4795,"count":7},{"startOffset":4795,"endOffset":4882,"count":1},{"startOffset":4900,"endOffset":4975,"count":280},{"startOffset":4989,"endOffset":5498,"count":1350},{"startOffset":5036,"endOffset":5100,"count":17},{"startOffset":5100,"endOffset":5498,"count":1333},{"startOffset":5133,"endOffset":5204,"count":7},{"startOffset":5204,"endOffset":5498,"count":1326},{"startOffset":5268,"endOffset":5362,"count":18},{"startOffset":5362,"endOffset":5498,"count":1308},{"startOffset":5395,"endOffset":5440,"count":1276},{"startOffset":5440,"endOffset":5498,"count":32},{"startOffset":5977,"endOffset":6632,"count":225},{"startOffset":6021,"endOffset":6470,"count":11},{"startOffset":6091,"endOffset":6140,"count":0},{"startOffset":6173,"endOffset":6281,"count":0},{"startOffset":6346,"endOffset":6456,"count":0},{"startOffset":6470,"endOffset":6587,"count":214},{"startOffset":6502,"endOffset":6587,"count":0},{"startOffset":6657,"endOffset":6743,"count":0},{"startOffset":6809,"endOffset":6884,"count":194},{"startOffset":6886,"endOffset":7012,"count":189},{"startOffset":6953,"endOffset":6966,"count":181},{"startOffset":6967,"endOffset":6976,"count":8}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":1559,"endOffset":4197,"count":302},{"startOffset":1602,"endOffset":1689,"count":0},{"startOffset":1729,"endOffset":1754,"count":89},{"startOffset":1755,"endOffset":1761,"count":213},{"startOffset":1789,"endOffset":1816,"count":285},{"startOffset":1817,"endOffset":1842,"count":64},{"startOffset":1844,"endOffset":1884,"count":64},{"startOffset":1884,"endOffset":1907,"count":238},{"startOffset":1907,"endOffset":1951,"count":35},{"startOffset":1952,"endOffset":1984,"count":13},{"startOffset":1986,"endOffset":2239,"count":6},{"startOffset":2239,"endOffset":2272,"count":232},{"startOffset":2272,"endOffset":2494,"count":1},{"startOffset":2494,"endOffset":4160,"count":231},{"startOffset":2525,"endOffset":2908,"count":17},{"startOffset":2564,"endOffset":2786,"count":4},{"startOffset":2786,"endOffset":2908,"count":13},{"startOffset":2908,"endOffset":4160,"count":214},{"startOffset":2978,"endOffset":3400,"count":18},{"startOffset":3090,"endOffset":3163,"count":7},{"startOffset":3165,"endOffset":3275,"count":7},{"startOffset":3275,"endOffset":3386,"count":11},{"startOffset":3400,"endOffset":4160,"count":196},{"startOffset":3457,"endOffset":3598,"count":4},{"startOffset":3598,"endOffset":4160,"count":192},{"startOffset":3668,"endOffset":3811,"count":0},{"startOffset":3976,"endOffset":4078,"count":0},{"startOffset":4160,"endOffset":4196,"count":228}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5613,"endOffset":5875,"count":225},{"startOffset":5670,"endOffset":5707,"count":11},{"startOffset":5708,"endOffset":5764,"count":0},{"startOffset":5811,"endOffset":5874,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7072,"endOffset":7809,"count":225},{"startOffset":7153,"endOffset":7259,"count":11},{"startOffset":7225,"endOffset":7231,"count":0},{"startOffset":7259,"endOffset":7350,"count":214},{"startOffset":7350,"endOffset":7400,"count":24},{"startOffset":7400,"endOffset":7467,"count":190},{"startOffset":7467,"endOffset":7525,"count":0},{"startOffset":7527,"endOffset":7628,"count":0},{"startOffset":7628,"endOffset":7746,"count":190},{"startOffset":7746,"endOffset":7808,"count":0}],"isBlockCoverage":true},{"functionName":"_subFormula","ranges":[{"startOffset":7823,"endOffset":9700,"count":6},{"startOffset":7948,"endOffset":8033,"count":0},{"startOffset":8504,"endOffset":9335,"count":245},{"startOffset":8572,"endOffset":8729,"count":67},{"startOffset":8647,"endOffset":8711,"count":12},{"startOffset":8729,"endOffset":9321,"count":178},{"startOffset":8779,"endOffset":8814,"count":14},{"startOffset":8816,"endOffset":8923,"count":12},{"startOffset":8923,"endOffset":9321,"count":166},{"startOffset":8959,"endOffset":8994,"count":10},{"startOffset":8996,"endOffset":9045,"count":10},{"startOffset":9045,"endOffset":9321,"count":156},{"startOffset":9138,"endOffset":9200,"count":1},{"startOffset":9200,"endOffset":9303,"count":155},{"startOffset":9241,"endOffset":9303,"count":1}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":8203,"endOffset":8449,"count":16},{"startOffset":8242,"endOffset":8368,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9393,"endOffset":9440,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9459,"endOffset":9693,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":9706,"endOffset":10985,"count":0}],"isBlockCoverage":false},{"functionName":"internals.reference","ranges":[{"startOffset":11066,"endOffset":11204,"count":0}],"isBlockCoverage":false},{"functionName":"internals.evaluate","ranges":[{"startOffset":11229,"endOffset":11483,"count":0}],"isBlockCoverage":false},{"functionName":"internals.single","ranges":[{"startOffset":11506,"endOffset":11756,"count":0}],"isBlockCoverage":false},{"functionName":"internals.calculate","ranges":[{"startOffset":11782,"endOffset":12874,"count":0}],"isBlockCoverage":false},{"functionName":"internals.exists","ranges":[{"startOffset":12897,"endOffset":12968,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/extend.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7561,"count":1}],"isBlockCoverage":true},{"functionName":"exports.type","ranges":[{"startOffset":229,"endOffset":5151,"count":13},{"startOffset":583,"endOffset":588,"count":1},{"startOffset":933,"endOffset":1271,"count":8},{"startOffset":973,"endOffset":1265,"count":23},{"startOffset":1346,"endOffset":1385,"count":10},{"startOffset":1505,"endOffset":1799,"count":7},{"startOffset":1553,"endOffset":1613,"count":1},{"startOffset":1643,"endOffset":1689,"count":5},{"startOffset":1691,"endOffset":1793,"count":4},{"startOffset":2036,"endOffset":3531,"count":12},{"startOffset":2076,"endOffset":3525,"count":98},{"startOffset":2290,"endOffset":2413,"count":0},{"startOffset":2439,"endOffset":2574,"count":96},{"startOffset":2707,"endOffset":2894,"count":2},{"startOffset":2923,"endOffset":3515,"count":15},{"startOffset":3657,"endOffset":4137,"count":1},{"startOffset":3701,"endOffset":4131,"count":3},{"startOffset":4212,"endOffset":4740,"count":3},{"startOffset":4952,"endOffset":4973,"count":8},{"startOffset":4991,"endOffset":5015,"count":12}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":2317,"endOffset":2398,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3012,"endOffset":3499,"count":25},{"startOffset":3073,"endOffset":3141,"count":18},{"startOffset":3295,"endOffset":3392,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":3959,"endOffset":4041,"count":0}],"isBlockCoverage":false},{"functionName":"internals.build","ranges":[{"startOffset":5185,"endOffset":5380,"count":13},{"startOffset":5228,"endOffset":5246,"count":8},{"startOffset":5248,"endOffset":5288,"count":6},{"startOffset":5272,"endOffset":5281,"count":5},{"startOffset":5288,"endOffset":5379,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5301,"endOffset":5377,"count":0}],"isBlockCoverage":false},{"functionName":"internals.coerce","ranges":[{"startOffset":5403,"endOffset":6369,"count":13},{"startOffset":5446,"endOffset":5464,"count":7},{"startOffset":5490,"endOffset":5499,"count":6},{"startOffset":5506,"endOffset":5560,"count":0},{"startOffset":5561,"endOffset":5608,"count":0},{"startOffset":5609,"endOffset":5615,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":5625,"endOffset":6360,"count":0}],"isBlockCoverage":false},{"functionName":"internals.prepare","ranges":[{"startOffset":6393,"endOffset":6848,"count":13},{"startOffset":6436,"endOffset":6454,"count":0},{"startOffset":6496,"endOffset":6847,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6509,"endOffset":6845,"count":0}],"isBlockCoverage":false},{"functionName":"internals.rebuild","ranges":[{"startOffset":6872,"endOffset":7064,"count":13},{"startOffset":6915,"endOffset":6933,"count":3},{"startOffset":6959,"endOffset":6968,"count":10},{"startOffset":6975,"endOffset":7063,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6988,"endOffset":7061,"count":0}],"isBlockCoverage":false},{"functionName":"internals.validate","ranges":[{"startOffset":7089,"endOffset":7559,"count":13},{"startOffset":7132,"endOffset":7150,"count":10},{"startOffset":7176,"endOffset":7185,"count":3},{"startOffset":7192,"endOffset":7558,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7205,"endOffset":7556,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/messages.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4311,"count":1}],"isBlockCoverage":true},{"functionName":"exports.compile","ranges":[{"startOffset":196,"endOffset":1878,"count":1},{"startOffset":345,"endOffset":452,"count":0},{"startOffset":523,"endOffset":618,"count":0},{"startOffset":798,"endOffset":813,"count":0},{"startOffset":852,"endOffset":1856,"count":8},{"startOffset":968,"endOffset":1038,"count":0},{"startOffset":1164,"endOffset":1310,"count":0},{"startOffset":1418,"endOffset":1423,"count":0},{"startOffset":1456,"endOffset":1850,"count":0}],"isBlockCoverage":true},{"functionName":"exports.decompile","ranges":[{"startOffset":1902,"endOffset":2778,"count":0}],"isBlockCoverage":false},{"functionName":"exports.merge","ranges":[{"startOffset":2798,"endOffset":4309,"count":13},{"startOffset":2842,"endOffset":2891,"count":1},{"startOffset":2891,"endOffset":2912,"count":12},{"startOffset":2912,"endOffset":2940,"count":2},{"startOffset":2940,"endOffset":3008,"count":10},{"startOffset":3008,"endOffset":3054,"count":0},{"startOffset":3054,"endOffset":3125,"count":10},{"startOffset":3125,"endOffset":3157,"count":0},{"startOffset":3157,"endOffset":3283,"count":10},{"startOffset":3283,"endOffset":4287,"count":106},{"startOffset":3399,"endOffset":3469,"count":0},{"startOffset":3595,"endOffset":3741,"count":0},{"startOffset":3849,"endOffset":3854,"count":0},{"startOffset":3887,"endOffset":4281,"count":0},{"startOffset":4287,"endOffset":4308,"count":10}],"isBlockCoverage":true}]},{"scriptId":"577","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/manifest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11824,"count":1}],"isBlockCoverage":true},{"functionName":"exports.describe","ranges":[{"startOffset":317,"endOffset":3917,"count":0}],"isBlockCoverage":false},{"functionName":"internals.describe","ranges":[{"startOffset":3942,"endOffset":5299,"count":0}],"isBlockCoverage":false},{"functionName":"exports.build","ranges":[{"startOffset":5319,"endOffset":5424,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Builder","ranges":[{"startOffset":5461,"endOffset":5510,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5516,"endOffset":9559,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":9565,"endOffset":11480,"count":0}],"isBlockCoverage":false},{"functionName":"internals.regex","ranges":[{"startOffset":11504,"endOffset":11681,"count":0}],"isBlockCoverage":false},{"functionName":"internals.validate","ranges":[{"startOffset":11706,"endOffset":11822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/trace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8216,"count":1}],"isBlockCoverage":true},{"functionName":"exports.setup","ranges":[{"startOffset":365,"endOffset":670,"count":1}],"isBlockCoverage":true},{"functionName":"trace","ranges":[{"startOffset":402,"endOffset":514,"count":0}],"isBlockCoverage":false},{"functionName":"root.untrace","ranges":[{"startOffset":624,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"exports.location","ranges":[{"startOffset":693,"endOffset":832,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Tracer","ranges":[{"startOffset":868,"endOffset":952,"count":0}],"isBlockCoverage":false},{"functionName":"_register","ranges":[{"startOffset":958,"endOffset":1411,"count":0}],"isBlockCoverage":false},{"functionName":"_combine","ranges":[{"startOffset":1417,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":1570,"endOffset":4514,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Store","ranges":[{"startOffset":4551,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":4804,"endOffset":4956,"count":0}],"isBlockCoverage":false},{"functionName":"entry","ranges":[{"startOffset":4962,"endOffset":5126,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5132,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":5333,"endOffset":5651,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":5657,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5884,"endOffset":6200,"count":0}],"isBlockCoverage":false},{"functionName":"_record","ranges":[{"startOffset":6206,"endOffset":6496,"count":0}],"isBlockCoverage":false},{"functionName":"_scan","ranges":[{"startOffset":6502,"endOffset":7154,"count":0}],"isBlockCoverage":false},{"functionName":"_combine","ranges":[{"startOffset":7160,"endOffset":7237,"count":0}],"isBlockCoverage":false},{"functionName":"internals.message","ranges":[{"startOffset":7263,"endOffset":7428,"count":0}],"isBlockCoverage":false},{"functionName":"internals.id","ranges":[{"startOffset":7447,"endOffset":7745,"count":0}],"isBlockCoverage":false},{"functionName":"internals.sub","ranges":[{"startOffset":7765,"endOffset":8006,"count":0}],"isBlockCoverage":false},{"functionName":"internals.debug","ranges":[{"startOffset":8028,"endOffset":8214,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/deepEqual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7662,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":114,"endOffset":266,"count":26}],"isBlockCoverage":true},{"functionName":"internals.isDeepEqual","ranges":[{"startOffset":294,"endOffset":1959,"count":26},{"startOffset":353,"endOffset":591,"count":0},{"startOffset":681,"endOffset":727,"count":0},{"startOffset":729,"endOffset":1280,"count":0},{"startOffset":1321,"endOffset":1372,"count":0},{"startOffset":1381,"endOffset":1452,"count":0},{"startOffset":1461,"endOffset":1513,"count":0},{"startOffset":1519,"endOffset":1957,"count":0}],"isBlockCoverage":true},{"functionName":"internals.getSharedType","ranges":[{"startOffset":1989,"endOffset":2386,"count":0}],"isBlockCoverage":false},{"functionName":"internals.valueOf","ranges":[{"startOffset":2410,"endOffset":2625,"count":0}],"isBlockCoverage":false},{"functionName":"internals.hasOwnEnumerableProperty","ranges":[{"startOffset":2666,"endOffset":2755,"count":0}],"isBlockCoverage":false},{"functionName":"internals.isSetSimpleEqual","ranges":[{"startOffset":2788,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"internals.isDeepEqualObj","ranges":[{"startOffset":3012,"endOffset":7457,"count":0}],"isBlockCoverage":false},{"functionName":"internals.SeenEntry","ranges":[{"startOffset":7496,"endOffset":7574,"count":0}],"isBlockCoverage":false},{"functionName":"isSame","ranges":[{"startOffset":7580,"endOffset":7658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@sideway/pinpoint/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"exports.location","ranges":[{"startOffset":58,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/alternatives.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9996,"count":1}],"isBlockCoverage":true},{"functionName":"args","ranges":[{"startOffset":546,"endOffset":774,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":781,"endOffset":4346,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4398,"endOffset":5302,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5344,"endOffset":5781,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5821,"endOffset":6292,"count":0}],"isBlockCoverage":false},{"functionName":"label","ranges":[{"startOffset":6337,"endOffset":6571,"count":0}],"isBlockCoverage":false},{"functionName":"rebuild","ranges":[{"startOffset":6584,"endOffset":6913,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":6941,"endOffset":7574,"count":0}],"isBlockCoverage":false},{"functionName":"internals.errors","ranges":[{"startOffset":8037,"endOffset":9731,"count":0}],"isBlockCoverage":false},{"functionName":"internals.unmatched","ranges":[{"startOffset":9757,"endOffset":9994,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2417,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.merge","ranges":[{"startOffset":180,"endOffset":2415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/any.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4880,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":627,"endOffset":988,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1002,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1381,"endOffset":1463,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1506,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1917,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2145,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"keep","ranges":[{"startOffset":2361,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"message","ranges":[{"startOffset":2444,"endOffset":2533,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":2544,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2650,"endOffset":4256,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29601,"count":1}],"isBlockCoverage":true},{"functionName":"internals.Base","ranges":[{"startOffset":708,"endOffset":911,"count":1}],"isBlockCoverage":true},{"functionName":"_reset","ranges":[{"startOffset":917,"endOffset":1695,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":1718,"endOffset":1869,"count":0}],"isBlockCoverage":false},{"functionName":"allow","ranges":[{"startOffset":1889,"endOffset":2006,"count":1}],"isBlockCoverage":true},{"functionName":"alter","ranges":[{"startOffset":2012,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"artifact","ranges":[{"startOffset":2657,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":2872,"endOffset":3149,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":3155,"endOffset":3244,"count":0}],"isBlockCoverage":false},{"functionName":"description","ranges":[{"startOffset":3250,"endOffset":3421,"count":0}],"isBlockCoverage":false},{"functionName":"empty","ranges":[{"startOffset":3427,"endOffset":3661,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":3667,"endOffset":3888,"count":0}],"isBlockCoverage":false},{"functionName":"example","ranges":[{"startOffset":3894,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"external","ranges":[{"startOffset":4146,"endOffset":4691,"count":0}],"isBlockCoverage":false},{"functionName":"failover","ranges":[{"startOffset":4697,"endOffset":4788,"count":0}],"isBlockCoverage":false},{"functionName":"forbidden","ranges":[{"startOffset":4794,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"id","ranges":[{"startOffset":4863,"endOffset":5150,"count":0}],"isBlockCoverage":false},{"functionName":"invalid","ranges":[{"startOffset":5156,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"label","ranges":[{"startOffset":5239,"endOffset":5397,"count":0}],"isBlockCoverage":false},{"functionName":"meta","ranges":[{"startOffset":5403,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"note","ranges":[{"startOffset":5554,"endOffset":5804,"count":0}],"isBlockCoverage":false},{"functionName":"only","ranges":[{"startOffset":5810,"endOffset":5948,"count":0}],"isBlockCoverage":false},{"functionName":"optional","ranges":[{"startOffset":5954,"endOffset":6015,"count":1}],"isBlockCoverage":true},{"functionName":"prefs","ranges":[{"startOffset":6021,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"presence","ranges":[{"startOffset":6552,"endOffset":6726,"count":13}],"isBlockCoverage":true},{"functionName":"raw","ranges":[{"startOffset":6732,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"result","ranges":[{"startOffset":6836,"endOffset":6983,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":6989,"endOffset":7050,"count":12}],"isBlockCoverage":true},{"functionName":"strict","ranges":[{"startOffset":7056,"endOffset":7279,"count":0}],"isBlockCoverage":false},{"functionName":"strip","ranges":[{"startOffset":7285,"endOffset":7387,"count":0}],"isBlockCoverage":false},{"functionName":"tag","ranges":[{"startOffset":7393,"endOffset":7632,"count":0}],"isBlockCoverage":false},{"functionName":"unit","ranges":[{"startOffset":7638,"endOffset":7793,"count":0}],"isBlockCoverage":false},{"functionName":"valid","ranges":[{"startOffset":7799,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"when","ranges":[{"startOffset":8002,"endOffset":8817,"count":0}],"isBlockCoverage":false},{"functionName":"cache","ranges":[{"startOffset":8839,"endOffset":9238,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":9244,"endOffset":9358,"count":35}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":9364,"endOffset":12418,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":12424,"endOffset":12563,"count":13}],"isBlockCoverage":true},{"functionName":"extract","ranges":[{"startOffset":12569,"endOffset":12690,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":12696,"endOffset":13133,"count":0}],"isBlockCoverage":false},{"functionName":"rule","ranges":[{"startOffset":13139,"endOffset":14234,"count":0}],"isBlockCoverage":false},{"functionName":"get ruleset","ranges":[{"startOffset":14240,"endOffset":14464,"count":0}],"isBlockCoverage":false},{"functionName":"get $","ranges":[{"startOffset":14470,"endOffset":14515,"count":0}],"isBlockCoverage":false},{"functionName":"tailor","ranges":[{"startOffset":14521,"endOffset":15295,"count":0}],"isBlockCoverage":false},{"functionName":"tracer","ranges":[{"startOffset":15301,"endOffset":15419,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15425,"endOffset":15512,"count":6}],"isBlockCoverage":true},{"functionName":"validateAsync","ranges":[{"startOffset":15518,"endOffset":15615,"count":0}],"isBlockCoverage":false},{"functionName":"$_addRule","ranges":[{"startOffset":15640,"endOffset":18134,"count":18},{"startOffset":15730,"endOffset":15782,"count":7},{"startOffset":15982,"endOffset":16067,"count":50},{"startOffset":16205,"endOffset":16217,"count":8},{"startOffset":16445,"endOffset":17691,"count":11},{"startOffset":16667,"endOffset":17681,"count":22},{"startOffset":16745,"endOffset":16832,"count":10},{"startOffset":16832,"endOffset":17633,"count":12},{"startOffset":16986,"endOffset":17037,"count":10},{"startOffset":17039,"endOffset":17163,"count":0},{"startOffset":17239,"endOffset":17370,"count":0},{"startOffset":17417,"endOffset":17593,"count":10},{"startOffset":17633,"endOffset":17681,"count":12},{"startOffset":17749,"endOffset":17869,"count":17},{"startOffset":17913,"endOffset":17963,"count":0},{"startOffset":17998,"endOffset":18047,"count":0}],"isBlockCoverage":true},{"functionName":"$_compile","ranges":[{"startOffset":18140,"endOffset":18236,"count":13}],"isBlockCoverage":true},{"functionName":"$_createError","ranges":[{"startOffset":18242,"endOffset":18596,"count":0}],"isBlockCoverage":false},{"functionName":"$_getFlag","ranges":[{"startOffset":18602,"endOffset":18660,"count":0}],"isBlockCoverage":false},{"functionName":"$_getRule","ranges":[{"startOffset":18666,"endOffset":18734,"count":78}],"isBlockCoverage":true},{"functionName":"$_mapLabels","ranges":[{"startOffset":18740,"endOffset":18866,"count":0}],"isBlockCoverage":false},{"functionName":"$_match","ranges":[{"startOffset":18872,"endOffset":19218,"count":0}],"isBlockCoverage":false},{"functionName":"$_modify","ranges":[{"startOffset":19224,"endOffset":19377,"count":3}],"isBlockCoverage":true},{"functionName":"$_mutateRebuild","ranges":[{"startOffset":19383,"endOffset":20019,"count":3}],"isBlockCoverage":true},{"functionName":"each","ranges":[{"startOffset":19559,"endOffset":19824,"count":13}],"isBlockCoverage":true},{"functionName":"$_mutateRegister","ranges":[{"startOffset":20025,"endOffset":20170,"count":26}],"isBlockCoverage":true},{"functionName":"$_property","ranges":[{"startOffset":20176,"endOffset":20251,"count":19}],"isBlockCoverage":true},{"functionName":"$_reach","ranges":[{"startOffset":20257,"endOffset":20317,"count":0}],"isBlockCoverage":false},{"functionName":"$_rootReferences","ranges":[{"startOffset":20323,"endOffset":20385,"count":13}],"isBlockCoverage":true},{"functionName":"$_setFlag","ranges":[{"startOffset":20391,"endOffset":21117,"count":13},{"startOffset":20624,"endOffset":20666,"count":0},{"startOffset":20717,"endOffset":20753,"count":0},{"startOffset":20814,"endOffset":20820,"count":0},{"startOffset":20946,"endOffset":21008,"count":0}],"isBlockCoverage":true},{"functionName":"$_parent","ranges":[{"startOffset":21123,"endOffset":21229,"count":0}],"isBlockCoverage":false},{"functionName":"$_validate","ranges":[{"startOffset":21235,"endOffset":21337,"count":19}],"isBlockCoverage":true},{"functionName":"_assign","ranges":[{"startOffset":21361,"endOffset":22411,"count":48},{"startOffset":21671,"endOffset":21694,"count":0},{"startOffset":21738,"endOffset":21763,"count":0},{"startOffset":22084,"endOffset":22183,"count":424},{"startOffset":22138,"endOffset":22165,"count":141},{"startOffset":22166,"endOffset":22172,"count":283},{"startOffset":22295,"endOffset":22381,"count":5},{"startOffset":22381,"endOffset":22410,"count":47}],"isBlockCoverage":true},{"functionName":"_bare","ranges":[{"startOffset":22417,"endOffset":22701,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":22707,"endOffset":23249,"count":0}],"isBlockCoverage":false},{"functionName":"_generate","ranges":[{"startOffset":23255,"endOffset":26157,"count":0}],"isBlockCoverage":false},{"functionName":"_inner","ranges":[{"startOffset":26163,"endOffset":26643,"count":0}],"isBlockCoverage":false},{"functionName":"_inRuleset","ranges":[{"startOffset":26649,"endOffset":26748,"count":16},{"startOffset":26709,"endOffset":26741,"count":0}],"isBlockCoverage":true},{"functionName":"_ruleRemove","ranges":[{"startOffset":26754,"endOffset":27458,"count":17},{"startOffset":26867,"endOffset":26927,"count":0},{"startOffset":26928,"endOffset":26934,"count":0},{"startOffset":27058,"endOffset":27457,"count":0}],"isBlockCoverage":true},{"functionName":"_values","ranges":[{"startOffset":27464,"endOffset":28803,"count":1},{"startOffset":27663,"endOffset":27712,"count":0},{"startOffset":27815,"endOffset":27949,"count":0},{"startOffset":27974,"endOffset":28009,"count":0},{"startOffset":28033,"endOffset":28077,"count":0},{"startOffset":28346,"endOffset":28357,"count":0},{"startOffset":28401,"endOffset":28721,"count":0}],"isBlockCoverage":true}]},{"scriptId":"585","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/modify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6847,"count":1}],"isBlockCoverage":true},{"functionName":"exports.Ids.internals.Ids","ranges":[{"startOffset":201,"endOffset":323,"count":49}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":329,"endOffset":546,"count":48}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":552,"endOffset":1059,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":1065,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"labels","ranges":[{"startOffset":1588,"endOffset":2021,"count":0}],"isBlockCoverage":false},{"functionName":"reach","ranges":[{"startOffset":2027,"endOffset":2404,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":2410,"endOffset":3303,"count":26},{"startOffset":2505,"endOffset":2623,"count":13},{"startOffset":2625,"endOffset":2675,"count":0},{"startOffset":2675,"endOffset":2730,"count":13},{"startOffset":2730,"endOffset":3042,"count":0},{"startOffset":3042,"endOffset":3297,"count":13}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":3309,"endOffset":3425,"count":3}],"isBlockCoverage":true},{"functionName":"_collect","ranges":[{"startOffset":3431,"endOffset":3862,"count":0}],"isBlockCoverage":false},{"functionName":"_get","ranges":[{"startOffset":3868,"endOffset":3943,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fork","ranges":[{"startOffset":3966,"endOffset":4251,"count":0}],"isBlockCoverage":false},{"functionName":"exports.schema","ranges":[{"startOffset":4272,"endOffset":5586,"count":3},{"startOffset":4354,"endOffset":4647,"count":0},{"startOffset":4700,"endOffset":5231,"count":0},{"startOffset":5272,"endOffset":5567,"count":36},{"startOffset":5303,"endOffset":5336,"count":0},{"startOffset":5469,"endOffset":5561,"count":0}],"isBlockCoverage":true},{"functionName":"internals.scan","ranges":[{"startOffset":5607,"endOffset":6845,"count":75},{"startOffset":5679,"endOffset":5684,"count":36},{"startOffset":5709,"endOffset":5744,"count":51},{"startOffset":5746,"endOffset":5770,"count":37},{"startOffset":5770,"endOffset":5817,"count":38},{"startOffset":5817,"endOffset":6221,"count":12},{"startOffset":5865,"endOffset":6192,"count":13},{"startOffset":6085,"endOffset":6182,"count":0},{"startOffset":6221,"endOffset":6280,"count":26},{"startOffset":6281,"endOffset":6332,"count":13},{"startOffset":6334,"endOffset":6502,"count":13},{"startOffset":6441,"endOffset":6472,"count":0},{"startOffset":6502,"endOffset":6532,"count":13},{"startOffset":6532,"endOffset":6824,"count":26},{"startOffset":6562,"endOffset":6595,"count":0},{"startOffset":6720,"endOffset":6818,"count":0},{"startOffset":6824,"endOffset":6844,"count":13}],"isBlockCoverage":true}]},{"scriptId":"586","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17890,"count":1}],"isBlockCoverage":true},{"functionName":"exports.entry","ranges":[{"startOffset":386,"endOffset":1371,"count":6},{"startOffset":472,"endOffset":766,"count":0},{"startOffset":999,"endOffset":1044,"count":0},{"startOffset":1087,"endOffset":1162,"count":0},{"startOffset":1195,"endOffset":1249,"count":0},{"startOffset":1286,"endOffset":1348,"count":0}],"isBlockCoverage":true},{"functionName":"exports.entryAsync","ranges":[{"startOffset":1396,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"internals.entry","ranges":[{"startOffset":3341,"endOffset":4073,"count":6},{"startOffset":3493,"endOffset":3497,"count":0},{"startOffset":3549,"endOffset":3560,"count":0},{"startOffset":3690,"endOffset":3704,"count":0},{"startOffset":3914,"endOffset":3954,"count":0}],"isBlockCoverage":true},{"functionName":"internals.tracer","ranges":[{"startOffset":4096,"endOffset":4452,"count":6},{"startOffset":4155,"endOffset":4230,"count":0},{"startOffset":4253,"endOffset":4408,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validate","ranges":[{"startOffset":4475,"endOffset":10242,"count":25},{"startOffset":4563,"endOffset":4633,"count":0},{"startOffset":4697,"endOffset":4752,"count":0},{"startOffset":4790,"endOffset":4812,"count":0},{"startOffset":4814,"endOffset":5006,"count":0},{"startOffset":5663,"endOffset":5693,"count":0},{"startOffset":5694,"endOffset":5718,"count":0},{"startOffset":5720,"endOffset":6125,"count":0},{"startOffset":6168,"endOffset":6198,"count":19},{"startOffset":6199,"endOffset":6223,"count":19},{"startOffset":6224,"endOffset":6295,"count":19},{"startOffset":6297,"endOffset":6702,"count":16},{"startOffset":6495,"endOffset":6650,"count":0},{"startOffset":6777,"endOffset":6868,"count":0},{"startOffset":6870,"endOffset":6976,"count":0},{"startOffset":7106,"endOffset":7161,"count":6},{"startOffset":7137,"endOffset":7143,"count":0},{"startOffset":7192,"endOffset":7778,"count":0},{"startOffset":7818,"endOffset":7942,"count":0},{"startOffset":8015,"endOffset":8778,"count":1},{"startOffset":8126,"endOffset":8438,"count":0},{"startOffset":8472,"endOffset":8772,"count":0},{"startOffset":8828,"endOffset":9329,"count":0},{"startOffset":9442,"endOffset":10059,"count":9},{"startOffset":9581,"endOffset":10049,"count":6},{"startOffset":9632,"endOffset":9811,"count":0},{"startOffset":9853,"endOffset":10035,"count":0},{"startOffset":10121,"endOffset":10187,"count":11},{"startOffset":10187,"endOffset":10241,"count":14}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":5048,"endOffset":5145,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":5326,"endOffset":5421,"count":0}],"isBlockCoverage":false},{"functionName":"message","ranges":[{"startOffset":5440,"endOffset":5533,"count":0}],"isBlockCoverage":false},{"functionName":"internals.rules","ranges":[{"startOffset":10264,"endOffset":12452,"count":14},{"startOffset":10386,"endOffset":12394,"count":30},{"startOffset":10546,"endOffset":10574,"count":0},{"startOffset":10576,"endOffset":10691,"count":0},{"startOffset":10805,"endOffset":11537,"count":0},{"startOffset":11764,"endOffset":12160,"count":0}],"isBlockCoverage":true},{"functionName":"internals.rule","ranges":[{"startOffset":12473,"endOffset":12854,"count":30},{"startOffset":12535,"endOffset":12625,"count":0},{"startOffset":12654,"endOffset":12691,"count":0},{"startOffset":12693,"endOffset":12810,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12716,"endOffset":12757,"count":0}],"isBlockCoverage":false},{"functionName":"internals.error","ranges":[{"startOffset":12876,"endOffset":12997,"count":0}],"isBlockCoverage":false},{"functionName":"internals.finalize","ranges":[{"startOffset":13022,"endOffset":15942,"count":25},{"startOffset":13079,"endOffset":13084,"count":0},{"startOffset":13179,"endOffset":13450,"count":0},{"startOffset":13497,"endOffset":13527,"count":0},{"startOffset":13529,"endOffset":13992,"count":0},{"startOffset":14039,"endOffset":14226,"count":0},{"startOffset":14268,"endOffset":14298,"count":0},{"startOffset":14300,"endOffset":14593,"count":0},{"startOffset":14646,"endOffset":14672,"count":0},{"startOffset":14673,"endOffset":14710,"count":0},{"startOffset":14712,"endOffset":14961,"count":0},{"startOffset":15028,"endOffset":15036,"count":0},{"startOffset":15078,"endOffset":15321,"count":0},{"startOffset":15359,"endOffset":15391,"count":0},{"startOffset":15392,"endOffset":15423,"count":0},{"startOffset":15425,"endOffset":15486,"count":0},{"startOffset":15609,"endOffset":15920,"count":0}],"isBlockCoverage":true},{"functionName":"internals.prefs","ranges":[{"startOffset":15964,"endOffset":16368,"count":0}],"isBlockCoverage":false},{"functionName":"internals.default","ranges":[{"startOffset":16392,"endOffset":17340,"count":0}],"isBlockCoverage":false},{"functionName":"internals.trim","ranges":[{"startOffset":17361,"endOffset":17601,"count":0}],"isBlockCoverage":false},{"functionName":"internals.errorsArray","ranges":[{"startOffset":17788,"endOffset":17888,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":56,"endOffset":71,"count":110}],"isBlockCoverage":true}]},{"scriptId":"588","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3239,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.State","ranges":[{"startOffset":248,"endOffset":537,"count":25}],"isBlockCoverage":true},{"functionName":"localize","ranges":[{"startOffset":543,"endOffset":826,"count":19},{"startOffset":710,"endOffset":797,"count":0}],"isBlockCoverage":true},{"functionName":"nest","ranges":[{"startOffset":832,"endOffset":1075,"count":0}],"isBlockCoverage":false},{"functionName":"shadow","ranges":[{"startOffset":1081,"endOffset":1250,"count":0}],"isBlockCoverage":false},{"functionName":"snapshot","ranges":[{"startOffset":1256,"endOffset":1395,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":1401,"endOffset":1575,"count":0}],"isBlockCoverage":false},{"functionName":"internals.schemas","ranges":[{"startOffset":1601,"endOffset":1711,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Shadow","ranges":[{"startOffset":1747,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1804,"endOffset":2547,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2553,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"node","ranges":[{"startOffset":2687,"endOffset":2829,"count":0}],"isBlockCoverage":false},{"functionName":"override","ranges":[{"startOffset":2835,"endOffset":3235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"589","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/values.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5865,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.internals.Values","ranges":[{"startOffset":231,"endOffset":430,"count":1}],"isBlockCoverage":true},{"functionName":"get length","ranges":[{"startOffset":436,"endOffset":509,"count":2}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":515,"endOffset":1103,"count":1},{"startOffset":597,"endOffset":855,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":1116,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":1655,"endOffset":1973,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1979,"endOffset":2086,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2092,"endOffset":4120,"count":2},{"startOffset":2159,"endOffset":2260,"count":1},{"startOffset":2260,"endOffset":2301,"count":0},{"startOffset":2301,"endOffset":2403,"count":1},{"startOffset":2404,"endOffset":2430,"count":1},{"startOffset":2432,"endOffset":2592,"count":0},{"startOffset":2592,"endOffset":2663,"count":1},{"startOffset":2665,"endOffset":2703,"count":1},{"startOffset":2703,"endOffset":4119,"count":0}],"isBlockCoverage":true},{"functionName":"override","ranges":[{"startOffset":4126,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":4182,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":4579,"endOffset":4723,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":4729,"endOffset":5002,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":5008,"endOffset":5434,"count":0}],"isBlockCoverage":false},{"functionName":"internals.lowercases","ranges":[{"startOffset":5618,"endOffset":5863,"count":1},{"startOffset":5679,"endOffset":5844,"count":0}],"isBlockCoverage":true}]},{"scriptId":"590","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26578,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":715,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1058,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1660,"endOffset":1915,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1929,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2664,"endOffset":3089,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3103,"endOffset":12498,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":12599,"endOffset":12720,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12734,"endOffset":13019,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13296,"endOffset":13433,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13473,"endOffset":13610,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13654,"endOffset":14189,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":14232,"endOffset":14510,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":14551,"endOffset":15057,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15071,"endOffset":15636,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":15706,"endOffset":16064,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":16107,"endOffset":16926,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":16940,"endOffset":19814,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":19975,"endOffset":20049,"count":0}],"isBlockCoverage":false},{"functionName":"rebuild","ranges":[{"startOffset":20072,"endOffset":20790,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":20818,"endOffset":21063,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fillMissedErrors","ranges":[{"startOffset":22583,"endOffset":23395,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fillOrderedErrors","ranges":[{"startOffset":23429,"endOffset":23809,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fillDefault","ranges":[{"startOffset":23837,"endOffset":24484,"count":0}],"isBlockCoverage":false},{"functionName":"internals.fastSplice","ranges":[{"startOffset":24511,"endOffset":24637,"count":0}],"isBlockCoverage":false},{"functionName":"internals.validateSingle","ranges":[{"startOffset":24668,"endOffset":24920,"count":0}],"isBlockCoverage":false},{"functionName":"internals.sort","ranges":[{"startOffset":24941,"endOffset":26146,"count":0}],"isBlockCoverage":false},{"functionName":"internals.compare","ranges":[{"startOffset":26170,"endOffset":26576,"count":0}],"isBlockCoverage":false}]},{"scriptId":"591","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/boolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3325,"count":1}],"isBlockCoverage":true},{"functionName":"internals.isBool","ranges":[{"startOffset":214,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":584,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1256,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1450,"endOffset":1942,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1984,"endOffset":2471,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2517,"endOffset":2617,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":2714,"endOffset":2787,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":2865,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2993,"endOffset":3235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"592","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/date.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5320,"count":1}],"isBlockCoverage":true},{"functionName":"internals.isDate","ranges":[{"startOffset":218,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":385,"endOffset":508,"count":1},{"startOffset":487,"endOffset":495,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":521,"endOffset":957,"count":1},{"startOffset":672,"endOffset":769,"count":0},{"startOffset":770,"endOffset":810,"count":0},{"startOffset":812,"endOffset":956,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1032,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1523,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":1665,"endOffset":1688,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1825,"endOffset":2017,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2061,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2240,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2349,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2525,"endOffset":2661,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2701,"endOffset":2837,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":2883,"endOffset":3077,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":3174,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":3327,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"internals.parse","ranges":[{"startOffset":4158,"endOffset":5163,"count":1},{"startOffset":4217,"endOffset":4246,"count":0},{"startOffset":4282,"endOffset":4327,"count":0},{"startOffset":4329,"endOffset":4358,"count":0},{"startOffset":4389,"endOffset":4417,"count":0},{"startOffset":4457,"endOffset":4589,"count":0},{"startOffset":4730,"endOffset":4773,"count":0},{"startOffset":4809,"endOffset":5112,"count":0}],"isBlockCoverage":true},{"functionName":"internals.date","ranges":[{"startOffset":5184,"endOffset":5318,"count":1},{"startOffset":5298,"endOffset":5317,"count":0}],"isBlockCoverage":true}]},{"scriptId":"593","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2304,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":273,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":476,"endOffset":682,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":724,"endOffset":797,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":811,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1079,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1291,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1544,"endOffset":1736,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1750,"endOffset":1958,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31700,"count":1}],"isBlockCoverage":true},{"functionName":"args","ranges":[{"startOffset":1088,"endOffset":1149,"count":3}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1156,"endOffset":4619,"count":6},{"startOffset":1324,"endOffset":1435,"count":0},{"startOffset":1606,"endOffset":1691,"count":0},{"startOffset":1692,"endOffset":1732,"count":0},{"startOffset":1734,"endOffset":1766,"count":0},{"startOffset":1934,"endOffset":2003,"count":0},{"startOffset":2005,"endOffset":2055,"count":0},{"startOffset":2119,"endOffset":2204,"count":0},{"startOffset":2205,"endOffset":2248,"count":0},{"startOffset":2250,"endOffset":2300,"count":0},{"startOffset":2533,"endOffset":3527,"count":19},{"startOffset":2866,"endOffset":3196,"count":0},{"startOffset":3311,"endOffset":3332,"count":0},{"startOffset":3334,"endOffset":3393,"count":0},{"startOffset":3640,"endOffset":3816,"count":0},{"startOffset":3893,"endOffset":4578,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":4663,"endOffset":4834,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4877,"endOffset":5142,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5185,"endOffset":5758,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5772,"endOffset":6240,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6362,"endOffset":6638,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6652,"endOffset":6901,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6985,"endOffset":8005,"count":3},{"startOffset":7282,"endOffset":7396,"count":0},{"startOffset":7451,"endOffset":7557,"count":0},{"startOffset":7637,"endOffset":7708,"count":0},{"startOffset":7779,"endOffset":7926,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7663,"endOffset":7707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7824,"endOffset":7897,"count":13}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":8048,"endOffset":8169,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":8183,"endOffset":8482,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":8759,"endOffset":8896,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":8936,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":9114,"endOffset":9287,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":9326,"endOffset":9495,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":9536,"endOffset":9658,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":9702,"endOffset":11219,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":11259,"endOffset":11330,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11344,"endOffset":11545,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":11587,"endOffset":11660,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11674,"endOffset":11880,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":11923,"endOffset":12982,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13025,"endOffset":13137,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":13151,"endOffset":13430,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13474,"endOffset":13571,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13612,"endOffset":13741,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13785,"endOffset":13917,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13957,"endOffset":14128,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":14173,"endOffset":14376,"count":0}],"isBlockCoverage":false},{"functionName":"rebuild","ranges":[{"startOffset":14389,"endOffset":14773,"count":3},{"startOffset":14540,"endOffset":14687,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14577,"endOffset":14660,"count":13}],"isBlockCoverage":true},{"functionName":"build","ranges":[{"startOffset":14801,"endOffset":15614,"count":0}],"isBlockCoverage":false},{"functionName":"internals.clone","ranges":[{"startOffset":17648,"endOffset":18330,"count":6},{"startOffset":17761,"endOffset":17824,"count":0},{"startOffset":17957,"endOffset":18329,"count":0}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":17994,"endOffset":18061,"count":0}],"isBlockCoverage":false},{"functionName":"internals.dependency","ranges":[{"startOffset":18357,"endOffset":19378,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":19414,"endOffset":20251,"count":0}],"isBlockCoverage":false},{"functionName":"nand","ranges":[{"startOffset":20258,"endOffset":20982,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":20989,"endOffset":21425,"count":0}],"isBlockCoverage":false},{"functionName":"oxor","ranges":[{"startOffset":21432,"endOffset":22070,"count":0}],"isBlockCoverage":false},{"functionName":"with","ranges":[{"startOffset":22077,"endOffset":22665,"count":0}],"isBlockCoverage":false},{"functionName":"without","ranges":[{"startOffset":22672,"endOffset":23266,"count":0}],"isBlockCoverage":false},{"functionName":"xor","ranges":[{"startOffset":23273,"endOffset":23980,"count":0}],"isBlockCoverage":false},{"functionName":"internals.keysToLabels","ranges":[{"startOffset":24011,"endOffset":24173,"count":0}],"isBlockCoverage":false},{"functionName":"internals.rename","ranges":[{"startOffset":24196,"endOffset":26483,"count":0}],"isBlockCoverage":false},{"functionName":"internals.unknown","ranges":[{"startOffset":26507,"endOffset":30570,"count":0}],"isBlockCoverage":false},{"functionName":"internals.Dependency","ranges":[{"startOffset":30610,"endOffset":30758,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":30764,"endOffset":31102,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":31152,"endOffset":31696,"count":0}],"isBlockCoverage":false}]},{"scriptId":"595","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/applyToDefaults.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2672,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":196,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"internals.applyToDefaultsWithShallow","ranges":[{"startOffset":1166,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"internals.reachCopy","ranges":[{"startOffset":2107,"endOffset":2670,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/topo/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5926,"count":1}],"isBlockCoverage":true},{"functionName":"exports.Sorter","ranges":[{"startOffset":120,"endOffset":193,"count":3}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":199,"endOffset":1471,"count":13},{"startOffset":248,"endOffset":253,"count":0},{"startOffset":385,"endOffset":390,"count":0},{"startOffset":429,"endOffset":435,"count":0},{"startOffset":1389,"endOffset":1393,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":1477,"endOffset":2119,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":2125,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"_sort","ranges":[{"startOffset":2270,"endOffset":5819,"count":13},{"startOffset":2533,"endOffset":3115,"count":39},{"startOffset":2981,"endOffset":3105,"count":0},{"startOffset":3189,"endOffset":3518,"count":39},{"startOffset":3284,"endOffset":3465,"count":0},{"startOffset":3633,"endOffset":3822,"count":0},{"startOffset":3918,"endOffset":4133,"count":39},{"startOffset":4004,"endOffset":4123,"count":0},{"startOffset":4266,"endOffset":5344,"count":39},{"startOffset":4382,"endOffset":5213,"count":0},{"startOffset":5396,"endOffset":5433,"count":0},{"startOffset":5504,"endOffset":5554,"count":39},{"startOffset":5644,"endOffset":5791,"count":39}],"isBlockCoverage":true},{"functionName":"internals.mergeSort","ranges":[{"startOffset":5847,"endOffset":5924,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/link.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4542,"count":1}],"isBlockCoverage":true},{"functionName":"args","ranges":[{"startOffset":428,"endOffset":486,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":493,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":843,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":997,"endOffset":1490,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1535,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1679,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2197,"endOffset":2337,"count":0}],"isBlockCoverage":false},{"functionName":"internals.generate","ranges":[{"startOffset":2383,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"internals.perspective","ranges":[{"startOffset":3261,"endOffset":4215,"count":0}],"isBlockCoverage":false},{"functionName":"internals.assert","ranges":[{"startOffset":4238,"endOffset":4540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/number.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9211,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":445,"endOffset":1693,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1706,"endOffset":2725,"count":3},{"startOffset":1818,"endOffset":1894,"count":0},{"startOffset":1933,"endOffset":2004,"count":0},{"startOffset":2148,"endOffset":2409,"count":0},{"startOffset":2453,"endOffset":2510,"count":0},{"startOffset":2631,"endOffset":2695,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2800,"endOffset":3079,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":3353,"endOffset":3494,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":3538,"endOffset":3613,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3627,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":3873,"endOffset":4011,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4051,"endOffset":4189,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4229,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":4412,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4532,"endOffset":4794,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":4927,"endOffset":4995,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5155,"endOffset":5226,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5267,"endOffset":5339,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5353,"endOffset":5624,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5669,"endOffset":5740,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5786,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5991,"endOffset":6417,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6485,"endOffset":6675,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6689,"endOffset":6962,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":7005,"endOffset":7186,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":7253,"endOffset":7289,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":7303,"endOffset":7379,"count":0}],"isBlockCoverage":false},{"functionName":"internals.normalizeExponent","ranges":[{"startOffset":8356,"endOffset":8592,"count":0}],"isBlockCoverage":false},{"functionName":"internals.normalizeDecimal","ranges":[{"startOffset":8625,"endOffset":9209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":171,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":230,"endOffset":320,"count":0}],"isBlockCoverage":false}]},{"scriptId":"600","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27261,"count":1},{"startOffset":538,"endOffset":545,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":1924,"endOffset":3865,"count":15},{"startOffset":2055,"endOffset":2132,"count":0},{"startOffset":2211,"endOffset":2341,"count":0},{"startOffset":2415,"endOffset":2451,"count":0},{"startOffset":2453,"endOffset":2507,"count":0},{"startOffset":2554,"endOffset":2749,"count":0},{"startOffset":2820,"endOffset":2867,"count":0},{"startOffset":2868,"endOffset":2909,"count":0},{"startOffset":2911,"endOffset":2964,"count":0},{"startOffset":3011,"endOffset":3158,"count":0},{"startOffset":3200,"endOffset":3824,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3878,"endOffset":4284,"count":15},{"startOffset":3955,"endOffset":4026,"count":0},{"startOffset":4054,"endOffset":4278,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":4333,"endOffset":4409,"count":7}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4423,"endOffset":4626,"count":10},{"startOffset":4554,"endOffset":4625,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":4669,"endOffset":5140,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5154,"endOffset":5452,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":5493,"endOffset":5698,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5712,"endOffset":6055,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6129,"endOffset":6207,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6221,"endOffset":6738,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":6782,"endOffset":7138,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":7152,"endOffset":7804,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":7847,"endOffset":8225,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":8239,"endOffset":8461,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":8503,"endOffset":9131,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":9145,"endOffset":9695,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":9763,"endOffset":11562,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11576,"endOffset":12026,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":12066,"endOffset":12403,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12417,"endOffset":12801,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":12846,"endOffset":12922,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12936,"endOffset":13212,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13260,"endOffset":13345,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":13384,"endOffset":13731,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":13745,"endOffset":14163,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":14207,"endOffset":14282,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":14296,"endOffset":14488,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":14536,"endOffset":14615,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":14629,"endOffset":14845,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":14888,"endOffset":15007,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15021,"endOffset":15454,"count":16},{"startOffset":15136,"endOffset":15182,"count":0},{"startOffset":15343,"endOffset":15453,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":15765,"endOffset":15833,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":15873,"endOffset":15990,"count":5}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":16071,"endOffset":16188,"count":5}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":16275,"endOffset":16540,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":16554,"endOffset":16782,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":16881,"endOffset":17543,"count":1},{"startOffset":17165,"endOffset":17233,"count":0},{"startOffset":17371,"endOffset":17382,"count":0},{"startOffset":17402,"endOffset":17411,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":17557,"endOffset":17883,"count":4},{"startOffset":17781,"endOffset":17882,"count":0}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":17992,"endOffset":18608,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":18650,"endOffset":18723,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":18737,"endOffset":18928,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":18969,"endOffset":19168,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":19182,"endOffset":19421,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":19493,"endOffset":19676,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":19722,"endOffset":19790,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":19830,"endOffset":20461,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":20475,"endOffset":21535,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":21579,"endOffset":21839,"count":0}],"isBlockCoverage":false},{"functionName":"internals.addressOptions","ranges":[{"startOffset":24483,"endOffset":26370,"count":0}],"isBlockCoverage":false},{"functionName":"internals.validateTlds","ranges":[{"startOffset":26399,"endOffset":26601,"count":0}],"isBlockCoverage":false},{"functionName":"internals.isoDate","ranges":[{"startOffset":26625,"endOffset":26961,"count":0}],"isBlockCoverage":false},{"functionName":"internals.length","ranges":[{"startOffset":26984,"endOffset":27259,"count":10},{"startOffset":27059,"endOffset":27099,"count":0}],"isBlockCoverage":true}]},{"scriptId":"601","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@sideway/address/lib/domain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3300,"count":1},{"startOffset":427,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"exports.analyze","ranges":[{"startOffset":546,"endOffset":2945,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isValid","ranges":[{"startOffset":2967,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"internals.punycode","ranges":[{"startOffset":3069,"endOffset":3298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"602","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@sideway/address/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1378,"count":1}],"isBlockCoverage":true},{"functionName":"exports.code","ranges":[{"startOffset":1307,"endOffset":1376,"count":0}],"isBlockCoverage":false}]},{"scriptId":"603","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@sideway/address/lib/email.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4915,"count":1},{"startOffset":207,"endOffset":221,"count":0}],"isBlockCoverage":true},{"functionName":"exports.analyze","ranges":[{"startOffset":316,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isValid","ranges":[{"startOffset":412,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"internals.email","ranges":[{"startOffset":509,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"internals.local","ranges":[{"startOffset":1887,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"internals.binary","ranges":[{"startOffset":2609,"endOffset":2728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"604","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@sideway/address/lib/ip.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1915,"count":1}],"isBlockCoverage":true},{"functionName":"exports.regex","ranges":[{"startOffset":137,"endOffset":1913,"count":1},{"startOffset":345,"endOffset":357,"count":0},{"startOffset":545,"endOffset":583,"count":0},{"startOffset":584,"endOffset":617,"count":0},{"startOffset":781,"endOffset":819,"count":0},{"startOffset":960,"endOffset":1282,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1376,"endOffset":1781,"count":3},{"startOffset":1495,"endOffset":1583,"count":0},{"startOffset":1584,"endOffset":1599,"count":0},{"startOffset":1637,"endOffset":1780,"count":0}],"isBlockCoverage":true}]},{"scriptId":"605","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@sideway/address/lib/uri.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9909,"count":1}],"isBlockCoverage":true},{"functionName":"internals.generate","ranges":[{"startOffset":170,"endOffset":6972,"count":1}],"isBlockCoverage":true},{"functionName":"internals.createRegex","ranges":[{"startOffset":7268,"endOffset":9252,"count":1},{"startOffset":7406,"endOffset":7435,"count":0},{"startOffset":7629,"endOffset":7653,"count":0},{"startOffset":7704,"endOffset":7761,"count":0},{"startOffset":7837,"endOffset":8850,"count":0},{"startOffset":8950,"endOffset":8978,"count":0},{"startOffset":9053,"endOffset":9074,"count":0},{"startOffset":9139,"endOffset":9180,"count":0}],"isBlockCoverage":true},{"functionName":"internals.wrap","ranges":[{"startOffset":9273,"endOffset":9562,"count":1}],"isBlockCoverage":true},{"functionName":"exports.regex","ranges":[{"startOffset":9632,"endOffset":9907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"606","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@hapi/hoek/lib/escapeRegex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":198,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":56,"endOffset":196,"count":0}],"isBlockCoverage":false}]},{"scriptId":"607","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/@sideway/address/lib/tlds.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20907,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20877,"endOffset":20903,"count":1504}],"isBlockCoverage":true}]},{"scriptId":"608","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2313,"count":1}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":162,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":363,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":774,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":963,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":2028,"endOffset":2165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"609","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/joi/lib/types/binary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2412,"count":1}],"isBlockCoverage":true},{"functionName":"method","ranges":[{"startOffset":256,"endOffset":438,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":451,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":643,"endOffset":822,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":865,"endOffset":1004,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1018,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1581,"endOffset":1718,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":1758,"endOffset":1895,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":1962,"endOffset":1995,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":2009,"endOffset":2085,"count":0}],"isBlockCoverage":false}]},{"scriptId":"610","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1517,"count":1}],"isBlockCoverage":true},{"functionName":"signIn","ranges":[{"startOffset":161,"endOffset":883,"count":2},{"startOffset":573,"endOffset":645,"count":0}],"isBlockCoverage":true},{"functionName":"get_token_payload","ranges":[{"startOffset":911,"endOffset":1050,"count":6},{"startOffset":1007,"endOffset":1048,"count":0}],"isBlockCoverage":true},{"functionName":"check_token","ranges":[{"startOffset":1072,"endOffset":1444,"count":3},{"startOffset":1167,"endOffset":1443,"count":0}],"isBlockCoverage":true}]},{"scriptId":"611","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":276,"count":1}],"isBlockCoverage":true}]},{"scriptId":"612","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/decode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":767,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":44,"endOffset":765,"count":6},{"startOffset":90,"endOffset":95,"count":0},{"startOffset":155,"endOffset":171,"count":0},{"startOffset":266,"endOffset":421,"count":0},{"startOffset":745,"endOffset":764,"count":0}],"isBlockCoverage":true}]},{"scriptId":"613","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jws/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":609,"count":1}],"isBlockCoverage":true},{"functionName":"createSign","ranges":[{"startOffset":458,"endOffset":518,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":543,"endOffset":607,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jws/lib/sign-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2197,"count":1}],"isBlockCoverage":true},{"functionName":"base64url","ranges":[{"startOffset":230,"endOffset":412,"count":4}],"isBlockCoverage":true},{"functionName":"jwsSecuredInput","ranges":[{"startOffset":414,"endOffset":688,"count":2},{"startOffset":490,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"jwsSign","ranges":[{"startOffset":690,"endOffset":1065,"count":2},{"startOffset":805,"endOffset":823,"count":0}],"isBlockCoverage":true},{"functionName":"SignStream","ranges":[{"startOffset":1067,"endOffset":1643,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":1708,"endOffset":2137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jws/lib/data-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1242,"count":1}],"isBlockCoverage":true},{"functionName":"DataStream","ranges":[{"startOffset":132,"endOffset":844,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":910,"endOffset":1026,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1056,"endOffset":1210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"616","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jwa/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6501,"count":1}],"isBlockCoverage":true},{"functionName":"checkIsPublicKey","ranges":[{"startOffset":821,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPrivateKey","ranges":[{"startOffset":1407,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsSecretKey","ranges":[{"startOffset":1635,"endOffset":2088,"count":8},{"startOffset":1696,"endOffset":1713,"count":0},{"startOffset":1767,"endOffset":2086,"count":0}],"isBlockCoverage":true},{"functionName":"fromBase64","ranges":[{"startOffset":2090,"endOffset":2211,"count":8}],"isBlockCoverage":true},{"functionName":"toBase64","ranges":[{"startOffset":2213,"endOffset":2491,"count":0}],"isBlockCoverage":false},{"functionName":"typeError","ranges":[{"startOffset":2493,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"bufferOrString","ranges":[{"startOffset":2668,"endOffset":2758,"count":8}],"isBlockCoverage":true},{"functionName":"normalizeInput","ranges":[{"startOffset":2760,"endOffset":2875,"count":8},{"startOffset":2827,"endOffset":2857,"count":0}],"isBlockCoverage":true},{"functionName":"createHmacSigner","ranges":[{"startOffset":2877,"endOffset":3163,"count":14}],"isBlockCoverage":true},{"functionName":"sign","ranges":[{"startOffset":2920,"endOffset":3161,"count":8}],"isBlockCoverage":true},{"functionName":"createHmacVerifier","ranges":[{"startOffset":3165,"endOffset":3394,"count":8}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":3210,"endOffset":3392,"count":6}],"isBlockCoverage":true},{"functionName":"createKeySigner","ranges":[{"startOffset":3396,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"createKeyVerifier","ranges":[{"startOffset":3796,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"createPSSKeySigner","ranges":[{"startOffset":4145,"endOffset":4588,"count":0}],"isBlockCoverage":false},{"functionName":"createPSSKeyVerifier","ranges":[{"startOffset":4590,"endOffset":5073,"count":0}],"isBlockCoverage":false},{"functionName":"createECDSASigner","ranges":[{"startOffset":5075,"endOffset":5315,"count":0}],"isBlockCoverage":false},{"functionName":"createECDSAVerifer","ranges":[{"startOffset":5317,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"createNoneSigner","ranges":[{"startOffset":5610,"endOffset":5687,"count":0}],"isBlockCoverage":false},{"functionName":"createNoneVerifier","ranges":[{"startOffset":5689,"endOffset":5800,"count":0}],"isBlockCoverage":false},{"functionName":"jwa","ranges":[{"startOffset":5819,"endOffset":6499,"count":8},{"startOffset":6275,"endOffset":6325,"count":0},{"startOffset":6349,"endOffset":6360,"count":0}],"isBlockCoverage":true}]},{"scriptId":"617","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/buffer-equal-constant-time/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1045,"count":1}],"isBlockCoverage":true},{"functionName":"bufferEq","ranges":[{"startOffset":165,"endOffset":671,"count":6},{"startOffset":297,"endOffset":320,"count":0},{"startOffset":512,"endOffset":535,"count":0},{"startOffset":587,"endOffset":651,"count":258}],"isBlockCoverage":true},{"functionName":"bufferEq.install","ranges":[{"startOffset":692,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"bufferEq.restore","ranges":[{"startOffset":939,"endOffset":1043,"count":0}],"isBlockCoverage":false}]},{"scriptId":"618","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5009,"count":1}],"isBlockCoverage":true},{"functionName":"base64Url","ranges":[{"startOffset":347,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"signatureAsBuffer","ranges":[{"startOffset":462,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"derToJose","ranges":[{"startOffset":729,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"countPadding","ranges":[{"startOffset":3184,"endOffset":3430,"count":0}],"isBlockCoverage":false},{"functionName":"joseToDer","ranges":[{"startOffset":3432,"endOffset":4940,"count":0}],"isBlockCoverage":false}]},{"scriptId":"619","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"getParamSize","ranges":[{"startOffset":15,"endOffset":130,"count":3},{"startOffset":103,"endOffset":106,"count":2},{"startOffset":107,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"getParamBytesForAlg","ranges":[{"startOffset":241,"endOffset":416,"count":0}],"isBlockCoverage":false}]},{"scriptId":"620","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jws/lib/tostring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":262,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":75,"endOffset":260,"count":16},{"startOffset":135,"endOffset":146,"count":12},{"startOffset":146,"endOffset":200,"count":4},{"startOffset":206,"endOffset":228,"count":0},{"startOffset":228,"endOffset":259,"count":4}],"isBlockCoverage":true}]},{"scriptId":"621","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jws/lib/verify-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3226,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":306,"endOffset":404,"count":12}],"isBlockCoverage":true},{"functionName":"safeJsonParse","ranges":[{"startOffset":406,"endOffset":550,"count":12},{"startOffset":465,"endOffset":478,"count":0},{"startOffset":517,"endOffset":548,"count":0}],"isBlockCoverage":true},{"functionName":"headerFromJWS","ranges":[{"startOffset":552,"endOffset":714,"count":12}],"isBlockCoverage":true},{"functionName":"securedInputFromJWS","ranges":[{"startOffset":716,"endOffset":797,"count":6}],"isBlockCoverage":true},{"functionName":"signatureFromJWS","ranges":[{"startOffset":799,"endOffset":867,"count":12}],"isBlockCoverage":true},{"functionName":"payloadFromJWS","ranges":[{"startOffset":869,"endOffset":1045,"count":6}],"isBlockCoverage":true},{"functionName":"isValidJws","ranges":[{"startOffset":1047,"endOffset":1138,"count":6}],"isBlockCoverage":true},{"functionName":"jwsVerify","ranges":[{"startOffset":1140,"endOffset":1552,"count":6},{"startOffset":1211,"endOffset":1338,"count":0}],"isBlockCoverage":true},{"functionName":"jwsDecode","ranges":[{"startOffset":1554,"endOffset":1988,"count":6},{"startOffset":1603,"endOffset":1608,"count":0},{"startOffset":1671,"endOffset":1683,"count":0},{"startOffset":1743,"endOffset":1755,"count":0},{"startOffset":1824,"endOffset":1836,"count":0}],"isBlockCoverage":true},{"functionName":"VerifyStream","ranges":[{"startOffset":1990,"endOffset":2615,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":2685,"endOffset":3090,"count":0}],"isBlockCoverage":false}]},{"scriptId":"622","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/verify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6939,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":687,"endOffset":6937,"count":6},{"startOffset":786,"endOffset":798,"count":0},{"startOffset":800,"endOffset":847,"count":0},{"startOffset":1015,"endOffset":1041,"count":0},{"startOffset":1168,"endOffset":1213,"count":0},{"startOffset":1215,"endOffset":1295,"count":0},{"startOffset":1331,"endOffset":1400,"count":0},{"startOffset":1402,"endOffset":1483,"count":0},{"startOffset":1583,"endOffset":1652,"count":0},{"startOffset":1691,"endOffset":1760,"count":0},{"startOffset":1824,"endOffset":1886,"count":0},{"startOffset":1979,"endOffset":2017,"count":0},{"startOffset":2040,"endOffset":2102,"count":0},{"startOffset":2204,"endOffset":2401,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":1060,"endOffset":1132,"count":6},{"startOffset":1097,"endOffset":1107,"count":0}],"isBlockCoverage":true},{"functionName":"getSecret","ranges":[{"startOffset":2427,"endOffset":2521,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2555,"endOffset":6933,"count":6},{"startOffset":2602,"endOffset":2709,"count":0},{"startOffset":2781,"endOffset":2801,"count":0},{"startOffset":2802,"endOffset":2880,"count":0},{"startOffset":2926,"endOffset":3016,"count":0},{"startOffset":3040,"endOffset":3062,"count":0},{"startOffset":3064,"endOffset":3108,"count":0},{"startOffset":3296,"endOffset":3310,"count":0},{"startOffset":3383,"endOffset":3397,"count":0},{"startOffset":3480,"endOffset":3550,"count":0},{"startOffset":3665,"endOffset":3704,"count":0},{"startOffset":3722,"endOffset":3792,"count":0},{"startOffset":3878,"endOffset":3905,"count":0},{"startOffset":3907,"endOffset":4203,"count":0},{"startOffset":4323,"endOffset":4397,"count":0},{"startOffset":4471,"endOffset":4569,"count":0},{"startOffset":4603,"endOffset":5156,"count":0},{"startOffset":5182,"endOffset":5529,"count":0},{"startOffset":5556,"endOffset":5713,"count":0},{"startOffset":5738,"endOffset":5889,"count":0},{"startOffset":5914,"endOffset":6067,"count":0},{"startOffset":6093,"endOffset":6690,"count":0},{"startOffset":6727,"endOffset":6896,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4808,"endOffset":5014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"623","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/lib/JsonWebTokenError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":428,"count":1}],"isBlockCoverage":true},{"functionName":"JsonWebTokenError","ranges":[{"startOffset":24,"endOffset":265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"624","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/lib/NotBeforeError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":362,"count":1}],"isBlockCoverage":true},{"functionName":"NotBeforeError","ranges":[{"startOffset":78,"endOffset":199,"count":0}],"isBlockCoverage":false}]},{"scriptId":"625","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/lib/TokenExpiredError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":395,"count":1}],"isBlockCoverage":true},{"functionName":"TokenExpiredError","ranges":[{"startOffset":81,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"626","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/lib/timespan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":412,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":42,"endOffset":411,"count":2},{"startOffset":87,"endOffset":119,"count":0},{"startOffset":154,"endOffset":315,"count":0},{"startOffset":385,"endOffset":408,"count":0}],"isBlockCoverage":true}]},{"scriptId":"627","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/lib/psSupported.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107,"count":1}],"isBlockCoverage":true}]},{"scriptId":"629","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/semver/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38803,"count":1},{"startOffset":153,"endOffset":202,"count":0},{"startOffset":204,"endOffset":355,"count":0},{"startOffset":622,"endOffset":670,"count":0},{"startOffset":7960,"endOffset":8033,"count":35},{"startOffset":7995,"endOffset":8031,"count":32}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":216,"endOffset":353,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":373,"endOffset":387,"count":82}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":8057,"endOffset":8579,"count":2},{"startOffset":8108,"endOffset":8138,"count":0},{"startOffset":8257,"endOffset":8281,"count":0},{"startOffset":8318,"endOffset":8339,"count":0},{"startOffset":8376,"endOffset":8397,"count":0},{"startOffset":8423,"endOffset":8434,"count":0},{"startOffset":8470,"endOffset":8491,"count":0},{"startOffset":8545,"endOffset":8577,"count":0}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":8603,"endOffset":8704,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":8728,"endOffset":8858,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer","ranges":[{"startOffset":8885,"endOffset":10577,"count":12},{"startOffset":8937,"endOffset":8967,"count":9},{"startOffset":8969,"endOffset":9051,"count":3},{"startOffset":9085,"endOffset":9205,"count":6},{"startOffset":9156,"endOffset":9201,"count":0},{"startOffset":9205,"endOffset":9304,"count":6},{"startOffset":9244,"endOffset":9304,"count":0},{"startOffset":9304,"endOffset":9341,"count":6},{"startOffset":9341,"endOffset":9426,"count":0},{"startOffset":9426,"endOffset":9461,"count":6},{"startOffset":9461,"endOffset":9506,"count":0},{"startOffset":9506,"endOffset":9646,"count":6},{"startOffset":9646,"endOffset":9657,"count":0},{"startOffset":9658,"endOffset":9668,"count":6},{"startOffset":9681,"endOffset":9741,"count":0},{"startOffset":9741,"endOffset":9914,"count":6},{"startOffset":9916,"endOffset":9970,"count":0},{"startOffset":9970,"endOffset":10025,"count":6},{"startOffset":10027,"endOffset":10081,"count":0},{"startOffset":10081,"endOffset":10136,"count":6},{"startOffset":10138,"endOffset":10192,"count":0},{"startOffset":10192,"endOffset":10279,"count":6},{"startOffset":10279,"endOffset":10515,"count":0},{"startOffset":10515,"endOffset":10537,"count":6},{"startOffset":10537,"endOffset":10554,"count":0},{"startOffset":10555,"endOffset":10559,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10329,"endOffset":10510,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.format","ranges":[{"startOffset":10605,"endOffset":10796,"count":6},{"startOffset":10715,"endOffset":10772,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.toString","ranges":[{"startOffset":10826,"endOffset":10863,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compare","ranges":[{"startOffset":10892,"endOffset":11117,"count":3},{"startOffset":11006,"endOffset":11055,"count":0},{"startOffset":11090,"endOffset":11115,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.compareMain","ranges":[{"startOffset":11150,"endOffset":11420,"count":3},{"startOffset":11203,"endOffset":11252,"count":0},{"startOffset":11307,"endOffset":11362,"count":0},{"startOffset":11363,"endOffset":11418,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.comparePre","ranges":[{"startOffset":11452,"endOffset":12239,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.inc","ranges":[{"startOffset":12409,"endOffset":15470,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":15490,"endOffset":15747,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":15769,"endOffset":16297,"count":0}],"isBlockCoverage":false},{"functionName":"compareIdentifiers","ranges":[{"startOffset":16373,"endOffset":16618,"count":3},{"startOffset":16535,"endOffset":16538,"count":0},{"startOffset":16561,"endOffset":16565,"count":0},{"startOffset":16588,"endOffset":16591,"count":0},{"startOffset":16604,"endOffset":16608,"count":0}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":16670,"endOffset":16743,"count":0}],"isBlockCoverage":false},{"functionName":"major","ranges":[{"startOffset":16767,"endOffset":16832,"count":0}],"isBlockCoverage":false},{"functionName":"minor","ranges":[{"startOffset":16856,"endOffset":16921,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":16945,"endOffset":17010,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":17038,"endOffset":17132,"count":3}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":17170,"endOffset":17231,"count":0}],"isBlockCoverage":false},{"functionName":"rcompare","ranges":[{"startOffset":17261,"endOffset":17326,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":17348,"endOffset":17461,"count":0}],"isBlockCoverage":false},{"functionName":"rsort","ranges":[{"startOffset":17485,"endOffset":17600,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":17618,"endOffset":17681,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":17699,"endOffset":17762,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":17780,"endOffset":17845,"count":0}],"isBlockCoverage":false},{"functionName":"neq","ranges":[{"startOffset":17865,"endOffset":17931,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":17951,"endOffset":18016,"count":2}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":18036,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"cmp","ranges":[{"startOffset":18121,"endOffset":18835,"count":3},{"startOffset":18174,"endOffset":18316,"count":0},{"startOffset":18322,"endOffset":18464,"count":0},{"startOffset":18470,"endOffset":18478,"count":0},{"startOffset":18483,"endOffset":18492,"count":0},{"startOffset":18497,"endOffset":18536,"count":0},{"startOffset":18542,"endOffset":18582,"count":0},{"startOffset":18588,"endOffset":18626,"count":0},{"startOffset":18632,"endOffset":18672,"count":2},{"startOffset":18678,"endOffset":18716,"count":1},{"startOffset":18722,"endOffset":18762,"count":0},{"startOffset":18768,"endOffset":18829,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":18869,"endOffset":19521,"count":3},{"startOffset":18954,"endOffset":19036,"count":0},{"startOffset":19072,"endOffset":19180,"count":0},{"startOffset":19219,"endOffset":19265,"count":0},{"startOffset":19407,"endOffset":19432,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.parse","ranges":[{"startOffset":19565,"endOffset":19998,"count":3},{"startOffset":19612,"endOffset":19633,"count":0},{"startOffset":19686,"endOffset":19746,"count":0},{"startOffset":19800,"endOffset":19828,"count":0},{"startOffset":19903,"endOffset":19930,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.toString","ranges":[{"startOffset":20032,"endOffset":20067,"count":3}],"isBlockCoverage":true},{"functionName":"Comparator.test","ranges":[{"startOffset":20097,"endOffset":20380,"count":3},{"startOffset":20202,"endOffset":20223,"count":0},{"startOffset":20260,"endOffset":20313,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.intersects","ranges":[{"startOffset":20416,"endOffset":22036,"count":0}],"isBlockCoverage":false},{"functionName":"Range","ranges":[{"startOffset":22060,"endOffset":23117,"count":1},{"startOffset":22109,"endOffset":22139,"count":0},{"startOffset":22255,"endOffset":22451,"count":0},{"startOffset":22488,"endOffset":22536,"count":0},{"startOffset":22570,"endOffset":22612,"count":0},{"startOffset":23035,"endOffset":23098,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22829,"endOffset":22892,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22907,"endOffset":23008,"count":2}],"isBlockCoverage":true},{"functionName":"Range.format","ranges":[{"startOffset":23144,"endOffset":23283,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23186,"endOffset":23242,"count":2}],"isBlockCoverage":true},{"functionName":"Range.toString","ranges":[{"startOffset":23312,"endOffset":23347,"count":0}],"isBlockCoverage":false},{"functionName":"Range.parseRange","ranges":[{"startOffset":23378,"endOffset":24600,"count":2},{"startOffset":23512,"endOffset":23534,"count":0},{"startOffset":24144,"endOffset":24165,"count":0},{"startOffset":24341,"endOffset":24493,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24216,"endOffset":24284,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24431,"endOffset":24488,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24510,"endOffset":24577,"count":3}],"isBlockCoverage":true},{"functionName":"Range.intersects","ranges":[{"startOffset":24631,"endOffset":25086,"count":0}],"isBlockCoverage":false},{"functionName":"toComparators","ranges":[{"startOffset":25176,"endOffset":25376,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":25522,"endOffset":25857,"count":2}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":25859,"endOffset":25935,"count":12}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":26208,"endOffset":26360,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26287,"endOffset":26347,"count":3}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":26362,"endOffset":27146,"count":3},{"startOffset":26426,"endOffset":26442,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26480,"endOffset":27143,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":27345,"endOffset":27497,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27424,"endOffset":27484,"count":2}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":27499,"endOffset":28980,"count":2},{"startOffset":27595,"endOffset":27611,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27649,"endOffset":28977,"count":1},{"startOffset":27747,"endOffset":27769,"count":0},{"startOffset":27787,"endOffset":27846,"count":0},{"startOffset":27864,"endOffset":28049,"count":0},{"startOffset":28063,"endOffset":28515,"count":0},{"startOffset":28565,"endOffset":28821,"count":0}],"isBlockCoverage":true},{"functionName":"replaceXRanges","ranges":[{"startOffset":28982,"endOffset":29170,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29096,"endOffset":29157,"count":3}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":29172,"endOffset":30696,"count":3},{"startOffset":29258,"endOffset":29275,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29314,"endOffset":30693,"count":3},{"startOffset":29512,"endOffset":29519,"count":0},{"startOffset":29521,"endOffset":29544,"count":0},{"startOffset":29558,"endOffset":29733,"count":0},{"startOffset":29757,"endOffset":30478,"count":0},{"startOffset":30492,"endOffset":30551,"count":0},{"startOffset":30565,"endOffset":30640,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":30821,"endOffset":31013,"count":2}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":31227,"endOffset":31797,"count":0}],"isBlockCoverage":false},{"functionName":"Range.test","ranges":[{"startOffset":31884,"endOffset":32180,"count":1},{"startOffset":31921,"endOffset":31943,"count":0},{"startOffset":32079,"endOffset":32163,"count":2},{"startOffset":32134,"endOffset":32159,"count":1},{"startOffset":32163,"endOffset":32179,"count":0}],"isBlockCoverage":true},{"functionName":"testSet","ranges":[{"startOffset":32182,"endOffset":33203,"count":2},{"startOffset":32264,"endOffset":32327,"count":3},{"startOffset":32297,"endOffset":32323,"count":1},{"startOffset":32327,"endOffset":32361,"count":1},{"startOffset":32361,"endOffset":32390,"count":0},{"startOffset":32392,"endOffset":33186,"count":0},{"startOffset":33186,"endOffset":33202,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":33235,"endOffset":33396,"count":1},{"startOffset":33332,"endOffset":33365,"count":0}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":33436,"endOffset":33882,"count":0}],"isBlockCoverage":false},{"functionName":"minSatisfying","ranges":[{"startOffset":33922,"endOffset":34367,"count":0}],"isBlockCoverage":false},{"functionName":"minVersion","ranges":[{"startOffset":34401,"endOffset":35644,"count":0}],"isBlockCoverage":false},{"functionName":"validRange","ranges":[{"startOffset":35678,"endOffset":35917,"count":0}],"isBlockCoverage":false},{"functionName":"ltr","ranges":[{"startOffset":36013,"endOffset":36102,"count":0}],"isBlockCoverage":false},{"functionName":"gtr","ranges":[{"startOffset":36202,"endOffset":36291,"count":0}],"isBlockCoverage":false},{"functionName":"outside","ranges":[{"startOffset":36319,"endOffset":38110,"count":0}],"isBlockCoverage":false},{"functionName":"prerelease","ranges":[{"startOffset":38144,"endOffset":38298,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":38332,"endOffset":38460,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":38486,"endOffset":38802,"count":0}],"isBlockCoverage":false}]},{"scriptId":"630","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/jsonwebtoken/sign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6823,"count":1}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":669,"endOffset":743,"count":2},{"startOffset":711,"endOffset":740,"count":0}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":859,"endOffset":933,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":1048,"endOffset":1115,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2166,"endOffset":2711,"count":4},{"startOffset":2261,"endOffset":2345,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2381,"endOffset":2707,"count":6},{"startOffset":2454,"endOffset":2604,"count":2},{"startOffset":2483,"endOffset":2580,"count":0},{"startOffset":2604,"endOffset":2648,"count":4},{"startOffset":2648,"endOffset":2701,"count":0}],"isBlockCoverage":true},{"functionName":"validateOptions","ranges":[{"startOffset":2713,"endOffset":2817,"count":2}],"isBlockCoverage":true},{"functionName":"validatePayload","ranges":[{"startOffset":2819,"endOffset":2927,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":3183,"endOffset":6821,"count":2},{"startOffset":3280,"endOffset":3327,"count":0},{"startOffset":3357,"endOffset":3362,"count":0},{"startOffset":3534,"endOffset":3544,"count":0},{"startOffset":3579,"endOffset":3590,"count":0},{"startOffset":3764,"endOffset":3795,"count":0},{"startOffset":3797,"endOffset":3873,"count":0},{"startOffset":3913,"endOffset":3972,"count":0},{"startOffset":4053,"endOffset":4103,"count":0},{"startOffset":4190,"endOffset":4497,"count":0},{"startOffset":4540,"endOffset":4583,"count":0},{"startOffset":4585,"endOffset":4698,"count":0},{"startOffset":4741,"endOffset":4784,"count":0},{"startOffset":4786,"endOffset":4899,"count":0},{"startOffset":4945,"endOffset":4991,"count":0},{"startOffset":5085,"endOffset":5114,"count":0},{"startOffset":5225,"endOffset":5541,"count":0},{"startOffset":5704,"endOffset":5750,"count":0},{"startOffset":5795,"endOffset":5934,"count":0},{"startOffset":6405,"endOffset":6703,"count":0}],"isBlockCoverage":true},{"functionName":"failure","ranges":[{"startOffset":3640,"endOffset":3736,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4251,"endOffset":4323,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5982,"endOffset":6317,"count":8},{"startOffset":6085,"endOffset":6313,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6632,"endOffset":6697,"count":0}],"isBlockCoverage":false}]},{"scriptId":"631","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash.includes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18716,"count":1}],"isBlockCoverage":true},{"functionName":"arrayMap","ranges":[{"startOffset":1595,"endOffset":1831,"count":0}],"isBlockCoverage":false},{"functionName":"baseFindIndex","ranges":[{"startOffset":2276,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"baseIndexOf","ranges":[{"startOffset":2885,"endOffset":3183,"count":2},{"startOffset":2956,"endOffset":3016,"count":0},{"startOffset":3103,"endOffset":3168,"count":20},{"startOffset":3137,"endOffset":3164,"count":2},{"startOffset":3168,"endOffset":3182,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsNaN","ranges":[{"startOffset":3396,"endOffset":3451,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":3766,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"baseValues","ranges":[{"startOffset":4283,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":4648,"endOffset":4748,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4693,"endOffset":4745,"count":0}],"isBlockCoverage":false},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":5646,"endOffset":6195,"count":0}],"isBlockCoverage":false},{"functionName":"baseKeys","ranges":[{"startOffset":6407,"endOffset":6675,"count":0}],"isBlockCoverage":false},{"functionName":"isIndex","ranges":[{"startOffset":6950,"endOffset":7173,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototype","ranges":[{"startOffset":7367,"endOffset":7542,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":8490,"endOffset":8969,"count":2},{"startOffset":8599,"endOffset":8619,"count":0},{"startOffset":8646,"endOffset":8655,"count":0},{"startOffset":8657,"endOffset":8679,"count":0},{"startOffset":8741,"endOffset":8796,"count":0},{"startOffset":8831,"endOffset":8899,"count":0}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":9358,"endOffset":9626,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":10704,"endOffset":10807,"count":2}],"isBlockCoverage":true},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":11333,"endOffset":11422,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":11762,"endOffset":12054,"count":2},{"startOffset":12005,"endOffset":12009,"count":0}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":12601,"endOffset":12729,"count":2}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":13312,"endOffset":13429,"count":2},{"startOffset":13404,"endOffset":13425,"count":0}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":13928,"endOffset":14006,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":14351,"endOffset":14505,"count":2},{"startOffset":14436,"endOffset":14458,"count":0},{"startOffset":14459,"endOffset":14501,"count":0}],"isBlockCoverage":true},{"functionName":"isSymbol","ranges":[{"startOffset":14864,"endOffset":14999,"count":0}],"isBlockCoverage":false},{"functionName":"toFinite","ranges":[{"startOffset":15405,"endOffset":15677,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":16202,"endOffset":16370,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":16743,"endOffset":17333,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":17963,"endOffset":18061,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":18603,"endOffset":18687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"632","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash.isboolean/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1819,"count":1}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":1085,"endOffset":1228,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":1711,"endOffset":1789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"633","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash.isinteger/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6036,"count":1}],"isBlockCoverage":true},{"functionName":"isInteger","ranges":[{"startOffset":1808,"endOffset":1901,"count":2}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":2484,"endOffset":2601,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":3100,"endOffset":3178,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":3537,"endOffset":3672,"count":0}],"isBlockCoverage":false},{"functionName":"toFinite","ranges":[{"startOffset":4078,"endOffset":4350,"count":2},{"startOffset":4119,"endOffset":4160,"count":0},{"startOffset":4237,"endOffset":4310,"count":0},{"startOffset":4344,"endOffset":4347,"count":0}],"isBlockCoverage":true},{"functionName":"toInteger","ranges":[{"startOffset":4875,"endOffset":5043,"count":2},{"startOffset":5006,"endOffset":5026,"count":0},{"startOffset":5037,"endOffset":5040,"count":0}],"isBlockCoverage":true},{"functionName":"toNumber","ranges":[{"startOffset":5416,"endOffset":6006,"count":2},{"startOffset":5498,"endOffset":5903,"count":0},{"startOffset":5909,"endOffset":5957,"count":0},{"startOffset":5962,"endOffset":6003,"count":0}],"isBlockCoverage":true}]},{"scriptId":"634","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash.isnumber/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2025,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":1224,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":1861,"endOffset":1996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"635","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash.isplainobject/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3673,"count":1}],"isBlockCoverage":true},{"functionName":"isHostObject","ranges":[{"startOffset":661,"endOffset":988,"count":4},{"startOffset":904,"endOffset":969,"count":0}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":1244,"endOffset":1344,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1289,"endOffset":1341,"count":4}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":2533,"endOffset":2611,"count":4}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":3212,"endOffset":3639,"count":4},{"startOffset":3344,"endOffset":3367,"count":0},{"startOffset":3425,"endOffset":3447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"636","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash.isstring/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2302,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":1700,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":2119,"endOffset":2273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash.once/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7094,"count":1}],"isBlockCoverage":true},{"functionName":"before","ranges":[{"startOffset":2051,"endOffset":2357,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":2915,"endOffset":2964,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":3547,"endOffset":3664,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLike","ranges":[{"startOffset":4163,"endOffset":4241,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":4600,"endOffset":4735,"count":0}],"isBlockCoverage":false},{"functionName":"toFinite","ranges":[{"startOffset":5141,"endOffset":5413,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5938,"endOffset":6106,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":6479,"endOffset":7069,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/database/tables/user.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":712,"count":1}],"isBlockCoverage":true},{"functionName":"addTable","ranges":[{"startOffset":376,"endOffset":413,"count":1}],"isBlockCoverage":true},{"functionName":"hashPassword","ranges":[{"startOffset":447,"endOffset":506,"count":2}],"isBlockCoverage":true},{"functionName":"matchesPassword","ranges":[{"startOffset":532,"endOffset":642,"count":2}],"isBlockCoverage":true}]},{"scriptId":"639","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"640","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/sequelize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21229,"count":1},{"startOffset":20681,"endOffset":20729,"count":46},{"startOffset":21040,"endOffset":21088,"count":29}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":691},{"startOffset":373,"endOffset":459,"count":9},{"startOffset":460,"endOffset":478,"count":682}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":135},{"startOffset":534,"endOffset":545,"count":31},{"startOffset":551,"endOffset":623,"count":691},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"Sequelize","ranges":[{"startOffset":2059,"endOffset":7720,"count":1},{"startOffset":2159,"endOffset":2190,"count":0},{"startOffset":2192,"endOffset":2309,"count":0},{"startOffset":2342,"endOffset":2373,"count":0},{"startOffset":2400,"endOffset":2431,"count":0},{"startOffset":2433,"endOffset":3990,"count":0},{"startOffset":4022,"endOffset":4027,"count":0},{"startOffset":4975,"endOffset":5061,"count":0},{"startOffset":5109,"endOffset":5157,"count":0},{"startOffset":5239,"endOffset":5405,"count":0},{"startOffset":5445,"endOffset":5530,"count":0},{"startOffset":5620,"endOffset":5644,"count":0},{"startOffset":5678,"endOffset":5702,"count":0},{"startOffset":5736,"endOffset":5760,"count":0},{"startOffset":5761,"endOffset":5768,"count":0},{"startOffset":6321,"endOffset":6400,"count":0},{"startOffset":6407,"endOffset":6482,"count":0},{"startOffset":6489,"endOffset":6564,"count":0},{"startOffset":6571,"endOffset":6652,"count":0},{"startOffset":6743,"endOffset":6814,"count":0},{"startOffset":6821,"endOffset":6904,"count":0},{"startOffset":6911,"endOffset":7067,"count":0},{"startOffset":7241,"endOffset":7374,"count":0},{"startOffset":7436,"endOffset":7487,"count":0}],"isBlockCoverage":true},{"functionName":"refreshTypes","ranges":[{"startOffset":7723,"endOffset":7800,"count":0}],"isBlockCoverage":false},{"functionName":"getDialect","ranges":[{"startOffset":7803,"endOffset":7854,"count":1}],"isBlockCoverage":true},{"functionName":"getDatabaseName","ranges":[{"startOffset":7857,"endOffset":7913,"count":0}],"isBlockCoverage":false},{"functionName":"getQueryInterface","ranges":[{"startOffset":7916,"endOffset":7973,"count":208}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":7976,"endOffset":8192,"count":3}],"isBlockCoverage":true},{"functionName":"model","ranges":[{"startOffset":8195,"endOffset":8371,"count":0}],"isBlockCoverage":false},{"functionName":"isDefined","ranges":[{"startOffset":8374,"endOffset":8481,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8440,"endOffset":8475,"count":3}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":8484,"endOffset":12292,"count":33},{"startOffset":8616,"endOffset":8633,"count":4},{"startOffset":8635,"endOffset":8694,"count":4},{"startOffset":8721,"endOffset":8738,"count":29},{"startOffset":8740,"endOffset":8773,"count":17},{"startOffset":8802,"endOffset":8881,"count":0},{"startOffset":9018,"endOffset":9031,"count":0},{"startOffset":9116,"endOffset":9141,"count":0},{"startOffset":9185,"endOffset":9356,"count":9},{"startOffset":9245,"endOffset":9296,"count":0},{"startOffset":9399,"endOffset":9430,"count":0},{"startOffset":9431,"endOffset":9480,"count":0},{"startOffset":9481,"endOffset":9520,"count":0},{"startOffset":9562,"endOffset":9638,"count":0},{"startOffset":9672,"endOffset":10214,"count":4},{"startOffset":9707,"endOffset":9922,"count":0},{"startOffset":9993,"endOffset":10100,"count":0},{"startOffset":10266,"endOffset":10281,"count":0},{"startOffset":10283,"endOffset":10378,"count":0},{"startOffset":10409,"endOffset":10666,"count":0},{"startOffset":10713,"endOffset":10832,"count":4}],"isBlockCoverage":true},{"functionName":"checkTransaction","ranges":[{"startOffset":10862,"endOffset":11254,"count":66},{"startOffset":10900,"endOffset":10931,"count":0},{"startOffset":10932,"endOffset":10964,"count":0},{"startOffset":10966,"endOffset":11248,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11369,"endOffset":12272,"count":33},{"startOffset":11443,"endOffset":11517,"count":0},{"startOffset":11596,"endOffset":11628,"count":0},{"startOffset":11720,"endOffset":11736,"count":0},{"startOffset":11738,"endOffset":11841,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":12295,"endOffset":12975,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":12978,"endOffset":13051,"count":1}],"isBlockCoverage":true},{"functionName":"createSchema","ranges":[{"startOffset":13054,"endOffset":13168,"count":0}],"isBlockCoverage":false},{"functionName":"showAllSchemas","ranges":[{"startOffset":13171,"endOffset":13273,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":13276,"endOffset":13386,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllSchemas","ranges":[{"startOffset":13389,"endOffset":13491,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":13494,"endOffset":14469,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":14472,"endOffset":14858,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":14861,"endOffset":15105,"count":0}],"isBlockCoverage":false},{"functionName":"authenticate","ranges":[{"startOffset":15108,"endOffset":15322,"count":2}],"isBlockCoverage":true},{"functionName":"databaseVersion","ranges":[{"startOffset":15325,"endOffset":15429,"count":0}],"isBlockCoverage":false},{"functionName":"random","ranges":[{"startOffset":15432,"endOffset":15587,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":15597,"endOffset":15653,"count":0}],"isBlockCoverage":false},{"functionName":"col","ranges":[{"startOffset":15663,"endOffset":15708,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":15718,"endOffset":15777,"count":0}],"isBlockCoverage":false},{"functionName":"literal","ranges":[{"startOffset":15787,"endOffset":15840,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":15850,"endOffset":15899,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":15909,"endOffset":15956,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":15966,"endOffset":16053,"count":0}],"isBlockCoverage":false},{"functionName":"where","ranges":[{"startOffset":16063,"endOffset":16152,"count":0}],"isBlockCoverage":false},{"functionName":"transaction","ranges":[{"startOffset":16155,"endOffset":16949,"count":0}],"isBlockCoverage":false},{"functionName":"useCLS","ranges":[{"startOffset":16959,"endOffset":17174,"count":0}],"isBlockCoverage":false},{"functionName":"_clsRun","ranges":[{"startOffset":17184,"endOffset":17337,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":17340,"endOffset":18017,"count":35},{"startOffset":17622,"endOffset":17665,"count":0},{"startOffset":17729,"endOffset":17815,"count":0},{"startOffset":17872,"endOffset":17906,"count":0},{"startOffset":17908,"endOffset":17975,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":18020,"endOffset":18076,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeDataType","ranges":[{"startOffset":18079,"endOffset":18607,"count":126},{"startOffset":18147,"endOffset":18159,"count":19},{"startOffset":18160,"endOffset":18166,"count":107},{"startOffset":18216,"endOffset":18221,"count":0},{"startOffset":18255,"endOffset":18312,"count":114},{"startOffset":18354,"endOffset":18586,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeAttribute","ranges":[{"startOffset":18610,"endOffset":19515,"count":61},{"startOffset":18679,"endOffset":18725,"count":0},{"startOffset":18757,"endOffset":18774,"count":0},{"startOffset":18909,"endOffset":19133,"count":0},{"startOffset":19184,"endOffset":19489,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":19991,"endOffset":20049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/pg-connection-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2674,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":242,"endOffset":2628,"count":0}],"isBlockCoverage":false}]},{"scriptId":"642","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/retry-as-promised/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3508,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":70,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":294,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"retryAsPromised","ranges":[{"startOffset":711,"endOffset":3461,"count":33},{"startOffset":786,"endOffset":901,"count":0},{"startOffset":938,"endOffset":985,"count":0},{"startOffset":1151,"endOffset":1156,"count":0},{"startOffset":1215,"endOffset":1236,"count":0},{"startOffset":1433,"endOffset":1465,"count":0}],"isBlockCoverage":true},{"functionName":"options.report","ranges":[{"startOffset":1321,"endOffset":1335,"count":33}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1610,"endOffset":3457,"count":33},{"startOffset":1708,"endOffset":1914,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1737,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2010,"endOffset":2132,"count":33},{"startOffset":2044,"endOffset":2066,"count":0},{"startOffset":2095,"endOffset":2124,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":3451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"643","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/lodash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":544096,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":338,"endOffset":544082,"count":1},{"startOffset":17825,"endOffset":17832,"count":0},{"startOffset":17833,"endOffset":17858,"count":0},{"startOffset":17859,"endOffset":17866,"count":0},{"startOffset":17944,"endOffset":17955,"count":0},{"startOffset":17956,"endOffset":17984,"count":0},{"startOffset":543270,"endOffset":543302,"count":0},{"startOffset":543303,"endOffset":543316,"count":0},{"startOffset":543318,"endOffset":543789,"count":0},{"startOffset":544015,"endOffset":544080,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18578,"endOffset":18945,"count":1},{"startOffset":18781,"endOffset":18890,"count":0},{"startOffset":18891,"endOffset":18921,"count":0},{"startOffset":18929,"endOffset":18941,"count":0}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":19779,"endOffset":20109,"count":133},{"startOffset":19850,"endOffset":19884,"count":0},{"startOffset":19891,"endOffset":19934,"count":12},{"startOffset":19941,"endOffset":19993,"count":121},{"startOffset":20000,"endOffset":20061,"count":0},{"startOffset":20067,"endOffset":20108,"count":0}],"isBlockCoverage":true},{"functionName":"arrayAggregator","ranges":[{"startOffset":20506,"endOffset":20797,"count":7},{"startOffset":20622,"endOffset":20625,"count":0}],"isBlockCoverage":true},{"functionName":"arrayEach","ranges":[{"startOffset":21093,"endOffset":21344,"count":124},{"startOffset":21182,"endOffset":21185,"count":0},{"startOffset":21232,"endOffset":21322,"count":1102},{"startOffset":21292,"endOffset":21316,"count":0}],"isBlockCoverage":true},{"functionName":"arrayEachRight","ranges":[{"startOffset":21645,"endOffset":21875,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEvery","ranges":[{"startOffset":22232,"endOffset":22483,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFilter","ranges":[{"startOffset":22794,"endOffset":23129,"count":152},{"startOffset":22886,"endOffset":22889,"count":0},{"startOffset":22979,"endOffset":23106,"count":337},{"startOffset":23055,"endOffset":23100,"count":335}],"isBlockCoverage":true},{"functionName":"arrayIncludes","ranges":[{"startOffset":23452,"endOffset":23603,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIncludesWith","ranges":[{"startOffset":23961,"endOffset":24220,"count":0}],"isBlockCoverage":false},{"functionName":"arrayMap","ranges":[{"startOffset":24525,"endOffset":24785,"count":52},{"startOffset":24613,"endOffset":24616,"count":0},{"startOffset":24695,"endOffset":24762,"count":170}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":25005,"endOffset":25228,"count":245},{"startOffset":25154,"endOffset":25206,"count":157}],"isBlockCoverage":true},{"functionName":"arrayReduce","ranges":[{"startOffset":25687,"endOffset":26031,"count":33},{"startOffset":25802,"endOffset":25805,"count":0},{"startOffset":25841,"endOffset":25850,"count":0},{"startOffset":25852,"endOffset":25895,"count":0},{"startOffset":25925,"endOffset":26003,"count":50}],"isBlockCoverage":true},{"functionName":"arrayReduceRight","ranges":[{"startOffset":26494,"endOffset":26817,"count":0}],"isBlockCoverage":false},{"functionName":"arraySome","ranges":[{"startOffset":27174,"endOffset":27423,"count":0}],"isBlockCoverage":false},{"functionName":"asciiToArray","ranges":[{"startOffset":27816,"endOffset":27880,"count":0}],"isBlockCoverage":false},{"functionName":"asciiWords","ranges":[{"startOffset":28070,"endOffset":28147,"count":0}],"isBlockCoverage":false},{"functionName":"baseFindKey","ranges":[{"startOffset":28645,"endOffset":28906,"count":0}],"isBlockCoverage":false},{"functionName":"baseFindIndex","ranges":[{"startOffset":29375,"endOffset":29682,"count":0}],"isBlockCoverage":false},{"functionName":"baseIndexOf","ranges":[{"startOffset":30022,"endOffset":30199,"count":0}],"isBlockCoverage":false},{"functionName":"baseIndexOfWith","ranges":[{"startOffset":30608,"endOffset":30865,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNaN","ranges":[{"startOffset":31094,"endOffset":31153,"count":0}],"isBlockCoverage":false},{"functionName":"baseMean","ranges":[{"startOffset":31452,"endOffset":31606,"count":0}],"isBlockCoverage":false},{"functionName":"baseProperty","ranges":[{"startOffset":31835,"endOffset":31959,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31875,"endOffset":31954,"count":25},{"startOffset":31922,"endOffset":31933,"count":0}],"isBlockCoverage":true},{"functionName":"basePropertyOf","ranges":[{"startOffset":32182,"endOffset":32308,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32227,"endOffset":32303,"count":0}],"isBlockCoverage":false},{"functionName":"baseReduce","ranges":[{"startOffset":32929,"endOffset":33230,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33032,"endOffset":33200,"count":65},{"startOffset":33107,"endOffset":33135,"count":0}],"isBlockCoverage":true},{"functionName":"baseSortBy","ranges":[{"startOffset":33590,"endOffset":33780,"count":0}],"isBlockCoverage":false},{"functionName":"baseSum","ranges":[{"startOffset":34076,"endOffset":34396,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":34731,"endOffset":34906,"count":0}],"isBlockCoverage":false},{"functionName":"baseToPairs","ranges":[{"startOffset":35276,"endOffset":35401,"count":0}],"isBlockCoverage":false},{"functionName":"baseTrim","ranges":[{"startOffset":35577,"endOffset":35720,"count":0}],"isBlockCoverage":false},{"functionName":"baseUnary","ranges":[{"startOffset":35956,"endOffset":36048,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35994,"endOffset":36043,"count":240}],"isBlockCoverage":true},{"functionName":"baseValues","ranges":[{"startOffset":36426,"endOffset":36543,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36490,"endOffset":36537,"count":12}],"isBlockCoverage":true},{"functionName":"cacheHas","ranges":[{"startOffset":36813,"endOffset":36875,"count":0}],"isBlockCoverage":false},{"functionName":"charsStartIndex","ranges":[{"startOffset":37246,"endOffset":37461,"count":0}],"isBlockCoverage":false},{"functionName":"charsEndIndex","ranges":[{"startOffset":37828,"endOffset":38011,"count":0}],"isBlockCoverage":false},{"functionName":"countHolders","ranges":[{"startOffset":38269,"endOffset":38485,"count":0}],"isBlockCoverage":false},{"functionName":"escapeStringChar","ranges":[{"startOffset":39290,"endOffset":39364,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":39595,"endOffset":39684,"count":7},{"startOffset":39654,"endOffset":39665,"count":0}],"isBlockCoverage":true},{"functionName":"hasUnicode","ranges":[{"startOffset":39895,"endOffset":39966,"count":5}],"isBlockCoverage":true},{"functionName":"hasUnicodeWord","ranges":[{"startOffset":40194,"endOffset":40273,"count":0}],"isBlockCoverage":false},{"functionName":"iteratorToArray","ranges":[{"startOffset":40452,"endOffset":40629,"count":0}],"isBlockCoverage":false},{"functionName":"mapToArray","ranges":[{"startOffset":40804,"endOffset":40993,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":41267,"endOffset":41375,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41314,"endOffset":41370,"count":736}],"isBlockCoverage":true},{"functionName":"replaceHolders","ranges":[{"startOffset":41706,"endOffset":42078,"count":0}],"isBlockCoverage":false},{"functionName":"setToArray","ranges":[{"startOffset":42247,"endOffset":42424,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42345,"endOffset":42399,"count":2}],"isBlockCoverage":true},{"functionName":"setToPairs","ranges":[{"startOffset":42603,"endOffset":42789,"count":0}],"isBlockCoverage":false},{"functionName":"strictIndexOf","ranges":[{"startOffset":43163,"endOffset":43397,"count":0}],"isBlockCoverage":false},{"functionName":"strictLastIndexOf","ranges":[{"startOffset":43775,"endOffset":43975,"count":0}],"isBlockCoverage":false},{"functionName":"stringSize","ranges":[{"startOffset":44154,"endOffset":44272,"count":0}],"isBlockCoverage":false},{"functionName":"stringToArray","ranges":[{"startOffset":44445,"endOffset":44572,"count":0}],"isBlockCoverage":false},{"functionName":"trimmedEndIndex","ranges":[{"startOffset":44847,"endOffset":45001,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeSize","ranges":[{"startOffset":45444,"endOffset":45598,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeToArray","ranges":[{"startOffset":45781,"endOffset":45860,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeWords","ranges":[{"startOffset":46051,"endOffset":46132,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":46990,"endOffset":543025,"count":1},{"startOffset":47060,"endOffset":47124,"count":0},{"startOffset":49023,"endOffset":49034,"count":0},{"startOffset":49160,"endOffset":49171,"count":0},{"startOffset":49437,"endOffset":49448,"count":0},{"startOffset":49497,"endOffset":49508,"count":0},{"startOffset":49563,"endOffset":49574,"count":0},{"startOffset":49861,"endOffset":49884,"count":0},{"startOffset":49938,"endOffset":49949,"count":0},{"startOffset":50014,"endOffset":50035,"count":0},{"startOffset":50304,"endOffset":50315,"count":0},{"startOffset":51565,"endOffset":51576,"count":0},{"startOffset":51636,"endOffset":51647,"count":0},{"startOffset":51709,"endOffset":51720,"count":0},{"startOffset":132120,"endOffset":132130,"count":0},{"startOffset":132534,"endOffset":132544,"count":0},{"startOffset":181139,"endOffset":181145,"count":0},{"startOffset":197016,"endOffset":197022,"count":0},{"startOffset":201026,"endOffset":201037,"count":0},{"startOffset":201557,"endOffset":201568,"count":0},{"startOffset":202355,"endOffset":202934,"count":0},{"startOffset":212256,"endOffset":212268,"count":0},{"startOffset":369389,"endOffset":369543,"count":0},{"startOffset":370622,"endOffset":370641,"count":0},{"startOffset":373203,"endOffset":373215,"count":0},{"startOffset":373688,"endOffset":373700,"count":0},{"startOffset":384049,"endOffset":384060,"count":0},{"startOffset":391938,"endOffset":391952,"count":0},{"startOffset":393298,"endOffset":393309,"count":0},{"startOffset":394942,"endOffset":394960,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48099,"endOffset":48263,"count":1},{"startOffset":48153,"endOffset":48171,"count":0},{"startOffset":48172,"endOffset":48199,"count":0},{"startOffset":48225,"endOffset":48251,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49603,"endOffset":49757,"count":1},{"startOffset":49739,"endOffset":49751,"count":0}],"isBlockCoverage":true},{"functionName":"lodash","ranges":[{"startOffset":58305,"endOffset":58654,"count":62},{"startOffset":58379,"endOffset":58413,"count":48},{"startOffset":58415,"endOffset":58609,"count":48},{"startOffset":58461,"endOffset":58496,"count":0},{"startOffset":58552,"endOffset":58601,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":58939,"endOffset":59291,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":58958,"endOffset":58978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58992,"endOffset":59284,"count":110},{"startOffset":59040,"endOffset":59072,"count":0},{"startOffset":59148,"endOffset":59283,"count":0}],"isBlockCoverage":true},{"functionName":"baseLodash","ranges":[{"startOffset":59414,"endOffset":59476,"count":0}],"isBlockCoverage":false},{"functionName":"LodashWrapper","ranges":[{"startOffset":59706,"endOffset":59910,"count":69}],"isBlockCoverage":true},{"functionName":"LazyWrapper","ranges":[{"startOffset":61864,"endOffset":62120,"count":14}],"isBlockCoverage":true},{"functionName":"lazyClone","ranges":[{"startOffset":62330,"endOffset":62734,"count":7}],"isBlockCoverage":true},{"functionName":"lazyReverse","ranges":[{"startOffset":62950,"endOffset":63225,"count":0}],"isBlockCoverage":false},{"functionName":"lazyValue","ranges":[{"startOffset":63426,"endOffset":64844,"count":7},{"startOffset":63614,"endOffset":63628,"count":0},{"startOffset":63804,"endOffset":63809,"count":0},{"startOffset":64011,"endOffset":64070,"count":0},{"startOffset":64139,"endOffset":64222,"count":0},{"startOffset":64224,"endOffset":64843,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":65259,"endOffset":65504,"count":2},{"startOffset":65345,"endOffset":65361,"count":0},{"startOffset":65415,"endOffset":65498,"count":0}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":65642,"endOffset":65753,"count":2},{"startOffset":65721,"endOffset":65725,"count":0}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":66078,"endOffset":66229,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":66452,"endOffset":66711,"count":31},{"startOffset":66607,"endOffset":66618,"count":0},{"startOffset":66636,"endOffset":66692,"count":0},{"startOffset":66693,"endOffset":66704,"count":0}],"isBlockCoverage":true},{"functionName":"hashHas","ranges":[{"startOffset":66986,"endOffset":67135,"count":37},{"startOffset":67096,"endOffset":67128,"count":0}],"isBlockCoverage":true},{"functionName":"hashSet","ranges":[{"startOffset":67408,"endOffset":67619,"count":3},{"startOffset":67504,"endOffset":67507,"count":0},{"startOffset":67569,"endOffset":67585,"count":0}],"isBlockCoverage":true},{"functionName":"ListCache","ranges":[{"startOffset":68079,"endOffset":68329,"count":78},{"startOffset":68170,"endOffset":68186,"count":0},{"startOffset":68240,"endOffset":68323,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":68478,"endOffset":68558,"count":78}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":68846,"endOffset":69201,"count":12},{"startOffset":68975,"endOffset":69006,"count":0},{"startOffset":69105,"endOffset":69157,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":69435,"endOffset":69598,"count":134},{"startOffset":69563,"endOffset":69574,"count":129},{"startOffset":69575,"endOffset":69591,"count":5}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":69884,"endOffset":69970,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":70260,"endOffset":70528,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":71066,"endOffset":71315,"count":1},{"startOffset":71156,"endOffset":71172,"count":0},{"startOffset":71226,"endOffset":71309,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":71456,"endOffset":71634,"count":1},{"startOffset":71578,"endOffset":71590,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":71914,"endOffset":72063,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":72289,"endOffset":72367,"count":31}],"isBlockCoverage":true},{"functionName":"mapCacheHas","ranges":[{"startOffset":72645,"endOffset":72723,"count":34}],"isBlockCoverage":true},{"functionName":"mapCacheSet","ranges":[{"startOffset":73004,"endOffset":73206,"count":3},{"startOffset":73173,"endOffset":73176,"count":0}],"isBlockCoverage":true},{"functionName":"SetCache","ranges":[{"startOffset":73731,"endOffset":73952,"count":0}],"isBlockCoverage":false},{"functionName":"setCacheAdd","ranges":[{"startOffset":74196,"endOffset":74298,"count":0}],"isBlockCoverage":false},{"functionName":"setCacheHas","ranges":[{"startOffset":74558,"endOffset":74632,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":75048,"endOffset":75165,"count":78}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":75305,"endOffset":75392,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":75671,"endOffset":75827,"count":12}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":76052,"endOffset":76119,"count":134}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":76396,"endOffset":76463,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":76745,"endOffset":77189,"count":125},{"startOffset":77047,"endOffset":77188,"count":0}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":77808,"endOffset":78951,"count":0}],"isBlockCoverage":false},{"functionName":"arraySample","ranges":[{"startOffset":79148,"endOffset":79284,"count":0}],"isBlockCoverage":false},{"functionName":"arraySampleSize","ranges":[{"startOffset":79549,"endOffset":79666,"count":0}],"isBlockCoverage":false},{"functionName":"arrayShuffle","ranges":[{"startOffset":79873,"endOffset":79953,"count":0}],"isBlockCoverage":false},{"functionName":"assignMergeValue","ranges":[{"startOffset":80257,"endOffset":80480,"count":51},{"startOffset":80364,"endOffset":80418,"count":20},{"startOffset":80398,"endOffset":80417,"count":0},{"startOffset":80420,"endOffset":80474,"count":31}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":80895,"endOffset":81157,"count":1015},{"startOffset":81017,"endOffset":81039,"count":0},{"startOffset":81041,"endOffset":81095,"count":0}],"isBlockCoverage":true},{"functionName":"assocIndexOf","ranges":[{"startOffset":81454,"endOffset":81654,"count":146},{"startOffset":81546,"endOffset":81631,"count":96},{"startOffset":81587,"endOffset":81623,"count":17},{"startOffset":81631,"endOffset":81653,"count":129}],"isBlockCoverage":true},{"functionName":"baseAggregator","ranges":[{"startOffset":82158,"endOffset":82395,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssign","ranges":[{"startOffset":82702,"endOffset":82810,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssignIn","ranges":[{"startOffset":83119,"endOffset":83231,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssignValue","ranges":[{"startOffset":83535,"endOffset":83854,"count":1233},{"startOffset":83611,"endOffset":83628,"count":0},{"startOffset":83630,"endOffset":83804,"count":0}],"isBlockCoverage":true},{"functionName":"baseAt","ranges":[{"startOffset":84148,"endOffset":84441,"count":0}],"isBlockCoverage":false},{"functionName":"baseClamp","ranges":[{"startOffset":84760,"endOffset":85064,"count":0}],"isBlockCoverage":false},{"functionName":"baseClone","ranges":[{"startOffset":85711,"endOffset":88167,"count":831},{"startOffset":85962,"endOffset":86056,"count":202},{"startOffset":85988,"endOffset":86027,"count":135},{"startOffset":86028,"endOffset":86047,"count":67},{"startOffset":86089,"endOffset":86121,"count":0},{"startOffset":86150,"endOffset":86181,"count":605},{"startOffset":86181,"endOffset":86233,"count":226},{"startOffset":86233,"endOffset":86358,"count":14},{"startOffset":86296,"endOffset":86350,"count":0},{"startOffset":86358,"endOffset":87052,"count":212},{"startOffset":86435,"endOffset":86451,"count":104},{"startOffset":86483,"endOffset":86539,"count":0},{"startOffset":86569,"endOffset":86586,"count":108},{"startOffset":86587,"endOffset":86609,"count":108},{"startOffset":86611,"endOffset":86883,"count":104},{"startOffset":86651,"endOffset":86655,"count":0},{"startOffset":86705,"endOffset":86873,"count":0},{"startOffset":86883,"endOffset":87044,"count":108},{"startOffset":86962,"endOffset":86966,"count":0},{"startOffset":86979,"endOffset":87044,"count":0},{"startOffset":87052,"endOffset":87140,"count":118},{"startOffset":87140,"endOffset":87162,"count":73},{"startOffset":87221,"endOffset":87254,"count":5},{"startOffset":87254,"endOffset":87312,"count":113},{"startOffset":87312,"endOffset":87464,"count":0},{"startOffset":87464,"endOffset":87645,"count":113},{"startOffset":87488,"endOffset":87645,"count":0},{"startOffset":87645,"endOffset":87721,"count":113},{"startOffset":87693,"endOffset":87707,"count":0},{"startOffset":87730,"endOffset":87756,"count":0},{"startOffset":87783,"endOffset":87794,"count":10},{"startOffset":87795,"endOffset":87812,"count":103},{"startOffset":87836,"endOffset":87844,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87336,"endOffset":87454,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":87512,"endOffset":87635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":87846,"endOffset":88138,"count":758},{"startOffset":87891,"endOffset":87961,"count":271}],"isBlockCoverage":true},{"functionName":"baseConforms","ranges":[{"startOffset":88426,"endOffset":88590,"count":0}],"isBlockCoverage":false},{"functionName":"baseConformsTo","ranges":[{"startOffset":88925,"endOffset":89371,"count":0}],"isBlockCoverage":false},{"functionName":"baseDelay","ranges":[{"startOffset":89788,"endOffset":90001,"count":0}],"isBlockCoverage":false},{"functionName":"baseDifference","ranges":[{"startOffset":90497,"endOffset":91742,"count":12},{"startOffset":90761,"endOffset":90793,"count":4},{"startOffset":90793,"endOffset":90814,"count":8},{"startOffset":90814,"endOffset":90879,"count":0},{"startOffset":90879,"endOffset":90902,"count":8},{"startOffset":90902,"endOffset":90975,"count":0},{"startOffset":90975,"endOffset":91129,"count":8},{"startOffset":91026,"endOffset":91129,"count":0},{"startOffset":91129,"endOffset":91174,"count":8},{"startOffset":91174,"endOffset":91715,"count":46},{"startOffset":91258,"endOffset":91275,"count":0},{"startOffset":91330,"endOffset":91333,"count":0},{"startOffset":91458,"endOffset":91567,"count":215},{"startOffset":91510,"endOffset":91555,"count":46},{"startOffset":91567,"endOffset":91707,"count":0},{"startOffset":91715,"endOffset":91741,"count":8}],"isBlockCoverage":true},{"functionName":"baseEvery","ranges":[{"startOffset":92878,"endOffset":93126,"count":0}],"isBlockCoverage":false},{"functionName":"baseExtremum","ranges":[{"startOffset":93555,"endOffset":94057,"count":0}],"isBlockCoverage":false},{"functionName":"baseFill","ranges":[{"startOffset":94434,"endOffset":94898,"count":0}],"isBlockCoverage":false},{"functionName":"baseFilter","ranges":[{"startOffset":95228,"endOffset":95487,"count":0}],"isBlockCoverage":false},{"functionName":"baseFlatten","ranges":[{"startOffset":96014,"endOffset":96691,"count":20},{"startOffset":96152,"endOffset":96182,"count":12},{"startOffset":96247,"endOffset":96664,"count":69},{"startOffset":96326,"endOffset":96583,"count":13},{"startOffset":96353,"endOffset":96516,"count":0},{"startOffset":96583,"endOffset":96656,"count":56}],"isBlockCoverage":true},{"functionName":"baseForOwn","ranges":[{"startOffset":97998,"endOffset":98099,"count":159}],"isBlockCoverage":true},{"functionName":"baseForOwnRight","ranges":[{"startOffset":98406,"endOffset":98517,"count":0}],"isBlockCoverage":false},{"functionName":"baseFunctions","ranges":[{"startOffset":98862,"endOffset":99005,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98934,"endOffset":98997,"count":325}],"isBlockCoverage":true},{"functionName":"baseGet","ranges":[{"startOffset":99294,"endOffset":99590,"count":132},{"startOffset":99447,"endOffset":99464,"count":230},{"startOffset":99466,"endOffset":99522,"count":140},{"startOffset":99563,"endOffset":99571,"count":94},{"startOffset":99572,"endOffset":99583,"count":38}],"isBlockCoverage":true},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":100099,"endOffset":100278,"count":119},{"startOffset":100222,"endOffset":100230,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":100504,"endOffset":100759,"count":981},{"startOffset":100558,"endOffset":100628,"count":0},{"startOffset":100702,"endOffset":100720,"count":8},{"startOffset":100729,"endOffset":100752,"count":973}],"isBlockCoverage":true},{"functionName":"baseGt","ranges":[{"startOffset":101074,"endOffset":101139,"count":0}],"isBlockCoverage":false},{"functionName":"baseHas","ranges":[{"startOffset":101434,"endOffset":101536,"count":0}],"isBlockCoverage":false},{"functionName":"baseHasIn","ranges":[{"startOffset":101833,"endOffset":101926,"count":29}],"isBlockCoverage":true},{"functionName":"baseInRange","ranges":[{"startOffset":102286,"endOffset":102414,"count":0}],"isBlockCoverage":false},{"functionName":"baseIntersection","ranges":[{"startOffset":102876,"endOffset":104492,"count":12},{"startOffset":102966,"endOffset":102985,"count":0},{"startOffset":103227,"endOffset":103594,"count":24},{"startOffset":103288,"endOffset":103299,"count":12},{"startOffset":103301,"endOffset":103368,"count":0},{"startOffset":103495,"endOffset":103517,"count":0},{"startOffset":103530,"endOffset":103563,"count":0},{"startOffset":103715,"endOffset":103743,"count":0},{"startOffset":103745,"endOffset":104465,"count":0}],"isBlockCoverage":true},{"functionName":"baseInverter","ranges":[{"startOffset":105002,"endOffset":105221,"count":0}],"isBlockCoverage":false},{"functionName":"baseInvoke","ranges":[{"startOffset":105616,"endOffset":105874,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsArguments","ranges":[{"startOffset":106092,"endOffset":106197,"count":71},{"startOffset":106159,"endOffset":106190,"count":11}],"isBlockCoverage":true},{"functionName":"baseIsArrayBuffer","ranges":[{"startOffset":106455,"endOffset":106569,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsDate","ranges":[{"startOffset":106818,"endOffset":106918,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsEqual","ranges":[{"startOffset":107533,"endOffset":107899,"count":20},{"startOffset":107625,"endOffset":107655,"count":0},{"startOffset":107697,"endOffset":107746,"count":0},{"startOffset":107781,"endOffset":107799,"count":0},{"startOffset":107808,"endOffset":107898,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsEqualDeep","ranges":[{"startOffset":108666,"endOffset":110348,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsMap","ranges":[{"startOffset":110588,"endOffset":110682,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsMatch","ranges":[{"startOffset":111181,"endOffset":112424,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNative","ranges":[{"startOffset":112681,"endOffset":112907,"count":7},{"startOffset":112759,"endOffset":112790,"count":0},{"startOffset":112842,"endOffset":112856,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsRegExp","ranges":[{"startOffset":113153,"endOffset":113257,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsSet","ranges":[{"startOffset":113497,"endOffset":113591,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":113846,"endOffset":113993,"count":0}],"isBlockCoverage":false},{"functionName":"baseIteratee","ranges":[{"startOffset":114209,"endOffset":114730,"count":217},{"startOffset":114443,"endOffset":114474,"count":202},{"startOffset":114474,"endOffset":114500,"count":15},{"startOffset":114500,"endOffset":114534,"count":0},{"startOffset":114534,"endOffset":114571,"count":15},{"startOffset":114571,"endOffset":114694,"count":0},{"startOffset":114694,"endOffset":114729,"count":15}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":114974,"endOffset":115286,"count":305},{"startOffset":115034,"endOffset":115078,"count":303},{"startOffset":115078,"endOffset":115140,"count":2},{"startOffset":115140,"endOffset":115259,"count":618},{"startOffset":115187,"endOffset":115210,"count":40},{"startOffset":115212,"endOffset":115251,"count":38},{"startOffset":115259,"endOffset":115285,"count":2}],"isBlockCoverage":true},{"functionName":"baseKeysIn","ranges":[{"startOffset":115532,"endOffset":115896,"count":103},{"startOffset":115591,"endOffset":115637,"count":0},{"startOffset":115733,"endOffset":115869,"count":516},{"startOffset":115770,"endOffset":115819,"count":0}],"isBlockCoverage":true},{"functionName":"baseLt","ranges":[{"startOffset":116208,"endOffset":116273,"count":0}],"isBlockCoverage":false},{"functionName":"baseMap","ranges":[{"startOffset":116597,"endOffset":116895,"count":11},{"startOffset":116703,"endOffset":116729,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116764,"endOffset":116866,"count":7}],"isBlockCoverage":true},{"functionName":"baseMatches","ranges":[{"startOffset":117144,"endOffset":117477,"count":0}],"isBlockCoverage":false},{"functionName":"baseMatchesProperty","ranges":[{"startOffset":117774,"endOffset":118226,"count":0}],"isBlockCoverage":false},{"functionName":"baseMerge","ranges":[{"startOffset":118691,"endOffset":119366,"count":17},{"startOffset":118786,"endOffset":118811,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":118834,"endOffset":119350,"count":51},{"startOffset":118874,"endOffset":118896,"count":5},{"startOffset":118930,"endOffset":119027,"count":16},{"startOffset":119027,"endOffset":119342,"count":35},{"startOffset":119091,"endOffset":119170,"count":20},{"startOffset":119183,"endOffset":119194,"count":15},{"startOffset":119235,"endOffset":119281,"count":25}],"isBlockCoverage":true},{"functionName":"baseMergeDeep","ranges":[{"startOffset":120067,"endOffset":122010,"count":16},{"startOffset":120300,"endOffset":120373,"count":0},{"startOffset":120414,"endOffset":120481,"count":12},{"startOffset":120490,"endOffset":120501,"count":4},{"startOffset":120570,"endOffset":121701,"count":14},{"startOffset":120799,"endOffset":121303,"count":0},{"startOffset":121345,"endOffset":121369,"count":2},{"startOffset":121371,"endOffset":121640,"count":12},{"startOffset":121441,"endOffset":121502,"count":0},{"startOffset":121542,"endOffset":121565,"count":8},{"startOffset":121567,"endOffset":121630,"count":4},{"startOffset":121640,"endOffset":121693,"count":2},{"startOffset":121722,"endOffset":121957,"count":12}],"isBlockCoverage":true},{"functionName":"baseNth","ranges":[{"startOffset":122294,"endOffset":122493,"count":0}],"isBlockCoverage":false},{"functionName":"baseOrderBy","ranges":[{"startOffset":122877,"endOffset":123786,"count":0}],"isBlockCoverage":false},{"functionName":"basePick","ranges":[{"startOffset":124091,"endOffset":124240,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":124165,"endOffset":124232,"count":29}],"isBlockCoverage":true},{"functionName":"basePickBy","ranges":[{"startOffset":124599,"endOffset":124976,"count":12},{"startOffset":124757,"endOffset":124949,"count":94}],"isBlockCoverage":true},{"functionName":"basePropertyDeep","ranges":[{"startOffset":125224,"endOffset":125342,"count":0}],"isBlockCoverage":false},{"functionName":"basePullAll","ranges":[{"startOffset":125768,"endOffset":126545,"count":0}],"isBlockCoverage":false},{"functionName":"basePullAt","ranges":[{"startOffset":126874,"endOffset":127330,"count":0}],"isBlockCoverage":false},{"functionName":"baseRandom","ranges":[{"startOffset":127625,"endOffset":127738,"count":0}],"isBlockCoverage":false},{"functionName":"baseRange","ranges":[{"startOffset":128183,"endOffset":128500,"count":0}],"isBlockCoverage":false},{"functionName":"baseRepeat","ranges":[{"startOffset":128795,"endOffset":129307,"count":0}],"isBlockCoverage":false},{"functionName":"baseRest","ranges":[{"startOffset":129652,"endOffset":129760,"count":38}],"isBlockCoverage":true},{"functionName":"baseSample","ranges":[{"startOffset":129965,"endOffset":130050,"count":0}],"isBlockCoverage":false},{"functionName":"baseSampleSize","ranges":[{"startOffset":130344,"endOffset":130492,"count":0}],"isBlockCoverage":false},{"functionName":"baseSet","ranges":[{"startOffset":130863,"endOffset":131814,"count":94},{"startOffset":130944,"endOffset":130976,"count":0},{"startOffset":131159,"endOffset":131178,"count":184},{"startOffset":131332,"endOffset":131368,"count":0},{"startOffset":131402,"endOffset":131705,"count":0}],"isBlockCoverage":true},{"functionName":"baseSetData","ranges":[{"startOffset":132133,"endOffset":132211,"count":0}],"isBlockCoverage":false},{"functionName":"baseSetToString","ranges":[{"startOffset":132547,"endOffset":132754,"count":50}],"isBlockCoverage":true},{"functionName":"baseShuffle","ranges":[{"startOffset":132970,"endOffset":133056,"count":0}],"isBlockCoverage":false},{"functionName":"baseSlice","ranges":[{"startOffset":133392,"endOffset":133892,"count":0}],"isBlockCoverage":false},{"functionName":"baseSome","ranges":[{"startOffset":134270,"endOffset":134512,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":134359,"endOffset":134481,"count":25}],"isBlockCoverage":true},{"functionName":"baseSortedIndex","ranges":[{"startOffset":135085,"endOffset":135733,"count":0}],"isBlockCoverage":false},{"functionName":"baseSortedIndexBy","ranges":[{"startOffset":136375,"endOffset":137827,"count":0}],"isBlockCoverage":false},{"functionName":"baseSortedUniq","ranges":[{"startOffset":138172,"endOffset":138621,"count":0}],"isBlockCoverage":false},{"functionName":"baseToNumber","ranges":[{"startOffset":138900,"endOffset":139082,"count":0}],"isBlockCoverage":false},{"functionName":"baseToString","ranges":[{"startOffset":139327,"endOffset":139882,"count":39},{"startOffset":139506,"endOffset":139858,"count":0},{"startOffset":139860,"endOffset":139866,"count":0},{"startOffset":139867,"endOffset":139875,"count":0}],"isBlockCoverage":true},{"functionName":"baseUniq","ranges":[{"startOffset":140269,"endOffset":141637,"count":7},{"startOffset":140507,"endOffset":140580,"count":0},{"startOffset":140624,"endOffset":140834,"count":0},{"startOffset":140872,"endOffset":140876,"count":0},{"startOffset":140939,"endOffset":141610,"count":104},{"startOffset":141007,"endOffset":141024,"count":0},{"startOffset":141087,"endOffset":141090,"count":0},{"startOffset":141210,"endOffset":141315,"count":721},{"startOffset":141258,"endOffset":141303,"count":0},{"startOffset":141340,"endOffset":141386,"count":0},{"startOffset":141426,"endOffset":141602,"count":0}],"isBlockCoverage":true},{"functionName":"baseUnset","ranges":[{"startOffset":141924,"endOffset":142103,"count":57}],"isBlockCoverage":true},{"functionName":"baseUpdate","ranges":[{"startOffset":142514,"endOffset":142656,"count":0}],"isBlockCoverage":false},{"functionName":"baseWhile","ranges":[{"startOffset":143158,"endOffset":143599,"count":0}],"isBlockCoverage":false},{"functionName":"baseWrapperValue","ranges":[{"startOffset":144043,"endOffset":144365,"count":33},{"startOffset":144154,"endOffset":144196,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144231,"endOffset":144349,"count":50}],"isBlockCoverage":true},{"functionName":"baseXor","ranges":[{"startOffset":144811,"endOffset":145414,"count":0}],"isBlockCoverage":false},{"functionName":"baseZipObject","ranges":[{"startOffset":145769,"endOffset":146122,"count":0}],"isBlockCoverage":false},{"functionName":"castArrayLikeObject","ranges":[{"startOffset":146353,"endOffset":146448,"count":24},{"startOffset":146437,"endOffset":146441,"count":0}],"isBlockCoverage":true},{"functionName":"castFunction","ranges":[{"startOffset":146648,"endOffset":146744,"count":0}],"isBlockCoverage":false},{"functionName":"castPath","ranges":[{"startOffset":147012,"endOffset":147187,"count":463},{"startOffset":147073,"endOffset":147104,"count":285},{"startOffset":147104,"endOffset":147139,"count":178},{"startOffset":147139,"endOffset":147148,"count":144},{"startOffset":147149,"endOffset":147180,"count":34}],"isBlockCoverage":true},{"functionName":"castSlice","ranges":[{"startOffset":147808,"endOffset":148011,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":148270,"endOffset":148326,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBuffer","ranges":[{"startOffset":148567,"endOffset":148840,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":149056,"endOffset":149258,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDataView","ranges":[{"startOffset":149507,"endOffset":149725,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRegExp","ranges":[{"startOffset":149909,"endOffset":150089,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSymbol","ranges":[{"startOffset":150298,"endOffset":150404,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":150661,"endOffset":150889,"count":0}],"isBlockCoverage":false},{"functionName":"compareAscending","ranges":[{"startOffset":151159,"endOffset":152298,"count":0}],"isBlockCoverage":false},{"functionName":"compareMultiple","ranges":[{"startOffset":152927,"endOffset":153963,"count":0}],"isBlockCoverage":false},{"functionName":"composeArgs","ranges":[{"startOffset":154506,"endOffset":155272,"count":0}],"isBlockCoverage":false},{"functionName":"composeArgsRight","ranges":[{"startOffset":155778,"endOffset":156649,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":156906,"endOffset":157143,"count":64},{"startOffset":157070,"endOffset":157117,"count":36}],"isBlockCoverage":true},{"functionName":"copyObject","ranges":[{"startOffset":157557,"endOffset":158183,"count":34},{"startOffset":157654,"endOffset":157670,"count":0},{"startOffset":157760,"endOffset":158156,"count":163},{"startOffset":157839,"endOffset":157898,"count":0},{"startOffset":158024,"endOffset":158085,"count":0}],"isBlockCoverage":true},{"functionName":"copySymbols","ranges":[{"startOffset":158451,"endOffset":158556,"count":0}],"isBlockCoverage":false},{"functionName":"copySymbolsIn","ranges":[{"startOffset":158838,"endOffset":158947,"count":0}],"isBlockCoverage":false},{"functionName":"createAggregator","ranges":[{"startOffset":159247,"endOffset":159572,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":159309,"endOffset":159565,"count":7},{"startOffset":159399,"endOffset":159415,"count":0},{"startOffset":159455,"endOffset":159470,"count":0}],"isBlockCoverage":true},{"functionName":"createAssigner","ranges":[{"startOffset":159787,"endOffset":160610,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":159845,"endOffset":160602,"count":31},{"startOffset":159970,"endOffset":159991,"count":23},{"startOffset":159992,"endOffset":160003,"count":8},{"startOffset":160036,"endOffset":160048,"count":0},{"startOffset":160105,"endOffset":160139,"count":30},{"startOffset":160151,"endOffset":160175,"count":23},{"startOffset":160186,"endOffset":160197,"count":8},{"startOffset":160218,"endOffset":160266,"count":0},{"startOffset":160268,"endOffset":160361,"count":0}],"isBlockCoverage":true},{"functionName":"createBaseEach","ranges":[{"startOffset":160921,"endOffset":161526,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":160981,"endOffset":161519,"count":128},{"startOffset":161046,"endOffset":161086,"count":3},{"startOffset":161086,"endOffset":161185,"count":125},{"startOffset":161185,"endOffset":161264,"count":0},{"startOffset":161265,"endOffset":161269,"count":0},{"startOffset":161341,"endOffset":161350,"count":0},{"startOffset":161351,"endOffset":161369,"count":0},{"startOffset":161372,"endOffset":161518,"count":0}],"isBlockCoverage":true},{"functionName":"createBaseFor","ranges":[{"startOffset":161777,"endOffset":162230,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":161826,"endOffset":162223,"count":180},{"startOffset":162027,"endOffset":162192,"count":1378},{"startOffset":162065,"endOffset":162073,"count":0},{"startOffset":162150,"endOffset":162182,"count":12}],"isBlockCoverage":true},{"functionName":"createBind","ranges":[{"startOffset":162642,"endOffset":162975,"count":0}],"isBlockCoverage":false},{"functionName":"createCaseFirst","ranges":[{"startOffset":163204,"endOffset":163668,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163256,"endOffset":163661,"count":5},{"startOffset":163365,"endOffset":163388,"count":0},{"startOffset":163452,"endOffset":163467,"count":0},{"startOffset":163543,"endOffset":163578,"count":0}],"isBlockCoverage":true},{"functionName":"createCompounder","ranges":[{"startOffset":163892,"endOffset":164061,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163943,"endOffset":164054,"count":0}],"isBlockCoverage":false},{"functionName":"createCtor","ranges":[{"startOffset":164383,"endOffset":165556,"count":0}],"isBlockCoverage":false},{"functionName":"createCurry","ranges":[{"startOffset":165913,"endOffset":166809,"count":0}],"isBlockCoverage":false},{"functionName":"createFind","ranges":[{"startOffset":167046,"endOffset":167586,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":167096,"endOffset":167579,"count":0}],"isBlockCoverage":false},{"functionName":"createFlow","ranges":[{"startOffset":167816,"endOffset":169537,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":167871,"endOffset":169529,"count":0}],"isBlockCoverage":false},{"functionName":"createHybrid","ranges":[{"startOffset":170543,"endOffset":172418,"count":1},{"startOffset":170958,"endOffset":170976,"count":0}],"isBlockCoverage":true},{"functionName":"wrapper","ranges":[{"startOffset":170985,"endOffset":172390,"count":0}],"isBlockCoverage":false},{"functionName":"createInverter","ranges":[{"startOffset":172713,"endOffset":172886,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":172772,"endOffset":172879,"count":0}],"isBlockCoverage":false},{"functionName":"createMathOperation","ranges":[{"startOffset":173240,"endOffset":173989,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":173308,"endOffset":173982,"count":0}],"isBlockCoverage":false},{"functionName":"createOver","ranges":[{"startOffset":174208,"endOffset":174574,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":174263,"endOffset":174566,"count":0}],"isBlockCoverage":false},{"functionName":"createPadding","ranges":[{"startOffset":174935,"endOffset":175390,"count":0}],"isBlockCoverage":false},{"functionName":"createPartial","ranges":[{"startOffset":175948,"endOffset":176680,"count":0}],"isBlockCoverage":false},{"functionName":"createRange","ranges":[{"startOffset":176913,"endOffset":177479,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":176960,"endOffset":177472,"count":0}],"isBlockCoverage":false},{"functionName":"createRelationalOperation","ranges":[{"startOffset":177749,"endOffset":178038,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":177809,"endOffset":178031,"count":0}],"isBlockCoverage":false},{"functionName":"createRecurry","ranges":[{"startOffset":178889,"endOffset":179919,"count":0}],"isBlockCoverage":false},{"functionName":"createRound","ranges":[{"startOffset":180151,"endOffset":180874,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":180234,"endOffset":180867,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":181148,"endOffset":181202,"count":0}],"isBlockCoverage":false},{"functionName":"createToPairs","ranges":[{"startOffset":181445,"endOffset":181766,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":181493,"endOffset":181759,"count":0}],"isBlockCoverage":false},{"functionName":"createWrap","ranges":[{"startOffset":182798,"endOffset":184888,"count":0}],"isBlockCoverage":false},{"functionName":"customDefaultsAssignIn","ranges":[{"startOffset":185403,"endOffset":185650,"count":0}],"isBlockCoverage":false},{"functionName":"customDefaultsMerge","ranges":[{"startOffset":186268,"endOffset":186673,"count":0}],"isBlockCoverage":false},{"functionName":"customOmitClone","ranges":[{"startOffset":187019,"endOffset":187113,"count":0}],"isBlockCoverage":false},{"functionName":"equalArrays","ranges":[{"startOffset":187780,"endOffset":189787,"count":0}],"isBlockCoverage":false},{"functionName":"equalByTag","ranges":[{"startOffset":190678,"endOffset":192829,"count":0}],"isBlockCoverage":false},{"functionName":"equalObjects","ranges":[{"startOffset":193504,"endOffset":195751,"count":0}],"isBlockCoverage":false},{"functionName":"flatRest","ranges":[{"startOffset":195996,"endOffset":196100,"count":12}],"isBlockCoverage":true},{"functionName":"getAllKeys","ranges":[{"startOffset":196351,"endOffset":196441,"count":103}],"isBlockCoverage":true},{"functionName":"getAllKeysIn","ranges":[{"startOffset":196713,"endOffset":196809,"count":16}],"isBlockCoverage":true},{"functionName":"getData","ranges":[{"startOffset":197025,"endOffset":197079,"count":0}],"isBlockCoverage":false},{"functionName":"getFuncName","ranges":[{"startOffset":197262,"endOffset":197664,"count":0}],"isBlockCoverage":false},{"functionName":"getHolder","ranges":[{"startOffset":197870,"endOffset":198014,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratee","ranges":[{"startOffset":198533,"endOffset":198748,"count":217},{"startOffset":198593,"endOffset":198604,"count":0},{"startOffset":198656,"endOffset":198664,"count":0},{"startOffset":198733,"endOffset":198741,"count":0}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":198958,"endOffset":199133,"count":68},{"startOffset":199098,"endOffset":199106,"count":0},{"startOffset":199116,"endOffset":199126,"count":0}],"isBlockCoverage":true},{"functionName":"getMatchData","ranges":[{"startOffset":199360,"endOffset":199653,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":199935,"endOffset":200069,"count":7},{"startOffset":200051,"endOffset":200062,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":200302,"endOffset":200774,"count":8},{"startOffset":200524,"endOffset":200536,"count":0},{"startOffset":200632,"endOffset":200682,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbols","ranges":[{"startOffset":201040,"endOffset":201288,"count":135},{"startOffset":201085,"endOffset":201113,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":201196,"endOffset":201280,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolsIn","ranges":[{"startOffset":201571,"endOffset":201756,"count":16},{"startOffset":201634,"endOffset":201729,"count":32}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":202372,"endOffset":202927,"count":0}],"isBlockCoverage":false},{"functionName":"getView","ranges":[{"startOffset":203345,"endOffset":203890,"count":7},{"startOffset":203480,"endOffset":203839,"count":0}],"isBlockCoverage":true},{"functionName":"getWrapDetails","ranges":[{"startOffset":204105,"endOffset":204249,"count":0}],"isBlockCoverage":false},{"functionName":"hasPath","ranges":[{"startOffset":204582,"endOffset":205192,"count":29},{"startOffset":204878,"endOffset":204906,"count":0},{"startOffset":204962,"endOffset":204982,"count":0},{"startOffset":205016,"endOffset":205050,"count":0},{"startOffset":205051,"endOffset":205066,"count":0},{"startOffset":205090,"endOffset":205109,"count":0},{"startOffset":205110,"endOffset":205133,"count":0},{"startOffset":205134,"endOffset":205185,"count":0}],"isBlockCoverage":true},{"functionName":"initCloneArray","ranges":[{"startOffset":205375,"endOffset":205739,"count":14},{"startOffset":205631,"endOffset":205712,"count":0}],"isBlockCoverage":true},{"functionName":"initCloneObject","ranges":[{"startOffset":205927,"endOffset":206103,"count":108},{"startOffset":206092,"endOffset":206096,"count":0}],"isBlockCoverage":true},{"functionName":"initCloneByTag","ranges":[{"startOffset":206604,"endOffset":207480,"count":0}],"isBlockCoverage":false},{"functionName":"insertWrapDetails","ranges":[{"startOffset":207765,"endOffset":208155,"count":0}],"isBlockCoverage":false},{"functionName":"isFlattenable","ranges":[{"startOffset":208397,"endOffset":208553,"count":61},{"startOffset":208457,"endOffset":208478,"count":56},{"startOffset":208479,"endOffset":208546,"count":56}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":208864,"endOffset":209167,"count":0}],"isBlockCoverage":false},{"functionName":"isIterateeCall","ranges":[{"startOffset":209581,"endOffset":209957,"count":0}],"isBlockCoverage":false},{"functionName":"isKey","ranges":[{"startOffset":210262,"endOffset":210658,"count":193},{"startOffset":210320,"endOffset":210351,"count":0},{"startOffset":210498,"endOffset":210528,"count":0},{"startOffset":210568,"endOffset":210596,"count":34},{"startOffset":210597,"endOffset":210651,"count":34}],"isBlockCoverage":true},{"functionName":"isKeyable","ranges":[{"startOffset":210893,"endOffset":211112,"count":68},{"startOffset":210983,"endOffset":211002,"count":0},{"startOffset":211003,"endOffset":211022,"count":0},{"startOffset":211023,"endOffset":211043,"count":0},{"startOffset":211087,"endOffset":211105,"count":0}],"isBlockCoverage":true},{"functionName":"isLaziable","ranges":[{"startOffset":211355,"endOffset":211706,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":211927,"endOffset":212009,"count":7},{"startOffset":211979,"endOffset":212002,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":212507,"endOffset":212698,"count":534},{"startOffset":212646,"endOffset":212660,"count":0}],"isBlockCoverage":true},{"functionName":"isStrictComparable","ranges":[{"startOffset":212988,"endOffset":213080,"count":0}],"isBlockCoverage":false},{"functionName":"matchesStrictComparable","ranges":[{"startOffset":213418,"endOffset":213684,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCapped","ranges":[{"startOffset":213993,"endOffset":214244,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":214057,"endOffset":214182,"count":34},{"startOffset":214118,"endOffset":214154,"count":0}],"isBlockCoverage":true},{"functionName":"mergeData","ranges":[{"startOffset":215016,"endOffset":217040,"count":0}],"isBlockCoverage":false},{"functionName":"nativeKeysIn","ranges":[{"startOffset":217374,"endOffset":217571,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":217788,"endOffset":217873,"count":973}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":218268,"endOffset":218904,"count":50},{"startOffset":218376,"endOffset":218383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":218402,"endOffset":218897,"count":133},{"startOffset":218594,"endOffset":218651,"count":217},{"startOffset":218746,"endOffset":218799,"count":121}],"isBlockCoverage":true},{"functionName":"parent","ranges":[{"startOffset":219162,"endOffset":219280,"count":57},{"startOffset":219232,"endOffset":219273,"count":0}],"isBlockCoverage":true},{"functionName":"reorder","ranges":[{"startOffset":219695,"endOffset":220039,"count":0}],"isBlockCoverage":false},{"functionName":"safeGet","ranges":[{"startOffset":220320,"endOffset":220537,"count":52},{"startOffset":220384,"endOffset":220420,"count":0},{"startOffset":220422,"endOffset":220447,"count":0},{"startOffset":220479,"endOffset":220504,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":221496,"endOffset":221566,"count":0}],"isBlockCoverage":false},{"functionName":"setWrapToString","ranges":[{"startOffset":222318,"endOffset":222530,"count":0}],"isBlockCoverage":false},{"functionName":"shortOut","ranges":[{"startOffset":222863,"endOffset":223305,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":222950,"endOffset":223298,"count":50},{"startOffset":223109,"endOffset":223203,"count":49},{"startOffset":223147,"endOffset":223193,"count":0},{"startOffset":223203,"endOffset":223241,"count":1}],"isBlockCoverage":true},{"functionName":"shuffleSelf","ranges":[{"startOffset":223593,"endOffset":224008,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":224247,"endOffset":224572,"count":3},{"startOffset":224336,"endOffset":224370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":224404,"endOffset":224543,"count":9},{"startOffset":224474,"endOffset":224513,"count":0}],"isBlockCoverage":true},{"functionName":"toKey","ranges":[{"startOffset":224786,"endOffset":225009,"count":335},{"startOffset":224845,"endOffset":224863,"count":0},{"startOffset":224896,"endOffset":224985,"count":0},{"startOffset":224987,"endOffset":224993,"count":0},{"startOffset":224994,"endOffset":225002,"count":0}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":225202,"endOffset":225430,"count":12},{"startOffset":225320,"endOffset":225399,"count":0},{"startOffset":225407,"endOffset":225429,"count":0}],"isBlockCoverage":true},{"functionName":"updateWrapDetails","ranges":[{"startOffset":225717,"endOffset":225998,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperClone","ranges":[{"startOffset":226186,"endOffset":226557,"count":0}],"isBlockCoverage":false},{"functionName":"chunk","ranges":[{"startOffset":227354,"endOffset":227905,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":228353,"endOffset":228672,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":229258,"endOffset":229630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":230410,"endOffset":230574,"count":8},{"startOffset":230563,"endOffset":230567,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":231636,"endOffset":231940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":232901,"endOffset":233208,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":233877,"endOffset":234127,"count":0}],"isBlockCoverage":false},{"functionName":"dropRight","ranges":[{"startOffset":234808,"endOffset":235080,"count":0}],"isBlockCoverage":false},{"functionName":"dropRightWhile","ranges":[{"startOffset":236363,"endOffset":236529,"count":0}],"isBlockCoverage":false},{"functionName":"dropWhile","ranges":[{"startOffset":237800,"endOffset":237955,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":238750,"endOffset":239082,"count":0}],"isBlockCoverage":false},{"functionName":"findIndex","ranges":[{"startOffset":240272,"endOffset":240638,"count":0}],"isBlockCoverage":false},{"functionName":"findLastIndex","ranges":[{"startOffset":241822,"endOffset":242283,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":242638,"endOffset":242772,"count":12},{"startOffset":242697,"endOffset":242700,"count":0},{"startOffset":242761,"endOffset":242765,"count":0}],"isBlockCoverage":true},{"functionName":"flattenDeep","ranges":[{"startOffset":243119,"endOffset":243264,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDepth","ranges":[{"startOffset":243804,"endOffset":244046,"count":0}],"isBlockCoverage":false},{"functionName":"fromPairs","ranges":[{"startOffset":244452,"endOffset":244714,"count":0}],"isBlockCoverage":false},{"functionName":"head","ranges":[{"startOffset":245101,"endOffset":245190,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":246000,"endOffset":246338,"count":0}],"isBlockCoverage":false},{"functionName":"initial","ranges":[{"startOffset":246667,"endOffset":246803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":247433,"endOffset":247620,"count":12},{"startOffset":247609,"endOffset":247613,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":248558,"endOffset":248921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":249798,"endOffset":250177,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":250610,"endOffset":250718,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":251034,"endOffset":251168,"count":92},{"startOffset":251090,"endOffset":251093,"count":0},{"startOffset":251150,"endOffset":251161,"count":0}],"isBlockCoverage":true},{"functionName":"lastIndexOf","ranges":[{"startOffset":251820,"endOffset":252306,"count":0}],"isBlockCoverage":false},{"functionName":"nth","ranges":[{"startOffset":252862,"endOffset":252973,"count":0}],"isBlockCoverage":false},{"functionName":"pullAll","ranges":[{"startOffset":254309,"endOffset":254466,"count":0}],"isBlockCoverage":false},{"functionName":"pullAllBy","ranges":[{"startOffset":255332,"endOffset":255527,"count":0}],"isBlockCoverage":false},{"functionName":"pullAllWith","ranges":[{"startOffset":256396,"endOffset":256592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":257325,"endOffset":257626,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":258526,"endOffset":259031,"count":0}],"isBlockCoverage":false},{"functionName":"reverse","ranges":[{"startOffset":259649,"endOffset":259744,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":260295,"endOffset":260743,"count":0}],"isBlockCoverage":false},{"functionName":"sortedIndex","ranges":[{"startOffset":261279,"endOffset":261365,"count":0}],"isBlockCoverage":false},{"functionName":"sortedIndexBy","ranges":[{"startOffset":262273,"endOffset":262399,"count":0}],"isBlockCoverage":false},{"functionName":"sortedIndexOf","ranges":[{"startOffset":262869,"endOffset":263153,"count":0}],"isBlockCoverage":false},{"functionName":"sortedLastIndex","ranges":[{"startOffset":263732,"endOffset":263828,"count":0}],"isBlockCoverage":false},{"functionName":"sortedLastIndexBy","ranges":[{"startOffset":264748,"endOffset":264884,"count":0}],"isBlockCoverage":false},{"functionName":"sortedLastIndexOf","ranges":[{"startOffset":265362,"endOffset":265642,"count":0}],"isBlockCoverage":false},{"functionName":"sortedUniq","ranges":[{"startOffset":266037,"endOffset":266154,"count":0}],"isBlockCoverage":false},{"functionName":"sortedUniqBy","ranges":[{"startOffset":266650,"endOffset":266805,"count":0}],"isBlockCoverage":false},{"functionName":"tail","ranges":[{"startOffset":267132,"endOffset":267269,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":267934,"endOffset":268143,"count":0}],"isBlockCoverage":false},{"functionName":"takeRight","ranges":[{"startOffset":268822,"endOffset":269099,"count":0}],"isBlockCoverage":false},{"functionName":"takeRightWhile","ranges":[{"startOffset":270345,"endOffset":270512,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":271740,"endOffset":271889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":272412,"endOffset":272508,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":273428,"endOffset":273664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":274552,"endOffset":274785,"count":0}],"isBlockCoverage":false},{"functionName":"uniq","ranges":[{"startOffset":275407,"endOffset":275496,"count":7},{"startOffset":275485,"endOffset":275489,"count":0}],"isBlockCoverage":true},{"functionName":"uniqBy","ranges":[{"startOffset":276373,"endOffset":276500,"count":0}],"isBlockCoverage":false},{"functionName":"uniqWith","ranges":[{"startOffset":277282,"endOffset":277487,"count":0}],"isBlockCoverage":false},{"functionName":"unzip","ranges":[{"startOffset":278122,"endOffset":278536,"count":0}],"isBlockCoverage":false},{"functionName":"unzipWith","ranges":[{"startOffset":279274,"endOffset":279584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":280244,"endOffset":280367,"count":4},{"startOffset":280356,"endOffset":280360,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":280976,"endOffset":281062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":281977,"endOffset":282203,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":283072,"endOffset":283295,"count":0}],"isBlockCoverage":false},{"functionName":"zipObject","ranges":[{"startOffset":284388,"endOffset":284497,"count":0}],"isBlockCoverage":false},{"functionName":"zipObjectDeep","ranges":[{"startOffset":284984,"endOffset":285093,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":285795,"endOffset":286049,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":286939,"endOffset":287054,"count":12}],"isBlockCoverage":true},{"functionName":"tap","ranges":[{"startOffset":287757,"endOffset":287843,"count":0}],"isBlockCoverage":false},{"functionName":"thru","ranges":[{"startOffset":288524,"endOffset":288598,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":289078,"endOffset":289825,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperChain","ranges":[{"startOffset":290532,"endOffset":290589,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperCommit","ranges":[{"startOffset":291170,"endOffset":291264,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperNext","ranges":[{"startOffset":291844,"endOffset":292153,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperToIterator","ranges":[{"startOffset":292549,"endOffset":292604,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperPlant","ranges":[{"startOffset":293185,"endOffset":293666,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperReverse","ranges":[{"startOffset":294139,"endOffset":294639,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperValue","ranges":[{"startOffset":294977,"endOffset":295075,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":296049,"endOffset":296218,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":297758,"endOffset":298037,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":299533,"endOffset":299702,"count":12},{"startOffset":299625,"endOffset":299637,"count":0}],"isBlockCoverage":true},{"functionName":"flatMap","ranges":[{"startOffset":302444,"endOffset":302546,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapDeep","ranges":[{"startOffset":303136,"endOffset":303249,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapDepth","ranges":[{"startOffset":303929,"endOffset":304105,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":305244,"endOffset":305408,"count":94},{"startOffset":305322,"endOffset":305333,"count":0}],"isBlockCoverage":true},{"functionName":"forEachRight","ranges":[{"startOffset":306036,"endOffset":306215,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":307232,"endOffset":307417,"count":7},{"startOffset":307307,"endOffset":307349,"count":0}],"isBlockCoverage":true},{"functionName":"includes","ranges":[{"startOffset":308491,"endOffset":309010,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":309995,"endOffset":310349,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":311455,"endOffset":311534,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":313000,"endOffset":313158,"count":23},{"startOffset":313074,"endOffset":313084,"count":12},{"startOffset":313085,"endOffset":313094,"count":11}],"isBlockCoverage":true},{"functionName":"orderBy","ranges":[{"startOffset":314431,"endOffset":314838,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":316318,"endOffset":316393,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":316395,"endOffset":316426,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":317906,"endOffset":318165,"count":8},{"startOffset":317996,"endOffset":318009,"count":0}],"isBlockCoverage":true},{"functionName":"reduceRight","ranges":[{"startOffset":318893,"endOffset":319167,"count":0}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":320327,"endOffset":320504,"count":0}],"isBlockCoverage":false},{"functionName":"sample","ranges":[{"startOffset":320846,"endOffset":320977,"count":0}],"isBlockCoverage":false},{"functionName":"sampleSize","ranges":[{"startOffset":321602,"endOffset":321900,"count":0}],"isBlockCoverage":false},{"functionName":"shuffle","ranges":[{"startOffset":322365,"endOffset":322499,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":323066,"endOffset":323446,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":324711,"endOffset":324987,"count":15},{"startOffset":324794,"endOffset":324805,"count":0},{"startOffset":324834,"endOffset":324881,"count":0},{"startOffset":324883,"endOffset":324923,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":326166,"endOffset":326611,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":327198,"endOffset":327246,"count":0}],"isBlockCoverage":false},{"functionName":"after","ranges":[{"startOffset":328124,"endOffset":328386,"count":0}],"isBlockCoverage":false},{"functionName":"ary","ranges":[{"startOffset":328973,"endOffset":329184,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":329896,"endOffset":330262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":331479,"endOffset":331764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":333346,"endOffset":333651,"count":0}],"isBlockCoverage":false},{"functionName":"curry","ranges":[{"startOffset":335013,"endOffset":335279,"count":0}],"isBlockCoverage":false},{"functionName":"curryRight","ranges":[{"startOffset":336449,"endOffset":336731,"count":0}],"isBlockCoverage":false},{"functionName":"debounce","ranges":[{"startOffset":339393,"endOffset":343127,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":343730,"endOffset":343797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":344446,"endOffset":344537,"count":0}],"isBlockCoverage":false},{"functionName":"flip","ranges":[{"startOffset":345036,"endOffset":345110,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":346746,"endOffset":347389,"count":1},{"startOffset":346873,"endOffset":346928,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":346950,"endOffset":347303,"count":34},{"startOffset":347049,"endOffset":347058,"count":0},{"startOffset":347125,"endOffset":347169,"count":31},{"startOffset":347169,"endOffset":347263,"count":3},{"startOffset":347263,"endOffset":347271,"count":0}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":348033,"endOffset":348562,"count":8},{"startOffset":348104,"endOffset":348159,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":348173,"endOffset":348555,"count":65},{"startOffset":348257,"endOffset":348294,"count":0},{"startOffset":348305,"endOffset":348351,"count":0},{"startOffset":348428,"endOffset":348492,"count":0},{"startOffset":348502,"endOffset":348554,"count":0}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":349196,"endOffset":349253,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":350024,"endOffset":350590,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":351782,"endOffset":351960,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":353107,"endOffset":353296,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":354108,"endOffset":354229,"count":0}],"isBlockCoverage":false},{"functionName":"rest","ranges":[{"startOffset":355135,"endOffset":355360,"count":0}],"isBlockCoverage":false},{"functionName":"spread","ranges":[{"startOffset":356428,"endOffset":356872,"count":0}],"isBlockCoverage":false},{"functionName":"throttle","ranges":[{"startOffset":359135,"endOffset":359639,"count":0}],"isBlockCoverage":false},{"functionName":"unary","ranges":[{"startOffset":360072,"endOffset":360127,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":360902,"endOffset":360991,"count":0}],"isBlockCoverage":false},{"functionName":"castArray","ranges":[{"startOffset":361771,"endOffset":361936,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":362897,"endOffset":362977,"count":0}],"isBlockCoverage":false},{"functionName":"cloneWith","ranges":[{"startOffset":363982,"endOffset":364167,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDeep","ranges":[{"startOffset":364659,"endOffset":364761,"count":6}],"isBlockCoverage":true},{"functionName":"cloneDeepWith","ranges":[{"startOffset":365555,"endOffset":365762,"count":67},{"startOffset":365663,"endOffset":365674,"count":0}],"isBlockCoverage":true},{"functionName":"conformsTo","ranges":[{"startOffset":366593,"endOffset":366713,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":367528,"endOffset":367631,"count":155},{"startOffset":367585,"endOffset":367624,"count":118},{"startOffset":367605,"endOffset":367623,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":368775,"endOffset":368834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":369335,"endOffset":369367,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":369391,"endOffset":369543,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":371362,"endOffset":371473,"count":641},{"startOffset":371445,"endOffset":371466,"count":88}],"isBlockCoverage":true},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":372103,"endOffset":372200,"count":44}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":372622,"endOffset":372768,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":374116,"endOffset":374232,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":375161,"endOffset":375819,"count":80},{"startOffset":375212,"endOffset":375242,"count":27},{"startOffset":375242,"endOffset":375272,"count":53},{"startOffset":375272,"endOffset":375442,"count":35},{"startOffset":375301,"endOffset":375328,"count":0},{"startOffset":375329,"endOffset":375365,"count":0},{"startOffset":375366,"endOffset":375396,"count":0},{"startOffset":375397,"endOffset":375419,"count":0},{"startOffset":375420,"endOffset":375441,"count":0},{"startOffset":375444,"endOffset":375483,"count":35},{"startOffset":375483,"endOffset":375555,"count":18},{"startOffset":375557,"endOffset":375594,"count":0},{"startOffset":375594,"endOffset":375625,"count":18},{"startOffset":375625,"endOffset":375674,"count":0},{"startOffset":375674,"endOffset":375704,"count":18},{"startOffset":375704,"endOffset":375794,"count":10},{"startOffset":375794,"endOffset":375818,"count":8}],"isBlockCoverage":true},{"functionName":"isEqual","ranges":[{"startOffset":376779,"endOffset":376857,"count":20}],"isBlockCoverage":true},{"functionName":"isEqualWith","ranges":[{"startOffset":377983,"endOffset":378281,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":378779,"endOffset":379063,"count":0}],"isBlockCoverage":false},{"functionName":"isFinite","ranges":[{"startOffset":379691,"endOffset":379787,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":380199,"endOffset":380576,"count":445},{"startOffset":380256,"endOffset":380287,"count":10},{"startOffset":380287,"endOffset":380515,"count":435},{"startOffset":380515,"endOffset":380531,"count":95},{"startOffset":380532,"endOffset":380550,"count":95},{"startOffset":380551,"endOffset":380569,"count":92}],"isBlockCoverage":true},{"functionName":"isInteger","ranges":[{"startOffset":381191,"endOffset":381292,"count":0}],"isBlockCoverage":false},{"functionName":"isLength","ranges":[{"startOffset":381947,"endOffset":382087,"count":641},{"startOffset":382012,"endOffset":382033,"count":88},{"startOffset":382034,"endOffset":382051,"count":88},{"startOffset":382052,"endOffset":382080,"count":88}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":382774,"endOffset":382909,"count":1786},{"startOffset":382859,"endOffset":382902,"count":1768},{"startOffset":382880,"endOffset":382901,"count":1175}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":383508,"endOffset":383600,"count":840},{"startOffset":383566,"endOffset":383593,"count":803}],"isBlockCoverage":true},{"functionName":"isMatch","ranges":[{"startOffset":385019,"endOffset":385144,"count":0}],"isBlockCoverage":false},{"functionName":"isMatchWith","ranges":[{"startOffset":386285,"endOffset":386494,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":387220,"endOffset":387478,"count":0}],"isBlockCoverage":false},{"functionName":"isNative","ranges":[{"startOffset":388440,"endOffset":388587,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":388964,"endOffset":389023,"count":0}],"isBlockCoverage":false},{"functionName":"isNil","ranges":[{"startOffset":389460,"endOffset":389517,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":390188,"endOffset":390326,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainObject","ranges":[{"startOffset":391043,"endOffset":391474,"count":470},{"startOffset":391106,"endOffset":391139,"count":300},{"startOffset":391141,"endOffset":391172,"count":177},{"startOffset":391172,"endOffset":391238,"count":293},{"startOffset":391238,"endOffset":391268,"count":0},{"startOffset":391268,"endOffset":391348,"count":293},{"startOffset":391389,"endOffset":391412,"count":293},{"startOffset":391413,"endOffset":391467,"count":289}],"isBlockCoverage":true},{"functionName":"isSafeInteger","ranges":[{"startOffset":392722,"endOffset":392849,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":393727,"endOffset":393884,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":394315,"endOffset":394453,"count":193},{"startOffset":394412,"endOffset":394445,"count":0}],"isBlockCoverage":true},{"functionName":"isUndefined","ranges":[{"startOffset":395358,"endOffset":395427,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":395848,"endOffset":395946,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":396367,"endOffset":396469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":397601,"endOffset":397660,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":398136,"endOffset":398580,"count":0}],"isBlockCoverage":false},{"functionName":"toFinite","ranges":[{"startOffset":399082,"endOffset":399394,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":400027,"endOffset":400211,"count":0}],"isBlockCoverage":false},{"functionName":"toLength","ranges":[{"startOffset":400875,"endOffset":400982,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":401451,"endOffset":402107,"count":0}],"isBlockCoverage":false},{"functionName":"toPlainObject","ranges":[{"startOffset":402765,"endOffset":402849,"count":0}],"isBlockCoverage":false},{"functionName":"toSafeInteger","ranges":[{"startOffset":403419,"endOffset":403587,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":404101,"endOffset":404188,"count":39},{"startOffset":404155,"endOffset":404159,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":405233,"endOffset":405542,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":406346,"endOffset":406428,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":407536,"endOffset":407652,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":408731,"endOffset":408845,"count":26}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":410291,"endOffset":410454,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":411245,"endOffset":412028,"count":66},{"startOffset":411391,"endOffset":411403,"count":0},{"startOffset":411434,"endOffset":411482,"count":0},{"startOffset":411484,"endOffset":411513,"count":0},{"startOffset":411734,"endOffset":411992,"count":208},{"startOffset":411845,"endOffset":411928,"count":8},{"startOffset":411891,"endOffset":411927,"count":0},{"startOffset":411930,"endOffset":411982,"count":200}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":412635,"endOffset":412754,"count":0}],"isBlockCoverage":false},{"functionName":"findKey","ranges":[{"startOffset":413958,"endOffset":414074,"count":0}],"isBlockCoverage":false},{"functionName":"findLastKey","ranges":[{"startOffset":415270,"endOffset":415395,"count":0}],"isBlockCoverage":false},{"functionName":"forIn","ranges":[{"startOffset":416305,"endOffset":416451,"count":4},{"startOffset":416376,"endOffset":416384,"count":0}],"isBlockCoverage":true},{"functionName":"forInRight","ranges":[{"startOffset":417192,"endOffset":417348,"count":0}],"isBlockCoverage":false},{"functionName":"forOwn","ranges":[{"startOffset":418240,"endOffset":418350,"count":12}],"isBlockCoverage":true},{"functionName":"forOwnRight","ranges":[{"startOffset":419083,"endOffset":419203,"count":0}],"isBlockCoverage":false},{"functionName":"functions","ranges":[{"startOffset":419778,"endOffset":419884,"count":0}],"isBlockCoverage":false},{"functionName":"functionsIn","ranges":[{"startOffset":420478,"endOffset":420588,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":421350,"endOffset":421528,"count":42},{"startOffset":421427,"endOffset":421438,"count":4},{"startOffset":421439,"endOffset":421462,"count":38},{"startOffset":421513,"endOffset":421521,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":422211,"endOffset":422308,"count":0}],"isBlockCoverage":false},{"functionName":"hasIn","ranges":[{"startOffset":422973,"endOffset":423074,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":423659,"endOffset":423857,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":424861,"endOffset":425167,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":426530,"endOffset":426636,"count":305},{"startOffset":426587,"endOffset":426610,"count":0}],"isBlockCoverage":true},{"functionName":"keysIn","ranges":[{"startOffset":427240,"endOffset":427356,"count":103},{"startOffset":427299,"endOffset":427328,"count":0}],"isBlockCoverage":true},{"functionName":"mapKeys","ranges":[{"startOffset":428132,"endOffset":428398,"count":0}],"isBlockCoverage":false},{"functionName":"mapValues","ranges":[{"startOffset":429441,"endOffset":429707,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":429572,"endOffset":429678,"count":180}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":430859,"endOffset":430944,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":432097,"endOffset":432206,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":432885,"endOffset":433509,"count":8},{"startOffset":432960,"endOffset":432992,"count":0},{"startOffset":433256,"endOffset":433374,"count":0},{"startOffset":433431,"endOffset":433482,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":433049,"endOffset":433179,"count":57}],"isBlockCoverage":true},{"functionName":"omitBy","ranges":[{"startOffset":434212,"endOffset":434315,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":434829,"endOffset":434920,"count":4},{"startOffset":434883,"endOffset":434887,"count":0}],"isBlockCoverage":true},{"functionName":"pickBy","ranges":[{"startOffset":435518,"endOffset":435871,"count":8},{"startOffset":435581,"endOffset":435609,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":435659,"endOffset":435706,"count":65}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":435790,"endOffset":435863,"count":65}],"isBlockCoverage":true},{"functionName":"result","ranges":[{"startOffset":436803,"endOffset":437387,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":438301,"endOffset":438411,"count":0}],"isBlockCoverage":false},{"functionName":"setWith","ranges":[{"startOffset":439299,"endOffset":439514,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":442222,"endOffset":442965,"count":0}],"isBlockCoverage":false},{"functionName":"unset","ranges":[{"startOffset":443725,"endOffset":443823,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":444769,"endOffset":444903,"count":0}],"isBlockCoverage":false},{"functionName":"updateWith","ranges":[{"startOffset":445843,"endOffset":446082,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":446732,"endOffset":446832,"count":12},{"startOffset":446786,"endOffset":446790,"count":0}],"isBlockCoverage":true},{"functionName":"valuesIn","ranges":[{"startOffset":447454,"endOffset":447558,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":448133,"endOffset":448562,"count":0}],"isBlockCoverage":false},{"functionName":"inRange","ranges":[{"startOffset":449578,"endOffset":449855,"count":0}],"isBlockCoverage":false},{"functionName":"random","ranges":[{"startOffset":450989,"endOffset":452096,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":452720,"endOffset":452847,"count":0}],"isBlockCoverage":false},{"functionName":"capitalize","ranges":[{"startOffset":453248,"endOffset":453340,"count":0}],"isBlockCoverage":false},{"functionName":"deburr","ranges":[{"startOffset":454006,"endOffset":454157,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":454802,"endOffset":455197,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":456317,"endOffset":456514,"count":0}],"isBlockCoverage":false},{"functionName":"escapeRegExp","ranges":[{"startOffset":457000,"endOffset":457189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":457758,"endOffset":457858,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":458388,"endOffset":458488,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":459626,"endOffset":460045,"count":0}],"isBlockCoverage":false},{"functionName":"padEnd","ranges":[{"startOffset":460697,"endOffset":460990,"count":0}],"isBlockCoverage":false},{"functionName":"padStart","ranges":[{"startOffset":461647,"endOffset":461942,"count":0}],"isBlockCoverage":false},{"functionName":"parseInt","ranges":[{"startOffset":462791,"endOffset":463035,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":463625,"endOffset":463850,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":464468,"endOffset":464635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":465183,"endOffset":465283,"count":0}],"isBlockCoverage":false},{"functionName":"split","ranges":[{"startOffset":465863,"endOffset":466551,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":467135,"endOffset":467233,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":467877,"endOffset":468180,"count":0}],"isBlockCoverage":false},{"functionName":"template","ranges":[{"startOffset":473119,"endOffset":477585,"count":0}],"isBlockCoverage":false},{"functionName":"toLower","ranges":[{"startOffset":478133,"endOffset":478208,"count":0}],"isBlockCoverage":false},{"functionName":"toUpper","ranges":[{"startOffset":478756,"endOffset":478831,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":479492,"endOffset":480016,"count":0}],"isBlockCoverage":false},{"functionName":"trimEnd","ranges":[{"startOffset":480595,"endOffset":481052,"count":0}],"isBlockCoverage":false},{"functionName":"trimStart","ranges":[{"startOffset":481634,"endOffset":482079,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":483396,"endOffset":485173,"count":0}],"isBlockCoverage":false},{"functionName":"unescape","ranges":[{"startOffset":485852,"endOffset":486049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":486575,"endOffset":486675,"count":0}],"isBlockCoverage":false},{"functionName":"words","ranges":[{"startOffset":487778,"endOffset":488071,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":488904,"endOffset":489063,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":489893,"endOffset":490097,"count":0}],"isBlockCoverage":false},{"functionName":"cond","ranges":[{"startOffset":491047,"endOffset":491645,"count":0}],"isBlockCoverage":false},{"functionName":"conforms","ranges":[{"startOffset":492448,"endOffset":492544,"count":0}],"isBlockCoverage":false},{"functionName":"constant","ranges":[{"startOffset":493052,"endOffset":493141,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":493092,"endOffset":493134,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTo","ranges":[{"startOffset":493694,"endOffset":493813,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":495477,"endOffset":495529,"count":121}],"isBlockCoverage":true},{"functionName":"iteratee","ranges":[{"startOffset":497095,"endOffset":497222,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":498537,"endOffset":498631,"count":0}],"isBlockCoverage":false},{"functionName":"matchesProperty","ranges":[{"startOffset":499895,"endOffset":500021,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":500771,"endOffset":500887,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":501685,"endOffset":501801,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":503001,"endOffset":504216,"count":5},{"startOffset":503156,"endOffset":503229,"count":4},{"startOffset":503211,"endOffset":503227,"count":0},{"startOffset":503231,"endOffset":503373,"count":0},{"startOffset":503412,"endOffset":503433,"count":1},{"startOffset":503435,"endOffset":503453,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":503524,"endOffset":504186,"count":323},{"startOffset":503641,"endOffset":504178,"count":317}],"isBlockCoverage":true},{"functionName":"object.<computed>","ranges":[{"startOffset":503684,"endOffset":504167,"count":43},{"startOffset":503762,"endOffset":503773,"count":0},{"startOffset":504078,"endOffset":504166,"count":0}],"isBlockCoverage":true},{"functionName":"noConflict","ranges":[{"startOffset":504549,"endOffset":504660,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":504891,"endOffset":504947,"count":0}],"isBlockCoverage":false},{"functionName":"nthArg","ranges":[{"startOffset":505507,"endOffset":505639,"count":0}],"isBlockCoverage":false},{"functionName":"property","ranges":[{"startOffset":508727,"endOffset":508837,"count":15},{"startOffset":508806,"endOffset":508830,"count":0}],"isBlockCoverage":true},{"functionName":"propertyOf","ranges":[{"startOffset":509465,"endOffset":509606,"count":0}],"isBlockCoverage":false},{"functionName":"stubArray","ranges":[{"startOffset":512191,"endOffset":512236,"count":0}],"isBlockCoverage":false},{"functionName":"stubFalse","ranges":[{"startOffset":512504,"endOffset":512552,"count":0}],"isBlockCoverage":false},{"functionName":"stubObject","ranges":[{"startOffset":512961,"endOffset":513007,"count":0}],"isBlockCoverage":false},{"functionName":"stubString","ranges":[{"startOffset":513286,"endOffset":513332,"count":0}],"isBlockCoverage":false},{"functionName":"stubTrue","ranges":[{"startOffset":513595,"endOffset":513641,"count":0}],"isBlockCoverage":false},{"functionName":"times","ranges":[{"startOffset":514249,"endOffset":514666,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":515076,"endOffset":515264,"count":0}],"isBlockCoverage":false},{"functionName":"uniqueId","ranges":[{"startOffset":515691,"endOffset":515788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":516260,"endOffset":516322,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":517256,"endOffset":517324,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":518298,"endOffset":518431,"count":0}],"isBlockCoverage":false},{"functionName":"maxBy","ranges":[{"startOffset":519218,"endOffset":519379,"count":0}],"isBlockCoverage":false},{"functionName":"mean","ranges":[{"startOffset":519700,"endOffset":519768,"count":0}],"isBlockCoverage":false},{"functionName":"meanBy","ranges":[{"startOffset":520542,"endOffset":520638,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":521068,"endOffset":521201,"count":0}],"isBlockCoverage":false},{"functionName":"minBy","ranges":[{"startOffset":521988,"endOffset":522149,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":522575,"endOffset":522657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":523598,"endOffset":523670,"count":0}],"isBlockCoverage":false},{"functionName":"sum","ranges":[{"startOffset":523994,"endOffset":524106,"count":0}],"isBlockCoverage":false},{"functionName":"sumBy","ranges":[{"startOffset":524876,"endOffset":525016,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":534928,"endOffset":535167,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":534989,"endOffset":535138,"count":306},{"startOffset":535082,"endOffset":535130,"count":153}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":535543,"endOffset":535618,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":535723,"endOffset":536453,"count":2}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":535795,"endOffset":536314,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":536369,"endOffset":536446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":536569,"endOffset":537019,"count":3},{"startOffset":536673,"endOffset":536699,"count":2}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":536744,"endOffset":537012,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":537115,"endOffset":537314,"count":2},{"startOffset":537182,"endOffset":537191,"count":1},{"startOffset":537192,"endOffset":537196,"count":1}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":537242,"endOffset":537307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":537416,"endOffset":537648,"count":2},{"startOffset":537483,"endOffset":537487,"count":1},{"startOffset":537488,"endOffset":537497,"count":1}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":537543,"endOffset":537641,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.compact","ranges":[{"startOffset":537688,"endOffset":537742,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.find","ranges":[{"startOffset":537778,"endOffset":537849,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.findLast","ranges":[{"startOffset":537889,"endOffset":537961,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":538011,"endOffset":538220,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.reject","ranges":[{"startOffset":538259,"endOffset":538344,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.slice","ranges":[{"startOffset":538381,"endOffset":538879,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.takeRightWhile","ranges":[{"startOffset":538925,"endOffset":539012,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.toArray","ranges":[{"startOffset":539051,"endOffset":539111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":539208,"endOffset":541000,"count":19},{"startOffset":539412,"endOffset":539462,"count":2},{"startOffset":539446,"endOffset":539455,"count":1},{"startOffset":539456,"endOffset":539460,"count":1},{"startOffset":539463,"endOffset":539475,"count":17},{"startOffset":539511,"endOffset":539538,"count":17},{"startOffset":539564,"endOffset":539589,"count":0}],"isBlockCoverage":true},{"functionName":"lodash.<computed>","ranges":[{"startOffset":539627,"endOffset":540993,"count":31},{"startOffset":539705,"endOffset":539710,"count":0},{"startOffset":540068,"endOffset":540084,"count":7},{"startOffset":540085,"endOffset":540117,"count":7},{"startOffset":540118,"endOffset":540141,"count":7},{"startOffset":540143,"endOffset":540271,"count":0},{"startOffset":540400,"endOffset":540412,"count":0},{"startOffset":540444,"endOffset":540456,"count":0},{"startOffset":540497,"endOffset":540768,"count":7},{"startOffset":540526,"endOffset":540533,"count":0},{"startOffset":540768,"endOffset":540793,"count":24},{"startOffset":540793,"endOffset":540804,"count":0},{"startOffset":540806,"endOffset":540858,"count":0},{"startOffset":540858,"endOffset":540927,"count":24},{"startOffset":540927,"endOffset":540975,"count":0},{"startOffset":540976,"endOffset":540984,"count":24}],"isBlockCoverage":true},{"functionName":"interceptor","ranges":[{"startOffset":539882,"endOffset":540045,"count":31},{"startOffset":540001,"endOffset":540012,"count":0},{"startOffset":540014,"endOffset":540025,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":541123,"endOffset":541708,"count":6},{"startOffset":541252,"endOffset":541259,"count":3},{"startOffset":541260,"endOffset":541268,"count":3}],"isBlockCoverage":true},{"functionName":"lodash.<computed>","ranges":[{"startOffset":541369,"endOffset":541701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":541804,"endOffset":542119,"count":19},{"startOffset":541990,"endOffset":542032,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":543749,"endOffset":543783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"644","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13295,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"useInflection","ranges":[{"startOffset":1243,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"camelizeIf","ranges":[{"startOffset":1350,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"underscoredIf","ranges":[{"startOffset":1511,"endOffset":1643,"count":27},{"startOffset":1589,"endOffset":1624,"count":0}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":1683,"endOffset":1796,"count":12}],"isBlockCoverage":true},{"functionName":"mergeDefaults","ranges":[{"startOffset":1832,"endOffset":2147,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1890,"endOffset":2143,"count":32},{"startOffset":1960,"endOffset":1985,"count":28},{"startOffset":1987,"endOffset":2139,"count":12},{"startOffset":2025,"endOffset":2053,"count":0},{"startOffset":2055,"endOffset":2107,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":2187,"endOffset":2733,"count":6},{"startOffset":2258,"endOffset":2714,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2278,"endOffset":2708,"count":24},{"startOffset":2324,"endOffset":2702,"count":21},{"startOffset":2394,"endOffset":2694,"count":0}],"isBlockCoverage":true},{"functionName":"spliceStr","ranges":[{"startOffset":2757,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"camelize","ranges":[{"startOffset":2898,"endOffset":3000,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2967,"endOffset":2996,"count":4}],"isBlockCoverage":true},{"functionName":"underscore","ranges":[{"startOffset":3030,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"singularize","ranges":[{"startOffset":3129,"endOffset":3196,"count":4}],"isBlockCoverage":true},{"functionName":"pluralize","ranges":[{"startOffset":3232,"endOffset":3295,"count":6}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":3327,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamedParameters","ranges":[{"startOffset":3479,"endOffset":3642,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDeep","ranges":[{"startOffset":3698,"endOffset":4045,"count":67},{"startOffset":3747,"endOffset":3752,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3784,"endOffset":4041,"count":202},{"startOffset":3824,"endOffset":3848,"count":194},{"startOffset":3850,"endOffset":3878,"count":99},{"startOffset":3878,"endOffset":3924,"count":103},{"startOffset":3926,"endOffset":3952,"count":0},{"startOffset":3952,"endOffset":4001,"count":103},{"startOffset":4003,"endOffset":4037,"count":0}],"isBlockCoverage":true},{"functionName":"mapFinderOptions","ranges":[{"startOffset":4077,"endOffset":4427,"count":33},{"startOffset":4146,"endOffset":4182,"count":26},{"startOffset":4184,"endOffset":4368,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4323,"endOffset":4362,"count":198}],"isBlockCoverage":true},{"functionName":"mapOptionFieldNames","ranges":[{"startOffset":4473,"endOffset":5000,"count":33},{"startOffset":4561,"endOffset":4857,"count":26},{"startOffset":4878,"endOffset":4911,"count":12},{"startOffset":4913,"endOffset":4980,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4611,"endOffset":4851,"count":198},{"startOffset":4667,"endOffset":4679,"count":0},{"startOffset":4761,"endOffset":4826,"count":0}],"isBlockCoverage":true},{"functionName":"mapWhereFieldNames","ranges":[{"startOffset":5052,"endOffset":6047,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5200,"endOffset":6018,"count":12},{"startOffset":5349,"endOffset":5460,"count":0},{"startOffset":5510,"endOffset":5626,"count":0},{"startOffset":5628,"endOffset":5755,"count":0},{"startOffset":5804,"endOffset":6012,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5844,"endOffset":6002,"count":0}],"isBlockCoverage":false},{"functionName":"mapValueFieldNames","ranges":[{"startOffset":6097,"endOffset":6562,"count":4},{"startOffset":6204,"endOffset":6543,"count":29},{"startOffset":6400,"endOffset":6477,"count":0}],"isBlockCoverage":true},{"functionName":"isColString","ranges":[{"startOffset":6612,"endOffset":6734,"count":12},{"startOffset":6697,"endOffset":6731,"count":0}],"isBlockCoverage":true},{"functionName":"canTreatArrayAsAnd","ranges":[{"startOffset":6770,"endOffset":6880,"count":0}],"isBlockCoverage":false},{"functionName":"combineTableNames","ranges":[{"startOffset":6930,"endOffset":7098,"count":0}],"isBlockCoverage":false},{"functionName":"toDefaultValue","ranges":[{"startOffset":7146,"endOffset":7703,"count":4},{"startOffset":7223,"endOffset":7346,"count":0},{"startOffset":7388,"endOffset":7414,"count":0},{"startOffset":7456,"endOffset":7482,"count":0},{"startOffset":7521,"endOffset":7551,"count":0},{"startOffset":7580,"endOffset":7611,"count":0},{"startOffset":7642,"endOffset":7685,"count":0}],"isBlockCoverage":true},{"functionName":"defaultValueSchemable","ranges":[{"startOffset":7745,"endOffset":8036,"count":48},{"startOffset":7832,"endOffset":7971,"count":0},{"startOffset":7973,"endOffset":8035,"count":0}],"isBlockCoverage":true},{"functionName":"removeNullValuesFromHash","ranges":[{"startOffset":8092,"endOffset":8507,"count":4},{"startOffset":8264,"endOffset":8488,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8306,"endOffset":8462,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":8671,"endOffset":8794,"count":4},{"startOffset":8749,"endOffset":8780,"count":0}],"isBlockCoverage":true},{"functionName":"addTicks","ranges":[{"startOffset":8868,"endOffset":8995,"count":461},{"startOffset":8923,"endOffset":8935,"count":0}],"isBlockCoverage":true},{"functionName":"removeTicks","ranges":[{"startOffset":9025,"endOffset":9149,"count":922},{"startOffset":9083,"endOffset":9095,"count":0}],"isBlockCoverage":true},{"functionName":"flattenObjectDeep","ranges":[{"startOffset":9185,"endOffset":9712,"count":0}],"isBlockCoverage":false},{"functionName":"Fn","ranges":[{"startOffset":9866,"endOffset":9946,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":9949,"endOffset":10001,"count":0}],"isBlockCoverage":false},{"functionName":"Col","ranges":[{"startOffset":10059,"endOffset":10174,"count":0}],"isBlockCoverage":false},{"functionName":"Cast","ranges":[{"startOffset":10235,"endOffset":10370,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":10436,"endOffset":10491,"count":0}],"isBlockCoverage":false},{"functionName":"Json","ranges":[{"startOffset":10560,"endOffset":10807,"count":0}],"isBlockCoverage":false},{"functionName":"Where","ranges":[{"startOffset":10871,"endOffset":11105,"count":0}],"isBlockCoverage":false},{"functionName":"getOperators","ranges":[{"startOffset":11131,"endOffset":11240,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11210,"endOffset":11236,"count":0}],"isBlockCoverage":false},{"functionName":"getComplexKeys","ranges":[{"startOffset":11278,"endOffset":11363,"count":36}],"isBlockCoverage":true},{"functionName":"getComplexSize","ranges":[{"startOffset":11405,"endOffset":11508,"count":12},{"startOffset":11464,"endOffset":11476,"count":0}],"isBlockCoverage":true},{"functionName":"isWhereEmpty","ranges":[{"startOffset":11550,"endOffset":11648,"count":0}],"isBlockCoverage":false},{"functionName":"generateEnumName","ranges":[{"startOffset":11686,"endOffset":11782,"count":0}],"isBlockCoverage":false},{"functionName":"camelizeObjectKeys","ranges":[{"startOffset":11828,"endOffset":11994,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":12044,"endOffset":12486,"count":0}],"isBlockCoverage":false},{"functionName":"nameIndex","ranges":[{"startOffset":12516,"endOffset":12882,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":12914,"endOffset":12994,"count":0}],"isBlockCoverage":false},{"functionName":"safeStringifyJson","ranges":[{"startOffset":13028,"endOffset":13213,"count":0}],"isBlockCoverage":false}]},{"scriptId":"645","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17860,"count":1},{"startOffset":6777,"endOffset":6834,"count":3},{"startOffset":17497,"endOffset":17629,"count":7},{"startOffset":17683,"endOffset":17782,"count":8}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":512,"endOffset":567,"count":48}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":570,"endOffset":604,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":607,"endOffset":735,"count":37},{"startOffset":660,"endOffset":713,"count":14},{"startOffset":713,"endOffset":734,"count":23}],"isBlockCoverage":true},{"functionName":"bindParam","ranges":[{"startOffset":738,"endOffset":910,"count":25},{"startOffset":791,"endOffset":844,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":920,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":968,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":1111,"endOffset":1170,"count":114}],"isBlockCoverage":true},{"functionName":"STRING","ranges":[{"startOffset":1245,"endOffset":1476,"count":61},{"startOffset":1335,"endOffset":1344,"count":52},{"startOffset":1345,"endOffset":1366,"count":9}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1479,"endOffset":1595,"count":18},{"startOffset":1572,"endOffset":1583,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1598,"endOffset":1927,"count":0}],"isBlockCoverage":false},{"functionName":"get BINARY","ranges":[{"startOffset":1930,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"get BINARY","ranges":[{"startOffset":2032,"endOffset":2080,"count":0}],"isBlockCoverage":false},{"functionName":"CHAR","ranges":[{"startOffset":2113,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2220,"endOffset":2333,"count":0}],"isBlockCoverage":false},{"functionName":"TEXT","ranges":[{"startOffset":2368,"endOffset":2547,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2550,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2796,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3011,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3048,"endOffset":3226,"count":0}],"isBlockCoverage":false},{"functionName":"NUMBER","ranges":[{"startOffset":3263,"endOffset":3657,"count":34},{"startOffset":3341,"endOffset":3399,"count":0}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":3660,"endOffset":4024,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4027,"endOffset":4232,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":4235,"endOffset":4501,"count":5},{"startOffset":4291,"endOffset":4321,"count":0},{"startOffset":4322,"endOffset":4340,"count":0},{"startOffset":4341,"endOffset":4361,"count":0},{"startOffset":4391,"endOffset":4500,"count":0}],"isBlockCoverage":true},{"functionName":"get UNSIGNED","ranges":[{"startOffset":4504,"endOffset":4602,"count":0}],"isBlockCoverage":false},{"functionName":"get ZEROFILL","ranges":[{"startOffset":4605,"endOffset":4703,"count":0}],"isBlockCoverage":false},{"functionName":"get UNSIGNED","ranges":[{"startOffset":4713,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"get ZEROFILL","ranges":[{"startOffset":4775,"endOffset":4827,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4863,"endOffset":5066,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":5238,"endOffset":5346,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5349,"endOffset":5534,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":5567,"endOffset":5675,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":5710,"endOffset":5818,"count":0}],"isBlockCoverage":false},{"functionName":"DECIMAL","ranges":[{"startOffset":5854,"endOffset":5968,"count":2},{"startOffset":5926,"endOffset":5938,"count":0}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":5971,"endOffset":6142,"count":4},{"startOffset":6021,"endOffset":6116,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":6145,"endOffset":6334,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":6382,"endOffset":6576,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":6580,"endOffset":6641,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":6645,"endOffset":6727,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6870,"endOffset":6908,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6911,"endOffset":7100,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":7103,"endOffset":7539,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7619,"endOffset":7651,"count":0}],"isBlockCoverage":false},{"functionName":"DATE","ranges":[{"startOffset":7686,"endOffset":7865,"count":41},{"startOffset":7768,"endOffset":7777,"count":34},{"startOffset":7778,"endOffset":7791,"count":7}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":7868,"endOffset":7904,"count":14}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":7907,"endOffset":8090,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":8093,"endOffset":8266,"count":32},{"startOffset":8167,"endOffset":8194,"count":1},{"startOffset":8195,"endOffset":8205,"count":1},{"startOffset":8207,"endOffset":8244,"count":1},{"startOffset":8244,"endOffset":8265,"count":31}],"isBlockCoverage":true},{"functionName":"_isChanged","ranges":[{"startOffset":8269,"endOffset":8609,"count":1},{"startOffset":8326,"endOffset":8336,"count":0},{"startOffset":8337,"endOffset":8470,"count":0},{"startOffset":8472,"endOffset":8499,"count":0},{"startOffset":8533,"endOffset":8559,"count":0},{"startOffset":8561,"endOffset":8588,"count":0}],"isBlockCoverage":true},{"functionName":"_applyTimezone","ranges":[{"startOffset":8612,"endOffset":8878,"count":9},{"startOffset":8718,"endOffset":8779,"count":0},{"startOffset":8847,"endOffset":8877,"count":0}],"isBlockCoverage":true},{"functionName":"_stringify","ranges":[{"startOffset":8881,"endOffset":9054,"count":9}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":9093,"endOffset":9125,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9128,"endOffset":9196,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":9199,"endOffset":9363,"count":0}],"isBlockCoverage":false},{"functionName":"_isChanged","ranges":[{"startOffset":9366,"endOffset":9599,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":9636,"endOffset":9812,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":9851,"endOffset":9884,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9887,"endOffset":9944,"count":0}],"isBlockCoverage":false},{"functionName":"BLOB","ranges":[{"startOffset":10043,"endOffset":10222,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":10225,"endOffset":10468,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":10471,"endOffset":10674,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":10677,"endOffset":10950,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":10953,"endOffset":10995,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":10998,"endOffset":11248,"count":0}],"isBlockCoverage":false},{"functionName":"RANGE","ranges":[{"startOffset":11315,"endOffset":11660,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11663,"endOffset":11967,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12002,"endOffset":12255,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12292,"endOffset":12545,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12582,"endOffset":12840,"count":0}],"isBlockCoverage":false},{"functionName":"VIRTUAL","ranges":[{"startOffset":12878,"endOffset":13067,"count":0}],"isBlockCoverage":false},{"functionName":"ENUM","ranges":[{"startOffset":13102,"endOffset":13460,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":13463,"endOffset":13663,"count":0}],"isBlockCoverage":false},{"functionName":"ARRAY","ranges":[{"startOffset":13699,"endOffset":13912,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":13915,"endOffset":13965,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":13968,"endOffset":14141,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":14151,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"GEOMETRY","ranges":[{"startOffset":14270,"endOffset":14467,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":14470,"endOffset":14593,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":14596,"endOffset":14722,"count":0}],"isBlockCoverage":false},{"functionName":"GEOGRAPHY","ranges":[{"startOffset":14797,"endOffset":14994,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":14997,"endOffset":15120,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":15123,"endOffset":15249,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15320,"endOffset":15527,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15562,"endOffset":15764,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15802,"endOffset":16015,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":16054,"endOffset":16232,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16715,"endOffset":16881,"count":39},{"startOffset":16799,"endOffset":16879,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17519,"endOffset":17625,"count":90},{"startOffset":17563,"endOffset":17621,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17705,"endOffset":17778,"count":129}],"isBlockCoverage":true}]},{"scriptId":"646","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/wkx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":421,"count":1}],"isBlockCoverage":true}]},{"scriptId":"647","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":777,"count":1}],"isBlockCoverage":true}]},{"scriptId":"648","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/geometry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12236,"count":1}],"isBlockCoverage":true},{"functionName":"Geometry","ranges":[{"startOffset":553,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.parse","ranges":[{"startOffset":674,"endOffset":1051,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._parseWkt","ranges":[{"startOffset":1077,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._parseWkb","ranges":[{"startOffset":2343,"endOffset":4662,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.parseTwkb","ranges":[{"startOffset":4688,"endOffset":7282,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.parseGeoJSON","ranges":[{"startOffset":7311,"endOffset":7375,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._parseGeoJSON","ranges":[{"startOffset":7405,"endOffset":8898,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.toEwkt","ranges":[{"startOffset":8931,"endOffset":9001,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.toEwkb","ranges":[{"startOffset":9034,"endOffset":9350,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._getWktType","ranges":[{"startOffset":9388,"endOffset":9732,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._getWktCoordinate","ranges":[{"startOffset":9776,"endOffset":9992,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._writeWkbType","ranges":[{"startOffset":10032,"endOffset":10651,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.getTwkbPrecision","ranges":[{"startOffset":10684,"endOffset":10964,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._writeTwkbHeader","ranges":[{"startOffset":11007,"endOffset":11543,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.toGeoJSON","ranges":[{"startOffset":11579,"endOffset":12233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/point.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6221,"count":1}],"isBlockCoverage":true},{"functionName":"Point","ranges":[{"startOffset":217,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"Point.Z","ranges":[{"startOffset":517,"endOffset":643,"count":0}],"isBlockCoverage":false},{"functionName":"Point.M","ranges":[{"startOffset":658,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"Point.ZM","ranges":[{"startOffset":800,"endOffset":945,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseWkt","ranges":[{"startOffset":968,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseWkb","ranges":[{"startOffset":1466,"endOffset":1601,"count":0}],"isBlockCoverage":false},{"functionName":"Point._readWkbPoint","ranges":[{"startOffset":1628,"endOffset":1833,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseTwkb","ranges":[{"startOffset":1857,"endOffset":2415,"count":0}],"isBlockCoverage":false},{"functionName":"Point._readTwkbPoint","ranges":[{"startOffset":2443,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseGeoJSON","ranges":[{"startOffset":3006,"endOffset":3083,"count":0}],"isBlockCoverage":false},{"functionName":"Point._readGeoJSONPoint","ranges":[{"startOffset":3114,"endOffset":3372,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toWkt","ranges":[{"startOffset":3401,"endOffset":3721,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toWkb","ranges":[{"startOffset":3750,"endOffset":4273,"count":0}],"isBlockCoverage":false},{"functionName":"Point._writeWkbPoint","ranges":[{"startOffset":4311,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toTwkb","ranges":[{"startOffset":4538,"endOffset":4931,"count":0}],"isBlockCoverage":false},{"functionName":"Point._writeTwkbPoint","ranges":[{"startOffset":4970,"endOffset":5574,"count":0}],"isBlockCoverage":false},{"functionName":"Point._getWkbSize","ranges":[{"startOffset":5609,"endOffset":5758,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toGeoJSON","ranges":[{"startOffset":5791,"endOffset":6218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/binarywriter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2447,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryWriter","ranges":[{"startOffset":34,"endOffset":177,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":181,"endOffset":395,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":224,"endOffset":391,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryWriter.writeBuffer","ranges":[{"startOffset":1574,"endOffset":1736,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryWriter.writeVarInt","ranges":[{"startOffset":1778,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryWriter.ensureSize","ranges":[{"startOffset":2063,"endOffset":2444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/zigzag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":32,"endOffset":103,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":118,"endOffset":190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/linestring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4952,"count":1}],"isBlockCoverage":true},{"functionName":"LineString","ranges":[{"startOffset":217,"endOffset":464,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.Z","ranges":[{"startOffset":523,"endOffset":656,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.M","ranges":[{"startOffset":676,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.ZM","ranges":[{"startOffset":830,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseWkt","ranges":[{"startOffset":1020,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseWkb","ranges":[{"startOffset":1469,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseTwkb","ranges":[{"startOffset":1863,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseGeoJSON","ranges":[{"startOffset":2397,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toWkt","ranges":[{"startOffset":2757,"endOffset":2952,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._toInnerWkt","ranges":[{"startOffset":2992,"endOffset":3239,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toWkb","ranges":[{"startOffset":3273,"endOffset":3616,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toTwkb","ranges":[{"startOffset":3651,"endOffset":4195,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._getWkbSize","ranges":[{"startOffset":4235,"endOffset":4448,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toGeoJSON","ranges":[{"startOffset":4486,"endOffset":4949,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/polygon.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8508,"count":1}],"isBlockCoverage":true},{"functionName":"Polygon","ranges":[{"startOffset":214,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.Z","ranges":[{"startOffset":609,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.M","ranges":[{"startOffset":789,"endOffset":952,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.ZM","ranges":[{"startOffset":970,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseWkt","ranges":[{"startOffset":1184,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseWkb","ranges":[{"startOffset":1862,"endOffset":2654,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseTwkb","ranges":[{"startOffset":2680,"endOffset":3550,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseGeoJSON","ranges":[{"startOffset":3579,"endOffset":4244,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toWkt","ranges":[{"startOffset":4275,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._toInnerWkt","ranges":[{"startOffset":4507,"endOffset":5113,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toWkb","ranges":[{"startOffset":5144,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toTwkb","ranges":[{"startOffset":5944,"endOffset":6869,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._getWkbSize","ranges":[{"startOffset":6906,"endOffset":7339,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toGeoJSON","ranges":[{"startOffset":7374,"endOffset":8505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/multipoint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4723,"count":1}],"isBlockCoverage":true},{"functionName":"MultiPoint","ranges":[{"startOffset":217,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.Z","ranges":[{"startOffset":524,"endOffset":657,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.M","ranges":[{"startOffset":677,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.ZM","ranges":[{"startOffset":831,"endOffset":993,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseWkt","ranges":[{"startOffset":1021,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseWkb","ranges":[{"startOffset":1470,"endOffset":1830,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseTwkb","ranges":[{"startOffset":1859,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseGeoJSON","ranges":[{"startOffset":2393,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toWkt","ranges":[{"startOffset":2766,"endOffset":3130,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toWkb","ranges":[{"startOffset":3164,"endOffset":3503,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toTwkb","ranges":[{"startOffset":3538,"endOffset":4082,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._getWkbSize","ranges":[{"startOffset":4122,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toGeoJSON","ranges":[{"startOffset":4401,"endOffset":4720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/multilinestring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5758,"count":1}],"isBlockCoverage":true},{"functionName":"MultiLineString","ranges":[{"startOffset":265,"endOffset":547,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.Z","ranges":[{"startOffset":616,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.M","ranges":[{"startOffset":804,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.ZM","ranges":[{"startOffset":993,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseWkt","ranges":[{"startOffset":1223,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseWkb","ranges":[{"startOffset":1836,"endOffset":2246,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseTwkb","ranges":[{"startOffset":2280,"endOffset":3114,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseGeoJSON","ranges":[{"startOffset":3151,"endOffset":3563,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toWkt","ranges":[{"startOffset":3602,"endOffset":3981,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toWkb","ranges":[{"startOffset":4020,"endOffset":4379,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toTwkb","ranges":[{"startOffset":4419,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._getWkbSize","ranges":[{"startOffset":5206,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toGeoJSON","ranges":[{"startOffset":5421,"endOffset":5755,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/multipolygon.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6770,"count":1}],"isBlockCoverage":true},{"functionName":"MultiPolygon","ranges":[{"startOffset":256,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.Z","ranges":[{"startOffset":580,"endOffset":725,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.M","ranges":[{"startOffset":747,"endOffset":892,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.ZM","ranges":[{"startOffset":915,"endOffset":1091,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseWkt","ranges":[{"startOffset":1121,"endOffset":2086,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseWkb","ranges":[{"startOffset":2116,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseTwkb","ranges":[{"startOffset":2527,"endOffset":3734,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseGeoJSON","ranges":[{"startOffset":3768,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toWkt","ranges":[{"startOffset":4236,"endOffset":4600,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toWkb","ranges":[{"startOffset":4636,"endOffset":4983,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toTwkb","ranges":[{"startOffset":5020,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._getWkbSize","ranges":[{"startOffset":6236,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toGeoJSON","ranges":[{"startOffset":6442,"endOffset":6767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"657","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/geometrycollection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5023,"count":1}],"isBlockCoverage":true},{"functionName":"GeometryCollection","ranges":[{"startOffset":192,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.Z","ranges":[{"startOffset":546,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.M","ranges":[{"startOffset":747,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.ZM","ranges":[{"startOffset":949,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseWkt","ranges":[{"startOffset":1195,"endOffset":1704,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseWkb","ranges":[{"startOffset":1740,"endOffset":2166,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseTwkb","ranges":[{"startOffset":2203,"endOffset":2643,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseGeoJSON","ranges":[{"startOffset":2683,"endOffset":3074,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toWkt","ranges":[{"startOffset":3116,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toWkb","ranges":[{"startOffset":3534,"endOffset":3893,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toTwkb","ranges":[{"startOffset":3936,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._getWkbSize","ranges":[{"startOffset":4483,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toGeoJSON","ranges":[{"startOffset":4699,"endOffset":5020,"count":0}],"isBlockCoverage":false}]},{"scriptId":"658","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/binaryreader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1719,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryReader","ranges":[{"startOffset":34,"endOffset":178,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":182,"endOffset":507,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":233,"endOffset":503,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryReader.readVarInt","ranges":[{"startOffset":1395,"endOffset":1716,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wkx/lib/wktparser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3645,"count":1}],"isBlockCoverage":true},{"functionName":"WktParser","ranges":[{"startOffset":99,"endOffset":178,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.match","ranges":[{"startOffset":210,"endOffset":504,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchRegex","ranges":[{"startOffset":542,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.isMatch","ranges":[{"startOffset":888,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchType","ranges":[{"startOffset":1215,"endOffset":1541,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchDimension","ranges":[{"startOffset":1583,"endOffset":1905,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.expectGroupStart","ranges":[{"startOffset":1949,"endOffset":2046,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.expectGroupEnd","ranges":[{"startOffset":2088,"endOffset":2183,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchCoordinate","ranges":[{"startOffset":2226,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchCoordinates","ranges":[{"startOffset":3164,"endOffset":3473,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.skipWhitespaces","ranges":[{"startOffset":3516,"endOffset":3642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"660","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5394,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":27}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1},{"startOffset":442,"endOffset":504,"count":29}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":26},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":57},{"startOffset":725,"endOffset":745,"count":5},{"startOffset":755,"endOffset":880,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":4}],"isBlockCoverage":true},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":26},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":29}],"isBlockCoverage":true},{"functionName":"AccessDeniedError","ranges":[{"startOffset":1250,"endOffset":1290,"count":1}],"isBlockCoverage":true},{"functionName":"AggregateError","ranges":[{"startOffset":1310,"endOffset":1346,"count":1}],"isBlockCoverage":true},{"functionName":"AssociationError","ranges":[{"startOffset":1368,"endOffset":1406,"count":3}],"isBlockCoverage":true},{"functionName":"AsyncQueueError","ranges":[{"startOffset":1427,"endOffset":1467,"count":1}],"isBlockCoverage":true},{"functionName":"BaseError","ranges":[{"startOffset":1482,"endOffset":1513,"count":2}],"isBlockCoverage":true},{"functionName":"BulkRecordError","ranges":[{"startOffset":1534,"endOffset":1572,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionAcquireTimeoutError","ranges":[{"startOffset":1607,"endOffset":1660,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionError","ranges":[{"startOffset":1681,"endOffset":1718,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionRefusedError","ranges":[{"startOffset":1746,"endOffset":1791,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionTimedOutError","ranges":[{"startOffset":1820,"endOffset":1867,"count":1}],"isBlockCoverage":true},{"functionName":"DatabaseError","ranges":[{"startOffset":1886,"endOffset":1921,"count":1}],"isBlockCoverage":true},{"functionName":"EagerLoadingError","ranges":[{"startOffset":1944,"endOffset":1984,"count":1}],"isBlockCoverage":true},{"functionName":"EmptyResultError","ranges":[{"startOffset":2006,"endOffset":2045,"count":2}],"isBlockCoverage":true},{"functionName":"ExclusionConstraintError","ranges":[{"startOffset":2075,"endOffset":2122,"count":1}],"isBlockCoverage":true},{"functionName":"ForeignKeyConstraintError","ranges":[{"startOffset":2153,"endOffset":2202,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotFoundError","ranges":[{"startOffset":2225,"endOffset":2266,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotReachableError","ranges":[{"startOffset":2293,"endOffset":2338,"count":1}],"isBlockCoverage":true},{"functionName":"InstanceError","ranges":[{"startOffset":2357,"endOffset":2392,"count":1}],"isBlockCoverage":true},{"functionName":"InvalidConnectionError","ranges":[{"startOffset":2420,"endOffset":2465,"count":1}],"isBlockCoverage":true},{"functionName":"OptimisticLockError","ranges":[{"startOffset":2490,"endOffset":2532,"count":1}],"isBlockCoverage":true},{"functionName":"QueryError","ranges":[{"startOffset":2548,"endOffset":2580,"count":1}],"isBlockCoverage":true},{"functionName":"SequelizeScopeError","ranges":[{"startOffset":2605,"endOffset":2647,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":2665,"endOffset":2699,"count":1}],"isBlockCoverage":true},{"functionName":"UniqueConstraintError","ranges":[{"startOffset":2726,"endOffset":2770,"count":1}],"isBlockCoverage":true},{"functionName":"UnknownConstraintError","ranges":[{"startOffset":2798,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationError","ranges":[{"startOffset":2864,"endOffset":2901,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItem","ranges":[{"startOffset":2926,"endOffset":2975,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemOrigin","ranges":[{"startOffset":3006,"endOffset":3061,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemType","ranges":[{"startOffset":3090,"endOffset":3143,"count":1}],"isBlockCoverage":true}]},{"scriptId":"661","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/base-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":532,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":307,"endOffset":331,"count":15}],"isBlockCoverage":true},{"functionName":"BaseError","ranges":[{"startOffset":370,"endOffset":454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"662","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2253,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1564,"count":5}],"isBlockCoverage":true},{"functionName":"DatabaseError","ranges":[{"startOffset":1688,"endOffset":2163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/aggregate-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2227,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1565,"count":1}],"isBlockCoverage":true},{"functionName":"AggregateError","ranges":[{"startOffset":1690,"endOffset":1823,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1826,"endOffset":2134,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/association-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1588,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1271,"count":3}],"isBlockCoverage":true},{"functionName":"AssociationError","ranges":[{"startOffset":1398,"endOffset":1489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/bulk-record-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2014,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1567,"count":1}],"isBlockCoverage":true},{"functionName":"BulkRecordError","ranges":[{"startOffset":1693,"endOffset":1916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2024,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1566,"count":8}],"isBlockCoverage":true},{"functionName":"ConnectionError","ranges":[{"startOffset":1692,"endOffset":1928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/eager-loading-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1597,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"EagerLoadingError","ranges":[{"startOffset":1401,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/empty-result-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1591,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1272,"count":2}],"isBlockCoverage":true},{"functionName":"EmptyResultError","ranges":[{"startOffset":1399,"endOffset":1490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/instance-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1570,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1268,"count":1}],"isBlockCoverage":true},{"functionName":"InstanceError","ranges":[{"startOffset":1392,"endOffset":1480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/optimistic-lock-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2265,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1571,"count":1}],"isBlockCoverage":true},{"functionName":"OptimisticLockError","ranges":[{"startOffset":1701,"endOffset":2155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/query-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1552,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1265,"count":1}],"isBlockCoverage":true},{"functionName":"QueryError","ranges":[{"startOffset":1386,"endOffset":1471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/sequelize-scope-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1600,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"SequelizeScopeError","ranges":[{"startOffset":1405,"endOffset":1490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"673","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/validation-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5444,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":2},{"startOffset":325,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1},{"startOffset":603,"endOffset":665,"count":4}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":2},{"startOffset":1471,"endOffset":1476,"count":0}],"isBlockCoverage":true},{"functionName":"ValidationErrorItem","ranges":[{"startOffset":1548,"endOffset":1573,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemOrigin","ranges":[{"startOffset":1604,"endOffset":1635,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemType","ranges":[{"startOffset":1664,"endOffset":1693,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1706,"endOffset":1736,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1849,"endOffset":2148,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2231,"endOffset":2448,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItem","ranges":[{"startOffset":2514,"endOffset":3639,"count":0}],"isBlockCoverage":false},{"functionName":"isValidationErrorItemOrigin","ranges":[{"startOffset":3642,"endOffset":3740,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":3743,"endOffset":3806,"count":0}],"isBlockCoverage":false},{"functionName":"getValidatorKey","ranges":[{"startOffset":3809,"endOffset":4450,"count":0}],"isBlockCoverage":false},{"functionName":"ValidationError","ranges":[{"startOffset":4665,"endOffset":5174,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5177,"endOffset":5348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/access-denied-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1614,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"AccessDeniedError","ranges":[{"startOffset":1420,"endOffset":1510,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/connection-acquire-timeout-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1689,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1286,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionAcquireTimeoutError","ranges":[{"startOffset":1445,"endOffset":1547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/connection-refused-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1644,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionRefusedError","ranges":[{"startOffset":1430,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"677","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/connection-timed-out-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1653,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1280,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionTimedOutError","ranges":[{"startOffset":1433,"endOffset":1529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"678","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/host-not-found-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1617,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1274,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotFoundError","ranges":[{"startOffset":1421,"endOffset":1511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/host-not-reachable-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1641,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotReachableError","ranges":[{"startOffset":1429,"endOffset":1523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/invalid-connection-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1644,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"InvalidConnectionError","ranges":[{"startOffset":1430,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"681","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database/exclusion-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2369,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1576,"count":1}],"isBlockCoverage":true},{"functionName":"ExclusionConstraintError","ranges":[{"startOffset":1724,"endOffset":2244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database/foreign-key-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2762,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1},{"startOffset":603,"endOffset":665,"count":2}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"RelationshipType","ranges":[{"startOffset":1545,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1580,"endOffset":1622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1737,"endOffset":1873,"count":1}],"isBlockCoverage":true},{"functionName":"ForeignKeyConstraintError","ranges":[{"startOffset":1974,"endOffset":2632,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database/timeout-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1598,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1267,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":1403,"endOffset":1511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database/unknown-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2370,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1574,"count":1}],"isBlockCoverage":true},{"functionName":"UnknownConstraintError","ranges":[{"startOffset":1720,"endOffset":2251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/validation/unique-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2598,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":5},{"startOffset":886,"endOffset":906,"count":3},{"startOffset":916,"endOffset":1041,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1573,"count":1}],"isBlockCoverage":true},{"functionName":"UniqueConstraintError","ranges":[{"startOffset":1724,"endOffset":2482,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mssql/async-queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2868,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":3}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1},{"startOffset":603,"endOffset":665,"count":2}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":2},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":4},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":2},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncQueueError","ranges":[{"startOffset":1544,"endOffset":1565,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1578,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncQueueError","ranges":[{"startOffset":1824,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncQueue","ranges":[{"startOffset":1938,"endOffset":2175,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":2178,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":2370,"endOffset":2787,"count":0}],"isBlockCoverage":false}]},{"scriptId":"687","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/validator-extras.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2220,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":153,"endOffset":213,"count":0}],"isBlockCoverage":false},{"functionName":"notEmpty","ranges":[{"startOffset":217,"endOffset":276,"count":0}],"isBlockCoverage":false},{"functionName":"len","ranges":[{"startOffset":280,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"isUrl","ranges":[{"startOffset":349,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":397,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":448,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"notIn","ranges":[{"startOffset":499,"endOffset":559,"count":0}],"isBlockCoverage":false},{"functionName":"regex","ranges":[{"startOffset":563,"endOffset":776,"count":0}],"isBlockCoverage":false},{"functionName":"notRegex","ranges":[{"startOffset":780,"endOffset":868,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimal","ranges":[{"startOffset":872,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":994,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":1096,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":1198,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":1287,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"notContains","ranges":[{"startOffset":1357,"endOffset":1423,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":1427,"endOffset":1508,"count":0}],"isBlockCoverage":false},{"functionName":"validator.isImmutable","ranges":[{"startOffset":1569,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"validator.notNull","ranges":[{"startOffset":1763,"endOffset":1821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1845,"endOffset":1892,"count":16}],"isBlockCoverage":true},{"functionName":"validator.isDate","ranges":[{"startOffset":1952,"endOffset":2142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11469,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":15,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":6942,"endOffset":7152,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":7154,"endOffset":7899,"count":6},{"startOffset":7236,"endOffset":7311,"count":0},{"startOffset":7313,"endOffset":7409,"count":0},{"startOffset":7411,"endOffset":7539,"count":0},{"startOffset":7562,"endOffset":7898,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":7901,"endOffset":7996,"count":87},{"startOffset":7969,"endOffset":7974,"count":5},{"startOffset":7975,"endOffset":7993,"count":82}],"isBlockCoverage":true}]},{"scriptId":"689","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/toDate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":493,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"toDate","ranges":[{"startOffset":281,"endOffset":416,"count":0}],"isBlockCoverage":false}]},{"scriptId":"690","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/util/assertString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":113,"endOffset":491,"count":0}],"isBlockCoverage":false},{"functionName":"assertString","ranges":[{"startOffset":493,"endOffset":859,"count":0}],"isBlockCoverage":false}]},{"scriptId":"691","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/toFloat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":442,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":170,"endOffset":265,"count":1},{"startOffset":244,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"toFloat","ranges":[{"startOffset":267,"endOffset":365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"692","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isFloat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1066,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":245,"endOffset":340,"count":1},{"startOffset":313,"endOffset":318,"count":0}],"isBlockCoverage":true},{"functionName":"isFloat","ranges":[{"startOffset":342,"endOffset":995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"693","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/alpha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4911,"count":1},{"startOffset":3052,"endOffset":3219,"count":7},{"startOffset":3490,"endOffset":3643,"count":17},{"startOffset":3778,"endOffset":3905,"count":2},{"startOffset":4399,"endOffset":4449,"count":3},{"startOffset":4503,"endOffset":4542,"count":27}],"isBlockCoverage":true}]},{"scriptId":"694","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/toInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"toInt","ranges":[{"startOffset":280,"endOffset":382,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/toBoolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"toBoolean","ranges":[{"startOffset":284,"endOffset":484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"696","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/equals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":458,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":281,"endOffset":381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/contains.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":318,"endOffset":413,"count":3},{"startOffset":386,"endOffset":391,"count":0}],"isBlockCoverage":true},{"functionName":"contains","ranges":[{"startOffset":490,"endOffset":859,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/util/toString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":922,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":109,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":489,"endOffset":845,"count":0}],"isBlockCoverage":false}]},{"scriptId":"699","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/util/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":484,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":106,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/matches.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":590,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"matches","ranges":[{"startOffset":282,"endOffset":513,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isEmail.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6182,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":436,"endOffset":531,"count":5},{"startOffset":504,"endOffset":509,"count":0}],"isBlockCoverage":true},{"functionName":"validateDisplayName","ranges":[{"startOffset":1646,"endOffset":2532,"count":0}],"isBlockCoverage":false},{"functionName":"isEmail","ranges":[{"startOffset":2534,"endOffset":6105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"702","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isByteLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":258,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":287,"endOffset":665,"count":0}],"isBlockCoverage":false},{"functionName":"isByteLength","ranges":[{"startOffset":707,"endOffset":1142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isFQDN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2048,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":247,"endOffset":342,"count":2},{"startOffset":315,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"isFQDN","ranges":[{"startOffset":507,"endOffset":1971,"count":0}],"isBlockCoverage":false}]},{"scriptId":"704","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isIP.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3153,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isIP","ranges":[{"startOffset":2542,"endOffset":3076,"count":0}],"isBlockCoverage":false}]},{"scriptId":"705","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isURL.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6204,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":362,"endOffset":457,"count":4},{"startOffset":430,"endOffset":435,"count":0}],"isBlockCoverage":true},{"functionName":"_slicedToArray","ranges":[{"startOffset":459,"endOffset":617,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":619,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":814,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1232,"endOffset":1415,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":1417,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":1908,"endOffset":1977,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":3032,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"checkHost","ranges":[{"startOffset":3128,"endOffset":3350,"count":0}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":3352,"endOffset":6127,"count":0}],"isBlockCoverage":false}]},{"scriptId":"706","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isMACAddress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":898,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":258,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"isMACAddress","ranges":[{"startOffset":494,"endOffset":821,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isIPRange.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1424,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":243,"endOffset":338,"count":2},{"startOffset":311,"endOffset":316,"count":0}],"isBlockCoverage":true},{"functionName":"isIPRange","ranges":[{"startOffset":411,"endOffset":1347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"708","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isDate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4965,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":170,"endOffset":265,"count":1},{"startOffset":238,"endOffset":243,"count":0}],"isBlockCoverage":true},{"functionName":"_slicedToArray","ranges":[{"startOffset":267,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":427,"endOffset":620,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":622,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":1113,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"_createForOfIteratorHelper","ranges":[{"startOffset":1184,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":2179,"endOffset":2595,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2597,"endOffset":2780,"count":0}],"isBlockCoverage":false},{"functionName":"isValidFormat","ranges":[{"startOffset":2885,"endOffset":3082,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":3084,"endOffset":3288,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":3290,"endOffset":4888,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isBoolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":438,"endOffset":722,"count":0}],"isBlockCoverage":false}]},{"scriptId":"710","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isLocale.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"isLocale","ranges":[{"startOffset":375,"endOffset":548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isAlpha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1217,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":245,"endOffset":340,"count":1},{"startOffset":313,"endOffset":318,"count":0}],"isBlockCoverage":true},{"functionName":"isAlpha","ranges":[{"startOffset":342,"endOffset":1148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"712","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isAlphanumeric.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1252,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":252,"endOffset":347,"count":1},{"startOffset":320,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"isAlphanumeric","ranges":[{"startOffset":349,"endOffset":1176,"count":0}],"isBlockCoverage":false}]},{"scriptId":"713","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isNumeric.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":719,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":221,"endOffset":316,"count":1},{"startOffset":289,"endOffset":294,"count":0}],"isBlockCoverage":true},{"functionName":"isNumeric","ranges":[{"startOffset":354,"endOffset":642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isPassportNumber.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3294,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":194,"endOffset":289,"count":1},{"startOffset":262,"endOffset":267,"count":0}],"isBlockCoverage":true},{"functionName":"isPassportNumber","ranges":[{"startOffset":2891,"endOffset":3217,"count":0}],"isBlockCoverage":false}]},{"scriptId":"715","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isPort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":432,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"isPort","ranges":[{"startOffset":262,"endOffset":355,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1169,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"isInt","ranges":[{"startOffset":363,"endOffset":1092,"count":0}],"isBlockCoverage":false}]},{"scriptId":"717","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isLowercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":463,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isLowercase","ranges":[{"startOffset":286,"endOffset":386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"718","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isUppercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":463,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isUppercase","ranges":[{"startOffset":286,"endOffset":386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"719","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isIMEI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1269,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isIMEI","ranges":[{"startOffset":381,"endOffset":1192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isAscii.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":551,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"isAscii","ranges":[{"startOffset":388,"endOffset":474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"721","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isFullWidth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":285,"endOffset":290,"count":0}],"isBlockCoverage":true},{"functionName":"isFullWidth","ranges":[{"startOffset":430,"endOffset":524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"722","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isHalfWidth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":285,"endOffset":290,"count":0}],"isBlockCoverage":true},{"functionName":"isHalfWidth","ranges":[{"startOffset":429,"endOffset":523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"723","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isVariableWidth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":606,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":285,"endOffset":380,"count":1},{"startOffset":353,"endOffset":358,"count":0}],"isBlockCoverage":true},{"functionName":"isVariableWidth","ranges":[{"startOffset":382,"endOffset":529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"724","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isMultibyte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isMultibyte","ranges":[{"startOffset":394,"endOffset":488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"725","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isSemVer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":267,"endOffset":362,"count":2},{"startOffset":335,"endOffset":340,"count":0}],"isBlockCoverage":true},{"functionName":"isSemVer","ranges":[{"startOffset":767,"endOffset":872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"726","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/util/multilineRegex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":507,"count":1}],"isBlockCoverage":true},{"functionName":"multilineRegexp","ranges":[{"startOffset":291,"endOffset":430,"count":1}],"isBlockCoverage":true}]},{"scriptId":"727","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isSurrogatePair.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":193,"endOffset":288,"count":1},{"startOffset":261,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"isSurrogatePair","ranges":[{"startOffset":345,"endOffset":447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isDecimal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1255,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":353,"endOffset":448,"count":3},{"startOffset":421,"endOffset":426,"count":0}],"isBlockCoverage":true},{"functionName":"decimalRegExp","ranges":[{"startOffset":450,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimal","ranges":[{"startOffset":819,"endOffset":1178,"count":0}],"isBlockCoverage":false}]},{"scriptId":"729","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/util/includes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":355,"count":1}],"isBlockCoverage":true},{"functionName":"includes","ranges":[{"startOffset":122,"endOffset":224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"730","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isHexadecimal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":191,"endOffset":286,"count":1},{"startOffset":259,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"isHexadecimal","ranges":[{"startOffset":331,"endOffset":429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isOctal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"isOctal","ranges":[{"startOffset":313,"endOffset":399,"count":0}],"isBlockCoverage":false}]},{"scriptId":"732","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isDivisibleBy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":253,"endOffset":348,"count":2},{"startOffset":321,"endOffset":326,"count":0}],"isBlockCoverage":true},{"functionName":"isDivisibleBy","ranges":[{"startOffset":350,"endOffset":484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"733","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isHexColor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":528,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isHexColor","ranges":[{"startOffset":359,"endOffset":451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"734","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isRgbColor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1156,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isRgbColor","ranges":[{"startOffset":711,"endOffset":1079,"count":0}],"isBlockCoverage":false}]},{"scriptId":"735","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isHSL.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1293,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"isHSL","ranges":[{"startOffset":859,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"736","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isISRC.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":546,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isISRC","ranges":[{"startOffset":385,"endOffset":469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"737","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isIBAN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5476,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":210,"endOffset":305,"count":1},{"startOffset":278,"endOffset":283,"count":0}],"isBlockCoverage":true},{"functionName":"hasValidIbanFormat","ranges":[{"startOffset":3867,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"hasValidIbanChecksum","ranges":[{"startOffset":4757,"endOffset":5268,"count":0}],"isBlockCoverage":false},{"functionName":"isIBAN","ranges":[{"startOffset":5270,"endOffset":5392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"738","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isBIC.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":826,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":238,"endOffset":333,"count":1},{"startOffset":306,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"isBIC","ranges":[{"startOffset":441,"endOffset":749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"739","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isISO31661Alpha2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2153,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":225,"endOffset":320,"count":1},{"startOffset":293,"endOffset":298,"count":0}],"isBlockCoverage":true},{"functionName":"isISO31661Alpha2","ranges":[{"startOffset":1925,"endOffset":2061,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isMD5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"isMD5","ranges":[{"startOffset":309,"endOffset":391,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isHash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":731,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isHash","ranges":[{"startOffset":484,"endOffset":654,"count":0}],"isBlockCoverage":false}]},{"scriptId":"742","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isJWT.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":245,"endOffset":340,"count":2},{"startOffset":313,"endOffset":318,"count":0}],"isBlockCoverage":true},{"functionName":"isJWT","ranges":[{"startOffset":342,"endOffset":657,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isBase64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1005,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":249,"endOffset":344,"count":2},{"startOffset":317,"endOffset":322,"count":0}],"isBlockCoverage":true},{"functionName":"isBase64","ranges":[{"startOffset":469,"endOffset":928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"744","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isJSON.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1272,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":247,"endOffset":342,"count":2},{"startOffset":315,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":344,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"isJSON","ranges":[{"startOffset":783,"endOffset":1195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isEmpty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":248,"endOffset":343,"count":2},{"startOffset":316,"endOffset":321,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":409,"endOffset":623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"746","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1281,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":283,"endOffset":661,"count":0}],"isBlockCoverage":false},{"functionName":"isLength","ranges":[{"startOffset":703,"endOffset":1204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"747","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isUUID.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1012,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isUUID","ranges":[{"startOffset":748,"endOffset":935,"count":0}],"isBlockCoverage":false}]},{"scriptId":"748","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isMongoId.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":261,"endOffset":356,"count":2},{"startOffset":329,"endOffset":334,"count":0}],"isBlockCoverage":true},{"functionName":"isMongoId","ranges":[{"startOffset":358,"endOffset":484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isAfter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":245,"endOffset":340,"count":2},{"startOffset":313,"endOffset":318,"count":0}],"isBlockCoverage":true},{"functionName":"isAfter","ranges":[{"startOffset":342,"endOffset":656,"count":0}],"isBlockCoverage":false}]},{"scriptId":"750","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isBefore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":735,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":246,"endOffset":341,"count":2},{"startOffset":314,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"isBefore","ranges":[{"startOffset":343,"endOffset":658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1517,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":251,"endOffset":346,"count":2},{"startOffset":319,"endOffset":324,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":348,"endOffset":726,"count":0}],"isBlockCoverage":false},{"functionName":"isIn","ranges":[{"startOffset":728,"endOffset":1440,"count":0}],"isBlockCoverage":false}]},{"scriptId":"752","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isCreditCard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1336,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":258,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"isCreditCard","ranges":[{"startOffset":618,"endOffset":1259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"753","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isIdentityCard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11262,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":250,"endOffset":345,"count":2},{"startOffset":318,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"PL","ranges":[{"startOffset":372,"endOffset":1114,"count":0}],"isBlockCoverage":false},{"functionName":"ES","ranges":[{"startOffset":1122,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"FI","ranges":[{"startOffset":1824,"endOffset":2443,"count":0}],"isBlockCoverage":false},{"functionName":"IN","ranges":[{"startOffset":2451,"endOffset":3523,"count":0}],"isBlockCoverage":false},{"functionName":"IR","ranges":[{"startOffset":3531,"endOffset":3976,"count":0}],"isBlockCoverage":false},{"functionName":"IT","ranges":[{"startOffset":3984,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"NO","ranges":[{"startOffset":4231,"endOffset":4866,"count":0}],"isBlockCoverage":false},{"functionName":"TH","ranges":[{"startOffset":4874,"endOffset":5136,"count":0}],"isBlockCoverage":false},{"functionName":"LK","ranges":[{"startOffset":5144,"endOffset":5381,"count":0}],"isBlockCoverage":false},{"functionName":"heIL","ranges":[{"startOffset":5394,"endOffset":5883,"count":0}],"isBlockCoverage":false},{"functionName":"arLY","ranges":[{"startOffset":5896,"endOffset":6204,"count":0}],"isBlockCoverage":false},{"functionName":"arTN","ranges":[{"startOffset":6217,"endOffset":6430,"count":0}],"isBlockCoverage":false},{"functionName":"zhCN","ranges":[{"startOffset":6443,"endOffset":9700,"count":0}],"isBlockCoverage":false},{"functionName":"zhTW","ranges":[{"startOffset":9713,"endOffset":10569,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentityCard","ranges":[{"startOffset":10574,"endOffset":11185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isEAN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2461,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"getPositionWeightThroughLengthAndIndex","ranges":[{"startOffset":1297,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"calculateCheckDigit","ranges":[{"startOffset":1688,"endOffset":2041,"count":0}],"isBlockCoverage":false},{"functionName":"isEAN","ranges":[{"startOffset":2195,"endOffset":2384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"755","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isISIN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1886,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isISIN","ranges":[{"startOffset":624,"endOffset":1809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isISBN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1471,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isISBN","ranges":[{"startOffset":387,"endOffset":1394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isISSN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1018,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isISSN","ranges":[{"startOffset":319,"endOffset":941,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isTaxID.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41377,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":15,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":698,"endOffset":908,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":910,"endOffset":1655,"count":1},{"startOffset":992,"endOffset":1067,"count":0},{"startOffset":1069,"endOffset":1165,"count":0},{"startOffset":1167,"endOffset":1295,"count":0},{"startOffset":1318,"endOffset":1654,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1657,"endOffset":1752,"count":2},{"startOffset":1725,"endOffset":1730,"count":0}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":1754,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":1909,"endOffset":2099,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":2101,"endOffset":2517,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":2519,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":2651,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2744,"endOffset":2927,"count":0}],"isBlockCoverage":false},{"functionName":"bgBgCheck","ranges":[{"startOffset":3918,"endOffset":5013,"count":0}],"isBlockCoverage":false},{"functionName":"csCzCheck","ranges":[{"startOffset":5358,"endOffset":7128,"count":0}],"isBlockCoverage":false},{"functionName":"deAtCheck","ranges":[{"startOffset":7255,"endOffset":7318,"count":0}],"isBlockCoverage":false},{"functionName":"deDeCheck","ranges":[{"startOffset":7587,"endOffset":8813,"count":0}],"isBlockCoverage":false},{"functionName":"dkDkCheck","ranges":[{"startOffset":9027,"endOffset":10531,"count":0}],"isBlockCoverage":false},{"functionName":"elCyCheck","ranges":[{"startOffset":10704,"endOffset":11351,"count":0}],"isBlockCoverage":false},{"functionName":"elGrCheck","ranges":[{"startOffset":11970,"endOffset":12283,"count":0}],"isBlockCoverage":false},{"functionName":"enIeCheck","ranges":[{"startOffset":12623,"endOffset":13041,"count":0}],"isBlockCoverage":false},{"functionName":"enUsGetPrefixes","ranges":[{"startOffset":13816,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"enUsCheck","ranges":[{"startOffset":14331,"endOffset":14419,"count":0}],"isBlockCoverage":false},{"functionName":"esEsCheck","ranges":[{"startOffset":14627,"endOffset":15504,"count":0}],"isBlockCoverage":false},{"functionName":"etEeCheck","ranges":[{"startOffset":15857,"endOffset":17196,"count":0}],"isBlockCoverage":false},{"functionName":"fiFiCheck","ranges":[{"startOffset":17384,"endOffset":18339,"count":0}],"isBlockCoverage":false},{"functionName":"frBeCheck","ranges":[{"startOffset":18514,"endOffset":19172,"count":0}],"isBlockCoverage":false},{"functionName":"frFrCheck","ranges":[{"startOffset":19334,"endOffset":19536,"count":0}],"isBlockCoverage":false},{"functionName":"frLuCheck","ranges":[{"startOffset":19696,"endOffset":20156,"count":0}],"isBlockCoverage":false},{"functionName":"hrHrCheck","ranges":[{"startOffset":20308,"endOffset":20374,"count":0}],"isBlockCoverage":false},{"functionName":"huHuCheck","ranges":[{"startOffset":20506,"endOffset":20803,"count":0}],"isBlockCoverage":false},{"functionName":"itItNameCheck","ranges":[{"startOffset":21462,"endOffset":22137,"count":0}],"isBlockCoverage":false},{"functionName":"itItCheck","ranges":[{"startOffset":22416,"endOffset":24990,"count":0}],"isBlockCoverage":false},{"functionName":"lvLvCheck","ranges":[{"startOffset":25374,"endOffset":26467,"count":0}],"isBlockCoverage":false},{"functionName":"mtMtCheck","ranges":[{"startOffset":26643,"endOffset":27426,"count":0}],"isBlockCoverage":false},{"functionName":"nlNlCheck","ranges":[{"startOffset":27673,"endOffset":27855,"count":0}],"isBlockCoverage":false},{"functionName":"plPlCheck","ranges":[{"startOffset":28110,"endOffset":29768,"count":0}],"isBlockCoverage":false},{"functionName":"ptBrCheck","ranges":[{"startOffset":29941,"endOffset":32077,"count":0}],"isBlockCoverage":false},{"functionName":"ptPtCheck","ranges":[{"startOffset":32253,"endOffset":32534,"count":0}],"isBlockCoverage":false},{"functionName":"roRoCheck","ranges":[{"startOffset":32866,"endOffset":34132,"count":0}],"isBlockCoverage":false},{"functionName":"skSkCheck","ranges":[{"startOffset":34473,"endOffset":35353,"count":0}],"isBlockCoverage":false},{"functionName":"slSiCheck","ranges":[{"startOffset":35508,"endOffset":35792,"count":0}],"isBlockCoverage":false},{"functionName":"svSeCheck","ranges":[{"startOffset":35970,"endOffset":37638,"count":0}],"isBlockCoverage":false},{"functionName":"isTaxID","ranges":[{"startOffset":40641,"endOffset":41300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"759","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/util/algorithms.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3079,"count":1}],"isBlockCoverage":true},{"functionName":"iso7064Check","ranges":[{"startOffset":506,"endOffset":843,"count":0}],"isBlockCoverage":false},{"functionName":"luhnCheck","ranges":[{"startOffset":993,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"reverseMultiplyAndSum","ranges":[{"startOffset":1861,"endOffset":2029,"count":0}],"isBlockCoverage":false},{"functionName":"verhoeffCheck","ranges":[{"startOffset":2165,"endOffset":3079,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isMobilePhone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7771,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":285,"endOffset":290,"count":0}],"isBlockCoverage":true},{"functionName":"isMobilePhone","ranges":[{"startOffset":6695,"endOffset":7708,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isEthereumAddress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":497,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":195,"endOffset":290,"count":1},{"startOffset":263,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"isEthereumAddress","ranges":[{"startOffset":326,"endOffset":420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"762","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isCurrency.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3400,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":251,"endOffset":346,"count":2},{"startOffset":319,"endOffset":324,"count":0}],"isBlockCoverage":true},{"functionName":"currencyRegex","ranges":[{"startOffset":348,"endOffset":2657,"count":0}],"isBlockCoverage":false},{"functionName":"isCurrency","ranges":[{"startOffset":3140,"endOffset":3323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isBtcAddress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":662,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":258,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"isBtcAddress","ranges":[{"startOffset":407,"endOffset":585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isISO8601.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2495,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isValidDate","ranges":[{"startOffset":1078,"endOffset":2099,"count":0}],"isBlockCoverage":false},{"functionName":"isISO8601","ranges":[{"startOffset":2102,"endOffset":2418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isRFC3339.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1368,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isRFC3339","ranges":[{"startOffset":1201,"endOffset":1291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isISO31661Alpha3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2356,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":194,"endOffset":289,"count":1},{"startOffset":262,"endOffset":267,"count":0}],"isBlockCoverage":true},{"functionName":"isISO31661Alpha3","ranges":[{"startOffset":2143,"endOffset":2279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isISO4217.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1868,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":219,"endOffset":314,"count":1},{"startOffset":287,"endOffset":292,"count":0}],"isBlockCoverage":true},{"functionName":"isISO4217","ranges":[{"startOffset":1660,"endOffset":1781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isBase32.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":558,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"isBase32","ranges":[{"startOffset":314,"endOffset":481,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isBase58.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":615,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"isBase58","ranges":[{"startOffset":409,"endOffset":538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"770","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isDataURI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1302,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isDataURI","ranges":[{"startOffset":445,"endOffset":1225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"771","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isMagnetURI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isMagnetURI","ranges":[{"startOffset":430,"endOffset":531,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isMimeType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2240,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isMimeType","ranges":[{"startOffset":2008,"endOffset":2163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"773","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isLatLong.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1264,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":250,"endOffset":345,"count":2},{"startOffset":318,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"isLatLong","ranges":[{"startOffset":718,"endOffset":1187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"774","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isPostalCode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2773,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":216,"endOffset":311,"count":1},{"startOffset":284,"endOffset":289,"count":0}],"isBlockCoverage":true},{"functionName":"isPostalCode","ranges":[{"startOffset":2168,"endOffset":2773,"count":0}],"isBlockCoverage":false}]},{"scriptId":"775","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/ltrim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":668,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"ltrim","ranges":[{"startOffset":280,"endOffset":591,"count":0}],"isBlockCoverage":false}]},{"scriptId":"776","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/rtrim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"rtrim","ranges":[{"startOffset":280,"endOffset":858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"777","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/trim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":494,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":221,"endOffset":316,"count":2},{"startOffset":289,"endOffset":294,"count":0}],"isBlockCoverage":true},{"functionName":"trim","ranges":[{"startOffset":318,"endOffset":417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"778","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":619,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":281,"endOffset":542,"count":0}],"isBlockCoverage":false}]},{"scriptId":"779","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":807,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":283,"endOffset":730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"780","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/stripLow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":252,"endOffset":347,"count":2},{"startOffset":320,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"stripLow","ranges":[{"startOffset":349,"endOffset":565,"count":0}],"isBlockCoverage":false}]},{"scriptId":"781","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/blacklist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"blacklist","ranges":[{"startOffset":284,"endOffset":421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"782","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/whitelist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":499,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"whitelist","ranges":[{"startOffset":284,"endOffset":422,"count":0}],"isBlockCoverage":false}]},{"scriptId":"783","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isWhitelisted.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":571,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":191,"endOffset":286,"count":1},{"startOffset":259,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"isWhitelisted","ranges":[{"startOffset":288,"endOffset":494,"count":0}],"isBlockCoverage":false}]},{"scriptId":"784","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/normalizeEmail.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6666,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":178,"endOffset":273,"count":1},{"startOffset":246,"endOffset":251,"count":0}],"isBlockCoverage":true},{"functionName":"dotsReplacer","ranges":[{"startOffset":4036,"endOffset":4130,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeEmail","ranges":[{"startOffset":4132,"endOffset":6589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"785","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isSlug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":522,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isSlug","ranges":[{"startOffset":353,"endOffset":445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"786","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isLicensePlate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4112,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":192,"endOffset":287,"count":1},{"startOffset":260,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"csCZ","ranges":[{"startOffset":319,"endOffset":412,"count":0}],"isBlockCoverage":false},{"functionName":"deDE","ranges":[{"startOffset":425,"endOffset":3020,"count":0}],"isBlockCoverage":false},{"functionName":"deLI","ranges":[{"startOffset":3033,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"fiFI","ranges":[{"startOffset":3116,"endOffset":3231,"count":0}],"isBlockCoverage":false},{"functionName":"ptPT","ranges":[{"startOffset":3244,"endOffset":3364,"count":0}],"isBlockCoverage":false},{"functionName":"sqAL","ranges":[{"startOffset":3377,"endOffset":3483,"count":0}],"isBlockCoverage":false},{"functionName":"ptBR","ranges":[{"startOffset":3496,"endOffset":3600,"count":0}],"isBlockCoverage":false},{"functionName":"isLicensePlate","ranges":[{"startOffset":3605,"endOffset":4035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"787","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isStrongPassword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3196,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":257,"endOffset":352,"count":2},{"startOffset":325,"endOffset":330,"count":0}],"isBlockCoverage":true},{"functionName":"countChars","ranges":[{"startOffset":909,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"analyzePassword","ranges":[{"startOffset":1186,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"scorePassword","ranges":[{"startOffset":1908,"endOffset":2534,"count":0}],"isBlockCoverage":false},{"functionName":"isStrongPassword","ranges":[{"startOffset":2536,"endOffset":3119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"788","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/validator/lib/isVAT.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":797,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":213,"endOffset":308,"count":1},{"startOffset":281,"endOffset":286,"count":0}],"isBlockCoverage":true},{"functionName":"isVAT","ranges":[{"startOffset":523,"endOffset":797,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/moment/moment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173902,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":136,"endOffset":359,"count":1},{"startOffset":259,"endOffset":357,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":367,"endOffset":173897,"count":1},{"startOffset":3501,"endOffset":3841,"count":0},{"startOffset":11764,"endOffset":12025,"count":0},{"startOffset":25337,"endOffset":25605,"count":0},{"startOffset":148580,"endOffset":148632,"count":6},{"startOffset":148792,"endOffset":148838,"count":9}],"isBlockCoverage":true},{"functionName":"hooks","ranges":[{"startOffset":423,"endOffset":499,"count":9}],"isBlockCoverage":true},{"functionName":"setHookCallback","ranges":[{"startOffset":616,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":697,"endOffset":865,"count":10}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":871,"endOffset":1129,"count":24},{"startOffset":1038,"endOffset":1112,"count":22}],"isBlockCoverage":true},{"functionName":"hasOwnProp","ranges":[{"startOffset":1135,"endOffset":1227,"count":122}],"isBlockCoverage":true},{"functionName":"isObjectEmpty","ranges":[{"startOffset":1233,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":1589,"endOffset":1657,"count":110}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":1663,"endOffset":1836,"count":40},{"startOffset":1745,"endOffset":1819,"count":34}],"isBlockCoverage":true},{"functionName":"isDate","ranges":[{"startOffset":1842,"endOffset":2007,"count":9},{"startOffset":1918,"endOffset":1990,"count":0}],"isBlockCoverage":true},{"functionName":"map","ranges":[{"startOffset":2013,"endOffset":2189,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2195,"endOffset":2534,"count":17},{"startOffset":2244,"endOffset":2334,"count":43},{"startOffset":2375,"endOffset":2423,"count":0},{"startOffset":2463,"endOffset":2509,"count":0}],"isBlockCoverage":true},{"functionName":"createUTC","ranges":[{"startOffset":2540,"endOffset":2673,"count":0}],"isBlockCoverage":false},{"functionName":"defaultParsingFlags","ranges":[{"startOffset":2679,"endOffset":3266,"count":9}],"isBlockCoverage":true},{"functionName":"getParsingFlags","ranges":[{"startOffset":3272,"endOffset":3411,"count":27},{"startOffset":3329,"endOffset":3383,"count":9}],"isBlockCoverage":true},{"functionName":"some","ranges":[{"startOffset":3524,"endOffset":3834,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":3847,"endOffset":5095,"count":108},{"startOffset":3901,"endOffset":5062,"count":18},{"startOffset":4578,"endOffset":4612,"count":0},{"startOffset":4643,"endOffset":4874,"count":0},{"startOffset":4996,"endOffset":5052,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4010,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalid","ranges":[{"startOffset":5101,"endOffset":5347,"count":0}],"isBlockCoverage":false},{"functionName":"copyConfig","ranges":[{"startOffset":5567,"endOffset":6833,"count":9},{"startOffset":5855,"endOffset":5895,"count":0},{"startOffset":5931,"endOffset":5971,"count":0},{"startOffset":6012,"endOffset":6062,"count":0},{"startOffset":6100,"endOffset":6144,"count":0},{"startOffset":6273,"endOffset":6323,"count":0},{"startOffset":6609,"endOffset":6797,"count":18},{"startOffset":6728,"endOffset":6783,"count":0}],"isBlockCoverage":true},{"functionName":"Moment","ranges":[{"startOffset":6870,"endOffset":7346,"count":9},{"startOffset":6997,"endOffset":7002,"count":0},{"startOffset":7034,"endOffset":7082,"count":0}],"isBlockCoverage":true},{"functionName":"isMoment","ranges":[{"startOffset":7352,"endOffset":7493,"count":18}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":7499,"endOffset":7747,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":7753,"endOffset":9147,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7836,"endOffset":9135,"count":0}],"isBlockCoverage":false},{"functionName":"deprecateSimple","ranges":[{"startOffset":9181,"endOffset":9438,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":9529,"endOffset":9743,"count":222},{"startOffset":9650,"endOffset":9726,"count":135}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9749,"endOffset":10539,"count":1},{"startOffset":9819,"endOffset":10080,"count":15},{"startOffset":9934,"endOffset":9989,"count":1},{"startOffset":9989,"endOffset":10056,"count":14},{"startOffset":10436,"endOffset":10464,"count":0}],"isBlockCoverage":true},{"functionName":"mergeConfigs","ranges":[{"startOffset":10545,"endOffset":11584,"count":1},{"startOffset":10692,"endOffset":11190,"count":4},{"startOffset":10792,"endOffset":10822,"count":0},{"startOffset":10824,"endOffset":10996,"count":0},{"startOffset":11103,"endOffset":11166,"count":0},{"startOffset":11226,"endOffset":11558,"count":13},{"startOffset":11342,"endOffset":11389,"count":11},{"startOffset":11404,"endOffset":11548,"count":4}],"isBlockCoverage":true},{"functionName":"Locale","ranges":[{"startOffset":11590,"endOffset":11691,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":11787,"endOffset":12018,"count":0}],"isBlockCoverage":false},{"functionName":"calendar","ranges":[{"startOffset":12274,"endOffset":12454,"count":0}],"isBlockCoverage":false},{"functionName":"zeroFill","ranges":[{"startOffset":12460,"endOffset":12832,"count":81},{"startOffset":12699,"endOffset":12704,"count":0},{"startOffset":12711,"endOffset":12716,"count":0}],"isBlockCoverage":true},{"functionName":"addFormatToken","ranges":[{"startOffset":13331,"endOffset":14088,"count":60},{"startOffset":13462,"endOffset":13562,"count":32},{"startOffset":13582,"endOffset":13641,"count":42},{"startOffset":13662,"endOffset":13832,"count":32},{"startOffset":13854,"endOffset":14082,"count":8}],"isBlockCoverage":true},{"functionName":"func","ranges":[{"startOffset":13483,"endOffset":13551,"count":54}],"isBlockCoverage":true},{"functionName":"formatTokenFunctions.<computed>","ranges":[{"startOffset":13710,"endOffset":13821,"count":63}],"isBlockCoverage":true},{"functionName":"formatTokenFunctions.<computed>","ranges":[{"startOffset":13900,"endOffset":14071,"count":0}],"isBlockCoverage":false},{"functionName":"removeFormattingTokens","ranges":[{"startOffset":14094,"endOffset":14280,"count":7},{"startOffset":14172,"endOffset":14233,"count":0}],"isBlockCoverage":true},{"functionName":"makeFormatFunction","ranges":[{"startOffset":14286,"endOffset":14998,"count":1},{"startOffset":14472,"endOffset":14688,"count":15},{"startOffset":14522,"endOffset":14596,"count":8},{"startOffset":14596,"endOffset":14678,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14705,"endOffset":14991,"count":9},{"startOffset":14811,"endOffset":14954,"count":135},{"startOffset":14880,"endOffset":14908,"count":72},{"startOffset":14929,"endOffset":14939,"count":63}],"isBlockCoverage":true},{"functionName":"formatMoment","ranges":[{"startOffset":15048,"endOffset":15376,"count":9},{"startOffset":15109,"endOffset":15169,"count":0},{"startOffset":15296,"endOffset":15325,"count":1}],"isBlockCoverage":true},{"functionName":"expandFormat","ranges":[{"startOffset":15382,"endOffset":15916,"count":9},{"startOffset":15671,"endOffset":15886,"count":0}],"isBlockCoverage":true},{"functionName":"replaceLongDateFormatTokens","ranges":[{"startOffset":15450,"endOffset":15563,"count":0}],"isBlockCoverage":false},{"functionName":"longDateFormat","ranges":[{"startOffset":16144,"endOffset":16845,"count":0}],"isBlockCoverage":false},{"functionName":"invalidDate","ranges":[{"startOffset":16897,"endOffset":16961,"count":0}],"isBlockCoverage":false},{"functionName":"ordinal","ranges":[{"startOffset":17050,"endOffset":17134,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTime","ranges":[{"startOffset":17558,"endOffset":17818,"count":0}],"isBlockCoverage":false},{"functionName":"pastFuture","ranges":[{"startOffset":17824,"endOffset":18020,"count":0}],"isBlockCoverage":false},{"functionName":"addUnitAlias","ranges":[{"startOffset":18049,"endOffset":18222,"count":16}],"isBlockCoverage":true},{"functionName":"normalizeUnits","ranges":[{"startOffset":18228,"endOffset":18393,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeObjectUnits","ranges":[{"startOffset":18399,"endOffset":18856,"count":0}],"isBlockCoverage":false},{"functionName":"addUnitPriority","ranges":[{"startOffset":18888,"endOffset":18973,"count":16}],"isBlockCoverage":true},{"functionName":"getPrioritizedUnits","ranges":[{"startOffset":18979,"endOffset":19342,"count":0}],"isBlockCoverage":false},{"functionName":"isLeapYear","ranges":[{"startOffset":19348,"endOffset":19454,"count":0}],"isBlockCoverage":false},{"functionName":"absFloor","ranges":[{"startOffset":19460,"endOffset":19651,"count":0}],"isBlockCoverage":false},{"functionName":"toInt","ranges":[{"startOffset":19657,"endOffset":19914,"count":9},{"startOffset":19801,"endOffset":19827,"count":0},{"startOffset":19829,"endOffset":19885,"count":0}],"isBlockCoverage":true},{"functionName":"makeGetSet","ranges":[{"startOffset":19920,"endOffset":20239,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19973,"endOffset":20232,"count":54},{"startOffset":20023,"endOffset":20161,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":20245,"endOffset":20389,"count":63},{"startOffset":20349,"endOffset":20353,"count":0},{"startOffset":20377,"endOffset":20382,"count":0}],"isBlockCoverage":true},{"functionName":"set$1","ranges":[{"startOffset":20395,"endOffset":21019,"count":0}],"isBlockCoverage":false},{"functionName":"stringGet","ranges":[{"startOffset":21041,"endOffset":21217,"count":0}],"isBlockCoverage":false},{"functionName":"stringSet","ranges":[{"startOffset":21223,"endOffset":21761,"count":0}],"isBlockCoverage":false},{"functionName":"addRegexToken","ranges":[{"startOffset":23009,"endOffset":23266,"count":72},{"startOffset":23116,"endOffset":23123,"count":14},{"startOffset":23136,"endOffset":23259,"count":58}],"isBlockCoverage":true},{"functionName":"regexes.<computed>","ranges":[{"startOffset":23138,"endOffset":23259,"count":0}],"isBlockCoverage":false},{"functionName":"getParseRegexForToken","ranges":[{"startOffset":23272,"endOffset":23496,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeFormat","ranges":[{"startOffset":23610,"endOffset":24019,"count":0}],"isBlockCoverage":false},{"functionName":"regexEscape","ranges":[{"startOffset":24025,"endOffset":24116,"count":0}],"isBlockCoverage":false},{"functionName":"addParseToken","ranges":[{"startOffset":24144,"endOffset":24559,"count":40},{"startOffset":24269,"endOffset":24309,"count":20},{"startOffset":24342,"endOffset":24461,"count":6},{"startOffset":24505,"endOffset":24553,"count":70}],"isBlockCoverage":true},{"functionName":"func","ranges":[{"startOffset":24363,"endOffset":24450,"count":0}],"isBlockCoverage":false},{"functionName":"addWeekParseToken","ranges":[{"startOffset":24565,"endOffset":24794,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24640,"endOffset":24786,"count":0}],"isBlockCoverage":false},{"functionName":"addTimeToArrayFromToken","ranges":[{"startOffset":24800,"endOffset":24990,"count":0}],"isBlockCoverage":false},{"functionName":"mod","ranges":[{"startOffset":25174,"endOffset":25234,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":25363,"endOffset":25598,"count":0}],"isBlockCoverage":false},{"functionName":"daysInMonth","ranges":[{"startOffset":25611,"endOffset":25953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26015,"endOffset":26067,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26103,"endOffset":26188,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26225,"endOffset":26305,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26529,"endOffset":26614,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26643,"endOffset":26723,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26758,"endOffset":26830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26869,"endOffset":27210,"count":0}],"isBlockCoverage":false},{"functionName":"localeMonths","ranges":[{"startOffset":27651,"endOffset":28113,"count":0}],"isBlockCoverage":false},{"functionName":"localeMonthsShort","ranges":[{"startOffset":28119,"endOffset":28545,"count":0}],"isBlockCoverage":false},{"functionName":"handleStrictParse","ranges":[{"startOffset":28551,"endOffset":30154,"count":0}],"isBlockCoverage":false},{"functionName":"localeMonthsParse","ranges":[{"startOffset":30160,"endOffset":32004,"count":0}],"isBlockCoverage":false},{"functionName":"setMonth","ranges":[{"startOffset":32026,"endOffset":32713,"count":0}],"isBlockCoverage":false},{"functionName":"getSetMonth","ranges":[{"startOffset":32719,"endOffset":32953,"count":9},{"startOffset":32776,"endOffset":32891,"count":0}],"isBlockCoverage":true},{"functionName":"getDaysInMonth","ranges":[{"startOffset":32959,"endOffset":33047,"count":0}],"isBlockCoverage":false},{"functionName":"monthsShortRegex","ranges":[{"startOffset":33053,"endOffset":33725,"count":0}],"isBlockCoverage":false},{"functionName":"monthsRegex","ranges":[{"startOffset":33731,"endOffset":34358,"count":0}],"isBlockCoverage":false},{"functionName":"computeMonthsParse","ranges":[{"startOffset":34364,"endOffset":35839,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35890,"endOffset":35991,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36031,"endOffset":36084,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36650,"endOffset":36783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36810,"endOffset":36895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36921,"endOffset":36995,"count":0}],"isBlockCoverage":false},{"functionName":"daysInYear","ranges":[{"startOffset":37019,"endOffset":37097,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.parseTwoDigitYear","ranges":[{"startOffset":37143,"endOffset":37232,"count":0}],"isBlockCoverage":false},{"functionName":"getIsLeapYear","ranges":[{"startOffset":37307,"endOffset":37379,"count":0}],"isBlockCoverage":false},{"functionName":"createDate","ranges":[{"startOffset":37385,"endOffset":37973,"count":0}],"isBlockCoverage":false},{"functionName":"createUTCDate","ranges":[{"startOffset":37979,"endOffset":38570,"count":0}],"isBlockCoverage":false},{"functionName":"firstWeekOffset","ranges":[{"startOffset":38619,"endOffset":38985,"count":0}],"isBlockCoverage":false},{"functionName":"dayOfYearFromWeeks","ranges":[{"startOffset":39103,"endOffset":39847,"count":0}],"isBlockCoverage":false},{"functionName":"weekOfYear","ranges":[{"startOffset":39853,"endOffset":40537,"count":0}],"isBlockCoverage":false},{"functionName":"weeksInYear","ranges":[{"startOffset":40543,"endOffset":40780,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41295,"endOffset":41427,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeek","ranges":[{"startOffset":41467,"endOffset":41568,"count":0}],"isBlockCoverage":false},{"functionName":"localeFirstDayOfWeek","ranges":[{"startOffset":41749,"endOffset":41819,"count":0}],"isBlockCoverage":false},{"functionName":"localeFirstDayOfYear","ranges":[{"startOffset":41825,"endOffset":41895,"count":0}],"isBlockCoverage":false},{"functionName":"getSetWeek","ranges":[{"startOffset":41917,"endOffset":42073,"count":0}],"isBlockCoverage":false},{"functionName":"getSetISOWeek","ranges":[{"startOffset":42079,"endOffset":42237,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42331,"endOffset":42416,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42452,"endOffset":42539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42576,"endOffset":42658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43137,"endOffset":43222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43250,"endOffset":43337,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43366,"endOffset":43448,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43497,"endOffset":43841,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43884,"endOffset":43965,"count":0}],"isBlockCoverage":false},{"functionName":"parseWeekday","ranges":[{"startOffset":43989,"endOffset":44335,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsoWeekday","ranges":[{"startOffset":44341,"endOffset":44540,"count":0}],"isBlockCoverage":false},{"functionName":"shiftWeekdays","ranges":[{"startOffset":44561,"endOffset":44652,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdays","ranges":[{"startOffset":45067,"endOffset":45528,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdaysShort","ranges":[{"startOffset":45534,"endOffset":45758,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdaysMin","ranges":[{"startOffset":45764,"endOffset":45980,"count":0}],"isBlockCoverage":false},{"functionName":"handleStrictParse$1","ranges":[{"startOffset":45986,"endOffset":48621,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdaysParse","ranges":[{"startOffset":48627,"endOffset":50915,"count":0}],"isBlockCoverage":false},{"functionName":"getSetDayOfWeek","ranges":[{"startOffset":50937,"endOffset":51323,"count":0}],"isBlockCoverage":false},{"functionName":"getSetLocaleDayOfWeek","ranges":[{"startOffset":51329,"endOffset":51609,"count":0}],"isBlockCoverage":false},{"functionName":"getSetISODayOfWeek","ranges":[{"startOffset":51615,"endOffset":52167,"count":0}],"isBlockCoverage":false},{"functionName":"weekdaysRegex","ranges":[{"startOffset":52173,"endOffset":52824,"count":0}],"isBlockCoverage":false},{"functionName":"weekdaysShortRegex","ranges":[{"startOffset":52830,"endOffset":53526,"count":0}],"isBlockCoverage":false},{"functionName":"weekdaysMinRegex","ranges":[{"startOffset":53532,"endOffset":54210,"count":0}],"isBlockCoverage":false},{"functionName":"computeWeekdaysParse","ranges":[{"startOffset":54216,"endOffset":55929,"count":0}],"isBlockCoverage":false},{"functionName":"hFormat","ranges":[{"startOffset":55954,"endOffset":56020,"count":0}],"isBlockCoverage":false},{"functionName":"kFormat","ranges":[{"startOffset":56026,"endOffset":56087,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56265,"endOffset":56355,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56393,"endOffset":56573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56609,"endOffset":56692,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56730,"endOffset":56903,"count":0}],"isBlockCoverage":false},{"functionName":"meridiem","ranges":[{"startOffset":56911,"endOffset":57166,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56985,"endOffset":57158,"count":0}],"isBlockCoverage":false},{"functionName":"matchMeridiem","ranges":[{"startOffset":57338,"endOffset":57424,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":57964,"endOffset":58088,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58121,"endOffset":58245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58279,"endOffset":58402,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58430,"endOffset":58654,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58684,"endOffset":59002,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59030,"endOffset":59206,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59236,"endOffset":59506,"count":0}],"isBlockCoverage":false},{"functionName":"localeIsPM","ranges":[{"startOffset":59530,"endOffset":59767,"count":0}],"isBlockCoverage":false},{"functionName":"localeMeridiem","ranges":[{"startOffset":60140,"endOffset":60333,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":61065,"endOffset":61326,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeLocale","ranges":[{"startOffset":61332,"endOffset":61433,"count":0}],"isBlockCoverage":false},{"functionName":"chooseLocale","ranges":[{"startOffset":61706,"endOffset":62625,"count":0}],"isBlockCoverage":false},{"functionName":"loadLocale","ranges":[{"startOffset":62631,"endOffset":63495,"count":1},{"startOffset":62850,"endOffset":62894,"count":0},{"startOffset":62895,"endOffset":62916,"count":0},{"startOffset":62917,"endOffset":62946,"count":0},{"startOffset":62957,"endOffset":63459,"count":0}],"isBlockCoverage":true},{"functionName":"getSetGlobalLocale","ranges":[{"startOffset":63670,"endOffset":64445,"count":2},{"startOffset":63787,"endOffset":63912,"count":1},{"startOffset":64056,"endOffset":64393,"count":0}],"isBlockCoverage":true},{"functionName":"defineLocale","ranges":[{"startOffset":64451,"endOffset":66655,"count":1},{"startOffset":64658,"endOffset":65164,"count":0},{"startOffset":65203,"endOffset":65984,"count":0},{"startOffset":66100,"endOffset":66247,"count":0},{"startOffset":66539,"endOffset":66649,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66147,"endOffset":66231,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":66661,"endOffset":68413,"count":0}],"isBlockCoverage":false},{"functionName":"getLocale","ranges":[{"startOffset":68446,"endOffset":68917,"count":10},{"startOffset":68509,"endOffset":68523,"count":1},{"startOffset":68524,"endOffset":68544,"count":0},{"startOffset":68546,"endOffset":68594,"count":0},{"startOffset":68614,"endOffset":68658,"count":9},{"startOffset":68658,"endOffset":68876,"count":1},{"startOffset":68841,"endOffset":68876,"count":0},{"startOffset":68876,"endOffset":68916,"count":0}],"isBlockCoverage":true},{"functionName":"listLocales","ranges":[{"startOffset":68923,"endOffset":68983,"count":0}],"isBlockCoverage":false},{"functionName":"checkOverflow","ranges":[{"startOffset":68989,"endOffset":70422,"count":9},{"startOffset":69076,"endOffset":69113,"count":0},{"startOffset":69115,"endOffset":70397,"count":0}],"isBlockCoverage":true},{"functionName":"configFromISO","ranges":[{"startOffset":72657,"endOffset":74453,"count":0}],"isBlockCoverage":false},{"functionName":"extractFromRFC2822Strings","ranges":[{"startOffset":74459,"endOffset":74956,"count":0}],"isBlockCoverage":false},{"functionName":"untruncateYear","ranges":[{"startOffset":74962,"endOffset":75199,"count":0}],"isBlockCoverage":false},{"functionName":"preprocessRFC2822","ranges":[{"startOffset":75205,"endOffset":75513,"count":0}],"isBlockCoverage":false},{"functionName":"checkWeekday","ranges":[{"startOffset":75519,"endOffset":76194,"count":0}],"isBlockCoverage":false},{"functionName":"calculateOffset","ranges":[{"startOffset":76200,"endOffset":76615,"count":0}],"isBlockCoverage":false},{"functionName":"configFromRFC2822","ranges":[{"startOffset":76663,"endOffset":77510,"count":0}],"isBlockCoverage":false},{"functionName":"configFromString","ranges":[{"startOffset":77622,"endOffset":78338,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":78726,"endOffset":78833,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":78903,"endOffset":79069,"count":0}],"isBlockCoverage":false},{"functionName":"currentDateArray","ranges":[{"startOffset":79075,"endOffset":79498,"count":0}],"isBlockCoverage":false},{"functionName":"configFromArray","ranges":[{"startOffset":79751,"endOffset":82499,"count":0}],"isBlockCoverage":false},{"functionName":"dayOfYearFromWeekInfo","ranges":[{"startOffset":82505,"endOffset":84727,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.ISO_8601","ranges":[{"startOffset":84798,"endOffset":84812,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.RFC_2822","ranges":[{"startOffset":84885,"endOffset":84899,"count":0}],"isBlockCoverage":false},{"functionName":"configFromStringAndFormat","ranges":[{"startOffset":84948,"endOffset":88024,"count":0}],"isBlockCoverage":false},{"functionName":"meridiemFixWrap","ranges":[{"startOffset":88030,"endOffset":88690,"count":0}],"isBlockCoverage":false},{"functionName":"configFromStringAndArray","ranges":[{"startOffset":88748,"endOffset":90633,"count":0}],"isBlockCoverage":false},{"functionName":"configFromObject","ranges":[{"startOffset":90639,"endOffset":91094,"count":0}],"isBlockCoverage":false},{"functionName":"createFromConfig","ranges":[{"startOffset":91100,"endOffset":91384,"count":9},{"startOffset":91230,"endOffset":91357,"count":0}],"isBlockCoverage":true},{"functionName":"prepareConfig","ranges":[{"startOffset":91390,"endOffset":92284,"count":9},{"startOffset":91623,"endOffset":91689,"count":0},{"startOffset":91730,"endOffset":91805,"count":0},{"startOffset":91836,"endOffset":91900,"count":0},{"startOffset":91967,"endOffset":92181,"count":0},{"startOffset":92213,"endOffset":92254,"count":0}],"isBlockCoverage":true},{"functionName":"configFromInput","ranges":[{"startOffset":92290,"endOffset":93074,"count":0}],"isBlockCoverage":false},{"functionName":"createLocalOrUTC","ranges":[{"startOffset":93080,"endOffset":93908,"count":9},{"startOffset":93216,"endOffset":93288,"count":0},{"startOffset":93339,"endOffset":93411,"count":0},{"startOffset":93455,"endOffset":93478,"count":0},{"startOffset":93511,"endOffset":93532,"count":0},{"startOffset":93544,"endOffset":93586,"count":0}],"isBlockCoverage":true},{"functionName":"createLocal","ranges":[{"startOffset":93914,"endOffset":94044,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":94206,"endOffset":94497,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":94669,"endOffset":94960,"count":0}],"isBlockCoverage":false},{"functionName":"pickBy","ranges":[{"startOffset":95250,"endOffset":95699,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":95739,"endOffset":95851,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":95857,"endOffset":95968,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":95984,"endOffset":96055,"count":0}],"isBlockCoverage":false},{"functionName":"isDurationValid","ranges":[{"startOffset":96249,"endOffset":97053,"count":0}],"isBlockCoverage":false},{"functionName":"isValid$1","ranges":[{"startOffset":97059,"endOffset":97117,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalid$1","ranges":[{"startOffset":97123,"endOffset":97193,"count":0}],"isBlockCoverage":false},{"functionName":"Duration","ranges":[{"startOffset":97199,"endOffset":98676,"count":0}],"isBlockCoverage":false},{"functionName":"isDuration","ranges":[{"startOffset":98682,"endOffset":98754,"count":0}],"isBlockCoverage":false},{"functionName":"absRound","ranges":[{"startOffset":98760,"endOffset":98934,"count":0}],"isBlockCoverage":false},{"functionName":"compareArrays","ranges":[{"startOffset":99000,"endOffset":99506,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":99531,"endOffset":99988,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":99603,"endOffset":99980,"count":9},{"startOffset":99716,"endOffset":99793,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100167,"endOffset":100302,"count":0}],"isBlockCoverage":false},{"functionName":"offsetFromString","ranges":[{"startOffset":100456,"endOffset":100931,"count":9},{"startOffset":100531,"endOffset":100536,"count":0},{"startOffset":100644,"endOffset":100680,"count":0},{"startOffset":100726,"endOffset":100731,"count":0},{"startOffset":100781,"endOffset":100795,"count":0},{"startOffset":100885,"endOffset":100924,"count":0}],"isBlockCoverage":true},{"functionName":"cloneWithOffset","ranges":[{"startOffset":101016,"endOffset":101585,"count":0}],"isBlockCoverage":false},{"functionName":"getDateOffset","ranges":[{"startOffset":101591,"endOffset":101806,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.updateOffset","ranges":[{"startOffset":101981,"endOffset":101995,"count":0}],"isBlockCoverage":false},{"functionName":"getSetOffset","ranges":[{"startOffset":102629,"endOffset":104125,"count":18},{"startOffset":102782,"endOffset":102840,"count":0},{"startOffset":102868,"endOffset":104039,"count":9},{"startOffset":103018,"endOffset":103070,"count":0},{"startOffset":103084,"endOffset":103183,"count":0},{"startOffset":103231,"endOffset":103297,"count":0},{"startOffset":103401,"endOffset":103460,"count":0},{"startOffset":103495,"endOffset":104004,"count":0},{"startOffset":104039,"endOffset":104119,"count":9},{"startOffset":104087,"endOffset":104108,"count":0}],"isBlockCoverage":true},{"functionName":"getSetZone","ranges":[{"startOffset":104131,"endOffset":104442,"count":0}],"isBlockCoverage":false},{"functionName":"setOffsetToUTC","ranges":[{"startOffset":104448,"endOffset":104543,"count":0}],"isBlockCoverage":false},{"functionName":"setOffsetToLocal","ranges":[{"startOffset":104549,"endOffset":104839,"count":0}],"isBlockCoverage":false},{"functionName":"setOffsetToParsedOffset","ranges":[{"startOffset":104845,"endOffset":105265,"count":0}],"isBlockCoverage":false},{"functionName":"hasAlignedHourOffset","ranges":[{"startOffset":105271,"endOffset":105497,"count":0}],"isBlockCoverage":false},{"functionName":"isDaylightSavingTime","ranges":[{"startOffset":105503,"endOffset":105703,"count":0}],"isBlockCoverage":false},{"functionName":"isDaylightSavingTimeShifted","ranges":[{"startOffset":105709,"endOffset":106253,"count":0}],"isBlockCoverage":false},{"functionName":"isLocal","ranges":[{"startOffset":106259,"endOffset":106339,"count":0}],"isBlockCoverage":false},{"functionName":"isUtcOffset","ranges":[{"startOffset":106345,"endOffset":106428,"count":0}],"isBlockCoverage":false},{"functionName":"isUtc","ranges":[{"startOffset":106434,"endOffset":106533,"count":0}],"isBlockCoverage":false},{"functionName":"createDuration","ranges":[{"startOffset":107111,"endOffset":109484,"count":0}],"isBlockCoverage":false},{"functionName":"parseIso","ranges":[{"startOffset":109581,"endOffset":109937,"count":0}],"isBlockCoverage":false},{"functionName":"positiveMomentsDifference","ranges":[{"startOffset":109943,"endOffset":110314,"count":0}],"isBlockCoverage":false},{"functionName":"momentsDifference","ranges":[{"startOffset":110320,"endOffset":110832,"count":0}],"isBlockCoverage":false},{"functionName":"createAdder","ranges":[{"startOffset":110898,"endOffset":111758,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110953,"endOffset":111751,"count":0}],"isBlockCoverage":false},{"functionName":"addSubtract","ranges":[{"startOffset":111764,"endOffset":112524,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":112616,"endOffset":112717,"count":0}],"isBlockCoverage":false},{"functionName":"isMomentInput","ranges":[{"startOffset":112851,"endOffset":113186,"count":0}],"isBlockCoverage":false},{"functionName":"isMomentInputObject","ranges":[{"startOffset":113192,"endOffset":114216,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberOrStringArray","ranges":[{"startOffset":114222,"endOffset":114588,"count":0}],"isBlockCoverage":false},{"functionName":"isCalendarSpec","ranges":[{"startOffset":114594,"endOffset":115195,"count":0}],"isBlockCoverage":false},{"functionName":"getCalendarFormat","ranges":[{"startOffset":115201,"endOffset":115617,"count":0}],"isBlockCoverage":false},{"functionName":"calendar$1","ranges":[{"startOffset":115623,"endOffset":116797,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":116803,"endOffset":116860,"count":0}],"isBlockCoverage":false},{"functionName":"isAfter","ranges":[{"startOffset":116866,"endOffset":117329,"count":0}],"isBlockCoverage":false},{"functionName":"isBefore","ranges":[{"startOffset":117335,"endOffset":117797,"count":0}],"isBlockCoverage":false},{"functionName":"isBetween","ranges":[{"startOffset":117803,"endOffset":118442,"count":0}],"isBlockCoverage":false},{"functionName":"isSame","ranges":[{"startOffset":118448,"endOffset":119063,"count":0}],"isBlockCoverage":false},{"functionName":"isSameOrAfter","ranges":[{"startOffset":119069,"endOffset":119185,"count":0}],"isBlockCoverage":false},{"functionName":"isSameOrBefore","ranges":[{"startOffset":119191,"endOffset":119309,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":119315,"endOffset":120745,"count":0}],"isBlockCoverage":false},{"functionName":"monthDiff","ranges":[{"startOffset":120751,"endOffset":121762,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":121874,"endOffset":121986,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString","ranges":[{"startOffset":121992,"endOffset":122990,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":123252,"endOffset":123908,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":123914,"endOffset":124214,"count":9},{"startOffset":123971,"endOffset":124101,"count":0}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":124220,"endOffset":124618,"count":0}],"isBlockCoverage":false},{"functionName":"fromNow","ranges":[{"startOffset":124624,"endOffset":124719,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":124725,"endOffset":125121,"count":0}],"isBlockCoverage":false},{"functionName":"toNow","ranges":[{"startOffset":125127,"endOffset":125218,"count":0}],"isBlockCoverage":false},{"functionName":"locale","ranges":[{"startOffset":125392,"endOffset":125717,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":125908,"endOffset":126089,"count":0}],"isBlockCoverage":false},{"functionName":"localeData","ranges":[{"startOffset":126102,"endOffset":126160,"count":18}],"isBlockCoverage":true},{"functionName":"mod$1","ranges":[{"startOffset":126420,"endOffset":126520,"count":0}],"isBlockCoverage":false},{"functionName":"localStartOfDate","ranges":[{"startOffset":126526,"endOffset":126877,"count":0}],"isBlockCoverage":false},{"functionName":"utcStartOfDate","ranges":[{"startOffset":126883,"endOffset":127210,"count":0}],"isBlockCoverage":false},{"functionName":"startOf","ranges":[{"startOffset":127216,"endOffset":129207,"count":0}],"isBlockCoverage":false},{"functionName":"endOf","ranges":[{"startOffset":129213,"endOffset":131488,"count":0}],"isBlockCoverage":false},{"functionName":"valueOf","ranges":[{"startOffset":131494,"endOffset":131584,"count":0}],"isBlockCoverage":false},{"functionName":"unix","ranges":[{"startOffset":131590,"endOffset":131663,"count":0}],"isBlockCoverage":false},{"functionName":"toDate","ranges":[{"startOffset":131669,"endOffset":131735,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":131741,"endOffset":131983,"count":0}],"isBlockCoverage":false},{"functionName":"toObject","ranges":[{"startOffset":131989,"endOffset":132296,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":132302,"endOffset":132429,"count":0}],"isBlockCoverage":false},{"functionName":"isValid$2","ranges":[{"startOffset":132435,"endOffset":132493,"count":99}],"isBlockCoverage":true},{"functionName":"parsingFlags","ranges":[{"startOffset":132499,"endOffset":132580,"count":0}],"isBlockCoverage":false},{"functionName":"invalidAt","ranges":[{"startOffset":132586,"endOffset":132661,"count":0}],"isBlockCoverage":false},{"functionName":"creationData","ranges":[{"startOffset":132667,"endOffset":132883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":133572,"endOffset":133879,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":134171,"endOffset":134568,"count":0}],"isBlockCoverage":false},{"functionName":"localeEras","ranges":[{"startOffset":134576,"endOffset":135457,"count":0}],"isBlockCoverage":false},{"functionName":"localeErasParse","ranges":[{"startOffset":135463,"endOffset":136691,"count":0}],"isBlockCoverage":false},{"functionName":"localeErasConvertYear","ranges":[{"startOffset":136697,"endOffset":136975,"count":0}],"isBlockCoverage":false},{"functionName":"getEraName","ranges":[{"startOffset":136981,"endOffset":137500,"count":0}],"isBlockCoverage":false},{"functionName":"getEraNarrow","ranges":[{"startOffset":137506,"endOffset":138031,"count":0}],"isBlockCoverage":false},{"functionName":"getEraAbbr","ranges":[{"startOffset":138037,"endOffset":138556,"count":0}],"isBlockCoverage":false},{"functionName":"getEraYear","ranges":[{"startOffset":138562,"endOffset":139265,"count":0}],"isBlockCoverage":false},{"functionName":"erasNameRegex","ranges":[{"startOffset":139271,"endOffset":139478,"count":0}],"isBlockCoverage":false},{"functionName":"erasAbbrRegex","ranges":[{"startOffset":139484,"endOffset":139691,"count":0}],"isBlockCoverage":false},{"functionName":"erasNarrowRegex","ranges":[{"startOffset":139697,"endOffset":139910,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraAbbr","ranges":[{"startOffset":139916,"endOffset":140010,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraName","ranges":[{"startOffset":140016,"endOffset":140110,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraNarrow","ranges":[{"startOffset":140116,"endOffset":140214,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraYearOrdinal","ranges":[{"startOffset":140220,"endOffset":140335,"count":0}],"isBlockCoverage":false},{"functionName":"computeErasParse","ranges":[{"startOffset":140341,"endOffset":141329,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":141386,"endOffset":141443,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":141483,"endOffset":141543,"count":0}],"isBlockCoverage":false},{"functionName":"addWeekYearFormatToken","ranges":[{"startOffset":141551,"endOffset":141666,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":142477,"endOffset":142609,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":142649,"endOffset":142748,"count":0}],"isBlockCoverage":false},{"functionName":"getSetWeekYear","ranges":[{"startOffset":142772,"endOffset":143034,"count":0}],"isBlockCoverage":false},{"functionName":"getSetISOWeekYear","ranges":[{"startOffset":143040,"endOffset":143259,"count":0}],"isBlockCoverage":false},{"functionName":"getISOWeeksInYear","ranges":[{"startOffset":143265,"endOffset":143348,"count":0}],"isBlockCoverage":false},{"functionName":"getISOWeeksInISOWeekYear","ranges":[{"startOffset":143354,"endOffset":143451,"count":0}],"isBlockCoverage":false},{"functionName":"getWeeksInYear","ranges":[{"startOffset":143457,"endOffset":143607,"count":0}],"isBlockCoverage":false},{"functionName":"getWeeksInWeekYear","ranges":[{"startOffset":143613,"endOffset":143771,"count":0}],"isBlockCoverage":false},{"functionName":"getSetWeekYearHelper","ranges":[{"startOffset":143777,"endOffset":144197,"count":0}],"isBlockCoverage":false},{"functionName":"setWeekAll","ranges":[{"startOffset":144203,"endOffset":144572,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":144814,"endOffset":144892,"count":0}],"isBlockCoverage":false},{"functionName":"getSetQuarter","ranges":[{"startOffset":144916,"endOffset":145094,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":145382,"endOffset":145634,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":145700,"endOffset":145787,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":146174,"endOffset":146255,"count":0}],"isBlockCoverage":false},{"functionName":"getSetDayOfYear","ranges":[{"startOffset":146295,"endOffset":146563,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147370,"endOffset":147434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147474,"endOffset":147537,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147632,"endOffset":147691,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147733,"endOffset":147793,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147836,"endOffset":147897,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147941,"endOffset":148003,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148048,"endOffset":148111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148157,"endOffset":148221,"count":0}],"isBlockCoverage":false},{"functionName":"parseMs","ranges":[{"startOffset":148638,"endOffset":148735,"count":0}],"isBlockCoverage":false},{"functionName":"getZoneAbbr","ranges":[{"startOffset":149027,"endOffset":149098,"count":0}],"isBlockCoverage":false},{"functionName":"getZoneName","ranges":[{"startOffset":149104,"endOffset":149198,"count":0}],"isBlockCoverage":false},{"functionName":"proto.<computed>","ranges":[{"startOffset":150325,"endOffset":150400,"count":0}],"isBlockCoverage":false},{"functionName":"createUnix","ranges":[{"startOffset":152808,"endOffset":152884,"count":0}],"isBlockCoverage":false},{"functionName":"createInZone","ranges":[{"startOffset":152890,"endOffset":152984,"count":0}],"isBlockCoverage":false},{"functionName":"preParsePostFormat","ranges":[{"startOffset":152990,"endOffset":153056,"count":9}],"isBlockCoverage":true},{"functionName":"get$1","ranges":[{"startOffset":154442,"endOffset":154621,"count":0}],"isBlockCoverage":false},{"functionName":"listMonthsImpl","ranges":[{"startOffset":154627,"endOffset":155069,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdaysImpl","ranges":[{"startOffset":155197,"endOffset":156118,"count":0}],"isBlockCoverage":false},{"functionName":"listMonths","ranges":[{"startOffset":156124,"endOffset":156222,"count":0}],"isBlockCoverage":false},{"functionName":"listMonthsShort","ranges":[{"startOffset":156228,"endOffset":156336,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdays","ranges":[{"startOffset":156342,"endOffset":156474,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdaysShort","ranges":[{"startOffset":156480,"endOffset":156622,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdaysMin","ranges":[{"startOffset":156628,"endOffset":156766,"count":0}],"isBlockCoverage":false},{"functionName":"ordinal","ranges":[{"startOffset":157345,"endOffset":157779,"count":0}],"isBlockCoverage":false},{"functionName":"abs","ranges":[{"startOffset":158109,"endOffset":158608,"count":0}],"isBlockCoverage":false},{"functionName":"addSubtract$1","ranges":[{"startOffset":158614,"endOffset":158939,"count":0}],"isBlockCoverage":false},{"functionName":"add$1","ranges":[{"startOffset":159005,"endOffset":159094,"count":0}],"isBlockCoverage":false},{"functionName":"subtract$1","ranges":[{"startOffset":159170,"endOffset":159265,"count":0}],"isBlockCoverage":false},{"functionName":"absCeil","ranges":[{"startOffset":159271,"endOffset":159433,"count":0}],"isBlockCoverage":false},{"functionName":"bubble","ranges":[{"startOffset":159439,"endOffset":160990,"count":0}],"isBlockCoverage":false},{"functionName":"daysToMonths","ranges":[{"startOffset":160996,"endOffset":161191,"count":0}],"isBlockCoverage":false},{"functionName":"monthsToDays","ranges":[{"startOffset":161197,"endOffset":161314,"count":0}],"isBlockCoverage":false},{"functionName":"as","ranges":[{"startOffset":161320,"endOffset":162922,"count":0}],"isBlockCoverage":false},{"functionName":"valueOf$1","ranges":[{"startOffset":162960,"endOffset":163237,"count":0}],"isBlockCoverage":false},{"functionName":"makeAs","ranges":[{"startOffset":163243,"endOffset":163348,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163283,"endOffset":163341,"count":0}],"isBlockCoverage":false},{"functionName":"clone$1","ranges":[{"startOffset":163649,"endOffset":163712,"count":0}],"isBlockCoverage":false},{"functionName":"get$2","ranges":[{"startOffset":163718,"endOffset":163845,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":163851,"endOffset":163984,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163894,"endOffset":163977,"count":0}],"isBlockCoverage":false},{"functionName":"weeks","ranges":[{"startOffset":164272,"endOffset":164338,"count":0}],"isBlockCoverage":false},{"functionName":"substituteTimeAgo","ranges":[{"startOffset":164779,"endOffset":164946,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTime$1","ranges":[{"startOffset":164952,"endOffset":166343,"count":0}],"isBlockCoverage":false},{"functionName":"getSetRelativeTimeRounding","ranges":[{"startOffset":166436,"endOffset":166728,"count":0}],"isBlockCoverage":false},{"functionName":"getSetRelativeTimeThreshold","ranges":[{"startOffset":166811,"endOffset":167189,"count":0}],"isBlockCoverage":false},{"functionName":"humanize","ranges":[{"startOffset":167195,"endOffset":168171,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":168204,"endOffset":168268,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString$1","ranges":[{"startOffset":168274,"endOffset":170442,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":171901,"endOffset":171996,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":172022,"endOffset":172105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"790","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/moment-timezone/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true}]},{"scriptId":"791","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/moment-timezone/moment-timezone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16328,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":157,"endOffset":511,"count":1},{"startOffset":329,"endOffset":509,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":518,"endOffset":16324,"count":1},{"startOffset":626,"endOffset":643,"count":0},{"startOffset":645,"endOffset":676,"count":0},{"startOffset":1127,"endOffset":1239,"count":0},{"startOffset":1422,"endOffset":1551,"count":0},{"startOffset":16208,"endOffset":16288,"count":0}],"isBlockCoverage":true},{"functionName":"charCodeToInt","ranges":[{"startOffset":1645,"endOffset":1813,"count":2967},{"startOffset":1701,"endOffset":1731,"count":427},{"startOffset":1731,"endOffset":1786,"count":2540},{"startOffset":1756,"endOffset":1786,"count":207},{"startOffset":1786,"endOffset":1812,"count":2333}],"isBlockCoverage":true},{"functionName":"unpackBase60","ranges":[{"startOffset":1816,"endOffset":2460,"count":1411},{"startOffset":1937,"endOffset":1942,"count":1195},{"startOffset":2061,"endOffset":2090,"count":687},{"startOffset":2163,"endOffset":2238,"count":2751},{"startOffset":2319,"endOffset":2435,"count":216}],"isBlockCoverage":true},{"functionName":"arrayToInt","ranges":[{"startOffset":2463,"endOffset":2580,"count":368},{"startOffset":2534,"endOffset":2577,"count":1411}],"isBlockCoverage":true},{"functionName":"intToUntil","ranges":[{"startOffset":2583,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"mapIndices","ranges":[{"startOffset":2795,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"unpack","ranges":[{"startOffset":2952,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"Zone","ranges":[{"startOffset":3512,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"_set","ranges":[{"startOffset":3638,"endOffset":3855,"count":0}],"isBlockCoverage":false},{"functionName":"_index","ranges":[{"startOffset":3869,"endOffset":4054,"count":0}],"isBlockCoverage":false},{"functionName":"countries","ranges":[{"startOffset":4071,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4272,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"abbr","ranges":[{"startOffset":4891,"endOffset":4951,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":4965,"endOffset":5102,"count":0}],"isBlockCoverage":false},{"functionName":"utcOffset","ranges":[{"startOffset":5119,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"Country","ranges":[{"startOffset":5284,"endOffset":5387,"count":247}],"isBlockCoverage":true},{"functionName":"OffsetAt","ranges":[{"startOffset":5488,"endOffset":6057,"count":0}],"isBlockCoverage":false},{"functionName":"ZoneScore","ranges":[{"startOffset":6060,"endOffset":6155,"count":0}],"isBlockCoverage":false},{"functionName":"ZoneScore.scoreOffsetAt","ranges":[{"startOffset":6194,"endOffset":6405,"count":0}],"isBlockCoverage":false},{"functionName":"findChange","ranges":[{"startOffset":6409,"endOffset":6672,"count":0}],"isBlockCoverage":false},{"functionName":"userOffsets","ranges":[{"startOffset":6675,"endOffset":7284,"count":0}],"isBlockCoverage":false},{"functionName":"sortZoneScores","ranges":[{"startOffset":7287,"endOffset":7637,"count":0}],"isBlockCoverage":false},{"functionName":"addToGuesses","ranges":[{"startOffset":7640,"endOffset":7868,"count":368},{"startOffset":7759,"endOffset":7865,"count":1411},{"startOffset":7822,"endOffset":7827,"count":277}],"isBlockCoverage":true},{"functionName":"guessesForUserOffsets","ranges":[{"startOffset":7871,"endOffset":8354,"count":0}],"isBlockCoverage":false},{"functionName":"rebuildGuess","ranges":[{"startOffset":8357,"endOffset":9333,"count":0}],"isBlockCoverage":false},{"functionName":"guess","ranges":[{"startOffset":9336,"endOffset":9465,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeName","ranges":[{"startOffset":9564,"endOffset":9655,"count":829},{"startOffset":9611,"endOffset":9616,"count":0}],"isBlockCoverage":true},{"functionName":"addZone","ranges":[{"startOffset":9658,"endOffset":10033,"count":1},{"startOffset":9755,"endOffset":9782,"count":0},{"startOffset":9822,"endOffset":10030,"count":368}],"isBlockCoverage":true},{"functionName":"getZone","ranges":[{"startOffset":10036,"endOffset":10565,"count":9},{"startOffset":10169,"endOffset":10190,"count":0},{"startOffset":10224,"endOffset":10294,"count":0},{"startOffset":10376,"endOffset":10397,"count":0},{"startOffset":10398,"endOffset":10439,"count":0},{"startOffset":10441,"endOffset":10546,"count":0}],"isBlockCoverage":true},{"functionName":"getNames","ranges":[{"startOffset":10568,"endOffset":10768,"count":0}],"isBlockCoverage":false},{"functionName":"getCountryNames","ranges":[{"startOffset":10771,"endOffset":10836,"count":0}],"isBlockCoverage":false},{"functionName":"addLink","ranges":[{"startOffset":10839,"endOffset":11247,"count":1},{"startOffset":10938,"endOffset":10967,"count":0},{"startOffset":11008,"endOffset":11244,"count":226}],"isBlockCoverage":true},{"functionName":"addCountries","ranges":[{"startOffset":11250,"endOffset":11604,"count":1},{"startOffset":11355,"endOffset":11362,"count":0},{"startOffset":11399,"endOffset":11601,"count":247}],"isBlockCoverage":true},{"functionName":"getCountry","ranges":[{"startOffset":11607,"endOffset":11701,"count":0}],"isBlockCoverage":false},{"functionName":"zonesForCountry","ranges":[{"startOffset":11704,"endOffset":12065,"count":0}],"isBlockCoverage":false},{"functionName":"loadData","ranges":[{"startOffset":12068,"endOffset":12208,"count":1}],"isBlockCoverage":true},{"functionName":"zoneExists","ranges":[{"startOffset":12211,"endOffset":12459,"count":0}],"isBlockCoverage":false},{"functionName":"needsOffset","ranges":[{"startOffset":12462,"endOffset":12612,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":12615,"endOffset":12757,"count":0}],"isBlockCoverage":false},{"functionName":"tz","ranges":[{"startOffset":12861,"endOffset":13190,"count":0}],"isBlockCoverage":false},{"functionName":"moment.updateOffset","ranges":[{"startOffset":14029,"endOffset":14572,"count":9},{"startOffset":14143,"endOffset":14162,"count":0},{"startOffset":14163,"endOffset":14177,"count":0},{"startOffset":14179,"endOffset":14268,"count":0},{"startOffset":14305,"endOffset":14569,"count":0}],"isBlockCoverage":true},{"functionName":"fn.tz","ranges":[{"startOffset":14584,"endOffset":15046,"count":0}],"isBlockCoverage":false},{"functionName":"abbrWrap","ranges":[{"startOffset":15050,"endOffset":15179,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15085,"endOffset":15175,"count":0}],"isBlockCoverage":false},{"functionName":"resetZoneWrap","ranges":[{"startOffset":15182,"endOffset":15300,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15222,"endOffset":15296,"count":0}],"isBlockCoverage":false},{"functionName":"resetZoneWrap2","ranges":[{"startOffset":15303,"endOffset":15448,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15344,"endOffset":15444,"count":18},{"startOffset":15387,"endOffset":15402,"count":9}],"isBlockCoverage":true},{"functionName":"moment.tz.setDefault","ranges":[{"startOffset":15679,"endOffset":15942,"count":0}],"isBlockCoverage":false}]},{"scriptId":"792","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/logger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3126,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":407,"endOffset":544,"count":1},{"startOffset":439,"endOffset":525,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":567,"endOffset":864,"count":1},{"startOffset":600,"endOffset":611,"count":0},{"startOffset":617,"endOffset":689,"count":0},{"startOffset":762,"endOffset":850,"count":0}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":887,"endOffset":947,"count":3}],"isBlockCoverage":true},{"functionName":"__objRest","ranges":[{"startOffset":965,"endOffset":1369,"count":1},{"startOffset":1038,"endOffset":1138,"count":0},{"startOffset":1234,"endOffset":1350,"count":0}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":1386,"endOffset":1523,"count":1},{"startOffset":1459,"endOffset":1521,"count":2}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":1542,"endOffset":1920,"count":2},{"startOffset":1616,"endOffset":1648,"count":1},{"startOffset":1706,"endOffset":1897,"count":62},{"startOffset":1742,"endOffset":1762,"count":61},{"startOffset":1772,"endOffset":1897,"count":61}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1802,"endOffset":1820,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1939,"endOffset":2224,"count":2},{"startOffset":2049,"endOffset":2053,"count":0},{"startOffset":2096,"endOffset":2119,"count":0},{"startOffset":2120,"endOffset":2170,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2129,"endOffset":2150,"count":0}],"isBlockCoverage":false},{"functionName":"__publicField","ranges":[{"startOffset":2246,"endOffset":2359,"count":1},{"startOffset":2327,"endOffset":2332,"count":0}],"isBlockCoverage":true},{"functionName":"Logger","ranges":[{"startOffset":2391,"endOffset":2403,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2415,"endOffset":2427,"count":7}],"isBlockCoverage":true},{"functionName":"Logger","ranges":[{"startOffset":2545,"endOffset":2753,"count":1}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":2756,"endOffset":2841,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2844,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"debugContext","ranges":[{"startOffset":2963,"endOffset":3059,"count":4}],"isBlockCoverage":true}]},{"scriptId":"793","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"794","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":4},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":4},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"795","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6289,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":4},{"startOffset":1108,"endOffset":1213,"count":76}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":72},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":72},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4609,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4602,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4695,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5063,"endOffset":5450,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5568,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5793,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6021,"endOffset":6197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"796","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"797","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/class-to-invokable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"classToInvokable","ranges":[{"startOffset":316,"endOffset":338,"count":2}],"isBlockCoverage":true},{"functionName":"classToInvokable","ranges":[{"startOffset":343,"endOffset":560,"count":134}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":410,"endOffset":481,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":487,"endOffset":552,"count":136}],"isBlockCoverage":true}]},{"scriptId":"798","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/join-sql-fragments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2307,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":61,"endOffset":198,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":221,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":298,"endOffset":435,"count":1},{"startOffset":371,"endOffset":433,"count":2}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":457,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"JoinSQLFragmentsError","ranges":[{"startOffset":617,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"joinSQLFragments","ranges":[{"startOffset":666,"endOffset":688,"count":2}],"isBlockCoverage":true},{"functionName":"doesNotWantLeadingSpace","ranges":[{"startOffset":693,"endOffset":763,"count":138}],"isBlockCoverage":true},{"functionName":"doesNotWantTrailingSpace","ranges":[{"startOffset":764,"endOffset":832,"count":225}],"isBlockCoverage":true},{"functionName":"singleSpaceJoinHelper","ranges":[{"startOffset":833,"endOffset":1250,"count":87}],"isBlockCoverage":true},{"functionName":"parts.reduce.skipNextLeadingSpace","ranges":[{"startOffset":895,"endOffset":1185,"count":225},{"startOffset":970,"endOffset":1002,"count":138},{"startOffset":1004,"endOffset":1040,"count":87},{"startOffset":1040,"endOffset":1088,"count":138}],"isBlockCoverage":true},{"functionName":"joinSQLFragments","ranges":[{"startOffset":1251,"endOffset":1981,"count":87},{"startOffset":1316,"endOffset":1326,"count":0},{"startOffset":1582,"endOffset":1798,"count":225},{"startOffset":1634,"endOffset":1794,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1362,"endOffset":1372,"count":243}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1416,"endOffset":1538,"count":225},{"startOffset":1465,"endOffset":1513,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1841,"endOffset":1856,"count":225}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1909,"endOffset":1924,"count":225}],"isBlockCoverage":true},{"functionName":"JoinSQLFragmentsError","ranges":[{"startOffset":2032,"endOffset":2257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"799","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/postgres/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13058,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":88,"endOffset":13017,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":219,"endOffset":666,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1085,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":1307,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1771,"endOffset":1947,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2055,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2196,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2393,"endOffset":2593,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2695,"endOffset":2735,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2830,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3038,"endOffset":3077,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":3082,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3694,"endOffset":3750,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3755,"endOffset":3898,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3903,"endOffset":4120,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":4125,"endOffset":4609,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":4713,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":4908,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":5102,"endOffset":5195,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5218,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":5372,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":5558,"endOffset":5651,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":5748,"endOffset":5841,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":5938,"endOffset":6554,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6623,"endOffset":6833,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":6838,"endOffset":6889,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6989,"endOffset":7215,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7227,"endOffset":7356,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":7361,"endOffset":7472,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":7477,"endOffset":7575,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7684,"endOffset":7913,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7925,"endOffset":8054,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":8059,"endOffset":8170,"count":0}],"isBlockCoverage":false},{"functionName":"bindParam","ranges":[{"startOffset":8175,"endOffset":8272,"count":0}],"isBlockCoverage":false},{"functionName":"HSTORE","ranges":[{"startOffset":8391,"endOffset":8494,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":8499,"endOffset":8625,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":8630,"endOffset":8695,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":8700,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":8798,"endOffset":8919,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":9051,"endOffset":9951,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9956,"endOffset":10163,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":10168,"endOffset":10404,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":10409,"endOffset":10507,"count":0}],"isBlockCoverage":false},{"functionName":"toCastType","ranges":[{"startOffset":10512,"endOffset":10616,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":10628,"endOffset":10733,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":11233,"endOffset":11671,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":11714,"endOffset":12447,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":12490,"endOffset":12592,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":12643,"endOffset":12683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"800","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/postgres/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"stringifyRangeBound","ranges":[{"startOffset":43,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"parseRangeBound","ranges":[{"startOffset":256,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":479,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1642,"endOffset":2082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"801","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mysql/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3716,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":167,"endOffset":3675,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1285,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1552,"endOffset":1637,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1642,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1920,"endOffset":2249,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2311,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2407,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"GEOMETRY","ranges":[{"startOffset":2580,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2950,"endOffset":3171,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3176,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3265,"endOffset":3373,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3424,"endOffset":3563,"count":0}],"isBlockCoverage":false}]},{"scriptId":"802","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mariadb/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3425,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":167,"endOffset":3384,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1328,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1595,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1685,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1878,"endOffset":2207,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2269,"endOffset":2318,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2365,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"GEOMETRY","ranges":[{"startOffset":2467,"endOffset":2647,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2659,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2885,"endOffset":2927,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2974,"endOffset":3082,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3133,"endOffset":3272,"count":0}],"isBlockCoverage":false}]},{"scriptId":"803","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4783,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":4742,"count":1},{"startOffset":4225,"endOffset":4266,"count":3},{"startOffset":4357,"endOffset":4412,"count":8}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":144,"endOffset":458,"count":28},{"startOffset":247,"endOffset":454,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1533,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1637,"endOffset":1785,"count":31},{"startOffset":1691,"endOffset":1750,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1847,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1936,"endOffset":2067,"count":18},{"startOffset":1970,"endOffset":2029,"count":0}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":2114,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2361,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2459,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2634,"endOffset":3030,"count":12},{"startOffset":2699,"endOffset":2739,"count":0},{"startOffset":2766,"endOffset":2806,"count":0},{"startOffset":2831,"endOffset":3003,"count":0}],"isBlockCoverage":true},{"functionName":"TINYINT","ranges":[{"startOffset":3083,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":3231,"endOffset":3324,"count":0}],"isBlockCoverage":false},{"functionName":"MEDIUMINT","ranges":[{"startOffset":3381,"endOffset":3474,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":3527,"endOffset":3620,"count":28}],"isBlockCoverage":true},{"functionName":"BIGINT","ranges":[{"startOffset":3671,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloating","ranges":[{"startOffset":3903,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4455,"endOffset":4491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"804","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mssql/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5318,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":65,"endOffset":5277,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":210,"endOffset":630,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1468,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":1882,"endOffset":1927,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1978,"endOffset":2112,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2117,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":2275,"endOffset":2384,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2466,"endOffset":2871,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2924,"endOffset":2959,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3006,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3091,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3179,"endOffset":3225,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":3287,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":3409,"endOffset":3502,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":3555,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":3703,"endOffset":3796,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":3847,"endOffset":3940,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":3987,"endOffset":4377,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":4426,"endOffset":4994,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5041,"endOffset":5085,"count":0}],"isBlockCoverage":false}]},{"scriptId":"805","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/db2/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8522,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":110,"endOffset":8481,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":289,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1671,"endOffset":2061,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":2066,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2154,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":2507,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2604,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3017,"endOffset":3183,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":3188,"endOffset":3297,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3379,"endOffset":4124,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4177,"endOffset":4216,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":4221,"endOffset":4738,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4832,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4930,"endOffset":4974,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5021,"endOffset":5232,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":5237,"endOffset":5625,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5637,"endOffset":5859,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5921,"endOffset":5992,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":6045,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":6191,"endOffset":6284,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":6339,"endOffset":6432,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":6483,"endOffset":6576,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":6623,"endOffset":7011,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":7060,"endOffset":7622,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7669,"endOffset":7713,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":7764,"endOffset":8154,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":8159,"endOffset":8197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"806","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/snowflake/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2668,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":110,"endOffset":2627,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1310,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1356,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1634,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2025,"endOffset":2074,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2121,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2211,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2300,"endOffset":2339,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2390,"endOffset":2529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"807","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/sql-string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3129,"count":1}],"isBlockCoverage":true},{"functionName":"arrayToList","ranges":[{"startOffset":103,"endOffset":442,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":478,"endOffset":2242,"count":17},{"startOffset":591,"endOffset":615,"count":4},{"startOffset":615,"endOffset":644,"count":13},{"startOffset":644,"endOffset":774,"count":0},{"startOffset":779,"endOffset":822,"count":0},{"startOffset":827,"endOffset":892,"count":13},{"startOffset":896,"endOffset":924,"count":13},{"startOffset":924,"endOffset":1013,"count":0},{"startOffset":1013,"endOffset":1042,"count":13},{"startOffset":1042,"endOffset":1203,"count":0},{"startOffset":1203,"endOffset":1230,"count":13},{"startOffset":1230,"endOffset":1508,"count":0},{"startOffset":1508,"endOffset":1529,"count":13},{"startOffset":1529,"endOffset":1595,"count":0},{"startOffset":1595,"endOffset":1792,"count":13},{"startOffset":1742,"endOffset":1788,"count":0},{"startOffset":1792,"endOffset":2194,"count":0},{"startOffset":2194,"endOffset":2217,"count":13},{"startOffset":2217,"endOffset":2223,"count":0},{"startOffset":2224,"endOffset":2229,"count":13}],"isBlockCoverage":true},{"functionName":"partialEscape","ranges":[{"startOffset":1258,"endOffset":1312,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1847,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2268,"endOffset":2605,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamedParameters","ranges":[{"startOffset":2631,"endOffset":3034,"count":0}],"isBlockCoverage":false}]},{"scriptId":"808","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_baseIsNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1417,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":1182,"endOffset":1384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"809","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":617,"endOffset":962,"count":0}],"isBlockCoverage":false}]},{"scriptId":"810","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_baseGetTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1},{"startOffset":328,"endOffset":339,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":534,"endOffset":761,"count":0}],"isBlockCoverage":false}]},{"scriptId":"811","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_Symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true}]},{"scriptId":"812","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_root.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1},{"startOffset":119,"endOffset":126,"count":0},{"startOffset":127,"endOffset":152,"count":0},{"startOffset":153,"endOffset":160,"count":0},{"startOffset":234,"endOffset":245,"count":0},{"startOffset":246,"endOffset":274,"count":0}],"isBlockCoverage":true}]},{"scriptId":"813","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_freeGlobal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true}]},{"scriptId":"814","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_getRawTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1139,"count":1},{"startOffset":488,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":701,"endOffset":1109,"count":0}],"isBlockCoverage":false}]},{"scriptId":"815","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_objectToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"objectToString","ranges":[{"startOffset":453,"endOffset":530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"816","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/isObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":581,"endOffset":704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"817","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_isMasked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116,"endOffset":268,"count":1},{"startOffset":166,"endOffset":184,"count":0},{"startOffset":185,"endOffset":212,"count":0},{"startOffset":234,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMasked","ranges":[{"startOffset":461,"endOffset":535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"818","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_coreJsData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"819","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lodash/_toSource.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":339,"endOffset":527,"count":0}],"isBlockCoverage":false}]},{"scriptId":"820","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1765,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":146,"endOffset":186,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":257,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":369,"endOffset":410,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":481,"endOffset":522,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":594,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":712,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":835,"endOffset":882,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":960,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1082,"endOffset":1126,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1670,"endOffset":1765,"count":9},{"startOffset":1744,"endOffset":1762,"count":0}],"isBlockCoverage":true}]},{"scriptId":"821","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/v1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3618,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":233,"endOffset":328,"count":2},{"startOffset":307,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"v1","ranges":[{"startOffset":627,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"822","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/rng.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":162,"endOffset":257,"count":1},{"startOffset":230,"endOffset":235,"count":0}],"isBlockCoverage":true},{"functionName":"rng","ranges":[{"startOffset":370,"endOffset":549,"count":33},{"startOffset":426,"endOffset":496,"count":3}],"isBlockCoverage":true}]},{"scriptId":"823","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1667,"count":1},{"startOffset":442,"endOffset":499,"count":256}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":501,"endOffset":1612,"count":33},{"startOffset":1537,"endOffset":1594,"count":0}],"isBlockCoverage":true}]},{"scriptId":"824","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":168,"endOffset":263,"count":1},{"startOffset":242,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":265,"endOffset":356,"count":33}],"isBlockCoverage":true}]},{"scriptId":"825","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/regex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true}]},{"scriptId":"826","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/v3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":218,"endOffset":313,"count":2},{"startOffset":292,"endOffset":310,"count":0}],"isBlockCoverage":true}]},{"scriptId":"827","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/v35.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2008,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":275,"endOffset":370,"count":2},{"startOffset":349,"endOffset":367,"count":0}],"isBlockCoverage":true},{"functionName":"stringToBytes","ranges":[{"startOffset":372,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":725,"endOffset":2008,"count":2}],"isBlockCoverage":true},{"functionName":"generateUUID","ranges":[{"startOffset":772,"endOffset":1736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"828","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1380,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":271,"endOffset":1329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"829","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/md5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":550,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"md5","ranges":[{"startOffset":262,"endOffset":501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"830","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/v4.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":860,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":233,"endOffset":328,"count":2},{"startOffset":307,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"v4","ranges":[{"startOffset":330,"endOffset":812,"count":33},{"startOffset":646,"endOffset":769,"count":0}],"isBlockCoverage":true}]},{"scriptId":"831","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/v5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":417,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":220,"endOffset":315,"count":2},{"startOffset":294,"endOffset":312,"count":0}],"isBlockCoverage":true}]},{"scriptId":"832","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/sha1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"sha1","ranges":[{"startOffset":262,"endOffset":503,"count":0}],"isBlockCoverage":false}]},{"scriptId":"833","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/nil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":188,"count":1}],"isBlockCoverage":true}]},{"scriptId":"834","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/uuid/dist/version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"version","ranges":[{"startOffset":271,"endOffset":421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"835","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1741,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1},{"startOffset":210,"endOffset":272,"count":2}],"isBlockCoverage":true},{"functionName":"Op","ranges":[{"startOffset":302,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":323,"endOffset":346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"836","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/inflection/lib/inflection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31264,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":158,"endOffset":386,"count":1},{"startOffset":221,"endOffset":234,"count":0},{"startOffset":236,"endOffset":267,"count":0},{"startOffset":342,"endOffset":384,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":394,"endOffset":31260,"count":1}],"isBlockCoverage":true},{"functionName":"_apply_rules","ranges":[{"startOffset":16138,"endOffset":16694,"count":10},{"startOffset":16199,"endOffset":16232,"count":0},{"startOffset":16420,"endOffset":16651,"count":598},{"startOffset":16466,"endOffset":16639,"count":10}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17387,"endOffset":17771,"count":10},{"startOffset":17604,"endOffset":17744,"count":2030},{"startOffset":17653,"endOffset":17686,"count":0},{"startOffset":17687,"endOffset":17736,"count":0}],"isBlockCoverage":true},{"functionName":"pluralize","ranges":[{"startOffset":18427,"endOffset":18543,"count":6}],"isBlockCoverage":true},{"functionName":"singularize","ranges":[{"startOffset":19215,"endOffset":19337,"count":4}],"isBlockCoverage":true},{"functionName":"inflect","ranges":[{"startOffset":20510,"endOffset":20861,"count":0}],"isBlockCoverage":false},{"functionName":"camelize","ranges":[{"startOffset":21599,"endOffset":22353,"count":0}],"isBlockCoverage":false},{"functionName":"underscore","ranges":[{"startOffset":23131,"endOffset":23563,"count":0}],"isBlockCoverage":false},{"functionName":"humanize","ranges":[{"startOffset":24242,"endOffset":24500,"count":0}],"isBlockCoverage":false},{"functionName":"capitalize","ranges":[{"startOffset":25013,"endOffset":25139,"count":0}],"isBlockCoverage":false},{"functionName":"dasherize","ranges":[{"startOffset":25624,"endOffset":25699,"count":0}],"isBlockCoverage":false},{"functionName":"titleize","ranges":[{"startOffset":26196,"endOffset":26860,"count":0}],"isBlockCoverage":false},{"functionName":"demodulize","ranges":[{"startOffset":27273,"endOffset":27380,"count":0}],"isBlockCoverage":false},{"functionName":"tableize","ranges":[{"startOffset":27795,"endOffset":27918,"count":0}],"isBlockCoverage":false},{"functionName":"classify","ranges":[{"startOffset":28341,"endOffset":28464,"count":0}],"isBlockCoverage":false},{"functionName":"foreign_key","ranges":[{"startOffset":29167,"endOffset":29352,"count":0}],"isBlockCoverage":false},{"functionName":"ordinalize","ranges":[{"startOffset":29749,"endOffset":30489,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":30920,"endOffset":31180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"837","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/model.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":108821,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":836},{"startOffset":373,"endOffset":459,"count":35},{"startOffset":460,"endOffset":478,"count":801}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":122},{"startOffset":534,"endOffset":545,"count":19},{"startOffset":551,"endOffset":623,"count":836},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":19}],"isBlockCoverage":true},{"functionName":"get queryInterface","ranges":[{"startOffset":2218,"endOffset":2291,"count":208}],"isBlockCoverage":true},{"functionName":"get queryGenerator","ranges":[{"startOffset":2301,"endOffset":2374,"count":177}],"isBlockCoverage":true},{"functionName":"get sequelize","ranges":[{"startOffset":2377,"endOffset":2437,"count":12}],"isBlockCoverage":true},{"functionName":"Model","ranges":[{"startOffset":2440,"endOffset":4151,"count":19},{"startOffset":2538,"endOffset":3317,"count":3},{"startOffset":3518,"endOffset":3644,"count":10},{"startOffset":3680,"endOffset":3906,"count":7},{"startOffset":3777,"endOffset":3900,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2618,"endOffset":3306,"count":3},{"startOffset":2748,"endOffset":2881,"count":24},{"startOffset":2813,"endOffset":2871,"count":0},{"startOffset":2928,"endOffset":3298,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3079,"endOffset":3109,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3570,"endOffset":3636,"count":50},{"startOffset":3610,"endOffset":3624,"count":0}],"isBlockCoverage":true},{"functionName":"_initValues","ranges":[{"startOffset":4154,"endOffset":6334,"count":19},{"startOffset":4286,"endOffset":6299,"count":4},{"startOffset":4355,"endOffset":4585,"count":0},{"startOffset":5013,"endOffset":5284,"count":0},{"startOffset":5405,"endOffset":5676,"count":0},{"startOffset":5735,"endOffset":5795,"count":0},{"startOffset":5797,"endOffset":6068,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4421,"endOffset":4575,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4698,"endOffset":4882,"count":4}],"isBlockCoverage":true},{"functionName":"_paranoidClause","ranges":[{"startOffset":6344,"endOffset":7603,"count":19},{"startOffset":6408,"endOffset":6524,"count":7},{"startOffset":6585,"endOffset":6807,"count":0},{"startOffset":6869,"endOffset":6898,"count":0},{"startOffset":6929,"endOffset":7229,"count":0},{"startOffset":7230,"endOffset":7236,"count":0},{"startOffset":7288,"endOffset":7318,"count":0},{"startOffset":7365,"endOffset":7380,"count":0},{"startOffset":7450,"endOffset":7602,"count":0}],"isBlockCoverage":true},{"functionName":"_addDefaultAttributes","ranges":[{"startOffset":7613,"endOffset":9286,"count":3},{"startOffset":7770,"endOffset":7918,"count":0},{"startOffset":8575,"endOffset":8702,"count":0},{"startOffset":8735,"endOffset":8903,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9012,"endOffset":9131,"count":6}],"isBlockCoverage":true},{"functionName":"getAttributes","ranges":[{"startOffset":9296,"endOffset":9348,"count":0}],"isBlockCoverage":false},{"functionName":"_findAutoIncrementAttribute","ranges":[{"startOffset":9358,"endOffset":9887,"count":3},{"startOffset":9473,"endOffset":9883,"count":22},{"startOffset":9656,"endOffset":9869,"count":3},{"startOffset":9701,"endOffset":9813,"count":0}],"isBlockCoverage":true},{"functionName":"_conformIncludes","ranges":[{"startOffset":9897,"endOffset":10245,"count":64},{"startOffset":9963,"endOffset":9970,"count":50},{"startOffset":9970,"endOffset":10012,"count":14},{"startOffset":10012,"endOffset":10148,"count":7},{"startOffset":10097,"endOffset":10148,"count":0},{"startOffset":10148,"endOffset":10244,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10191,"endOffset":10239,"count":14}],"isBlockCoverage":true},{"functionName":"_transformStringAssociation","ranges":[{"startOffset":10255,"endOffset":10599,"count":21},{"startOffset":10313,"endOffset":10343,"count":14},{"startOffset":10345,"endOffset":10575,"count":0}],"isBlockCoverage":true},{"functionName":"_conformInclude","ranges":[{"startOffset":10609,"endOffset":12115,"count":21},{"startOffset":10713,"endOffset":10728,"count":0},{"startOffset":10836,"endOffset":11061,"count":0},{"startOffset":11090,"endOffset":11127,"count":7},{"startOffset":11129,"endOffset":11173,"count":7},{"startOffset":11173,"endOffset":11998,"count":14},{"startOffset":11245,"endOffset":11763,"count":0},{"startOffset":11885,"endOffset":11990,"count":0},{"startOffset":12004,"endOffset":12114,"count":0}],"isBlockCoverage":true},{"functionName":"_expandIncludeAllElement","ranges":[{"startOffset":12125,"endOffset":14413,"count":0}],"isBlockCoverage":false},{"functionName":"_validateIncludedElements","ranges":[{"startOffset":14423,"endOffset":17524,"count":7},{"startOffset":14552,"endOffset":14557,"count":0},{"startOffset":15877,"endOffset":15896,"count":1},{"startOffset":15898,"endOffset":16173,"count":0},{"startOffset":16268,"endOffset":16332,"count":1},{"startOffset":16332,"endOffset":16511,"count":6},{"startOffset":16457,"endOffset":16479,"count":0},{"startOffset":16480,"endOffset":16500,"count":0},{"startOffset":16710,"endOffset":16888,"count":0},{"startOffset":17156,"endOffset":17186,"count":6},{"startOffset":17188,"endOffset":17241,"count":1},{"startOffset":17292,"endOffset":17323,"count":1},{"startOffset":17325,"endOffset":17379,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14857,"endOffset":15609,"count":7}],"isBlockCoverage":true},{"functionName":"_validateIncludedElement","ranges":[{"startOffset":17534,"endOffset":21136,"count":7},{"startOffset":17671,"endOffset":17686,"count":0},{"startOffset":17688,"endOffset":18360,"count":0},{"startOffset":18463,"endOffset":18645,"count":0},{"startOffset":18858,"endOffset":18940,"count":0},{"startOffset":18942,"endOffset":19557,"count":0},{"startOffset":19612,"endOffset":19648,"count":0},{"startOffset":19754,"endOffset":19782,"count":0},{"startOffset":20115,"endOffset":20246,"count":0},{"startOffset":20269,"endOffset":20299,"count":0},{"startOffset":20301,"endOffset":20339,"count":0},{"startOffset":20375,"endOffset":20959,"count":0},{"startOffset":21026,"endOffset":21112,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17987,"endOffset":18344,"count":0}],"isBlockCoverage":false},{"functionName":"_getIncludedAssociation","ranges":[{"startOffset":21146,"endOffset":22598,"count":7},{"startOffset":21321,"endOffset":21437,"count":0},{"startOffset":21610,"endOffset":22597,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21706,"endOffset":21739,"count":0}],"isBlockCoverage":false},{"functionName":"_expandIncludeAll","ranges":[{"startOffset":22608,"endOffset":23070,"count":19},{"startOffset":22694,"endOffset":22715,"count":12},{"startOffset":22715,"endOffset":22963,"count":7},{"startOffset":22838,"endOffset":22957,"count":0},{"startOffset":22963,"endOffset":23069,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22985,"endOffset":23064,"count":7}],"isBlockCoverage":true},{"functionName":"_conformIndex","ranges":[{"startOffset":23080,"endOffset":23424,"count":0}],"isBlockCoverage":false},{"functionName":"_uniqIncludes","ranges":[{"startOffset":23434,"endOffset":23681,"count":26},{"startOffset":23491,"endOffset":23498,"count":19},{"startOffset":23498,"endOffset":23680,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23548,"endOffset":23615,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23621,"endOffset":23667,"count":7}],"isBlockCoverage":true},{"functionName":"_baseMerge","ranges":[{"startOffset":23691,"endOffset":23838,"count":26}],"isBlockCoverage":true},{"functionName":"_mergeFunction","ranges":[{"startOffset":23848,"endOffset":24719,"count":0}],"isBlockCoverage":false},{"functionName":"_assignOptions","ranges":[{"startOffset":24729,"endOffset":24816,"count":7}],"isBlockCoverage":true},{"functionName":"_defaultsOptions","ranges":[{"startOffset":24826,"endOffset":25001,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24900,"endOffset":24995,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":25011,"endOffset":30110,"count":3},{"startOffset":25072,"endOffset":25134,"count":0},{"startOffset":25324,"endOffset":25368,"count":0},{"startOffset":26241,"endOffset":26344,"count":0},{"startOffset":26546,"endOffset":26557,"count":0},{"startOffset":26632,"endOffset":26692,"count":0},{"startOffset":28365,"endOffset":28721,"count":9},{"startOffset":28451,"endOffset":28581,"count":0},{"startOffset":28620,"endOffset":28713,"count":0},{"startOffset":28857,"endOffset":28881,"count":0},{"startOffset":29115,"endOffset":29139,"count":0},{"startOffset":29270,"endOffset":29305,"count":0},{"startOffset":29307,"endOffset":29520,"count":0},{"startOffset":29557,"endOffset":29732,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26820,"endOffset":27294,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27346,"endOffset":27986,"count":13},{"startOffset":27470,"endOffset":27566,"count":0},{"startOffset":27607,"endOffset":27646,"count":2},{"startOffset":27648,"endOffset":27791,"count":0},{"startOffset":27867,"endOffset":27956,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28077,"endOffset":28141,"count":0}],"isBlockCoverage":false},{"functionName":"refreshAttributes","ranges":[{"startOffset":30120,"endOffset":36317,"count":8},{"startOffset":35396,"endOffset":35670,"count":65},{"startOffset":35468,"endOffset":35586,"count":0},{"startOffset":36082,"endOffset":36109,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30287,"endOffset":31588,"count":16},{"startOffset":30434,"endOffset":30465,"count":8},{"startOffset":30466,"endOffset":30497,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30519,"endOffset":30870,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30906,"endOffset":31344,"count":130},{"startOffset":30997,"endOffset":31054,"count":0},{"startOffset":31083,"endOffset":31189,"count":65},{"startOffset":31218,"endOffset":31336,"count":65}],"isBlockCoverage":true},{"functionName":"funcs.<computed>","ranges":[{"startOffset":31114,"endOffset":31178,"count":9}],"isBlockCoverage":true},{"functionName":"funcs.<computed>","ranges":[{"startOffset":31249,"endOffset":31325,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31367,"endOffset":31580,"count":130},{"startOffset":31426,"endOffset":31523,"count":65}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32033,"endOffset":34665,"count":65},{"startOffset":32278,"endOffset":32359,"count":24},{"startOffset":32402,"endOffset":32456,"count":8},{"startOffset":32559,"endOffset":32636,"count":19},{"startOffset":32675,"endOffset":32750,"count":19},{"startOffset":32807,"endOffset":32859,"count":0},{"startOffset":32911,"endOffset":32959,"count":46},{"startOffset":32961,"endOffset":33010,"count":19},{"startOffset":33010,"endOffset":33220,"count":46},{"startOffset":33063,"endOffset":33112,"count":0},{"startOffset":33168,"endOffset":33220,"count":0},{"startOffset":33297,"endOffset":33427,"count":0},{"startOffset":33497,"endOffset":33517,"count":2},{"startOffset":33519,"endOffset":34220,"count":2},{"startOffset":33592,"endOffset":33658,"count":0},{"startOffset":33660,"endOffset":33715,"count":0},{"startOffset":33764,"endOffset":33814,"count":0},{"startOffset":34082,"endOffset":34090,"count":0},{"startOffset":34293,"endOffset":34365,"count":0},{"startOffset":34402,"endOffset":34447,"count":0},{"startOffset":34449,"endOffset":34659,"count":0}],"isBlockCoverage":true},{"functionName":"_defaultValues.<computed>","ranges":[{"startOffset":33335,"endOffset":33418,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34734,"endOffset":34861,"count":65},{"startOffset":34792,"endOffset":34837,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35110,"endOffset":35155,"count":65}],"isBlockCoverage":true},{"functionName":"_isAttribute","ranges":[{"startOffset":35760,"endOffset":35840,"count":21}],"isBlockCoverage":true},{"functionName":"_isPrimaryKey","ranges":[{"startOffset":36207,"endOffset":36255,"count":0}],"isBlockCoverage":false},{"functionName":"removeAttribute","ranges":[{"startOffset":36327,"endOffset":36431,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":36441,"endOffset":39963,"count":6},{"startOffset":36581,"endOffset":36587,"count":0},{"startOffset":36810,"endOffset":36849,"count":3},{"startOffset":37004,"endOffset":39299,"count":0},{"startOffset":39750,"endOffset":39862,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39410,"endOffset":39472,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39479,"endOffset":39714,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":39973,"endOffset":40083,"count":3}],"isBlockCoverage":true},{"functionName":"dropSchema","ranges":[{"startOffset":40093,"endOffset":40180,"count":0}],"isBlockCoverage":false},{"functionName":"schema","ranges":[{"startOffset":40190,"endOffset":40593,"count":0}],"isBlockCoverage":false},{"functionName":"getTableName","ranges":[{"startOffset":40603,"endOffset":40671,"count":177}],"isBlockCoverage":true},{"functionName":"unscoped","ranges":[{"startOffset":40681,"endOffset":40722,"count":0}],"isBlockCoverage":false},{"functionName":"addScope","ranges":[{"startOffset":40732,"endOffset":41252,"count":0}],"isBlockCoverage":false},{"functionName":"scope","ranges":[{"startOffset":41262,"endOffset":42839,"count":0}],"isBlockCoverage":false},{"functionName":"findAll","ranges":[{"startOffset":42849,"endOffset":45735,"count":12},{"startOffset":42931,"endOffset":43103,"count":0},{"startOffset":43154,"endOffset":43374,"count":0},{"startOffset":43699,"endOffset":43722,"count":0},{"startOffset":44202,"endOffset":44608,"count":7},{"startOffset":44322,"endOffset":44337,"count":0},{"startOffset":44338,"endOffset":44365,"count":0},{"startOffset":44366,"endOffset":44423,"count":0},{"startOffset":44424,"endOffset":44507,"count":0},{"startOffset":44509,"endOffset":44602,"count":0},{"startOffset":44850,"endOffset":44857,"count":0},{"startOffset":45382,"endOffset":45406,"count":2},{"startOffset":45408,"endOffset":45675,"count":0}],"isBlockCoverage":true},{"functionName":"warnOnInvalidOptions","ranges":[{"startOffset":45745,"endOffset":46330,"count":12},{"startOffset":45830,"endOffset":45851,"count":0},{"startOffset":46064,"endOffset":46103,"count":0},{"startOffset":46105,"endOffset":46326,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45912,"endOffset":45945,"count":31}],"isBlockCoverage":true},{"functionName":"_injectDependentVirtualAttributes","ranges":[{"startOffset":46340,"endOffset":46825,"count":50},{"startOffset":46449,"endOffset":46499,"count":0},{"startOffset":46507,"endOffset":46824,"count":0}],"isBlockCoverage":true},{"functionName":"_findSeparate","ranges":[{"startOffset":46835,"endOffset":48201,"count":19},{"startOffset":46900,"endOffset":46914,"count":14},{"startOffset":46915,"endOffset":46926,"count":14},{"startOffset":46934,"endOffset":46949,"count":5},{"startOffset":46949,"endOffset":47009,"count":14},{"startOffset":47009,"endOffset":47029,"count":7},{"startOffset":47029,"endOffset":47061,"count":14},{"startOffset":47061,"endOffset":47077,"count":2},{"startOffset":47077,"endOffset":48200,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47120,"endOffset":48173,"count":7},{"startOffset":47810,"endOffset":48172,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47228,"endOffset":47609,"count":7},{"startOffset":47354,"endOffset":47366,"count":2},{"startOffset":47366,"endOffset":47423,"count":5},{"startOffset":47423,"endOffset":47453,"count":4},{"startOffset":47453,"endOffset":47608,"count":5}],"isBlockCoverage":true},{"functionName":"findByPk","ranges":[{"startOffset":48211,"endOffset":48661,"count":0}],"isBlockCoverage":false},{"functionName":"findOne","ranges":[{"startOffset":48671,"endOffset":49431,"count":12},{"startOffset":48753,"endOffset":48904,"count":0},{"startOffset":49306,"endOffset":49342,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49056,"endOffset":49084,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49160,"endOffset":49303,"count":12},{"startOffset":49277,"endOffset":49302,"count":0}],"isBlockCoverage":true},{"functionName":"aggregate","ranges":[{"startOffset":49441,"endOffset":50933,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":50943,"endOffset":51835,"count":0}],"isBlockCoverage":false},{"functionName":"findAndCountAll","ranges":[{"startOffset":51845,"endOffset":52413,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":52423,"endOffset":52510,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":52520,"endOffset":52607,"count":0}],"isBlockCoverage":false},{"functionName":"sum","ranges":[{"startOffset":52617,"endOffset":52704,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":52714,"endOffset":52865,"count":19},{"startOffset":52770,"endOffset":52823,"count":0}],"isBlockCoverage":true},{"functionName":"bulkBuild","ranges":[{"startOffset":52875,"endOffset":53408,"count":13},{"startOffset":53004,"endOffset":53182,"count":5},{"startOffset":53077,"endOffset":53176,"count":0},{"startOffset":53211,"endOffset":53337,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":53263,"endOffset":53329,"count":60},{"startOffset":53303,"endOffset":53317,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":53363,"endOffset":53402,"count":11}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":53418,"endOffset":53703,"count":4}],"isBlockCoverage":true},{"functionName":"findOrBuild","ranges":[{"startOffset":53713,"endOffset":54396,"count":0}],"isBlockCoverage":false},{"functionName":"findOrCreate","ranges":[{"startOffset":54406,"endOffset":57798,"count":0}],"isBlockCoverage":false},{"functionName":"findCreateFind","ranges":[{"startOffset":57808,"endOffset":58795,"count":0}],"isBlockCoverage":false},{"functionName":"upsert","ranges":[{"startOffset":58805,"endOffset":61084,"count":0}],"isBlockCoverage":false},{"functionName":"bulkCreate","ranges":[{"startOffset":61094,"endOffset":72743,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":72753,"endOffset":72897,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":72907,"endOffset":75250,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":75260,"endOffset":76825,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":76835,"endOffset":82079,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":82089,"endOffset":82265,"count":0}],"isBlockCoverage":false},{"functionName":"_getDefaultTimestamp","ranges":[{"startOffset":82275,"endOffset":82519,"count":8},{"startOffset":82383,"endOffset":82496,"count":0}],"isBlockCoverage":true},{"functionName":"_expandAttributes","ranges":[{"startOffset":82529,"endOffset":82966,"count":19},{"startOffset":82625,"endOffset":82965,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82755,"endOffset":82807,"count":0}],"isBlockCoverage":false},{"functionName":"_injectScope","ranges":[{"startOffset":82976,"endOffset":83094,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":83104,"endOffset":83176,"count":0}],"isBlockCoverage":false},{"functionName":"hasAlias","ranges":[{"startOffset":83186,"endOffset":83282,"count":4}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":83292,"endOffset":85706,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":85716,"endOffset":85882,"count":0}],"isBlockCoverage":false},{"functionName":"_optionsMustContainWhere","ranges":[{"startOffset":85892,"endOffset":86230,"count":0}],"isBlockCoverage":false},{"functionName":"where","ranges":[{"startOffset":86233,"endOffset":86765,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":86768,"endOffset":86850,"count":0}],"isBlockCoverage":false},{"functionName":"getDataValue","ranges":[{"startOffset":86853,"endOffset":86909,"count":0}],"isBlockCoverage":false},{"functionName":"setDataValue","ranges":[{"startOffset":86912,"endOffset":87114,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":87117,"endOffset":88680,"count":16},{"startOffset":87192,"endOffset":87240,"count":0},{"startOffset":87358,"endOffset":87373,"count":0},{"startOffset":87375,"endOffset":87450,"count":0},{"startOffset":87475,"endOffset":87499,"count":0},{"startOffset":87500,"endOffset":87543,"count":0},{"startOffset":87545,"endOffset":87847,"count":0},{"startOffset":87888,"endOffset":87961,"count":0},{"startOffset":87962,"endOffset":87978,"count":0},{"startOffset":87980,"endOffset":88679,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87640,"endOffset":87675,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":88683,"endOffset":92312,"count":150},{"startOffset":88781,"endOffset":88796,"count":19},{"startOffset":88798,"endOffset":90246,"count":19},{"startOffset":88842,"endOffset":88847,"count":0},{"startOffset":88874,"endOffset":88997,"count":0},{"startOffset":89020,"endOffset":89064,"count":15},{"startOffset":89065,"endOffset":89100,"count":8},{"startOffset":89101,"endOffset":89140,"count":5},{"startOffset":89141,"endOffset":89183,"count":0},{"startOffset":89185,"endOffset":89430,"count":0},{"startOffset":89470,"endOffset":89983,"count":10},{"startOffset":89797,"endOffset":89868,"count":0},{"startOffset":89911,"endOffset":89973,"count":7},{"startOffset":89983,"endOffset":90102,"count":9},{"startOffset":90028,"endOffset":90092,"count":66},{"startOffset":90128,"endOffset":90213,"count":15},{"startOffset":90246,"endOffset":90271,"count":131},{"startOffset":90271,"endOffset":90284,"count":4},{"startOffset":90284,"endOffset":90307,"count":131},{"startOffset":90307,"endOffset":90358,"count":21},{"startOffset":90358,"endOffset":90380,"count":131},{"startOffset":90380,"endOffset":90407,"count":21},{"startOffset":90409,"endOffset":90661,"count":0},{"startOffset":90661,"endOffset":92291,"count":131},{"startOffset":90718,"endOffset":90761,"count":42},{"startOffset":90763,"endOffset":90840,"count":7},{"startOffset":90840,"endOffset":90865,"count":124},{"startOffset":90865,"endOffset":91601,"count":21},{"startOffset":90904,"endOffset":91298,"count":0},{"startOffset":91361,"endOffset":91399,"count":0},{"startOffset":91401,"endOffset":91435,"count":0},{"startOffset":91466,"endOffset":91508,"count":0},{"startOffset":91509,"endOffset":91557,"count":0},{"startOffset":91559,"endOffset":91593,"count":0},{"startOffset":91601,"endOffset":91736,"count":124},{"startOffset":91738,"endOffset":91833,"count":32},{"startOffset":91833,"endOffset":91857,"count":124},{"startOffset":91857,"endOffset":92150,"count":21},{"startOffset":91987,"endOffset":92070,"count":1},{"startOffset":92071,"endOffset":92149,"count":20},{"startOffset":92152,"endOffset":92249,"count":21},{"startOffset":92249,"endOffset":92291,"count":124},{"startOffset":92291,"endOffset":92311,"count":124}],"isBlockCoverage":true},{"functionName":"setKeys","ranges":[{"startOffset":89498,"endOffset":89702,"count":17},{"startOffset":89544,"endOffset":89690,"count":57},{"startOffset":89586,"endOffset":89629,"count":0}],"isBlockCoverage":true},{"functionName":"setAttributes","ranges":[{"startOffset":92315,"endOffset":92373,"count":0}],"isBlockCoverage":false},{"functionName":"changed","ranges":[{"startOffset":92376,"endOffset":92740,"count":58},{"startOffset":92422,"endOffset":92535,"count":8},{"startOffset":92509,"endOffset":92535,"count":0},{"startOffset":92535,"endOffset":92560,"count":50},{"startOffset":92560,"endOffset":92616,"count":21},{"startOffset":92616,"endOffset":92701,"count":29},{"startOffset":92701,"endOffset":92739,"count":0}],"isBlockCoverage":true},{"functionName":"previous","ranges":[{"startOffset":92743,"endOffset":92911,"count":0}],"isBlockCoverage":false},{"functionName":"_setInclude","ranges":[{"startOffset":92914,"endOffset":94209,"count":7},{"startOffset":92986,"endOffset":93002,"count":6},{"startOffset":93038,"endOffset":93105,"count":0},{"startOffset":93640,"endOffset":93676,"count":0},{"startOffset":93723,"endOffset":94000,"count":6},{"startOffset":93862,"endOffset":93879,"count":4},{"startOffset":93942,"endOffset":93948,"count":2},{"startOffset":93949,"endOffset":93991,"count":4},{"startOffset":94000,"endOffset":94199,"count":1},{"startOffset":94139,"endOffset":94143,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93064,"endOffset":93097,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":94212,"endOffset":103344,"count":4},{"startOffset":94264,"endOffset":94361,"count":0},{"startOffset":94620,"endOffset":94737,"count":0},{"startOffset":94861,"endOffset":94905,"count":0},{"startOffset":95326,"endOffset":95336,"count":0},{"startOffset":95608,"endOffset":95657,"count":0},{"startOffset":95678,"endOffset":95706,"count":0},{"startOffset":95707,"endOffset":95747,"count":0},{"startOffset":95749,"endOffset":95796,"count":0},{"startOffset":95829,"endOffset":95893,"count":0},{"startOffset":95895,"endOffset":95995,"count":0},{"startOffset":96101,"endOffset":96154,"count":0},{"startOffset":96221,"endOffset":96264,"count":0},{"startOffset":96266,"endOffset":96323,"count":0},{"startOffset":96366,"endOffset":96607,"count":0},{"startOffset":97035,"endOffset":97054,"count":0},{"startOffset":97056,"endOffset":97200,"count":0},{"startOffset":97757,"endOffset":98136,"count":0},{"startOffset":98160,"endOffset":98379,"count":0},{"startOffset":98461,"endOffset":98492,"count":0},{"startOffset":98494,"endOffset":99107,"count":0},{"startOffset":99248,"endOffset":99260,"count":0},{"startOffset":99285,"endOffset":99305,"count":0},{"startOffset":99313,"endOffset":99325,"count":0},{"startOffset":99718,"endOffset":99984,"count":0},{"startOffset":100095,"endOffset":100367,"count":0},{"startOffset":100436,"endOffset":100769,"count":29},{"startOffset":100612,"endOffset":100763,"count":0},{"startOffset":100908,"endOffset":100939,"count":0},{"startOffset":100941,"endOffset":103038,"count":0},{"startOffset":103182,"endOffset":103291,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":95928,"endOffset":95958,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98549,"endOffset":98602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98608,"endOffset":99098,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99153,"endOffset":99211,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100996,"endOffset":101125,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101131,"endOffset":103029,"count":0}],"isBlockCoverage":false},{"functionName":"reload","ranges":[{"startOffset":103347,"endOffset":103884,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":103887,"endOffset":103976,"count":4}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":103979,"endOffset":104697,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":104700,"endOffset":106009,"count":0}],"isBlockCoverage":false},{"functionName":"isSoftDeleted","ranges":[{"startOffset":106012,"endOffset":106552,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":106555,"endOffset":107493,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":107496,"endOffset":107795,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":107798,"endOffset":107964,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":107967,"endOffset":108273,"count":0}],"isBlockCoverage":false},{"functionName":"equalsOneOf","ranges":[{"startOffset":108276,"endOffset":108356,"count":0}],"isBlockCoverage":false},{"functionName":"setValidators","ranges":[{"startOffset":108359,"endOffset":108446,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":108449,"endOffset":108524,"count":0}],"isBlockCoverage":false},{"functionName":"hasMany","ranges":[{"startOffset":108534,"endOffset":108564,"count":0}],"isBlockCoverage":false},{"functionName":"belongsToMany","ranges":[{"startOffset":108574,"endOffset":108610,"count":0}],"isBlockCoverage":false},{"functionName":"hasOne","ranges":[{"startOffset":108620,"endOffset":108649,"count":0}],"isBlockCoverage":false},{"functionName":"belongsTo","ranges":[{"startOffset":108659,"endOffset":108691,"count":0}],"isBlockCoverage":false}]},{"scriptId":"838","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/dottie/dottie.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6202,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6197,"count":1},{"startOffset":6027,"endOffset":6195,"count":0}],"isBlockCoverage":true},{"functionName":"reverseDupArray","ranges":[{"startOffset":194,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie","ranges":[{"startOffset":443,"endOffset":639,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.find","ranges":[{"startOffset":733,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.get","ranges":[{"startOffset":1007,"endOffset":1876,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.exists","ranges":[{"startOffset":1897,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.set","ranges":[{"startOffset":2016,"endOffset":3270,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.default","ranges":[{"startOffset":3325,"endOffset":3455,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie$transformfunction","ranges":[{"startOffset":3554,"endOffset":4751,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.flatten","ranges":[{"startOffset":4773,"endOffset":5364,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.paths","ranges":[{"startOffset":5384,"endOffset":5925,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6153,"endOffset":6183,"count":0}],"isBlockCoverage":false}]},{"scriptId":"839","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/belongs-to.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6490,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":2},{"startOffset":434,"endOffset":445,"count":0},{"startOffset":451,"endOffset":523,"count":0},{"startOffset":596,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"BelongsTo","ranges":[{"startOffset":919,"endOffset":2802,"count":2},{"startOffset":1123,"endOffset":1222,"count":0},{"startOffset":1384,"endOffset":1542,"count":0},{"startOffset":1577,"endOffset":1633,"count":0},{"startOffset":1957,"endOffset":1975,"count":0},{"startOffset":2014,"endOffset":2067,"count":0},{"startOffset":2069,"endOffset":2228,"count":0},{"startOffset":2383,"endOffset":2400,"count":0}],"isBlockCoverage":true},{"functionName":"_injectAttributes","ranges":[{"startOffset":2805,"endOffset":3759,"count":2},{"startOffset":3159,"endOffset":3192,"count":0},{"startOffset":3280,"endOffset":3293,"count":0},{"startOffset":3679,"endOffset":3697,"count":0}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":3762,"endOffset":3870,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3873,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5338,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":5833,"endOffset":6123,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":6126,"endOffset":6346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"840","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1591,"count":1}],"isBlockCoverage":true},{"functionName":"checkNamingCollision","ranges":[{"startOffset":14,"endOffset":390,"count":4},{"startOffset":153,"endOffset":388,"count":0}],"isBlockCoverage":true},{"functionName":"addForeignKeyConstraints","ranges":[{"startOffset":444,"endOffset":1049,"count":4},{"startOffset":579,"endOffset":598,"count":0},{"startOffset":793,"endOffset":822,"count":0},{"startOffset":915,"endOffset":932,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":662,"endOffset":757,"count":4},{"startOffset":735,"endOffset":757,"count":0}],"isBlockCoverage":true},{"functionName":"mixinMethods","ranges":[{"startOffset":1111,"endOffset":1517,"count":4},{"startOffset":1191,"endOffset":1196,"count":3},{"startOffset":1230,"endOffset":1515,"count":19},{"startOffset":1358,"endOffset":1367,"count":15}],"isBlockCoverage":true},{"functionName":"obj.<computed>","ranges":[{"startOffset":1412,"endOffset":1504,"count":0}],"isBlockCoverage":false}]},{"scriptId":"841","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":true},{"functionName":"Association","ranges":[{"startOffset":89,"endOffset":560,"count":4},{"startOffset":397,"endOffset":556,"count":0}],"isBlockCoverage":true},{"functionName":"toInstanceArray","ranges":[{"startOffset":563,"endOffset":924,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":927,"endOffset":997,"count":0}],"isBlockCoverage":false}]},{"scriptId":"842","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/belongs-to-many.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23125,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"BelongsToMany","ranges":[{"startOffset":1337,"endOffset":6269,"count":0}],"isBlockCoverage":false},{"functionName":"_createForeignAndOtherKeys","ranges":[{"startOffset":6272,"endOffset":7239,"count":0}],"isBlockCoverage":false},{"functionName":"_injectAttributes","ranges":[{"startOffset":7242,"endOffset":12309,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":12312,"endOffset":12642,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12645,"endOffset":14065,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":14068,"endOffset":14509,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":14512,"endOffset":15357,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15360,"endOffset":18424,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":18427,"endOffset":21571,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":21574,"endOffset":22094,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":22097,"endOffset":22741,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":22744,"endOffset":22960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"843","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/has-many.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11910,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":17},{"startOffset":373,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":2},{"startOffset":534,"endOffset":545,"count":0},{"startOffset":551,"endOffset":623,"count":17},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"HasMany","ranges":[{"startOffset":1084,"endOffset":3638,"count":1},{"startOffset":1372,"endOffset":1480,"count":0},{"startOffset":1513,"endOffset":1557,"count":0},{"startOffset":1575,"endOffset":1858,"count":0},{"startOffset":2018,"endOffset":2176,"count":0},{"startOffset":2211,"endOffset":2267,"count":0},{"startOffset":2498,"endOffset":2701,"count":0},{"startOffset":2959,"endOffset":2976,"count":0},{"startOffset":2983,"endOffset":3118,"count":0}],"isBlockCoverage":true},{"functionName":"_injectAttributes","ranges":[{"startOffset":3641,"endOffset":4917,"count":1},{"startOffset":4199,"endOffset":4210,"count":0},{"startOffset":4648,"endOffset":4666,"count":0},{"startOffset":4744,"endOffset":4762,"count":0},{"startOffset":4838,"endOffset":4855,"count":0}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":4920,"endOffset":5250,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5253,"endOffset":6910,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":6913,"endOffset":7308,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":7311,"endOffset":8090,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8093,"endOffset":9821,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":9824,"endOffset":10421,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":10424,"endOffset":10951,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":10954,"endOffset":11557,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":11560,"endOffset":11776,"count":1},{"startOffset":11627,"endOffset":11666,"count":0},{"startOffset":11681,"endOffset":11696,"count":0},{"startOffset":11698,"endOffset":11744,"count":0}],"isBlockCoverage":true}]},{"scriptId":"844","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/has-one.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7518,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":1},{"startOffset":534,"endOffset":545,"count":0},{"startOffset":551,"endOffset":623,"count":0},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"HasOne","ranges":[{"startOffset":1083,"endOffset":2953,"count":1},{"startOffset":1284,"endOffset":1383,"count":0},{"startOffset":1545,"endOffset":1703,"count":0},{"startOffset":1738,"endOffset":1794,"count":0},{"startOffset":2025,"endOffset":2078,"count":0},{"startOffset":2080,"endOffset":2239,"count":0},{"startOffset":2420,"endOffset":2437,"count":0},{"startOffset":2659,"endOffset":2764,"count":0}],"isBlockCoverage":true},{"functionName":"_injectAttributes","ranges":[{"startOffset":2956,"endOffset":3908,"count":1},{"startOffset":3431,"endOffset":3442,"count":0},{"startOffset":3828,"endOffset":3846,"count":0}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":3911,"endOffset":4019,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4022,"endOffset":5389,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5392,"endOffset":6690,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":6693,"endOffset":7231,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":7234,"endOffset":7454,"count":6},{"startOffset":7301,"endOffset":7340,"count":0},{"startOffset":7355,"endOffset":7372,"count":0},{"startOffset":7374,"endOffset":7422,"count":0}],"isBlockCoverage":true}]},{"scriptId":"845","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/instance-validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8825,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":20},{"startOffset":273,"endOffset":359,"count":4},{"startOffset":360,"endOffset":378,"count":16}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":4},{"startOffset":434,"endOffset":445,"count":0},{"startOffset":451,"endOffset":523,"count":20},{"startOffset":596,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"InstanceValidator","ranges":[{"startOffset":1038,"endOffset":1504,"count":4},{"startOffset":1295,"endOffset":1349,"count":0}],"isBlockCoverage":true},{"functionName":"_validate","ranges":[{"startOffset":1507,"endOffset":1846,"count":4},{"startOffset":1558,"endOffset":1610,"count":0},{"startOffset":1768,"endOffset":1842,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1849,"endOffset":1959,"count":4},{"startOffset":1935,"endOffset":1953,"count":0}],"isBlockCoverage":true},{"functionName":"_validateAndRunHooks","ranges":[{"startOffset":1962,"endOffset":2468,"count":4},{"startOffset":2210,"endOffset":2362,"count":0}],"isBlockCoverage":true},{"functionName":"_perAttributeValidators","ranges":[{"startOffset":2471,"endOffset":3187,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2578,"endOffset":3139,"count":29},{"startOffset":2650,"endOffset":2675,"count":0},{"startOffset":2784,"endOffset":2809,"count":0},{"startOffset":2849,"endOffset":2879,"count":17},{"startOffset":2881,"endOffset":2948,"count":17},{"startOffset":3035,"endOffset":3133,"count":0}],"isBlockCoverage":true},{"functionName":"_customValidators","ranges":[{"startOffset":3190,"endOffset":3603,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3305,"endOffset":3555,"count":0}],"isBlockCoverage":false},{"functionName":"_singleAttrValidate","ranges":[{"startOffset":3606,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"_invokeCustomValidator","ranges":[{"startOffset":4801,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"_invokeBuiltinValidator","ranges":[{"startOffset":5744,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"_extractValidatorArgs","ranges":[{"startOffset":6296,"endOffset":6942,"count":0}],"isBlockCoverage":false},{"functionName":"_validateSchema","ranges":[{"startOffset":6945,"endOffset":8178,"count":17},{"startOffset":7032,"endOffset":7071,"count":13},{"startOffset":7073,"endOffset":7700,"count":0},{"startOffset":7755,"endOffset":7801,"count":6},{"startOffset":7802,"endOffset":7850,"count":6},{"startOffset":7852,"endOffset":8174,"count":11},{"startOffset":7906,"endOffset":7950,"count":0},{"startOffset":7951,"endOffset":7977,"count":0},{"startOffset":7979,"endOffset":8168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7165,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"_pushError","ranges":[{"startOffset":8181,"endOffset":8596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"846","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/query-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":436,"count":1}],"isBlockCoverage":true}]},{"scriptId":"847","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4748,"count":1}],"isBlockCoverage":true},{"functionName":"getProxiedHooks","ranges":[{"startOffset":1904,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"getHooks","ranges":[{"startOffset":2007,"endOffset":2101,"count":226},{"startOffset":2076,"endOffset":2081,"count":0}],"isBlockCoverage":true},{"functionName":"_setupHooks","ranges":[{"startOffset":2120,"endOffset":2375,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2193,"endOffset":2369,"count":0}],"isBlockCoverage":false},{"functionName":"runHooks","ranges":[{"startOffset":2379,"endOffset":3255,"count":150},{"startOffset":2438,"endOffset":2495,"count":0},{"startOffset":2641,"endOffset":2716,"count":76},{"startOffset":2754,"endOffset":2784,"count":0},{"startOffset":2842,"endOffset":3064,"count":8},{"startOffset":2874,"endOffset":3044,"count":0},{"startOffset":3064,"endOffset":3093,"count":142},{"startOffset":3093,"endOffset":3251,"count":0},{"startOffset":3251,"endOffset":3254,"count":142}],"isBlockCoverage":true},{"functionName":"addHook","ranges":[{"startOffset":3259,"endOffset":3636,"count":0}],"isBlockCoverage":false},{"functionName":"removeHook","ranges":[{"startOffset":3640,"endOffset":4249,"count":0}],"isBlockCoverage":false},{"functionName":"hasHook","ranges":[{"startOffset":4253,"endOffset":4358,"count":0}],"isBlockCoverage":false},{"functionName":"applyTo","ranges":[{"startOffset":4394,"endOffset":4686,"count":3},{"startOffset":4509,"endOffset":4684,"count":132},{"startOffset":4527,"endOffset":4553,"count":44},{"startOffset":4555,"endOffset":4578,"count":8},{"startOffset":4578,"endOffset":4684,"count":124}],"isBlockCoverage":true},{"functionName":"target.<computed>","ranges":[{"startOffset":4598,"endOffset":4679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"848","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/mixin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3739,"count":1}],"isBlockCoverage":true},{"functionName":"isModel","ranges":[{"startOffset":214,"endOffset":343,"count":4}],"isBlockCoverage":true},{"functionName":"hasMany","ranges":[{"startOffset":362,"endOffset":1246,"count":1},{"startOffset":436,"endOffset":553,"count":0},{"startOffset":632,"endOffset":656,"count":0},{"startOffset":785,"endOffset":876,"count":0},{"startOffset":1115,"endOffset":1218,"count":0}],"isBlockCoverage":true},{"functionName":"belongsToMany","ranges":[{"startOffset":1250,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"getAssociations","ranges":[{"startOffset":2321,"endOffset":2460,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2398,"endOffset":2454,"count":28}],"isBlockCoverage":true},{"functionName":"getAssociationForAlias","ranges":[{"startOffset":2464,"endOffset":2621,"count":7},{"startOffset":2609,"endOffset":2616,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2549,"endOffset":2607,"count":7}],"isBlockCoverage":true},{"functionName":"singleLinked","ranges":[{"startOffset":2625,"endOffset":3538,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2664,"endOffset":3535,"count":3},{"startOffset":2766,"endOffset":2904,"count":0},{"startOffset":2958,"endOffset":2982,"count":0},{"startOffset":3048,"endOffset":3138,"count":0},{"startOffset":3405,"endOffset":3507,"count":0}],"isBlockCoverage":true}]},{"scriptId":"849","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/deprecations.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2758,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1},{"startOffset":442,"endOffset":504,"count":6}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":6}],"isBlockCoverage":true},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1079,"endOffset":1102,"count":0},{"startOffset":1103,"endOffset":1153,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"noBoolOperatorAliases","ranges":[{"startOffset":1254,"endOffset":1281,"count":0}],"isBlockCoverage":false},{"functionName":"noDoubleNestedGroup","ranges":[{"startOffset":1306,"endOffset":1331,"count":1}],"isBlockCoverage":true},{"functionName":"noRawAttributes","ranges":[{"startOffset":1352,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"noStringOperators","ranges":[{"startOffset":1396,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"noTrueLogging","ranges":[{"startOffset":1438,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"unsupportedEngine","ranges":[{"startOffset":1480,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1568,"endOffset":1577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"850","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/deferrable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1344,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":89,"endOffset":153,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":156,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":214,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":329,"endOffset":386,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":436,"endOffset":494,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":528,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"SET_DEFERRED","ranges":[{"startOffset":613,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":695,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"SET_IMMEDIATE","ranges":[{"startOffset":828,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":910,"endOffset":1000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"851","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/model-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2019,"count":1}],"isBlockCoverage":true},{"functionName":"ModelManager","ranges":[{"startOffset":110,"endOffset":192,"count":1}],"isBlockCoverage":true},{"functionName":"addModel","ranges":[{"startOffset":195,"endOffset":310,"count":3}],"isBlockCoverage":true},{"functionName":"removeModel","ranges":[{"startOffset":313,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"getModel","ranges":[{"startOffset":486,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"get all","ranges":[{"startOffset":673,"endOffset":712,"count":0}],"isBlockCoverage":false},{"functionName":"forEachModel","ranges":[{"startOffset":715,"endOffset":1860,"count":0}],"isBlockCoverage":false}]},{"scriptId":"852","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/toposort-class/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51,"count":1}],"isBlockCoverage":true}]},{"scriptId":"853","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/toposort-class/build/toposort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11111,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1172,"endOffset":1589,"count":1},{"startOffset":1239,"endOffset":1252,"count":0},{"startOffset":1255,"endOffset":1324,"count":0},{"startOffset":1443,"endOffset":1587,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1598,"endOffset":11107,"count":1}],"isBlockCoverage":true},{"functionName":"_classCallCheck","ranges":[{"startOffset":1651,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1863,"endOffset":11069,"count":1}],"isBlockCoverage":true},{"functionName":"Toposort","ranges":[{"startOffset":1884,"endOffset":2030,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2417,"endOffset":3946,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":4188,"endOffset":10759,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10953,"endOffset":11036,"count":0}],"isBlockCoverage":false}]},{"scriptId":"854","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/transaction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5226,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"Transaction","ranges":[{"startOffset":722,"endOffset":1440,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":1443,"endOffset":1888,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":1891,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"prepareEnvironment","ranges":[{"startOffset":2333,"endOffset":3272,"count":0}],"isBlockCoverage":false},{"functionName":"setDeferrable","ranges":[{"startOffset":3275,"endOffset":3435,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":3438,"endOffset":3926,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":3929,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"_clearCls","ranges":[{"startOffset":4175,"endOffset":4353,"count":0}],"isBlockCoverage":false},{"functionName":"afterCommit","ranges":[{"startOffset":4356,"endOffset":4513,"count":0}],"isBlockCoverage":false},{"functionName":"get TYPES","ranges":[{"startOffset":4523,"endOffset":4647,"count":1}],"isBlockCoverage":true},{"functionName":"get ISOLATION_LEVELS","ranges":[{"startOffset":4657,"endOffset":4866,"count":0}],"isBlockCoverage":false},{"functionName":"get LOCK","ranges":[{"startOffset":4876,"endOffset":5025,"count":0}],"isBlockCoverage":false},{"functionName":"get LOCK","ranges":[{"startOffset":5028,"endOffset":5073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"855","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/table-hints.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true}]},{"scriptId":"856","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/index-hints.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":146,"count":1}],"isBlockCoverage":true}]},{"scriptId":"857","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true}]},{"scriptId":"858","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query-interface.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24316,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":438},{"startOffset":373,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":27},{"startOffset":534,"endOffset":545,"count":0},{"startOffset":551,"endOffset":623,"count":438},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":18}],"isBlockCoverage":true},{"functionName":"QueryInterface","ranges":[{"startOffset":1105,"endOffset":1223,"count":1}],"isBlockCoverage":true},{"functionName":"createDatabase","ranges":[{"startOffset":1226,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"dropDatabase","ranges":[{"startOffset":1432,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"createSchema","ranges":[{"startOffset":1625,"endOffset":1806,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":1809,"endOffset":1986,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllSchemas","ranges":[{"startOffset":1989,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"showAllSchemas","ranges":[{"startOffset":2310,"endOffset":2722,"count":0}],"isBlockCoverage":false},{"functionName":"databaseVersion","ranges":[{"startOffset":2725,"endOffset":2910,"count":0}],"isBlockCoverage":false},{"functionName":"createTable","ranges":[{"startOffset":2913,"endOffset":3970,"count":6},{"startOffset":3072,"endOffset":3239,"count":0},{"startOffset":3575,"endOffset":3721,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3109,"endOffset":3231,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3371,"endOffset":3430,"count":48}],"isBlockCoverage":true},{"functionName":"dropTable","ranges":[{"startOffset":3973,"endOffset":4240,"count":3},{"startOffset":4109,"endOffset":4117,"count":0}],"isBlockCoverage":true},{"functionName":"_dropAllTables","ranges":[{"startOffset":4243,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllTables","ranges":[{"startOffset":4521,"endOffset":5203,"count":0}],"isBlockCoverage":false},{"functionName":"renameTable","ranges":[{"startOffset":5206,"endOffset":5404,"count":0}],"isBlockCoverage":false},{"functionName":"showAllTables","ranges":[{"startOffset":5407,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"describeTable","ranges":[{"startOffset":5766,"endOffset":6949,"count":0}],"isBlockCoverage":false},{"functionName":"addColumn","ranges":[{"startOffset":6952,"endOffset":7358,"count":0}],"isBlockCoverage":false},{"functionName":"removeColumn","ranges":[{"startOffset":7361,"endOffset":7527,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAttribute","ranges":[{"startOffset":7530,"endOffset":7833,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifier","ranges":[{"startOffset":7836,"endOffset":7945,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifiers","ranges":[{"startOffset":7948,"endOffset":8045,"count":0}],"isBlockCoverage":false},{"functionName":"changeColumn","ranges":[{"startOffset":8048,"endOffset":8468,"count":0}],"isBlockCoverage":false},{"functionName":"assertTableHasColumn","ranges":[{"startOffset":8471,"endOffset":8753,"count":0}],"isBlockCoverage":false},{"functionName":"renameColumn","ranges":[{"startOffset":8756,"endOffset":9450,"count":0}],"isBlockCoverage":false},{"functionName":"addIndex","ranges":[{"startOffset":9453,"endOffset":9996,"count":0}],"isBlockCoverage":false},{"functionName":"showIndex","ranges":[{"startOffset":9999,"endOffset":10236,"count":6}],"isBlockCoverage":true},{"functionName":"getForeignKeysForTables","ranges":[{"startOffset":10239,"endOffset":11037,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeyReferencesForTable","ranges":[{"startOffset":11040,"endOffset":11372,"count":0}],"isBlockCoverage":false},{"functionName":"removeIndex","ranges":[{"startOffset":11375,"endOffset":11620,"count":0}],"isBlockCoverage":false},{"functionName":"addConstraint","ranges":[{"startOffset":11623,"endOffset":12056,"count":0}],"isBlockCoverage":false},{"functionName":"showConstraint","ranges":[{"startOffset":12059,"endOffset":12332,"count":0}],"isBlockCoverage":false},{"functionName":"removeConstraint","ranges":[{"startOffset":12335,"endOffset":12511,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":12514,"endOffset":13022,"count":4}],"isBlockCoverage":true},{"functionName":"upsert","ranges":[{"startOffset":13025,"endOffset":14475,"count":0}],"isBlockCoverage":false},{"functionName":"bulkInsert","ranges":[{"startOffset":14478,"endOffset":14780,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":14783,"endOffset":15223,"count":0}],"isBlockCoverage":false},{"functionName":"bulkUpdate","ranges":[{"startOffset":15226,"endOffset":15819,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":15822,"endOffset":16977,"count":0}],"isBlockCoverage":false},{"functionName":"bulkDelete","ranges":[{"startOffset":16980,"endOffset":17468,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":17471,"endOffset":17730,"count":12}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":17733,"endOffset":18137,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":18140,"endOffset":18544,"count":0}],"isBlockCoverage":false},{"functionName":"rawSelect","ranges":[{"startOffset":18547,"endOffset":19727,"count":0}],"isBlockCoverage":false},{"functionName":"createTrigger","ranges":[{"startOffset":19730,"endOffset":20106,"count":0}],"isBlockCoverage":false},{"functionName":"dropTrigger","ranges":[{"startOffset":20109,"endOffset":20343,"count":0}],"isBlockCoverage":false},{"functionName":"renameTrigger","ranges":[{"startOffset":20346,"endOffset":20622,"count":0}],"isBlockCoverage":false},{"functionName":"createFunction","ranges":[{"startOffset":20625,"endOffset":20954,"count":0}],"isBlockCoverage":false},{"functionName":"dropFunction","ranges":[{"startOffset":20957,"endOffset":21189,"count":0}],"isBlockCoverage":false},{"functionName":"renameFunction","ranges":[{"startOffset":21192,"endOffset":21468,"count":0}],"isBlockCoverage":false},{"functionName":"ensureEnums","ranges":[{"startOffset":21471,"endOffset":21490,"count":6}],"isBlockCoverage":true},{"functionName":"setIsolationLevel","ranges":[{"startOffset":21493,"endOffset":22084,"count":0}],"isBlockCoverage":false},{"functionName":"startTransaction","ranges":[{"startOffset":22087,"endOffset":22606,"count":0}],"isBlockCoverage":false},{"functionName":"deferConstraints","ranges":[{"startOffset":22609,"endOffset":22913,"count":0}],"isBlockCoverage":false},{"functionName":"commitTransaction","ranges":[{"startOffset":22916,"endOffset":23552,"count":0}],"isBlockCoverage":false},{"functionName":"rollbackTransaction","ranges":[{"startOffset":23555,"endOffset":24228,"count":0}],"isBlockCoverage":false}]},{"scriptId":"859","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/database/connect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":178,"endOffset":408,"count":2},{"startOffset":317,"endOffset":406,"count":0}],"isBlockCoverage":true}]},{"scriptId":"860","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1795,"count":1}],"isBlockCoverage":true},{"functionName":"SqliteDialect","ranges":[{"startOffset":402,"endOffset":721,"count":1}],"isBlockCoverage":true}]},{"scriptId":"861","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1347,"count":1}],"isBlockCoverage":true}]},{"scriptId":"862","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/connection-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3274,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionManager","ranges":[{"startOffset":514,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"_onProcessExit","ranges":[{"startOffset":805,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"_refreshTypeParser","ranges":[{"startOffset":1042,"endOffset":1111,"count":6}],"isBlockCoverage":true},{"functionName":"_clearTypeParser","ranges":[{"startOffset":1114,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":1166,"endOffset":2807,"count":33},{"startOffset":1219,"endOffset":1224,"count":0},{"startOffset":1431,"endOffset":1511,"count":0},{"startOffset":1566,"endOffset":1569,"count":0},{"startOffset":1765,"endOffset":1787,"count":0},{"startOffset":1873,"endOffset":1945,"count":32},{"startOffset":1945,"endOffset":2027,"count":1},{"startOffset":2029,"endOffset":2806,"count":1}],"isBlockCoverage":true},{"functionName":"connection","ranges":[{"startOffset":2150,"endOffset":2527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2294,"endOffset":2519,"count":1},{"startOffset":2332,"endOffset":2388,"count":0}],"isBlockCoverage":true},{"functionName":"releaseConnection","ranges":[{"startOffset":2810,"endOffset":3090,"count":33},{"startOffset":2892,"endOffset":2909,"count":0},{"startOffset":2917,"endOffset":2924,"count":0},{"startOffset":2950,"endOffset":3086,"count":0}],"isBlockCoverage":true}]},{"scriptId":"863","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/connection-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8527,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionManager","ranges":[{"startOffset":354,"endOffset":927,"count":1},{"startOffset":642,"endOffset":718,"count":0},{"startOffset":760,"endOffset":765,"count":0}],"isBlockCoverage":true},{"functionName":"refreshTypeParser","ranges":[{"startOffset":930,"endOffset":1322,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":983,"endOffset":1316,"count":17},{"startOffset":1066,"endOffset":1310,"count":6},{"startOffset":1170,"endOffset":1302,"count":0}],"isBlockCoverage":true},{"functionName":"_loadDialectModule","ranges":[{"startOffset":1325,"endOffset":1974,"count":1},{"startOffset":1419,"endOffset":1493,"count":0},{"startOffset":1541,"endOffset":1602,"count":0},{"startOffset":1643,"endOffset":1970,"count":0}],"isBlockCoverage":true},{"functionName":"_onProcessExit","ranges":[{"startOffset":1977,"endOffset":2171,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":2174,"endOffset":2408,"count":0}],"isBlockCoverage":false},{"functionName":"initPools","ranges":[{"startOffset":2411,"endOffset":5857,"count":1},{"startOffset":3172,"endOffset":5856,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2560,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":2606,"endOffset":2764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3447,"endOffset":3521,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":3576,"endOffset":3752,"count":0}],"isBlockCoverage":false},{"functionName":"acquire","ranges":[{"startOffset":3769,"endOffset":4013,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":4030,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"destroyAllNow","ranges":[{"startOffset":4176,"endOffset":4365,"count":0}],"isBlockCoverage":false},{"functionName":"drain","ranges":[{"startOffset":4380,"endOffset":4478,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4551,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":4817,"endOffset":4861,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":5226,"endOffset":5396,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5415,"endOffset":5459,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":5860,"endOffset":7560,"count":0}],"isBlockCoverage":false},{"functionName":"releaseConnection","ranges":[{"startOffset":7563,"endOffset":7673,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":7676,"endOffset":7935,"count":0}],"isBlockCoverage":false},{"functionName":"_disconnect","ranges":[{"startOffset":7938,"endOffset":8172,"count":0}],"isBlockCoverage":false},{"functionName":"_validate","ranges":[{"startOffset":8175,"endOffset":8343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"864","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":679,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":268,"endOffset":319,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":450,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":606,"endOffset":641,"count":1}],"isBlockCoverage":true}]},{"scriptId":"865","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/TimeoutError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":222,"count":1}],"isBlockCoverage":true}]},{"scriptId":"866","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/AggregateError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1}],"isBlockCoverage":true},{"functionName":"AggregateError","ranges":[{"startOffset":151,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":268,"endOffset":670,"count":0}],"isBlockCoverage":false}]},{"scriptId":"867","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/Pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10503,"count":1}],"isBlockCoverage":true},{"functionName":"Pool","ranges":[{"startOffset":213,"endOffset":1841,"count":1},{"startOffset":291,"endOffset":362,"count":0},{"startOffset":393,"endOffset":465,"count":0},{"startOffset":497,"endOffset":570,"count":0},{"startOffset":702,"endOffset":773,"count":0},{"startOffset":906,"endOffset":976,"count":0},{"startOffset":1016,"endOffset":1083,"count":0},{"startOffset":1126,"endOffset":1201,"count":0},{"startOffset":1203,"endOffset":1278,"count":0},{"startOffset":1338,"endOffset":1346,"count":0},{"startOffset":1413,"endOffset":1421,"count":0},{"startOffset":1484,"endOffset":1491,"count":0}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":1846,"endOffset":1892,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1897,"endOffset":1950,"count":0}],"isBlockCoverage":false},{"functionName":"get available","ranges":[{"startOffset":1955,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"get using","ranges":[{"startOffset":2029,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"get waiting","ranges":[{"startOffset":2095,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"get maxSize","ranges":[{"startOffset":2166,"endOffset":2221,"count":0}],"isBlockCoverage":false},{"functionName":"get minSize","ranges":[{"startOffset":2226,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"_log","ranges":[{"startOffset":2286,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"_removeIdle","ranges":[{"startOffset":2540,"endOffset":3526,"count":0}],"isBlockCoverage":false},{"functionName":"_scheduleRemoveIdle","ranges":[{"startOffset":3531,"endOffset":3790,"count":0}],"isBlockCoverage":false},{"functionName":"_dispense","ranges":[{"startOffset":3795,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"_createResource","ranges":[{"startOffset":4810,"endOffset":5752,"count":0}],"isBlockCoverage":false},{"functionName":"_addResourceToAvailableObjects","ranges":[{"startOffset":5757,"endOffset":6098,"count":0}],"isBlockCoverage":false},{"functionName":"_addResourceToInUseObjects","ranges":[{"startOffset":6103,"endOffset":6316,"count":0}],"isBlockCoverage":false},{"functionName":"_ensureMinimum","ranges":[{"startOffset":6321,"endOffset":6575,"count":0}],"isBlockCoverage":false},{"functionName":"acquire","ranges":[{"startOffset":6580,"endOffset":7066,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":7071,"endOffset":8232,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":8237,"endOffset":9123,"count":0}],"isBlockCoverage":false},{"functionName":"drain","ranges":[{"startOffset":9128,"endOffset":9764,"count":0}],"isBlockCoverage":false},{"functionName":"destroyAllNow","ranges":[{"startOffset":9769,"endOffset":10447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"868","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/Deferred.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1021,"count":1}],"isBlockCoverage":true},{"functionName":"Deferred","ranges":[{"startOffset":175,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"registerTimeout","ranges":[{"startOffset":344,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"_clearTimeout","ranges":[{"startOffset":621,"endOffset":729,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":734,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":821,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":906,"endOffset":953,"count":0}],"isBlockCoverage":false}]},{"scriptId":"869","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true}]},{"scriptId":"870","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6662,"count":1}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":276,"endOffset":447,"count":40},{"startOffset":427,"endOffset":432,"count":4},{"startOffset":433,"endOffset":444,"count":36}],"isBlockCoverage":true}]},{"scriptId":"871","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1},{"startOffset":233,"endOffset":281,"count":0}],"isBlockCoverage":true}]},{"scriptId":"872","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":40}],"isBlockCoverage":true}]},{"scriptId":"873","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7985,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":303,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2197,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2397,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2442,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2836,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3131,"endOffset":3982,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":3986,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4681,"endOffset":7957,"count":0}],"isBlockCoverage":false}]},{"scriptId":"874","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":186,"endOffset":370,"count":0}],"isBlockCoverage":false}]},{"scriptId":"875","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"876","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":660,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":215,"endOffset":635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"877","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":47,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"878","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":47,"endOffset":167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"879","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":336,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":57,"endOffset":314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"880","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":634,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":74,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"881","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":48,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"882","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"883","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"884","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"885","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"886","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":52,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"887","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":54,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"888","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":58,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"889","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":65,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"890","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":61,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"891","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"892","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"893","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"894","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"895","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"896","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"897","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":907,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":181,"endOffset":885,"count":0}],"isBlockCoverage":false}]},{"scriptId":"898","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1497,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":135,"endOffset":1472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"899","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3606,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":100,"endOffset":131,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":134,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":639,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1139,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1182,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":1566,"endOffset":3322,"count":0}],"isBlockCoverage":false}]},{"scriptId":"900","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13989,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":55,"endOffset":1826,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1830,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2000,"endOffset":2039,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2043,"endOffset":4217,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":4221,"endOffset":4851,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":4919,"endOffset":5301,"count":0}],"isBlockCoverage":false},{"functionName":"isNullSet","ranges":[{"startOffset":5710,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"isAny","ranges":[{"startOffset":5752,"endOffset":5771,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":5893,"endOffset":6299,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":6469,"endOffset":6782,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":6796,"endOffset":6847,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":7152,"endOffset":7267,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":7290,"endOffset":7964,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":8195,"endOffset":8310,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":8333,"endOffset":9635,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":9660,"endOffset":9821,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":9845,"endOffset":11535,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":11681,"endOffset":11856,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGTE0","ranges":[{"startOffset":11878,"endOffset":12028,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":12270,"endOffset":12946,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":12964,"endOffset":13988,"count":0}],"isBlockCoverage":false}]},{"scriptId":"901","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/lru-cache/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8186,"count":1}],"isBlockCoverage":true},{"functionName":"naiveLength","ranges":[{"startOffset":510,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"LRUCache","ranges":[{"startOffset":853,"endOffset":1751,"count":1},{"startOffset":920,"endOffset":946,"count":0},{"startOffset":972,"endOffset":984,"count":0},{"startOffset":1069,"endOffset":1125,"count":0},{"startOffset":1235,"endOffset":1246,"count":0},{"startOffset":1350,"endOffset":1363,"count":0},{"startOffset":1439,"endOffset":1476,"count":0},{"startOffset":1484,"endOffset":1530,"count":0}],"isBlockCoverage":true},{"functionName":"set max","ranges":[{"startOffset":1799,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":1972,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"set allowStale","ranges":[{"startOffset":2013,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"get allowStale","ranges":[{"startOffset":2086,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"set maxAge","ranges":[{"startOffset":2142,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"get maxAge","ranges":[{"startOffset":2303,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"set lengthCalculator","ranges":[{"startOffset":2408,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"get lengthCalculator","ranges":[{"startOffset":2768,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":2830,"endOffset":2867,"count":0}],"isBlockCoverage":false},{"functionName":"get itemCount","ranges":[{"startOffset":2870,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":2923,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":3142,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":3360,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":3429,"endOffset":3498,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":3502,"endOffset":3858,"count":1},{"startOffset":3535,"endOffset":3560,"count":0},{"startOffset":3561,"endOffset":3593,"count":0},{"startOffset":3595,"endOffset":3673,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3626,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":3862,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"dumpLru","ranges":[{"startOffset":4068,"endOffset":4110,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4114,"endOffset":5376,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5380,"endOffset":5513,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5517,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":5568,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":5621,"endOffset":5746,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":5750,"endOffset":5801,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5805,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"prune","ranges":[{"startOffset":6382,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6475,"endOffset":6871,"count":0}],"isBlockCoverage":false},{"functionName":"isStale","ranges":[{"startOffset":6889,"endOffset":7094,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":7109,"endOffset":7497,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":7511,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"Entry","ranges":[{"startOffset":7756,"endOffset":7923,"count":0}],"isBlockCoverage":false},{"functionName":"forEachStep","ranges":[{"startOffset":7947,"endOffset":8158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"902","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/yallist/yallist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8411,"count":1},{"startOffset":8397,"endOffset":8410,"count":0}],"isBlockCoverage":true},{"functionName":"Yallist","ranges":[{"startOffset":85,"endOffset":517,"count":1},{"startOffset":163,"endOffset":193,"count":0},{"startOffset":263,"endOffset":300,"count":0},{"startOffset":302,"endOffset":371,"count":0},{"startOffset":403,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":321,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.removeNode","ranges":[{"startOffset":550,"endOffset":1001,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshiftNode","ranges":[{"startOffset":1035,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.pushNode","ranges":[{"startOffset":1365,"endOffset":1664,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.push","ranges":[{"startOffset":1691,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshift","ranges":[{"startOffset":1844,"endOffset":1970,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.pop","ranges":[{"startOffset":1996,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.shift","ranges":[{"startOffset":2252,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEach","ranges":[{"startOffset":2510,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEachReverse","ranges":[{"startOffset":2728,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.get","ranges":[{"startOffset":2949,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.getReverse","ranges":[{"startOffset":3215,"endOffset":3448,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.map","ranges":[{"startOffset":3474,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.mapReverse","ranges":[{"startOffset":3723,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduce","ranges":[{"startOffset":3968,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduceReverse","ranges":[{"startOffset":4399,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArray","ranges":[{"startOffset":4838,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArrayReverse","ranges":[{"startOffset":5055,"endOffset":5235,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.slice","ranges":[{"startOffset":5263,"endOffset":5790,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.sliceReverse","ranges":[{"startOffset":5825,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.splice","ranges":[{"startOffset":6391,"endOffset":7034,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reverse","ranges":[{"startOffset":7064,"endOffset":7322,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7324,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":7645,"endOffset":7793,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":7795,"endOffset":7946,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":7948,"endOffset":8300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"903","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/yallist/iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":30,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"Yallist.<computed>","ranges":[{"startOffset":90,"endOffset":204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"904","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":60,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"905","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":115,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"906","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":109,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"907","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":108,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"908","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1492,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":144,"endOffset":1463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"909","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":61,"endOffset":283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"910","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2188,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":388,"endOffset":2161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"911","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":129,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"912","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":125,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"913","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":61,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"914","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1287,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":329,"endOffset":1286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"915","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7224,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":1996,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2726,"endOffset":6700,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":6751,"endOffset":6949,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7000,"endOffset":7198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"916","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/parserStore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":459,"count":2},{"startOffset":116,"endOffset":173,"count":1}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":189,"endOffset":239,"count":0}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":245,"endOffset":385,"count":6},{"startOffset":315,"endOffset":379,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":391,"endOffset":452,"count":119}],"isBlockCoverage":true}]},{"scriptId":"917","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12768,"count":1}],"isBlockCoverage":true},{"functionName":"getInsertIdField","ranges":[{"startOffset":425,"endOffset":470,"count":4}],"isBlockCoverage":true},{"functionName":"formatBindParameters","ranges":[{"startOffset":480,"endOffset":1100,"count":4},{"startOffset":784,"endOffset":1067,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":620,"endOffset":675,"count":25}],"isBlockCoverage":true},{"functionName":"_collectModels","ranges":[{"startOffset":1103,"endOffset":1534,"count":12},{"startOffset":1174,"endOffset":1514,"count":7},{"startOffset":1294,"endOffset":1355,"count":0},{"startOffset":1421,"endOffset":1500,"count":0}],"isBlockCoverage":true},{"functionName":"_handleQueryResponse","ranges":[{"startOffset":1537,"endOffset":5918,"count":35},{"startOffset":1620,"endOffset":1698,"count":0},{"startOffset":1777,"endOffset":1800,"count":31},{"startOffset":1802,"endOffset":2503,"count":4},{"startOffset":1879,"endOffset":2497,"count":0},{"startOffset":2538,"endOffset":2590,"count":0},{"startOffset":2630,"endOffset":2806,"count":0},{"startOffset":2837,"endOffset":3989,"count":14},{"startOffset":2867,"endOffset":2924,"count":2},{"startOffset":2924,"endOffset":3989,"count":12},{"startOffset":3989,"endOffset":4028,"count":21},{"startOffset":4028,"endOffset":4057,"count":0},{"startOffset":4057,"endOffset":4106,"count":21},{"startOffset":4106,"endOffset":4164,"count":6},{"startOffset":4164,"endOffset":4213,"count":15},{"startOffset":4213,"endOffset":4242,"count":2},{"startOffset":4242,"endOffset":4291,"count":13},{"startOffset":4291,"endOffset":5175,"count":0},{"startOffset":5175,"endOffset":5227,"count":13},{"startOffset":5227,"endOffset":5259,"count":0},{"startOffset":5259,"endOffset":5310,"count":13},{"startOffset":5310,"endOffset":5339,"count":0},{"startOffset":5339,"endOffset":5394,"count":13},{"startOffset":5394,"endOffset":5423,"count":0},{"startOffset":5423,"endOffset":5508,"count":13},{"startOffset":5508,"endOffset":5546,"count":0},{"startOffset":5546,"endOffset":5597,"count":13},{"startOffset":5597,"endOffset":5637,"count":0},{"startOffset":5637,"endOffset":5684,"count":13},{"startOffset":5684,"endOffset":5725,"count":9},{"startOffset":5725,"endOffset":5756,"count":4},{"startOffset":5756,"endOffset":5792,"count":0},{"startOffset":5792,"endOffset":5845,"count":4},{"startOffset":5847,"endOffset":5895,"count":4},{"startOffset":5895,"endOffset":5917,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2565,"endOffset":2582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3019,"endOffset":3935,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3070,"endOffset":3925,"count":119},{"startOffset":3144,"endOffset":3308,"count":69},{"startOffset":3308,"endOffset":3367,"count":50},{"startOffset":3499,"endOffset":3504,"count":0},{"startOffset":3557,"endOffset":3789,"count":0},{"startOffset":3907,"endOffset":3914,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3601,"endOffset":3775,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":5921,"endOffset":7844,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6133,"endOffset":7838,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6169,"endOffset":7837,"count":35},{"startOffset":6875,"endOffset":7804,"count":31},{"startOffset":6959,"endOffset":7018,"count":12},{"startOffset":7018,"endOffset":7133,"count":19},{"startOffset":7060,"endOffset":7133,"count":0},{"startOffset":7283,"endOffset":7325,"count":19},{"startOffset":7325,"endOffset":7804,"count":12},{"startOffset":7804,"endOffset":7836,"count":16}],"isBlockCoverage":true},{"functionName":"executeSql","ranges":[{"startOffset":6277,"endOffset":6827,"count":35},{"startOffset":6320,"endOffset":6359,"count":0},{"startOffset":6729,"endOffset":6745,"count":31}],"isBlockCoverage":true},{"functionName":"afterExecute","ranges":[{"startOffset":6396,"endOffset":6693,"count":35},{"startOffset":6629,"endOffset":6683,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7173,"endOffset":7248,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7367,"endOffset":7793,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7394,"endOffset":7792,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7558,"endOffset":7780,"count":19},{"startOffset":7646,"endOffset":7730,"count":124}],"isBlockCoverage":true},{"functionName":"parseConstraintsFromSql","ranges":[{"startOffset":7847,"endOffset":9615,"count":0}],"isBlockCoverage":false},{"functionName":"applyParsers","ranges":[{"startOffset":9618,"endOffset":10010,"count":119},{"startOffset":9674,"endOffset":9729,"count":57},{"startOffset":9897,"endOffset":9905,"count":99},{"startOffset":9907,"endOffset":9988,"count":31},{"startOffset":9988,"endOffset":10009,"count":88}],"isBlockCoverage":true},{"functionName":"formatError","ranges":[{"startOffset":10013,"endOffset":11830,"count":0}],"isBlockCoverage":false},{"functionName":"handleShowIndexesQuery","ranges":[{"startOffset":11833,"endOffset":12343,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11912,"endOffset":12336,"count":2}],"isBlockCoverage":true},{"functionName":"getDatabaseMethod","ranges":[{"startOffset":12346,"endOffset":12645,"count":70},{"startOffset":12397,"endOffset":12420,"count":62},{"startOffset":12421,"endOffset":12444,"count":62},{"startOffset":12445,"endOffset":12472,"count":62},{"startOffset":12473,"endOffset":12547,"count":62},{"startOffset":12548,"endOffset":12594,"count":62},{"startOffset":12596,"endOffset":12623,"count":8},{"startOffset":12623,"endOffset":12644,"count":62}],"isBlockCoverage":true}]},{"scriptId":"918","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19072,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":804},{"startOffset":273,"endOffset":359,"count":64},{"startOffset":360,"endOffset":378,"count":740}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":33},{"startOffset":434,"endOffset":445,"count":0},{"startOffset":451,"endOffset":523,"count":804},{"startOffset":596,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"AbstractQuery","ranges":[{"startOffset":1028,"endOffset":1483,"count":33},{"startOffset":1410,"endOffset":1479,"count":0}],"isBlockCoverage":true},{"functionName":"formatBindParameters","ranges":[{"startOffset":1493,"endOffset":3330,"count":4},{"startOffset":1581,"endOffset":1612,"count":0},{"startOffset":1723,"endOffset":1728,"count":0},{"startOffset":2009,"endOffset":2259,"count":0},{"startOffset":2265,"endOffset":2605,"count":0}],"isBlockCoverage":true},{"functionName":"replacementFunc","ranges":[{"startOffset":1860,"endOffset":2000,"count":25},{"startOffset":1965,"endOffset":1999,"count":0}],"isBlockCoverage":true},{"functionName":"replacementFunc","ranges":[{"startOffset":2043,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"replacementFunc","ranges":[{"startOffset":2378,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2712,"endOffset":3302,"count":25},{"startOffset":2753,"endOffset":2813,"count":0},{"startOffset":3017,"endOffset":3140,"count":0},{"startOffset":3171,"endOffset":3274,"count":0}],"isBlockCoverage":true},{"functionName":"formatError","ranges":[{"startOffset":3333,"endOffset":3413,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":3416,"endOffset":3486,"count":0}],"isBlockCoverage":false},{"functionName":"checkLoggingOption","ranges":[{"startOffset":3489,"endOffset":3640,"count":33},{"startOffset":3551,"endOffset":3636,"count":0}],"isBlockCoverage":true},{"functionName":"getInsertIdField","ranges":[{"startOffset":3643,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueConstraintErrorMessage","ranges":[{"startOffset":3693,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"isRawQuery","ranges":[{"startOffset":4146,"endOffset":4213,"count":0}],"isBlockCoverage":false},{"functionName":"isVersionQuery","ranges":[{"startOffset":4216,"endOffset":4291,"count":0}],"isBlockCoverage":false},{"functionName":"isUpsertQuery","ranges":[{"startOffset":4294,"endOffset":4367,"count":97}],"isBlockCoverage":true},{"functionName":"isInsertQuery","ranges":[{"startOffset":4370,"endOffset":4819,"count":109},{"startOffset":4477,"endOffset":4503,"count":16},{"startOffset":4503,"endOffset":4575,"count":93},{"startOffset":4597,"endOffset":4684,"count":0},{"startOffset":4706,"endOffset":4795,"count":0}],"isBlockCoverage":true},{"functionName":"handleInsertQuery","ranges":[{"startOffset":4822,"endOffset":5164,"count":4},{"startOffset":5004,"endOffset":5039,"count":0}],"isBlockCoverage":true},{"functionName":"isShowTablesQuery","ranges":[{"startOffset":5167,"endOffset":5248,"count":35}],"isBlockCoverage":true},{"functionName":"handleShowTablesQuery","ranges":[{"startOffset":5251,"endOffset":5363,"count":0}],"isBlockCoverage":false},{"functionName":"isShowIndexesQuery","ranges":[{"startOffset":5366,"endOffset":5449,"count":0}],"isBlockCoverage":false},{"functionName":"isShowConstraintsQuery","ranges":[{"startOffset":5452,"endOffset":5543,"count":35}],"isBlockCoverage":true},{"functionName":"isDescribeQuery","ranges":[{"startOffset":5546,"endOffset":5623,"count":0}],"isBlockCoverage":false},{"functionName":"isSelectQuery","ranges":[{"startOffset":5626,"endOffset":5699,"count":35}],"isBlockCoverage":true},{"functionName":"isBulkUpdateQuery","ranges":[{"startOffset":5702,"endOffset":5783,"count":62}],"isBlockCoverage":true},{"functionName":"isBulkDeleteQuery","ranges":[{"startOffset":5786,"endOffset":5867,"count":0}],"isBlockCoverage":false},{"functionName":"isForeignKeysQuery","ranges":[{"startOffset":5870,"endOffset":5953,"count":0}],"isBlockCoverage":false},{"functionName":"isUpdateQuery","ranges":[{"startOffset":5956,"endOffset":6029,"count":66}],"isBlockCoverage":true},{"functionName":"handleSelectQuery","ranges":[{"startOffset":6032,"endOffset":7764,"count":14},{"startOffset":6115,"endOffset":6444,"count":0},{"startOffset":6471,"endOffset":6805,"count":2},{"startOffset":6805,"endOffset":7650,"count":12},{"startOffset":6846,"endOffset":7454,"count":7},{"startOffset":7393,"endOffset":7419,"count":0},{"startOffset":7454,"endOffset":7650,"count":5},{"startOffset":7608,"endOffset":7634,"count":0},{"startOffset":7716,"endOffset":7722,"count":2},{"startOffset":7723,"endOffset":7734,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6191,"endOffset":6436,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6500,"endOffset":6797,"count":2},{"startOffset":6728,"endOffset":6771,"count":0}],"isBlockCoverage":true},{"functionName":"isShowOrDescribeQuery","ranges":[{"startOffset":7767,"endOffset":7975,"count":21}],"isBlockCoverage":true},{"functionName":"isCallQuery","ranges":[{"startOffset":7978,"endOffset":8051,"count":0}],"isBlockCoverage":false},{"functionName":"_logQuery","ranges":[{"startOffset":8054,"endOffset":9162,"count":35},{"startOffset":8408,"endOffset":8421,"count":0},{"startOffset":8423,"endOffset":8740,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8572,"endOffset":8599,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8970,"endOffset":9157,"count":35},{"startOffset":9071,"endOffset":9151,"count":0}],"isBlockCoverage":true},{"functionName":"_groupJoinData","ranges":[{"startOffset":9172,"endOffset":18917,"count":7},{"startOffset":9242,"endOffset":9266,"count":0},{"startOffset":9656,"endOffset":9660,"count":1},{"startOffset":9661,"endOffset":9684,"count":6},{"startOffset":12427,"endOffset":13124,"count":1},{"startOffset":12666,"endOffset":13116,"count":0},{"startOffset":13234,"endOffset":16672,"count":104},{"startOffset":13488,"endOffset":13564,"count":35},{"startOffset":13564,"endOffset":13707,"count":69},{"startOffset":13756,"endOffset":13788,"count":97},{"startOffset":13790,"endOffset":16506,"count":7},{"startOffset":13821,"endOffset":16129,"count":1},{"startOffset":13950,"endOffset":15248,"count":0},{"startOffset":15447,"endOffset":15504,"count":0},{"startOffset":15518,"endOffset":16092,"count":0},{"startOffset":16129,"endOffset":16496,"count":6},{"startOffset":16448,"endOffset":16453,"count":0},{"startOffset":16698,"endOffset":18836,"count":1},{"startOffset":16883,"endOffset":16918,"count":0},{"startOffset":17232,"endOffset":17737,"count":0},{"startOffset":17927,"endOffset":17979,"count":0},{"startOffset":18001,"endOffset":18048,"count":0},{"startOffset":18083,"endOffset":18235,"count":0},{"startOffset":18430,"endOffset":18554,"count":0},{"startOffset":18836,"endOffset":18887,"count":6}],"isBlockCoverage":true},{"functionName":"buildIncludeMap","ranges":[{"startOffset":9949,"endOffset":10308,"count":69},{"startOffset":10132,"endOffset":10198,"count":0}],"isBlockCoverage":true},{"functionName":"keyPrefixString","ranges":[{"startOffset":10374,"endOffset":10553,"count":208},{"startOffset":10453,"endOffset":10522,"count":104}],"isBlockCoverage":true},{"functionName":"removeKeyPrefix","ranges":[{"startOffset":10619,"endOffset":10886,"count":104},{"startOffset":10815,"endOffset":10818,"count":35},{"startOffset":10819,"endOffset":10830,"count":69}],"isBlockCoverage":true},{"functionName":"keyPrefix","ranges":[{"startOffset":10940,"endOffset":11380,"count":105},{"startOffset":11022,"endOffset":11340,"count":104},{"startOffset":11177,"endOffset":11273,"count":14},{"startOffset":11232,"endOffset":11257,"count":7},{"startOffset":11258,"endOffset":11262,"count":7}],"isBlockCoverage":true},{"functionName":"lastKeyPrefix","ranges":[{"startOffset":11442,"endOffset":11734,"count":1},{"startOffset":11654,"endOffset":11658,"count":0}],"isBlockCoverage":true},{"functionName":"getUniqueKeyAttributes","ranges":[{"startOffset":11771,"endOffset":12068,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":12092,"endOffset":12150,"count":2},{"startOffset":12123,"endOffset":12144,"count":0}],"isBlockCoverage":true}]},{"scriptId":"919","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/query-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15501,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"createSchema","ranges":[{"startOffset":1179,"endOffset":1294,"count":0}],"isBlockCoverage":false},{"functionName":"showSchemasQuery","ranges":[{"startOffset":1297,"endOffset":1416,"count":0}],"isBlockCoverage":false},{"functionName":"versionQuery","ranges":[{"startOffset":1419,"endOffset":1490,"count":0}],"isBlockCoverage":false},{"functionName":"createTableQuery","ranges":[{"startOffset":1493,"endOffset":3422,"count":6},{"startOffset":1566,"endOffset":1571,"count":0},{"startOffset":1796,"endOffset":2803,"count":48},{"startOffset":2068,"endOffset":2714,"count":6},{"startOffset":2201,"endOffset":2224,"count":0},{"startOffset":2276,"endOffset":2373,"count":0},{"startOffset":2426,"endOffset":2704,"count":0},{"startOffset":3249,"endOffset":3304,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1671,"endOffset":1721,"count":48}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2927,"endOffset":2959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3036,"endOffset":3211,"count":2},{"startOffset":3084,"endOffset":3203,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3139,"endOffset":3177,"count":0}],"isBlockCoverage":false},{"functionName":"booleanValue","ranges":[{"startOffset":3425,"endOffset":3476,"count":0}],"isBlockCoverage":false},{"functionName":"_checkValidJsonStatement","ranges":[{"startOffset":3479,"endOffset":4851,"count":0}],"isBlockCoverage":false},{"functionName":"_toJSONValue","ranges":[{"startOffset":4854,"endOffset":5088,"count":0}],"isBlockCoverage":false},{"functionName":"handleSequelizeMethod","ranges":[{"startOffset":5091,"endOffset":5540,"count":0}],"isBlockCoverage":false},{"functionName":"addColumnQuery","ranges":[{"startOffset":5543,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"showTablesQuery","ranges":[{"startOffset":5915,"endOffset":6033,"count":0}],"isBlockCoverage":false},{"functionName":"updateQuery","ranges":[{"startOffset":6036,"endOffset":7656,"count":0}],"isBlockCoverage":false},{"functionName":"truncateTableQuery","ranges":[{"startOffset":7659,"endOffset":7995,"count":0}],"isBlockCoverage":false},{"functionName":"deleteQuery","ranges":[{"startOffset":7998,"endOffset":8483,"count":0}],"isBlockCoverage":false},{"functionName":"attributesToSQL","ranges":[{"startOffset":8486,"endOffset":10056,"count":6},{"startOffset":8574,"endOffset":10033,"count":48},{"startOffset":8656,"endOffset":8663,"count":0},{"startOffset":8815,"endOffset":8837,"count":46},{"startOffset":8839,"endOffset":8880,"count":40},{"startOffset":8945,"endOffset":9033,"count":0},{"startOffset":9072,"endOffset":9111,"count":2},{"startOffset":9145,"endOffset":9278,"count":6},{"startOffset":9312,"endOffset":9933,"count":4},{"startOffset":9548,"endOffset":9623,"count":0},{"startOffset":9974,"endOffset":10027,"count":0}],"isBlockCoverage":true},{"functionName":"showIndexesQuery","ranges":[{"startOffset":10059,"endOffset":10155,"count":6}],"isBlockCoverage":true},{"functionName":"showConstraintsQuery","ranges":[{"startOffset":10158,"endOffset":10394,"count":0}],"isBlockCoverage":false},{"functionName":"removeIndexQuery","ranges":[{"startOffset":10397,"endOffset":10700,"count":0}],"isBlockCoverage":false},{"functionName":"describeTableQuery","ranges":[{"startOffset":10703,"endOffset":10946,"count":0}],"isBlockCoverage":false},{"functionName":"describeCreateTableQuery","ranges":[{"startOffset":10949,"endOffset":11065,"count":0}],"isBlockCoverage":false},{"functionName":"removeColumnQuery","ranges":[{"startOffset":11068,"endOffset":11999,"count":0}],"isBlockCoverage":false},{"functionName":"_alterConstraintQuery","ranges":[{"startOffset":12002,"endOffset":13001,"count":0}],"isBlockCoverage":false},{"functionName":"renameColumnQuery","ranges":[{"startOffset":13004,"endOffset":14197,"count":0}],"isBlockCoverage":false},{"functionName":"startTransactionQuery","ranges":[{"startOffset":14200,"endOffset":14406,"count":0}],"isBlockCoverage":false},{"functionName":"setIsolationLevelQuery","ranges":[{"startOffset":14409,"endOffset":15043,"count":0}],"isBlockCoverage":false},{"functionName":"replaceBooleanDefaults","ranges":[{"startOffset":15046,"endOffset":15180,"count":6}],"isBlockCoverage":true},{"functionName":"getForeignKeysQuery","ranges":[{"startOffset":15183,"endOffset":15304,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifier","ranges":[{"startOffset":15307,"endOffset":15415,"count":461}],"isBlockCoverage":true}]},{"scriptId":"920","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mysql/query-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16528,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":38},{"startOffset":373,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":1},{"startOffset":534,"endOffset":545,"count":0},{"startOffset":551,"endOffset":623,"count":0},{"startOffset":696,"endOffset":784,"count":38}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"MySQLQueryGenerator","ranges":[{"startOffset":2012,"endOffset":2207,"count":1}],"isBlockCoverage":true},{"functionName":"createDatabaseQuery","ranges":[{"startOffset":2210,"endOffset":2640,"count":0}],"isBlockCoverage":false},{"functionName":"dropDatabaseQuery","ranges":[{"startOffset":2643,"endOffset":2757,"count":0}],"isBlockCoverage":false},{"functionName":"createSchema","ranges":[{"startOffset":2760,"endOffset":2806,"count":0}],"isBlockCoverage":false},{"functionName":"showSchemasQuery","ranges":[{"startOffset":2809,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"versionQuery","ranges":[{"startOffset":2862,"endOffset":2926,"count":0}],"isBlockCoverage":false},{"functionName":"createTableQuery","ranges":[{"startOffset":2929,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"describeTableQuery","ranges":[{"startOffset":5580,"endOffset":5827,"count":0}],"isBlockCoverage":false},{"functionName":"showTablesQuery","ranges":[{"startOffset":5830,"endOffset":6191,"count":0}],"isBlockCoverage":false},{"functionName":"addColumnQuery","ranges":[{"startOffset":6194,"endOffset":6515,"count":0}],"isBlockCoverage":false},{"functionName":"removeColumnQuery","ranges":[{"startOffset":6518,"endOffset":6733,"count":0}],"isBlockCoverage":false},{"functionName":"changeColumnQuery","ranges":[{"startOffset":6736,"endOffset":7542,"count":0}],"isBlockCoverage":false},{"functionName":"renameColumnQuery","ranges":[{"startOffset":7545,"endOffset":7952,"count":0}],"isBlockCoverage":false},{"functionName":"handleSequelizeMethod","ranges":[{"startOffset":7955,"endOffset":9281,"count":0}],"isBlockCoverage":false},{"functionName":"_toJSONValue","ranges":[{"startOffset":9284,"endOffset":9455,"count":0}],"isBlockCoverage":false},{"functionName":"truncateTableQuery","ranges":[{"startOffset":9458,"endOffset":9546,"count":0}],"isBlockCoverage":false},{"functionName":"deleteQuery","ranges":[{"startOffset":9549,"endOffset":9920,"count":0}],"isBlockCoverage":false},{"functionName":"showIndexesQuery","ranges":[{"startOffset":9923,"endOffset":10132,"count":0}],"isBlockCoverage":false},{"functionName":"showConstraintsQuery","ranges":[{"startOffset":10135,"endOffset":10806,"count":0}],"isBlockCoverage":false},{"functionName":"removeIndexQuery","ranges":[{"startOffset":10809,"endOffset":11190,"count":0}],"isBlockCoverage":false},{"functionName":"attributeToSQL","ranges":[{"startOffset":11193,"endOffset":13109,"count":0}],"isBlockCoverage":false},{"functionName":"attributesToSQL","ranges":[{"startOffset":13112,"endOffset":13359,"count":0}],"isBlockCoverage":false},{"functionName":"_checkValidJsonStatement","ranges":[{"startOffset":13362,"endOffset":14759,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeysQuery","ranges":[{"startOffset":14762,"endOffset":15159,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeyQuery","ranges":[{"startOffset":15162,"endOffset":16023,"count":0}],"isBlockCoverage":false},{"functionName":"dropForeignKeyQuery","ranges":[{"startOffset":16026,"endOffset":16249,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifier","ranges":[{"startOffset":16252,"endOffset":16360,"count":0}],"isBlockCoverage":false},{"functionName":"wrapSingleQuote","ranges":[{"startOffset":16363,"endOffset":16445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"921","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":86102,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"QueryGenerator","ranges":[{"startOffset":1591,"endOffset":2028,"count":1},{"startOffset":1648,"endOffset":1720,"count":0},{"startOffset":1754,"endOffset":1825,"count":0}],"isBlockCoverage":true},{"functionName":"extractTableDetails","ranges":[{"startOffset":2031,"endOffset":2364,"count":0}],"isBlockCoverage":false},{"functionName":"addSchema","ranges":[{"startOffset":2367,"endOffset":2752,"count":177},{"startOffset":2439,"endOffset":2447,"count":0},{"startOffset":2448,"endOffset":2526,"count":0},{"startOffset":2557,"endOffset":2565,"count":0},{"startOffset":2590,"endOffset":2598,"count":0},{"startOffset":2669,"endOffset":2675,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2683,"endOffset":2741,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":2755,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"describeTableQuery","ranges":[{"startOffset":2846,"endOffset":3079,"count":0}],"isBlockCoverage":false},{"functionName":"dropTableQuery","ranges":[{"startOffset":3082,"endOffset":3179,"count":3}],"isBlockCoverage":true},{"functionName":"renameTableQuery","ranges":[{"startOffset":3182,"endOffset":3309,"count":0}],"isBlockCoverage":false},{"functionName":"insertQuery","ranges":[{"startOffset":3312,"endOffset":9879,"count":4},{"startOffset":3392,"endOffset":3397,"count":0},{"startOffset":3702,"endOffset":3721,"count":0},{"startOffset":4247,"endOffset":4335,"count":0},{"startOffset":4380,"endOffset":4400,"count":0},{"startOffset":4402,"endOffset":4718,"count":0},{"startOffset":4827,"endOffset":4867,"count":0},{"startOffset":4909,"endOffset":4929,"count":0},{"startOffset":4931,"endOffset":4971,"count":0},{"startOffset":5087,"endOffset":6215,"count":29},{"startOffset":5346,"endOffset":5362,"count":4},{"startOffset":5364,"endOffset":5643,"count":4},{"startOffset":5432,"endOffset":5479,"count":0},{"startOffset":5521,"endOffset":5570,"count":0},{"startOffset":5643,"endOffset":6201,"count":25},{"startOffset":5759,"endOffset":5816,"count":0},{"startOffset":5902,"endOffset":6038,"count":0},{"startOffset":6133,"endOffset":6142,"count":0},{"startOffset":6338,"endOffset":7516,"count":0},{"startOffset":7593,"endOffset":7642,"count":0},{"startOffset":7701,"endOffset":7753,"count":0},{"startOffset":8348,"endOffset":8368,"count":0},{"startOffset":8370,"endOffset":9231,"count":0},{"startOffset":9382,"endOffset":9394,"count":0},{"startOffset":9442,"endOffset":9554,"count":0},{"startOffset":9587,"endOffset":9641,"count":0},{"startOffset":9643,"endOffset":9755,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3970,"endOffset":4142,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6486,"endOffset":6522,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6582,"endOffset":6662,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6926,"endOffset":7005,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7117,"endOffset":7188,"count":0}],"isBlockCoverage":false},{"functionName":"bulkInsertQuery","ranges":[{"startOffset":9882,"endOffset":12566,"count":0}],"isBlockCoverage":false},{"functionName":"updateQuery","ranges":[{"startOffset":12569,"endOffset":15165,"count":0}],"isBlockCoverage":false},{"functionName":"arithmeticQuery","ranges":[{"startOffset":15168,"endOffset":16662,"count":0}],"isBlockCoverage":false},{"functionName":"addIndexQuery","ranges":[{"startOffset":16665,"endOffset":19687,"count":0}],"isBlockCoverage":false},{"functionName":"addConstraintQuery","ranges":[{"startOffset":19690,"endOffset":20056,"count":0}],"isBlockCoverage":false},{"functionName":"getConstraintSnippet","ranges":[{"startOffset":20059,"endOffset":23470,"count":0}],"isBlockCoverage":false},{"functionName":"removeConstraintQuery","ranges":[{"startOffset":23473,"endOffset":23836,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":23839,"endOffset":28466,"count":0}],"isBlockCoverage":false},{"functionName":"_initQuoteIdentifier","ranges":[{"startOffset":28469,"endOffset":28723,"count":1}],"isBlockCoverage":true},{"functionName":"quoteIdentifier","ranges":[{"startOffset":28571,"endOffset":28718,"count":461},{"startOffset":28639,"endOffset":28657,"count":0}],"isBlockCoverage":true},{"functionName":"quoteIdentifier","ranges":[{"startOffset":28726,"endOffset":28855,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifiers","ranges":[{"startOffset":28858,"endOffset":29234,"count":0}],"isBlockCoverage":false},{"functionName":"quoteAttribute","ranges":[{"startOffset":29237,"endOffset":29425,"count":60},{"startOffset":29376,"endOffset":29424,"count":0}],"isBlockCoverage":true},{"functionName":"quoteTable","ranges":[{"startOffset":29428,"endOffset":30141,"count":61},{"startOffset":29499,"endOffset":29553,"count":0},{"startOffset":29581,"endOffset":29987,"count":0},{"startOffset":30059,"endOffset":30119,"count":7}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":30144,"endOffset":30908,"count":17},{"startOffset":30228,"endOffset":30247,"count":13},{"startOffset":30249,"endOffset":30831,"count":13},{"startOffset":30301,"endOffset":30360,"count":0},{"startOffset":30377,"endOffset":30390,"count":12},{"startOffset":30392,"endOffset":30825,"count":12},{"startOffset":30768,"endOffset":30807,"count":0}],"isBlockCoverage":true},{"functionName":"simpleEscape","ranges":[{"startOffset":30507,"endOffset":30580,"count":0}],"isBlockCoverage":false},{"functionName":"bindParam","ranges":[{"startOffset":30911,"endOffset":31019,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30940,"endOffset":31014,"count":25}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":31022,"endOffset":31619,"count":25},{"startOffset":31087,"endOffset":31092,"count":0},{"startOffset":31190,"endOffset":31296,"count":0},{"startOffset":31586,"endOffset":31618,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":31622,"endOffset":32257,"count":37},{"startOffset":31684,"endOffset":31706,"count":0},{"startOffset":31707,"endOffset":31715,"count":0},{"startOffset":31717,"endOffset":32253,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierQuoted","ranges":[{"startOffset":32260,"endOffset":32372,"count":0}],"isBlockCoverage":false},{"functionName":"jsonPathExtractionQuery","ranges":[{"startOffset":32375,"endOffset":33431,"count":0}],"isBlockCoverage":false},{"functionName":"selectQuery","ranges":[{"startOffset":33434,"endOffset":43282,"count":12},{"startOffset":33497,"endOffset":33502,"count":0},{"startOffset":33647,"endOffset":33685,"count":5},{"startOffset":33655,"endOffset":33685,"count":0},{"startOffset":33686,"endOffset":33704,"count":7},{"startOffset":34124,"endOffset":34150,"count":0},{"startOffset":34152,"endOffset":34310,"count":0},{"startOffset":34336,"endOffset":34403,"count":0},{"startOffset":34629,"endOffset":34759,"count":0},{"startOffset":34778,"endOffset":34796,"count":0},{"startOffset":34798,"endOffset":35140,"count":0},{"startOffset":35264,"endOffset":35316,"count":0},{"startOffset":35360,"endOffset":35483,"count":0},{"startOffset":35509,"endOffset":36227,"count":7},{"startOffset":35588,"endOffset":35619,"count":0},{"startOffset":36101,"endOffset":36213,"count":0},{"startOffset":36246,"endOffset":36443,"count":0},{"startOffset":36483,"endOffset":39855,"count":0},{"startOffset":40233,"endOffset":40245,"count":0},{"startOffset":40313,"endOffset":40381,"count":0},{"startOffset":40769,"endOffset":41183,"count":0},{"startOffset":41249,"endOffset":41560,"count":0},{"startOffset":41584,"endOffset":41912,"count":0},{"startOffset":42005,"endOffset":42029,"count":0},{"startOffset":42031,"endOffset":42164,"count":0},{"startOffset":42183,"endOffset":42456,"count":0},{"startOffset":42530,"endOffset":42560,"count":0},{"startOffset":42562,"endOffset":43254,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34645,"endOffset":34747,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34901,"endOffset":34970,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37935,"endOffset":38404,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39316,"endOffset":39756,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40480,"endOffset":40719,"count":36},{"startOffset":40542,"endOffset":40707,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40842,"endOffset":40900,"count":0}],"isBlockCoverage":false},{"functionName":"aliasGrouping","ranges":[{"startOffset":43285,"endOffset":43481,"count":0}],"isBlockCoverage":false},{"functionName":"escapeAttributes","ranges":[{"startOffset":43484,"endOffset":44876,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43577,"endOffset":44870,"count":60},{"startOffset":43665,"endOffset":43723,"count":0},{"startOffset":43755,"endOffset":44546,"count":0},{"startOffset":44667,"endOffset":44686,"count":0},{"startOffset":44734,"endOffset":44781,"count":35},{"startOffset":44758,"endOffset":44780,"count":0},{"startOffset":44782,"endOffset":44793,"count":35},{"startOffset":44795,"endOffset":44845,"count":35}],"isBlockCoverage":true},{"functionName":"generateInclude","ranges":[{"startOffset":44879,"endOffset":50605,"count":7},{"startOffset":45452,"endOffset":45612,"count":0},{"startOffset":47618,"endOffset":47642,"count":0},{"startOffset":47644,"endOffset":47753,"count":0},{"startOffset":47807,"endOffset":47856,"count":69},{"startOffset":47896,"endOffset":48009,"count":0},{"startOffset":48199,"endOffset":48281,"count":0},{"startOffset":48332,"endOffset":48426,"count":0},{"startOffset":48452,"endOffset":49397,"count":0},{"startOffset":49423,"endOffset":49447,"count":0},{"startOffset":49449,"endOffset":49953,"count":0},{"startOffset":49988,"endOffset":50019,"count":0},{"startOffset":50021,"endOffset":50165,"count":0},{"startOffset":50317,"endOffset":50394,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45836,"endOffset":47588,"count":69},{"startOffset":45937,"endOffset":45957,"count":0},{"startOffset":45959,"endOffset":46347,"count":0},{"startOffset":46391,"endOffset":46429,"count":0},{"startOffset":46498,"endOffset":46737,"count":0},{"startOffset":46789,"endOffset":46825,"count":0},{"startOffset":46857,"endOffset":46968,"count":0},{"startOffset":47007,"endOffset":47133,"count":0},{"startOffset":47346,"endOffset":47450,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46188,"endOffset":46281,"count":0}],"isBlockCoverage":false},{"functionName":"_getMinifiedAlias","ranges":[{"startOffset":50608,"endOffset":51065,"count":0}],"isBlockCoverage":false},{"functionName":"_getAliasForField","ranges":[{"startOffset":51068,"endOffset":51310,"count":0}],"isBlockCoverage":false},{"functionName":"generateJoin","ranges":[{"startOffset":51313,"endOffset":54703,"count":7},{"startOffset":51688,"endOffset":51712,"count":0},{"startOffset":51746,"endOffset":51773,"count":0},{"startOffset":51830,"endOffset":51859,"count":0},{"startOffset":51912,"endOffset":51939,"count":0},{"startOffset":52098,"endOffset":52184,"count":0},{"startOffset":52276,"endOffset":52293,"count":0},{"startOffset":52337,"endOffset":52461,"count":0},{"startOffset":52525,"endOffset":52575,"count":0},{"startOffset":52735,"endOffset":52749,"count":0},{"startOffset":52775,"endOffset":52801,"count":0},{"startOffset":52802,"endOffset":52822,"count":0},{"startOffset":52824,"endOffset":53542,"count":0},{"startOffset":53652,"endOffset":53819,"count":0},{"startOffset":53843,"endOffset":54181,"count":0},{"startOffset":54217,"endOffset":54239,"count":0},{"startOffset":54241,"endOffset":54379,"count":0},{"startOffset":54422,"endOffset":54436,"count":0},{"startOffset":54453,"endOffset":54492,"count":0},{"startOffset":54493,"endOffset":54513,"count":0}],"isBlockCoverage":true},{"functionName":"generateReturnValues","ranges":[{"startOffset":54706,"endOffset":56086,"count":0}],"isBlockCoverage":false},{"functionName":"generateThroughJoin","ranges":[{"startOffset":56089,"endOffset":59938,"count":0}],"isBlockCoverage":false},{"functionName":"_generateSubQueryFilter","ranges":[{"startOffset":59941,"endOffset":63210,"count":7},{"startOffset":60032,"endOffset":60058,"count":0},{"startOffset":60081,"endOffset":60869,"count":0},{"startOffset":60871,"endOffset":63209,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequiredClosure","ranges":[{"startOffset":63213,"endOffset":63514,"count":0}],"isBlockCoverage":false},{"functionName":"getQueryOrders","ranges":[{"startOffset":63517,"endOffset":65057,"count":0}],"isBlockCoverage":false},{"functionName":"_throwOnEmptyAttributes","ranges":[{"startOffset":65060,"endOffset":65483,"count":24},{"startOffset":65158,"endOffset":65214,"count":0},{"startOffset":65215,"endOffset":65220,"count":0},{"startOffset":65263,"endOffset":65302,"count":0},{"startOffset":65303,"endOffset":65308,"count":0}],"isBlockCoverage":true},{"functionName":"selectFromTableFragment","ranges":[{"startOffset":65486,"endOffset":66134,"count":24},{"startOffset":65825,"endOffset":65861,"count":0},{"startOffset":65863,"endOffset":66109,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66023,"endOffset":66070,"count":0}],"isBlockCoverage":false},{"functionName":"addLimitAndOffset","ranges":[{"startOffset":66137,"endOffset":66607,"count":12},{"startOffset":66220,"endOffset":66244,"count":0},{"startOffset":66246,"endOffset":66326,"count":0},{"startOffset":66359,"endOffset":66582,"count":0}],"isBlockCoverage":true},{"functionName":"handleSequelizeMethod","ranges":[{"startOffset":66610,"endOffset":69692,"count":0}],"isBlockCoverage":false},{"functionName":"whereQuery","ranges":[{"startOffset":69695,"endOffset":69868,"count":0}],"isBlockCoverage":false},{"functionName":"whereItemsQuery","ranges":[{"startOffset":69871,"endOffset":70627,"count":12},{"startOffset":69995,"endOffset":70019,"count":0},{"startOffset":70055,"endOffset":70141,"count":0},{"startOffset":70455,"endOffset":70531,"count":0},{"startOffset":70617,"endOffset":70622,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":70332,"endOffset":70447,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":70572,"endOffset":70601,"count":12}],"isBlockCoverage":true},{"functionName":"whereItemQuery","ranges":[{"startOffset":70630,"endOffset":74587,"count":12},{"startOffset":70699,"endOffset":70787,"count":0},{"startOffset":70841,"endOffset":70857,"count":0},{"startOffset":70859,"endOffset":71291,"count":0},{"startOffset":71383,"endOffset":71398,"count":0},{"startOffset":71605,"endOffset":71655,"count":0},{"startOffset":71692,"endOffset":71722,"count":0},{"startOffset":71748,"endOffset":71965,"count":0},{"startOffset":71990,"endOffset":72165,"count":0},{"startOffset":72182,"endOffset":72404,"count":0},{"startOffset":72452,"endOffset":72501,"count":0},{"startOffset":72503,"endOffset":72558,"count":0},{"startOffset":72582,"endOffset":72592,"count":0},{"startOffset":72594,"endOffset":72792,"count":0},{"startOffset":72852,"endOffset":72915,"count":0},{"startOffset":72938,"endOffset":73028,"count":0},{"startOffset":73052,"endOffset":73144,"count":0},{"startOffset":73161,"endOffset":73200,"count":0},{"startOffset":73202,"endOffset":73424,"count":0},{"startOffset":73447,"endOffset":73485,"count":0},{"startOffset":73486,"endOffset":73511,"count":0},{"startOffset":73513,"endOffset":73571,"count":0},{"startOffset":73594,"endOffset":73617,"count":0},{"startOffset":73619,"endOffset":73703,"count":0},{"startOffset":73721,"endOffset":73811,"count":0},{"startOffset":73835,"endOffset":74101,"count":0},{"startOffset":74134,"endOffset":74374,"count":0},{"startOffset":74413,"endOffset":74468,"count":0}],"isBlockCoverage":true},{"functionName":"_findField","ranges":[{"startOffset":74590,"endOffset":74993,"count":12},{"startOffset":74640,"endOffset":74675,"count":0},{"startOffset":74820,"endOffset":74881,"count":0},{"startOffset":74882,"endOffset":74925,"count":0},{"startOffset":74927,"endOffset":74989,"count":0}],"isBlockCoverage":true},{"functionName":"_whereGroupBind","ranges":[{"startOffset":74996,"endOffset":75860,"count":0}],"isBlockCoverage":false},{"functionName":"_whereBind","ranges":[{"startOffset":75863,"endOffset":76328,"count":0}],"isBlockCoverage":false},{"functionName":"_whereJSON","ranges":[{"startOffset":76331,"endOffset":77130,"count":0}],"isBlockCoverage":false},{"functionName":"_traverseJSON","ranges":[{"startOffset":77133,"endOffset":78241,"count":0}],"isBlockCoverage":false},{"functionName":"_toJSONValue","ranges":[{"startOffset":78244,"endOffset":78287,"count":0}],"isBlockCoverage":false},{"functionName":"_castKey","ranges":[{"startOffset":78290,"endOffset":78576,"count":0}],"isBlockCoverage":false},{"functionName":"_getJsonCast","ranges":[{"startOffset":78579,"endOffset":78827,"count":0}],"isBlockCoverage":false},{"functionName":"_joinKeyValue","ranges":[{"startOffset":78830,"endOffset":79116,"count":12},{"startOffset":78892,"endOffset":78919,"count":0},{"startOffset":78951,"endOffset":79022,"count":0}],"isBlockCoverage":true},{"functionName":"_getSafeKey","ranges":[{"startOffset":79119,"endOffset":79690,"count":12},{"startOffset":79192,"endOffset":79315,"count":0},{"startOffset":79348,"endOffset":79623,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":79557,"endOffset":79605,"count":0}],"isBlockCoverage":false},{"functionName":"_prefixKey","ranges":[{"startOffset":79693,"endOffset":79938,"count":12},{"startOffset":79780,"endOffset":79857,"count":0},{"startOffset":79918,"endOffset":79937,"count":0}],"isBlockCoverage":true},{"functionName":"_whereParseSingleValueObject","ranges":[{"startOffset":79941,"endOffset":83630,"count":0}],"isBlockCoverage":false},{"functionName":"getWhereConditions","ranges":[{"startOffset":83633,"endOffset":85476,"count":12},{"startOffset":83754,"endOffset":83873,"count":0},{"startOffset":83896,"endOffset":83901,"count":0},{"startOffset":84016,"endOffset":84108,"count":0},{"startOffset":84288,"endOffset":85475,"count":0}],"isBlockCoverage":true},{"functionName":"parseConditionObject","ranges":[{"startOffset":85479,"endOffset":85812,"count":0}],"isBlockCoverage":false},{"functionName":"booleanValue","ranges":[{"startOffset":85815,"endOffset":85858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"922","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query-generator/operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2645,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"setOperatorsAliases","ranges":[{"startOffset":1831,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceAliases","ranges":[{"startOffset":2028,"endOffset":2569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"923","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query-generator/transaction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":980,"count":1}],"isBlockCoverage":true},{"functionName":"setIsolationLevelQuery","ranges":[{"startOffset":80,"endOffset":226,"count":0}],"isBlockCoverage":false},{"functionName":"generateTransactionId","ranges":[{"startOffset":230,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"startTransactionQuery","ranges":[{"startOffset":284,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"deferConstraintsQuery","ranges":[{"startOffset":472,"endOffset":501,"count":0}],"isBlockCoverage":false},{"functionName":"setConstraintQuery","ranges":[{"startOffset":505,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"setDeferredQuery","ranges":[{"startOffset":535,"endOffset":559,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediateQuery","ranges":[{"startOffset":563,"endOffset":588,"count":0}],"isBlockCoverage":false},{"functionName":"commitTransactionQuery","ranges":[{"startOffset":592,"endOffset":705,"count":0}],"isBlockCoverage":false},{"functionName":"rollbackTransactionQuery","ranges":[{"startOffset":709,"endOffset":899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"924","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/query-interface.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8589,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"removeColumn","ranges":[{"startOffset":1161,"endOffset":1614,"count":0}],"isBlockCoverage":false},{"functionName":"changeColumn","ranges":[{"startOffset":1617,"endOffset":2141,"count":0}],"isBlockCoverage":false},{"functionName":"renameColumn","ranges":[{"startOffset":2144,"endOffset":2740,"count":0}],"isBlockCoverage":false},{"functionName":"removeConstraint","ranges":[{"startOffset":2743,"endOffset":4562,"count":0}],"isBlockCoverage":false},{"functionName":"addConstraint","ranges":[{"startOffset":4565,"endOffset":5722,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeyReferencesForTable","ranges":[{"startOffset":5725,"endOffset":6215,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllTables","ranges":[{"startOffset":6218,"endOffset":6573,"count":0}],"isBlockCoverage":false},{"functionName":"describeTable","ranges":[{"startOffset":6576,"endOffset":8489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"925","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sqlite3/lib/sqlite3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6309,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeMethod","ranges":[{"startOffset":163,"endOffset":671,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":206,"endOffset":668,"count":56},{"startOffset":362,"endOffset":556,"count":54}],"isBlockCoverage":true},{"functionName":"errBack","ranges":[{"startOffset":436,"endOffset":545,"count":54},{"startOffset":477,"endOffset":531,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":673,"endOffset":797,"count":3},{"startOffset":753,"endOffset":795,"count":54}],"isBlockCoverage":true},{"functionName":"Database","ranges":[{"startOffset":832,"endOffset":1602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1928,"endOffset":2055,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2154,"endOffset":2257,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2356,"endOffset":2459,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2558,"endOffset":2661,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2774,"endOffset":2878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2923,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"Database.backup","ranges":[{"startOffset":3178,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"Statement.map","ranges":[{"startOffset":3878,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"Database.addListener.Database.on","ranges":[{"startOffset":4863,"endOffset":5058,"count":0}],"isBlockCoverage":false},{"functionName":"Database.removeListener","ranges":[{"startOffset":5097,"endOffset":5319,"count":0}],"isBlockCoverage":false},{"functionName":"Database.removeAllListeners","ranges":[{"startOffset":5362,"endOffset":5565,"count":0}],"isBlockCoverage":false},{"functionName":"sqlite3.verbose","ranges":[{"startOffset":5630,"endOffset":6307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"926","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sqlite3/lib/sqlite3-binding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":225,"count":1}],"isBlockCoverage":true}]},{"scriptId":"927","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/node-pre-gyp/lib/node-pre-gyp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4703,"count":1}],"isBlockCoverage":true},{"functionName":"Run","ranges":[{"startOffset":750,"endOffset":1026,"count":0}],"isBlockCoverage":false},{"functionName":"parseOpts","ranges":[{"startOffset":1916,"endOffset":4037,"count":0}],"isBlockCoverage":false},{"functionName":"usage","ranges":[{"startOffset":4115,"endOffset":4532,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4621,"endOffset":4675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"928","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/node-pre-gyp/node_modules/nopt/lib/nopt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12226,"count":1},{"startOffset":98,"endOffset":155,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":100,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":160,"endOffset":174,"count":0}],"isBlockCoverage":false},{"functionName":"nopt","ranges":[{"startOffset":819,"endOffset":1486,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1488,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":4030,"endOffset":4096,"count":0}],"isBlockCoverage":false},{"functionName":"validatePath","ranges":[{"startOffset":4098,"endOffset":4506,"count":0}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4508,"endOffset":4654,"count":0}],"isBlockCoverage":false},{"functionName":"validateDate","ranges":[{"startOffset":4656,"endOffset":4822,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":4824,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"validateUrl","ranges":[{"startOffset":5110,"endOffset":5231,"count":0}],"isBlockCoverage":false},{"functionName":"validateStream","ranges":[{"startOffset":5233,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5338,"endOffset":6790,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":6792,"endOffset":10523,"count":0}],"isBlockCoverage":false},{"functionName":"resolveShort","ranges":[{"startOffset":10525,"endOffset":12225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"929","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/abbrev/abbrev.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1763,"count":1}],"isBlockCoverage":true},{"functionName":"monkeyPatch","ranges":[{"startOffset":85,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"abbrev","ranges":[{"startOffset":457,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"lexSort","ranges":[{"startOffset":1697,"endOffset":1762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"930","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/osenv/osenv.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1864,"count":1}],"isBlockCoverage":true},{"functionName":"memo","ranges":[{"startOffset":387,"endOffset":978,"count":8}],"isBlockCoverage":true},{"functionName":"exports.<computed>","ranges":[{"startOffset":485,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":993,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1160,"endOffset":1233,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1253,"endOffset":1337,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1367,"endOffset":1402,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1418,"endOffset":1454,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1470,"endOffset":1602,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1620,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1758,"endOffset":1862,"count":0}],"isBlockCoverage":false}]},{"scriptId":"931","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25520,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1911,"endOffset":1942,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":3316,"endOffset":5024,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5028,"endOffset":5529,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5533,"endOffset":5956,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6502,"endOffset":6754,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":6792,"endOffset":7172,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6814,"endOffset":7168,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":7910,"endOffset":13209,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":13340,"endOffset":17874,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":17878,"endOffset":18108,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":18665,"endOffset":19880,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":20650,"endOffset":22181,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":22187,"endOffset":22647,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":23163,"endOffset":23628,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":24125,"endOffset":24516,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":24522,"endOffset":24714,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":24720,"endOffset":24999,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":25005,"endOffset":25376,"count":0}],"isBlockCoverage":false}]},{"scriptId":"932","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32650,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2470,"endOffset":2531,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2540,"endOffset":2596,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2663,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2741,"endOffset":2887,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2920,"endOffset":4520,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4529,"endOffset":5291,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5300,"endOffset":5773,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5843,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5913,"endOffset":5969,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6039,"endOffset":6163,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6172,"endOffset":6337,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6350,"endOffset":6780,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6784,"endOffset":8214,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":8342,"endOffset":8835,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":8841,"endOffset":8954,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8960,"endOffset":9196,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9200,"endOffset":9316,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9353,"endOffset":13144,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":13151,"endOffset":13214,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":13220,"endOffset":13272,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":13308,"endOffset":13998,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":14034,"endOffset":14090,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":14128,"endOffset":14186,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14231,"endOffset":14290,"count":0}],"isBlockCoverage":false},{"functionName":"Control","ranges":[{"startOffset":14297,"endOffset":14402,"count":0}],"isBlockCoverage":false},{"functionName":"refCounted","ranges":[{"startOffset":14722,"endOffset":14834,"count":0}],"isBlockCoverage":false},{"functionName":"unrefCounted","ranges":[{"startOffset":14840,"endOffset":14983,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14989,"endOffset":15063,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":15069,"endOffset":15147,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":15153,"endOffset":15226,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15383,"endOffset":27866,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":27904,"endOffset":28221,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":28259,"endOffset":31280,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":31286,"endOffset":31610,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":31616,"endOffset":31823,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":31827,"endOffset":32515,"count":0}],"isBlockCoverage":false}]},{"scriptId":"933","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28325,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2801,"endOffset":2901,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3017,"endOffset":4361,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4477,"endOffset":4557,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4563,"endOffset":5013,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5017,"endOffset":5454,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5458,"endOffset":5760,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":5831,"endOffset":6259,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6287,"endOffset":9867,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9899,"endOffset":10722,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":10729,"endOffset":11088,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11094,"endOffset":11762,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":11798,"endOffset":12115,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12224,"endOffset":12677,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":12684,"endOffset":13467,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13473,"endOffset":13871,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":13877,"endOffset":14315,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14321,"endOffset":14462,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14468,"endOffset":14595,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":14601,"endOffset":14806,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15394,"endOffset":18445,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18450,"endOffset":19632,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19636,"endOffset":19821,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":19850,"endOffset":20440,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":20447,"endOffset":20503,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":20536,"endOffset":20736,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":20774,"endOffset":21097,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":21136,"endOffset":21289,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21322,"endOffset":21505,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":21547,"endOffset":21748,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":21795,"endOffset":22002,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":22050,"endOffset":22320,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":22358,"endOffset":22745,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":22786,"endOffset":23176,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":23228,"endOffset":23850,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":23905,"endOffset":24533,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":24540,"endOffset":24708,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":24714,"endOffset":24886,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":24892,"endOffset":25153,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":25182,"endOffset":25296,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":25328,"endOffset":25444,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":25488,"endOffset":25547,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":25591,"endOffset":25650,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":25694,"endOffset":25753,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":25797,"endOffset":25856,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25962,"endOffset":26018,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26092,"endOffset":26150,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26288,"endOffset":26347,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26424,"endOffset":26485,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26626,"endOffset":26685,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26762,"endOffset":26823,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26960,"endOffset":27015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27088,"endOffset":27145,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27282,"endOffset":27341,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27418,"endOffset":27479,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27589,"endOffset":27626,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27738,"endOffset":27777,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28049,"endOffset":28085,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28090,"endOffset":28131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"934","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1941,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":499,"endOffset":602,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":608,"endOffset":705,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":709,"endOffset":1382,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1388,"endOffset":1857,"count":0}],"isBlockCoverage":false}]},{"scriptId":"935","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2813,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":243,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":395,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1077,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1238,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1601,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2499,"endOffset":2749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"936","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/os-tmpdir/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":572,"count":1},{"startOffset":104,"endOffset":112,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":230,"endOffset":570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"937","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/os-homedir/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1},{"startOffset":597,"endOffset":606,"count":0}],"isBlockCoverage":true},{"functionName":"homedir","ranges":[{"startOffset":39,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"938","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/npmlog/log.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8615,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":390,"endOffset":497,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":506,"endOffset":541,"count":0}],"isBlockCoverage":false},{"functionName":"log.useColor","ranges":[{"startOffset":619,"endOffset":694,"count":1},{"startOffset":663,"endOffset":677,"count":0}],"isBlockCoverage":true},{"functionName":"log.enableColor","ranges":[{"startOffset":714,"endOffset":827,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableColor","ranges":[{"startOffset":847,"endOffset":961,"count":0}],"isBlockCoverage":false},{"functionName":"log.enableUnicode","ranges":[{"startOffset":1584,"endOffset":1702,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableUnicode","ranges":[{"startOffset":1725,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"log.setGaugeThemeset","ranges":[{"startOffset":1869,"endOffset":1923,"count":0}],"isBlockCoverage":false},{"functionName":"log.setGaugeTemplate","ranges":[{"startOffset":1948,"endOffset":2006,"count":0}],"isBlockCoverage":false},{"functionName":"log.enableProgress","ranges":[{"startOffset":2029,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"log.disableProgress","ranges":[{"startOffset":2228,"endOffset":2392,"count":1},{"startOffset":2277,"endOffset":2391,"count":0}],"isBlockCoverage":true},{"functionName":"mixinLog","ranges":[{"startOffset":2473,"endOffset":3256,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3342,"endOffset":3449,"count":3}],"isBlockCoverage":true},{"functionName":"log.<computed>","ranges":[{"startOffset":3368,"endOffset":3447,"count":0}],"isBlockCoverage":false},{"functionName":"log.clearProgress","ranges":[{"startOffset":3472,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3595,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"log.pause","ranges":[{"startOffset":4289,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"log.resume","ranges":[{"startOffset":4390,"endOffset":4606,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4689,"endOffset":5847,"count":0}],"isBlockCoverage":false},{"functionName":"log.emitLog","ranges":[{"startOffset":5873,"endOffset":6686,"count":0}],"isBlockCoverage":false},{"functionName":"log._format","ranges":[{"startOffset":6702,"endOffset":7336,"count":0}],"isBlockCoverage":false},{"functionName":"log.write","ranges":[{"startOffset":7350,"endOffset":7439,"count":0}],"isBlockCoverage":false},{"functionName":"log.addLevel","ranges":[{"startOffset":7456,"endOffset":7918,"count":9},{"startOffset":7571,"endOffset":7581,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7667,"endOffset":7877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8599,"endOffset":8613,"count":0}],"isBlockCoverage":false}]},{"scriptId":"939","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/are-we-there-yet/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"940","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/are-we-there-yet/tracker-group.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3231,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":213,"endOffset":440,"count":1}],"isBlockCoverage":true},{"functionName":"bubbleChange","ranges":[{"startOffset":483,"endOffset":763,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":531,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.nameInTree","ranges":[{"startOffset":801,"endOffset":954,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.addUnit","ranges":[{"startOffset":989,"endOffset":1646,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.completed","ranges":[{"startOffset":1683,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newGroup","ranges":[{"startOffset":2041,"endOffset":2122,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newItem","ranges":[{"startOffset":2157,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.newStream","ranges":[{"startOffset":2282,"endOffset":2376,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.finish","ranges":[{"startOffset":2410,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerGroup.debug","ranges":[{"startOffset":2810,"endOffset":3230,"count":0}],"isBlockCoverage":false}]},{"scriptId":"941","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/are-we-there-yet/tracker-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":144,"endOffset":232,"count":1}],"isBlockCoverage":true}]},{"scriptId":"942","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/are-we-there-yet/tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":826,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":119,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.completed","ranges":[{"startOffset":291,"endOffset":371,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.addWork","ranges":[{"startOffset":401,"endOffset":501,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.completeWork","ranges":[{"startOffset":536,"endOffset":703,"count":0}],"isBlockCoverage":false},{"functionName":"Tracker.finish","ranges":[{"startOffset":732,"endOffset":825,"count":0}],"isBlockCoverage":false}]},{"scriptId":"943","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/are-we-there-yet/tracker-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":963,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":192,"endOffset":403,"count":0}],"isBlockCoverage":false},{"functionName":"delegateChange","ranges":[{"startOffset":452,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerStream._transform","ranges":[{"startOffset":652,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"TrackerStream._flush","ranges":[{"startOffset":804,"endOffset":852,"count":0}],"isBlockCoverage":false}]},{"scriptId":"944","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":771,"count":1},{"startOffset":78,"endOffset":87,"count":0},{"startOffset":89,"endOffset":386,"count":0},{"startOffset":487,"endOffset":497,"count":0}],"isBlockCoverage":true}]},{"scriptId":"945","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/lib/_stream_readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31324,"count":1},{"startOffset":1785,"endOffset":1802,"count":0},{"startOffset":2266,"endOffset":2301,"count":0}],"isBlockCoverage":true},{"functionName":"EElistenerCount","ranges":[{"startOffset":1504,"endOffset":1573,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":1788,"endOffset":1802,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1804,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":1873,"endOffset":1967,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2284,"endOffset":2298,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2562,"endOffset":3342,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":3344,"endOffset":6224,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":6226,"endOffset":6664,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6730,"endOffset":6860,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6869,"endOffset":7144,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":7285,"endOffset":7337,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":7566,"endOffset":8039,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":8134,"endOffset":8213,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":8216,"endOffset":9484,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":9486,"endOffset":9918,"count":0}],"isBlockCoverage":false},{"functionName":"chunkInvalid","ranges":[{"startOffset":9920,"endOffset":10149,"count":0}],"isBlockCoverage":false},{"functionName":"needMoreData","ranges":[{"startOffset":10552,"endOffset":10691,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":10723,"endOffset":10786,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":10850,"endOffset":11057,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":11113,"endOffset":11427,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":11540,"endOffset":12137,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":12234,"endOffset":15706,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":15709,"endOffset":16072,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":16273,"endOffset":16569,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":16571,"endOffset":16674,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":17023,"endOffset":17175,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":17177,"endOffset":17544,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":17815,"endOffset":17894,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":17923,"endOffset":22050,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":22053,"endOffset":22353,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":22383,"endOffset":23573,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":23698,"endOffset":24317,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":24376,"endOffset":24464,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":24618,"endOffset":24783,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":24786,"endOffset":24932,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":24934,"endOffset":25199,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":25228,"endOffset":25457,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":25460,"endOffset":25607,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":25791,"endOffset":27279,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27513,"endOffset":27576,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":27876,"endOffset":28407,"count":0}],"isBlockCoverage":false},{"functionName":"fromListPartial","ranges":[{"startOffset":28591,"endOffset":29075,"count":0}],"isBlockCoverage":false},{"functionName":"copyFromBufferString","ranges":[{"startOffset":29273,"endOffset":29840,"count":0}],"isBlockCoverage":false},{"functionName":"copyFromBuffer","ranges":[{"startOffset":30030,"endOffset":30604,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":30606,"endOffset":30974,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":30976,"endOffset":31200,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":31202,"endOffset":31324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"946","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/process-nextick-args/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1083,"count":1},{"startOffset":162,"endOffset":203,"count":0},{"startOffset":205,"endOffset":251,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":289,"endOffset":1081,"count":0}],"isBlockCoverage":false}]},{"scriptId":"947","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/isarray/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132,"count":1},{"startOffset":60,"endOffset":130,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":63,"endOffset":130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"948","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/lib/internal/streams/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36,"count":1}],"isBlockCoverage":true}]},{"scriptId":"949","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1529,"count":1},{"startOffset":353,"endOffset":465,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":156,"endOffset":242,"count":1},{"startOffset":211,"endOffset":240,"count":11}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":467,"endOffset":569,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":655,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":861,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1222,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1385,"endOffset":1528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"950","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/core-util-is/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3039,"count":1}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":1284,"endOffset":1418,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":1447,"endOffset":1509,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":1542,"endOffset":1589,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":1616,"endOffset":1673,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":1722,"endOffset":1782,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":1813,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":1904,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":1995,"endOffset":2049,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":2086,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":2193,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":2300,"endOffset":2370,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":2397,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":2522,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":2621,"endOffset":2872,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":2964,"endOffset":3038,"count":0}],"isBlockCoverage":false}]},{"scriptId":"951","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/lib/internal/streams/BufferList.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2059,"count":1}],"isBlockCoverage":true},{"functionName":"_classCallCheck","ranges":[{"startOffset":15,"endOffset":168,"count":0}],"isBlockCoverage":false},{"functionName":"copyBuffer","ranges":[{"startOffset":243,"endOffset":315,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":334,"endOffset":1834,"count":1}],"isBlockCoverage":true},{"functionName":"BufferList","ranges":[{"startOffset":350,"endOffset":482,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":514,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":727,"endOffset":886,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":920,"endOffset":1131,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":1165,"endOffset":1242,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":1275,"endOffset":1452,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1487,"endOffset":1809,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.<computed>","ranges":[{"startOffset":1940,"endOffset":2056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"952","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/lib/internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1849,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":159,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1251,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":1721,"endOffset":1783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"953","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/lib/_stream_writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20317,"count":1},{"startOffset":1964,"endOffset":1978,"count":0},{"startOffset":2523,"endOffset":2540,"count":0},{"startOffset":7889,"endOffset":7978,"count":0}],"isBlockCoverage":true},{"functionName":"WriteReq","ranges":[{"startOffset":1436,"endOffset":1570,"count":0}],"isBlockCoverage":false},{"functionName":"CorkedRequest","ranges":[{"startOffset":1661,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":2526,"endOffset":2540,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":2542,"endOffset":2610,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":2611,"endOffset":2705,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2819,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2838,"endOffset":6782,"count":0}],"isBlockCoverage":false},{"functionName":"getBuffer","ranges":[{"startOffset":6820,"endOffset":6987,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6991,"endOffset":7286,"count":1},{"startOffset":7272,"endOffset":7284,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7110,"endOffset":7164,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7682,"endOffset":7881,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":7917,"endOffset":7975,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7980,"endOffset":9032,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9128,"endOffset":9205,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterEnd","ranges":[{"startOffset":9208,"endOffset":9410,"count":0}],"isBlockCoverage":false},{"functionName":"validChunk","ranges":[{"startOffset":9634,"endOffset":10065,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":10094,"endOffset":10750,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":10779,"endOffset":10848,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":10879,"endOffset":11115,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11158,"endOffset":11592,"count":0}],"isBlockCoverage":false},{"functionName":"decodeChunk","ranges":[{"startOffset":11595,"endOffset":11794,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12027,"endOffset":12090,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":12283,"endOffset":13256,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":13258,"endOffset":13543,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":13545,"endOffset":14244,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteStateUpdate","ranges":[{"startOffset":14246,"endOffset":14389,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":14391,"endOffset":15032,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":15034,"endOffset":15191,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteDrain","ranges":[{"startOffset":15384,"endOffset":15530,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":15595,"endOffset":17405,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":17435,"endOffset":17517,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":17581,"endOffset":18111,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":18114,"endOffset":18260,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":18261,"endOffset":18506,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":18507,"endOffset":18831,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":18833,"endOffset":19064,"count":0}],"isBlockCoverage":false},{"functionName":"endWritable","ranges":[{"startOffset":19066,"endOffset":19300,"count":0}],"isBlockCoverage":false},{"functionName":"onCorkedFinish","ranges":[{"startOffset":19302,"endOffset":19648,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19714,"endOffset":19844,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":19853,"endOffset":20128,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":20269,"endOffset":20316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"954","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/util-deprecate/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":123,"count":1}],"isBlockCoverage":true}]},{"scriptId":"955","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/lib/_stream_duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4015,"count":1},{"startOffset":1501,"endOffset":1600,"count":0},{"startOffset":2049,"endOffset":2170,"count":11},{"startOffset":2112,"endOffset":2166,"count":7}],"isBlockCoverage":true},{"functionName":"objectKeys","ranges":[{"startOffset":1504,"endOffset":1600,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2174,"endOffset":2602,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2833,"endOffset":2896,"count":0}],"isBlockCoverage":false},{"functionName":"onend","ranges":[{"startOffset":2931,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"onEndNT","ranges":[{"startOffset":3218,"endOffset":3258,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3322,"endOffset":3522,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3531,"endOffset":3899,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex._destroy","ranges":[{"startOffset":3933,"endOffset":4014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"956","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/lib/_stream_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7742,"count":1}],"isBlockCoverage":true},{"functionName":"afterTransform","ranges":[{"startOffset":3731,"endOffset":4256,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4258,"endOffset":5183,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5185,"endOffset":5391,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5420,"endOffset":5556,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6039,"endOffset":6127,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6159,"endOffset":6472,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":6644,"endOffset":7030,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7064,"endOffset":7216,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7219,"endOffset":7742,"count":0}],"isBlockCoverage":false}]},{"scriptId":"957","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/readable-stream/lib/_stream_passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1753,"count":1}],"isBlockCoverage":true},{"functionName":"PassThrough","ranges":[{"startOffset":1524,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1699,"endOffset":1752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"958","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/delegates/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2065,"count":1}],"isBlockCoverage":true},{"functionName":"Delegator","ranges":[{"startOffset":167,"endOffset":407,"count":2},{"startOffset":239,"endOffset":406,"count":1}],"isBlockCoverage":true},{"functionName":"Delegator.method","ranges":[{"startOffset":544,"endOffset":754,"count":3}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":658,"endOffset":735,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.access","ranges":[{"startOffset":895,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.getter","ranges":[{"startOffset":1092,"endOffset":1287,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.setter","ranges":[{"startOffset":1426,"endOffset":1630,"count":0}],"isBlockCoverage":false},{"functionName":"Delegator.fluent","ranges":[{"startOffset":1770,"endOffset":2063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"959","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6999,"count":1}],"isBlockCoverage":true},{"functionName":"callWith","ranges":[{"startOffset":366,"endOffset":456,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":409,"endOffset":454,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge","ranges":[{"startOffset":458,"endOffset":2340,"count":1},{"startOffset":577,"endOffset":582,"count":0},{"startOffset":586,"endOffset":738,"count":0},{"startOffset":1186,"endOffset":1206,"count":0},{"startOffset":1309,"endOffset":1333,"count":0},{"startOffset":1423,"endOffset":1447,"count":0},{"startOffset":1610,"endOffset":1811,"count":0},{"startOffset":2147,"endOffset":2171,"count":0},{"startOffset":2251,"endOffset":2263,"count":0},{"startOffset":2264,"endOffset":2282,"count":0},{"startOffset":2285,"endOffset":2308,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.isEnabled","ranges":[{"startOffset":2391,"endOffset":2431,"count":1}],"isBlockCoverage":true},{"functionName":"Gauge.setTemplate","ranges":[{"startOffset":2463,"endOffset":2565,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._computeTheme","ranges":[{"startOffset":2599,"endOffset":3110,"count":1},{"startOffset":2632,"endOffset":2642,"count":0},{"startOffset":2676,"endOffset":2722,"count":0},{"startOffset":2893,"endOffset":2911,"count":0},{"startOffset":2954,"endOffset":2964,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.setThemeset","ranges":[{"startOffset":3142,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.setTheme","ranges":[{"startOffset":3245,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._requestRedraw","ranges":[{"startOffset":3415,"endOffset":3503,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.getWidth","ranges":[{"startOffset":3532,"endOffset":3601,"count":1},{"startOffset":3589,"endOffset":3594,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.setWriteTo","ranges":[{"startOffset":3632,"endOffset":3980,"count":1},{"startOffset":3705,"endOffset":3719,"count":0},{"startOffset":3842,"endOffset":3875,"count":0},{"startOffset":3876,"endOffset":3892,"count":0},{"startOffset":3912,"endOffset":3949,"count":0},{"startOffset":3965,"endOffset":3978,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge.enable","ranges":[{"startOffset":4007,"endOffset":4148,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.disable","ranges":[{"startOffset":4176,"endOffset":4412,"count":1},{"startOffset":4218,"endOffset":4410,"count":0}],"isBlockCoverage":true},{"functionName":"Gauge._enableEvents","ranges":[{"startOffset":4446,"endOffset":4779,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._disableEvents","ranges":[{"startOffset":4814,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.hide","ranges":[{"startOffset":5026,"endOffset":5223,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.show","ranges":[{"startOffset":5248,"endOffset":5711,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge.pulse","ranges":[{"startOffset":5737,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._handleSizeChange","ranges":[{"startOffset":5950,"endOffset":6035,"count":0}],"isBlockCoverage":false},{"functionName":"Gauge._doRedraw","ranges":[{"startOffset":6065,"endOffset":6998,"count":0}],"isBlockCoverage":false}]},{"scriptId":"960","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/plumbing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1269,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":188,"endOffset":386,"count":1},{"startOffset":238,"endOffset":248,"count":0}],"isBlockCoverage":true},{"functionName":"Plumbing.setTheme","ranges":[{"startOffset":442,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.setTemplate","ranges":[{"startOffset":543,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.setWidth","ranges":[{"startOffset":653,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.hide","ranges":[{"startOffset":747,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"Plumbing.show","ranges":[{"startOffset":971,"endOffset":1268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"961","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/console-control-strings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"up","ranges":[{"startOffset":87,"endOffset":144,"count":0}],"isBlockCoverage":false},{"functionName":"down","ranges":[{"startOffset":161,"endOffset":220,"count":0}],"isBlockCoverage":false},{"functionName":"forward","ranges":[{"startOffset":240,"endOffset":302,"count":0}],"isBlockCoverage":false},{"functionName":"back","ranges":[{"startOffset":319,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"nextLine","ranges":[{"startOffset":399,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"previousLine","ranges":[{"startOffset":487,"endOffset":554,"count":0}],"isBlockCoverage":false},{"functionName":"horizontalAbsolute","ranges":[{"startOffset":585,"endOffset":740,"count":0}],"isBlockCoverage":false},{"functionName":"eraseData","ranges":[{"startOffset":762,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"eraseLine","ranges":[{"startOffset":831,"endOffset":878,"count":0}],"isBlockCoverage":false},{"functionName":"exports.goto","ranges":[{"startOffset":895,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"exports.gotoSOL","ranges":[{"startOffset":970,"endOffset":999,"count":0}],"isBlockCoverage":false},{"functionName":"exports.beep","ranges":[{"startOffset":1016,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"hideCursor","ranges":[{"startOffset":1070,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"showCursor","ranges":[{"startOffset":1144,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"color","ranges":[{"startOffset":1977,"endOffset":2191,"count":8}],"isBlockCoverage":true},{"functionName":"colorNameToCode","ranges":[{"startOffset":2193,"endOffset":2338,"count":8},{"startOffset":2277,"endOffset":2337,"count":0}],"isBlockCoverage":true}]},{"scriptId":"962","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/render-template.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5739,"count":1}],"isBlockCoverage":true},{"functionName":"renderValueWithValues","ranges":[{"startOffset":248,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":399,"endOffset":614,"count":0}],"isBlockCoverage":false},{"functionName":"preType","ranges":[{"startOffset":616,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"postType","ranges":[{"startOffset":748,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"hasPreOrPost","ranges":[{"startOffset":882,"endOffset":1004,"count":0}],"isBlockCoverage":false},{"functionName":"generatePreAndPost","ranges":[{"startOffset":1006,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"prepareItems","ranges":[{"startOffset":1624,"endOffset":4948,"count":0}],"isBlockCoverage":false},{"functionName":"renderFunction","ranges":[{"startOffset":4950,"endOffset":5178,"count":0}],"isBlockCoverage":false},{"functionName":"renderValue","ranges":[{"startOffset":5180,"endOffset":5738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"963","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/wide-align/align.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1428,"count":1}],"isBlockCoverage":true},{"functionName":"createPadding","ranges":[{"startOffset":185,"endOffset":408,"count":0}],"isBlockCoverage":false},{"functionName":"alignLeft","ranges":[{"startOffset":410,"endOffset":701,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":703,"endOffset":994,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":996,"endOffset":1427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"964","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/aproba/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3966,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":14,"endOffset":136,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":181,"endOffset":208,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":240,"endOffset":313,"count":3},{"startOffset":289,"endOffset":311,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":346,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":434,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":524,"endOffset":581,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":614,"endOffset":739,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":773,"endOffset":829,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":861,"endOffset":913,"count":1}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":944,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"addSchema","ranges":[{"startOffset":992,"endOffset":1149,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1183,"endOffset":2656,"count":1},{"startOffset":1243,"endOffset":1292,"count":0},{"startOffset":1312,"endOffset":1353,"count":0},{"startOffset":1367,"endOffset":1402,"count":0},{"startOffset":1437,"endOffset":1481,"count":0},{"startOffset":1510,"endOffset":1547,"count":0},{"startOffset":2111,"endOffset":2177,"count":0},{"startOffset":2221,"endOffset":2654,"count":3},{"startOffset":2418,"endOffset":2623,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1622,"endOffset":2056,"count":1},{"startOffset":1689,"endOffset":1776,"count":3},{"startOffset":1743,"endOffset":1770,"count":0},{"startOffset":1806,"endOffset":1836,"count":0},{"startOffset":1892,"endOffset":2052,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2261,"endOffset":2387,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2452,"endOffset":2518,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2527,"endOffset":2570,"count":0}],"isBlockCoverage":false},{"functionName":"missingRequiredArg","ranges":[{"startOffset":2658,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"unknownType","ranges":[{"startOffset":2777,"endOffset":2906,"count":0}],"isBlockCoverage":false},{"functionName":"invalidType","ranges":[{"startOffset":2908,"endOffset":3243,"count":0}],"isBlockCoverage":false},{"functionName":"englishList","ranges":[{"startOffset":3245,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"wrongNumberOfArgs","ranges":[{"startOffset":3335,"endOffset":3620,"count":0}],"isBlockCoverage":false},{"functionName":"moreThanOneError","ranges":[{"startOffset":3622,"endOffset":3806,"count":0}],"isBlockCoverage":false},{"functionName":"newException","ranges":[{"startOffset":3808,"endOffset":3965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"965","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/object-assign/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2108,"count":1},{"startOffset":1600,"endOffset":2106,"count":0}],"isBlockCoverage":true},{"functionName":"toObject","ranges":[{"startOffset":277,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseNative","ranges":[{"startOffset":452,"endOffset":1547,"count":1},{"startOffset":510,"endOffset":532,"count":0},{"startOffset":804,"endOffset":826,"count":0},{"startOffset":935,"endOffset":984,"count":10},{"startOffset":1119,"endOffset":1141,"count":0},{"startOffset":1400,"endOffset":1422,"count":0},{"startOffset":1442,"endOffset":1545,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1076,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262,"endOffset":1312,"count":20}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1602,"endOffset":2106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"966","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/wide-truncate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":828,"count":1}],"isBlockCoverage":true},{"functionName":"wideTruncate","ranges":[{"startOffset":125,"endOffset":827,"count":0}],"isBlockCoverage":false}]},{"scriptId":"967","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":741,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":281,"endOffset":739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"968","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":161,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":159,"count":0}],"isBlockCoverage":false}]},{"scriptId":"969","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":135,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":133,"count":1}],"isBlockCoverage":true}]},{"scriptId":"970","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/code-point-at/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":610,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":86,"endOffset":608,"count":0}],"isBlockCoverage":false}]},{"scriptId":"971","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1463,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":76,"endOffset":1462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"972","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/number-is-nan/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":82,"count":1},{"startOffset":44,"endOffset":80,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":47,"endOffset":80,"count":0}],"isBlockCoverage":false}]},{"scriptId":"973","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":616,"count":1}],"isBlockCoverage":true},{"functionName":"User","ranges":[{"startOffset":67,"endOffset":189,"count":0}],"isBlockCoverage":false},{"functionName":"MissingTemplateValue","ranges":[{"startOffset":222,"endOffset":456,"count":0}],"isBlockCoverage":false},{"functionName":"Internal","ranges":[{"startOffset":477,"endOffset":615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"974","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/template-item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1904,"count":1}],"isBlockCoverage":true},{"functionName":"isPercent","ranges":[{"startOffset":87,"endOffset":190,"count":0}],"isBlockCoverage":false},{"functionName":"percent","ranges":[{"startOffset":192,"endOffset":258,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem","ranges":[{"startOffset":260,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getBaseLength","ranges":[{"startOffset":1220,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getLength","ranges":[{"startOffset":1466,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getMaxLength","ranges":[{"startOffset":1638,"endOffset":1750,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateItem.getMinLength","ranges":[{"startOffset":1790,"endOffset":1902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"975","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/has-unicode/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":657,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":71,"endOffset":656,"count":1},{"startOffset":522,"endOffset":606,"count":0},{"startOffset":607,"endOffset":626,"count":0}],"isBlockCoverage":true}]},{"scriptId":"976","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/has-color.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":292,"count":1},{"startOffset":41,"endOffset":57,"count":0}],"isBlockCoverage":true},{"functionName":"isWin32","ranges":[{"startOffset":59,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"isColorTerm","ranges":[{"startOffset":122,"endOffset":291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"977","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5708,"count":1},{"startOffset":778,"endOffset":844,"count":0},{"startOffset":1059,"endOffset":1089,"count":0},{"startOffset":1144,"endOffset":1195,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":293,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":799,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1703,"endOffset":2301,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2318,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":2724,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3001,"endOffset":3890,"count":5}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":3042,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":3920,"endOffset":3956,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":3993,"endOffset":4602,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":4712,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":5171,"endOffset":5705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"978","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1},{"startOffset":910,"endOffset":1153,"count":0},{"startOffset":1189,"endOffset":1294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"979","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/themes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1513,"count":1}],"isBlockCoverage":true}]},{"scriptId":"980","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/theme-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3693,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":75,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.newTheme","ranges":[{"startOffset":232,"endOffset":368,"count":4},{"startOffset":273,"endOffset":325,"count":2}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.getThemeNames","ranges":[{"startOffset":400,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.addTheme","ranges":[{"startOffset":476,"endOffset":561,"count":4}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.addToAllThemes","ranges":[{"startOffset":594,"endOffset":770,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.getTheme","ranges":[{"startOffset":797,"endOffset":907,"count":3},{"startOffset":841,"endOffset":878,"count":0}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.setDefault","ranges":[{"startOffset":936,"endOffset":1290,"count":4},{"startOffset":980,"endOffset":1015,"count":0},{"startOffset":1055,"endOffset":1067,"count":2},{"startOffset":1068,"endOffset":1083,"count":2},{"startOffset":1186,"endOffset":1233,"count":2}],"isBlockCoverage":true},{"functionName":"ThemeSetProto.getDefault","ranges":[{"startOffset":1319,"endOffset":2542,"count":1},{"startOffset":1350,"endOffset":1359,"count":0},{"startOffset":1573,"endOffset":1647,"count":0},{"startOffset":1687,"endOffset":2353,"count":0},{"startOffset":2454,"endOffset":2540,"count":0}],"isBlockCoverage":true},{"functionName":"newMissingThemeError","ranges":[{"startOffset":2581,"endOffset":2815,"count":0}],"isBlockCoverage":false},{"functionName":"newMissingDefaultThemeError","ranges":[{"startOffset":2861,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"ThemeSetProto.newThemeSet","ranges":[{"startOffset":3392,"endOffset":3691,"count":1}],"isBlockCoverage":true},{"functionName":"themeset","ranges":[{"startOffset":3423,"endOffset":3481,"count":0}],"isBlockCoverage":false}]},{"scriptId":"981","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/base-theme.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":395,"count":1}],"isBlockCoverage":true},{"functionName":"activityIndicator","ranges":[{"startOffset":133,"endOffset":242,"count":0}],"isBlockCoverage":false},{"functionName":"progressbar","ranges":[{"startOffset":259,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"982","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/spin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":105,"count":1}],"isBlockCoverage":true},{"functionName":"spin","ranges":[{"startOffset":31,"endOffset":104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"983","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/progress-bar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":998,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":205,"endOffset":681,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":712,"endOffset":997,"count":0}],"isBlockCoverage":false}]},{"scriptId":"984","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/set-interval.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":93,"count":1}],"isBlockCoverage":true}]},{"scriptId":"985","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"986","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/gauge/set-immediate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":139,"count":1},{"startOffset":88,"endOffset":138,"count":0}],"isBlockCoverage":true}]},{"scriptId":"987","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/set-blocking/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":252,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":251,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82,"endOffset":248,"count":2}],"isBlockCoverage":true}]},{"scriptId":"988","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/node-pre-gyp/lib/util/napi.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7841,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":212,"endOffset":247,"count":3}],"isBlockCoverage":true},{"functionName":"module.exports.get_napi_version","ranges":[{"startOffset":486,"endOffset":954,"count":11},{"startOffset":753,"endOffset":935,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.get_napi_version_as_string","ranges":[{"startOffset":1001,"endOffset":1198,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.validate_package_json","ranges":[{"startOffset":1240,"endOffset":3352,"count":2},{"startOffset":2030,"endOffset":2209,"count":0},{"startOffset":2232,"endOffset":2249,"count":0},{"startOffset":2250,"endOffset":2268,"count":0},{"startOffset":2299,"endOffset":2482,"count":0},{"startOffset":2576,"endOffset":2625,"count":0},{"startOffset":2627,"endOffset":2936,"count":0},{"startOffset":2991,"endOffset":3038,"count":0},{"startOffset":3040,"endOffset":3349,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1714,"endOffset":1935,"count":2},{"startOffset":1836,"endOffset":1931,"count":0}],"isBlockCoverage":true},{"functionName":"pathOK","ranges":[{"startOffset":3355,"endOffset":3488,"count":6},{"startOffset":3441,"endOffset":3484,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.expand_commands","ranges":[{"startOffset":3523,"endOffset":4425,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_versions","ranges":[{"startOffset":4469,"endOffset":5593,"count":6},{"startOffset":4633,"endOffset":4646,"count":2},{"startOffset":4647,"endOffset":4658,"count":4},{"startOffset":5252,"endOffset":5293,"count":2},{"startOffset":5295,"endOffset":5521,"count":0},{"startOffset":5579,"endOffset":5590,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4840,"endOffset":5236,"count":6},{"startOffset":5073,"endOffset":5232,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5353,"endOffset":5450,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_versions_raw","ranges":[{"startOffset":5641,"endOffset":6041,"count":2},{"startOffset":6027,"endOffset":6038,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5828,"endOffset":5964,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.get_command_arg","ranges":[{"startOffset":6077,"endOffset":6162,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_napi_build_version_from_command_args","ranges":[{"startOffset":6223,"endOffset":6470,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.swap_build_dir_out","ranges":[{"startOffset":6509,"endOffset":6708,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.swap_build_dir_in","ranges":[{"startOffset":6746,"endOffset":6904,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_build_dir","ranges":[{"startOffset":6938,"endOffset":7017,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.get_best_napi_build_version","ranges":[{"startOffset":7065,"endOffset":7639,"count":3},{"startOffset":7308,"endOffset":7321,"count":1},{"startOffset":7322,"endOffset":7333,"count":2},{"startOffset":7599,"endOffset":7610,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7366,"endOffset":7555,"count":3}],"isBlockCoverage":true},{"functionName":"module.exports.build_napi_only","ranges":[{"startOffset":7675,"endOffset":7840,"count":0}],"isBlockCoverage":false}]},{"scriptId":"989","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/rimraf/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9225,"count":1},{"startOffset":185,"endOffset":230,"count":0}],"isBlockCoverage":true},{"functionName":"defaults","ranges":[{"startOffset":409,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1102,"endOffset":2929,"count":0}],"isBlockCoverage":false},{"functionName":"rimraf_","ranges":[{"startOffset":3485,"endOffset":4407,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":4409,"endOffset":4914,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":4916,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":5392,"endOffset":5966,"count":0}],"isBlockCoverage":false},{"functionName":"rmkids","ranges":[{"startOffset":5968,"endOffset":6491,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":6632,"endOffset":8002,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":8004,"endOffset":8400,"count":0}],"isBlockCoverage":false},{"functionName":"rmkidsSync","ranges":[{"startOffset":8402,"endOffset":9224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"990","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/node-pre-gyp/lib/pre-binding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1076,"count":1},{"startOffset":155,"endOffset":184,"count":0}],"isBlockCoverage":true},{"functionName":"exports.validate","ranges":[{"startOffset":342,"endOffset":424,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":442,"endOffset":1074,"count":1},{"startOffset":516,"endOffset":602,"count":0}],"isBlockCoverage":true}]},{"scriptId":"991","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/node-pre-gyp/lib/util/versioning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15445,"count":1},{"startOffset":401,"endOffset":473,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":597,"endOffset":720,"count":447},{"startOffset":676,"endOffset":718,"count":11}],"isBlockCoverage":true},{"functionName":"get_electron_abi","ranges":[{"startOffset":724,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"get_node_webkit_abi","ranges":[{"startOffset":1302,"endOffset":1685,"count":0}],"isBlockCoverage":false},{"functionName":"get_node_abi","ranges":[{"startOffset":1745,"endOffset":2520,"count":1},{"startOffset":1806,"endOffset":1881,"count":0},{"startOffset":1901,"endOffset":1988,"count":0},{"startOffset":2064,"endOffset":2084,"count":0},{"startOffset":2086,"endOffset":2211,"count":0},{"startOffset":2446,"endOffset":2511,"count":0}],"isBlockCoverage":true},{"functionName":"get_runtime_abi","ranges":[{"startOffset":2566,"endOffset":9387,"count":1},{"startOffset":2636,"endOffset":2714,"count":0},{"startOffset":2750,"endOffset":2853,"count":0},{"startOffset":2887,"endOffset":2981,"count":0},{"startOffset":3020,"endOffset":3098,"count":0},{"startOffset":3198,"endOffset":9379,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3498,"endOffset":3524,"count":0}],"isBlockCoverage":false},{"functionName":"validate_config","ranges":[{"startOffset":9520,"endOffset":10668,"count":2},{"startOffset":9696,"endOffset":9733,"count":0},{"startOffset":9765,"endOffset":9805,"count":0},{"startOffset":9834,"endOffset":9871,"count":0},{"startOffset":9902,"endOffset":9941,"count":0},{"startOffset":10255,"endOffset":10362,"count":0},{"startOffset":10496,"endOffset":10609,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10007,"endOffset":10223,"count":6},{"startOffset":10065,"endOffset":10111,"count":0},{"startOffset":10165,"endOffset":10217,"count":0}],"isBlockCoverage":true},{"functionName":"eval_template","ranges":[{"startOffset":10721,"endOffset":10991,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10791,"endOffset":10966,"count":104},{"startOffset":10889,"endOffset":10960,"count":9}],"isBlockCoverage":true},{"functionName":"fix_slashes","ranges":[{"startOffset":11186,"endOffset":11315,"count":2},{"startOffset":11254,"endOffset":11314,"count":1}],"isBlockCoverage":true},{"functionName":"drop_double_slashes","ranges":[{"startOffset":11431,"endOffset":11515,"count":1}],"isBlockCoverage":true},{"functionName":"get_process_runtime","ranges":[{"startOffset":11517,"endOffset":11745,"count":1},{"startOffset":11617,"endOffset":11657,"count":0},{"startOffset":11686,"endOffset":11723,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.evaluate","ranges":[{"startOffset":11954,"endOffset":15443,"count":1},{"startOffset":12028,"endOffset":12033,"count":0},{"startOffset":12384,"endOffset":12393,"count":0},{"startOffset":12585,"endOffset":12622,"count":0},{"startOffset":12672,"endOffset":12704,"count":0},{"startOffset":12977,"endOffset":13018,"count":0},{"startOffset":13174,"endOffset":13179,"count":0},{"startOffset":13257,"endOffset":13298,"count":0},{"startOffset":14623,"endOffset":14785,"count":0},{"startOffset":15003,"endOffset":15024,"count":0},{"startOffset":15117,"endOffset":15139,"count":0}],"isBlockCoverage":true}]},{"scriptId":"992","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/detect-libc/lib/detect-libc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2182,"count":1},{"startOffset":275,"endOffset":363,"count":0},{"startOffset":756,"endOffset":1977,"count":0},{"startOffset":2016,"endOffset":2035,"count":0}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":291,"endOffset":360,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":365,"endOffset":475,"count":0}],"isBlockCoverage":false},{"functionName":"versionFromMuslLdd","ranges":[{"startOffset":477,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"safeReaddirSync","ranges":[{"startOffset":572,"endOffset":675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"993","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/bcryptjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1604,"count":1}],"isBlockCoverage":true}]},{"scriptId":"994","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/bcryptjs/dist/bcrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":56908,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1739,"endOffset":2131,"count":1},{"startOffset":1817,"endOffset":1833,"count":0},{"startOffset":1844,"endOffset":1864,"count":0},{"startOffset":2025,"endOffset":2126,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2138,"endOffset":56903,"count":1},{"startOffset":3523,"endOffset":3535,"count":0},{"startOffset":14153,"endOffset":14171,"count":0},{"startOffset":14182,"endOffset":14194,"count":0},{"startOffset":27338,"endOffset":27373,"count":0}],"isBlockCoverage":true},{"functionName":"random","ranges":[{"startOffset":2714,"endOffset":3357,"count":3},{"startOffset":2920,"endOffset":3011,"count":0},{"startOffset":3121,"endOffset":3356,"count":0}],"isBlockCoverage":true},{"functionName":"bcrypt.setRandomFallback","ranges":[{"startOffset":4236,"endOffset":4295,"count":0}],"isBlockCoverage":false},{"functionName":"bcrypt.genSaltSync","ranges":[{"startOffset":4644,"endOffset":5270,"count":2},{"startOffset":4701,"endOffset":4731,"count":0},{"startOffset":4787,"endOffset":4864,"count":0},{"startOffset":4903,"endOffset":4914,"count":0},{"startOffset":4959,"endOffset":4971,"count":0},{"startOffset":5063,"endOffset":5078,"count":0}],"isBlockCoverage":true},{"functionName":"bcrypt.genSalt","ranges":[{"startOffset":5800,"endOffset":7120,"count":2},{"startOffset":6039,"endOffset":6090,"count":0},{"startOffset":6148,"endOffset":6185,"count":0},{"startOffset":6245,"endOffset":6296,"count":0},{"startOffset":6711,"endOffset":6762,"count":0},{"startOffset":6804,"endOffset":7113,"count":0}],"isBlockCoverage":true},{"functionName":"_async","ranges":[{"startOffset":6308,"endOffset":6617,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6358,"endOffset":6604,"count":2},{"startOffset":6521,"endOffset":6589,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6842,"endOffset":7111,"count":0}],"isBlockCoverage":false},{"functionName":"bcrypt.hashSync","ranges":[{"startOffset":7417,"endOffset":7794,"count":0}],"isBlockCoverage":false},{"functionName":"bcrypt.hash","ranges":[{"startOffset":8462,"endOffset":9536,"count":4},{"startOffset":9059,"endOffset":9220,"count":2},{"startOffset":9127,"endOffset":9178,"count":0},{"startOffset":9220,"endOffset":9529,"count":2}],"isBlockCoverage":true},{"functionName":"_async","ranges":[{"startOffset":8521,"endOffset":9033,"count":4},{"startOffset":8634,"endOffset":9022,"count":2},{"startOffset":8896,"endOffset":9022,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8655,"endOffset":8760,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9258,"endOffset":9527,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9310,"endOffset":9510,"count":2},{"startOffset":9361,"endOffset":9456,"count":0}],"isBlockCoverage":true},{"functionName":"safeStringCompare","ranges":[{"startOffset":9798,"endOffset":10244,"count":2},{"startOffset":9940,"endOffset":10086,"count":120},{"startOffset":10031,"endOffset":10075,"count":0},{"startOffset":10195,"endOffset":10208,"count":0}],"isBlockCoverage":true},{"functionName":"bcrypt.compareSync","ranges":[{"startOffset":10565,"endOffset":10887,"count":0}],"isBlockCoverage":false},{"functionName":"bcrypt.compare","ranges":[{"startOffset":11543,"endOffset":12758,"count":2},{"startOffset":12281,"endOffset":12442,"count":0}],"isBlockCoverage":true},{"functionName":"_async","ranges":[{"startOffset":11602,"endOffset":12255,"count":2},{"startOffset":11698,"endOffset":11847,"count":0},{"startOffset":11885,"endOffset":11987,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12036,"endOffset":12224,"count":2},{"startOffset":12105,"endOffset":12119,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12480,"endOffset":12749,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12532,"endOffset":12732,"count":2},{"startOffset":12583,"endOffset":12678,"count":0}],"isBlockCoverage":true},{"functionName":"bcrypt.getRounds","ranges":[{"startOffset":13064,"endOffset":13239,"count":0}],"isBlockCoverage":false},{"functionName":"bcrypt.getSalt","ranges":[{"startOffset":13546,"endOffset":13815,"count":0}],"isBlockCoverage":false},{"functionName":"stringToBytes","ranges":[{"startOffset":14369,"endOffset":14667,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14474,"endOffset":14585,"count":32},{"startOffset":14521,"endOffset":14533,"count":4},{"startOffset":14533,"endOffset":14584,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14587,"endOffset":14637,"count":28}],"isBlockCoverage":true},{"functionName":"base64_encode","ranges":[{"startOffset":16029,"endOffset":16972,"count":10},{"startOffset":16181,"endOffset":16214,"count":0},{"startOffset":16242,"endOffset":16936,"count":68},{"startOffset":16397,"endOffset":16487,"count":6},{"startOffset":16487,"endOffset":16671,"count":62},{"startOffset":16671,"endOffset":16761,"count":4},{"startOffset":16761,"endOffset":16936,"count":58}],"isBlockCoverage":true},{"functionName":"base64_decode","ranges":[{"startOffset":17211,"endOffset":18722,"count":4},{"startOffset":17415,"endOffset":17448,"count":0},{"startOffset":17480,"endOffset":17493,"count":24},{"startOffset":17495,"endOffset":18585,"count":24},{"startOffset":17604,"endOffset":17608,"count":0},{"startOffset":17717,"endOffset":17721,"count":0},{"startOffset":17779,"endOffset":17785,"count":0},{"startOffset":17932,"endOffset":17946,"count":20},{"startOffset":17965,"endOffset":17971,"count":4},{"startOffset":17971,"endOffset":18078,"count":20},{"startOffset":18079,"endOffset":18083,"count":0},{"startOffset":18129,"endOffset":18135,"count":0},{"startOffset":18135,"endOffset":18305,"count":20},{"startOffset":18324,"endOffset":18330,"count":0},{"startOffset":18330,"endOffset":18437,"count":20},{"startOffset":18438,"endOffset":18442,"count":0},{"startOffset":18662,"endOffset":18694,"count":64}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18934,"endOffset":27307,"count":1}],"isBlockCoverage":true},{"functionName":"utfx.encodeUTF8","ranges":[{"startOffset":19715,"endOffset":20576,"count":28},{"startOffset":20011,"endOffset":20522,"count":0}],"isBlockCoverage":true},{"functionName":"src","ranges":[{"startOffset":19856,"endOffset":19883,"count":28}],"isBlockCoverage":true},{"functionName":"utfx.decodeUTF8","ranges":[{"startOffset":21188,"endOffset":22282,"count":0}],"isBlockCoverage":false},{"functionName":"utfx.UTF16toUTF8","ranges":[{"startOffset":22726,"endOffset":23342,"count":4},{"startOffset":22805,"endOffset":23292,"count":32},{"startOffset":22846,"endOffset":22850,"count":0},{"startOffset":22891,"endOffset":22897,"count":4},{"startOffset":22897,"endOffset":22932,"count":28},{"startOffset":22932,"endOffset":22947,"count":0},{"startOffset":22949,"endOffset":23251,"count":0},{"startOffset":23251,"endOffset":23292,"count":28},{"startOffset":23323,"endOffset":23331,"count":0}],"isBlockCoverage":true},{"functionName":"utfx.UTF8toUTF16","ranges":[{"startOffset":23889,"endOffset":24366,"count":0}],"isBlockCoverage":false},{"functionName":"utfx.encodeUTF16toUTF8","ranges":[{"startOffset":24791,"endOffset":24932,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24847,"endOffset":24919,"count":28}],"isBlockCoverage":true},{"functionName":"utfx.decodeUTF8toUTF16","ranges":[{"startOffset":25551,"endOffset":25692,"count":0}],"isBlockCoverage":false},{"functionName":"utfx.calculateCodePoint","ranges":[{"startOffset":25908,"endOffset":26014,"count":0}],"isBlockCoverage":false},{"functionName":"utfx.calculateUTF8","ranges":[{"startOffset":26408,"endOffset":26577,"count":0}],"isBlockCoverage":false},{"functionName":"utfx.calculateUTF16asUTF8","ranges":[{"startOffset":27072,"endOffset":27275,"count":0}],"isBlockCoverage":false},{"functionName":"Date.now","ranges":[{"startOffset":27341,"endOffset":27373,"count":0}],"isBlockCoverage":false},{"functionName":"_encipher","ranges":[{"startOffset":42815,"endOffset":46789,"count":17074980}],"isBlockCoverage":true},{"functionName":"_streamtoword","ranges":[{"startOffset":46943,"endOffset":47177,"count":594064},{"startOffset":47040,"endOffset":47127,"count":2376256}],"isBlockCoverage":true},{"functionName":"_key","ranges":[{"startOffset":47322,"endOffset":47913,"count":32768},{"startOffset":47530,"endOffset":47628,"count":589824},{"startOffset":47681,"endOffset":47767,"count":294912},{"startOffset":47820,"endOffset":47906,"count":16777216}],"isBlockCoverage":true},{"functionName":"_ekskey","ranges":[{"startOffset":48136,"endOffset":49165,"count":4},{"startOffset":48351,"endOffset":48445,"count":72},{"startOffset":48517,"endOffset":48811,"count":36},{"startOffset":48864,"endOffset":49158,"count":2048}],"isBlockCoverage":true},{"functionName":"_crypt","ranges":[{"startOffset":49792,"endOffset":52598,"count":4},{"startOffset":50007,"endOffset":50244,"count":0},{"startOffset":50291,"endOffset":50543,"count":0},{"startOffset":50794,"endOffset":50878,"count":0},{"startOffset":52427,"endOffset":52591,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":51125,"endOffset":52304,"count":20},{"startOffset":51195,"endOffset":51224,"count":0},{"startOffset":51254,"endOffset":51574,"count":16},{"startOffset":51334,"endOffset":51559,"count":16384},{"startOffset":51534,"endOffset":51540,"count":12},{"startOffset":51574,"endOffset":52233,"count":4},{"startOffset":51645,"endOffset":51735,"count":256},{"startOffset":51704,"endOffset":51735,"count":768},{"startOffset":51832,"endOffset":52057,"count":24},{"startOffset":52180,"endOffset":52218,"count":0},{"startOffset":52233,"endOffset":52293,"count":16}],"isBlockCoverage":true},{"functionName":"_hash","ranges":[{"startOffset":53147,"endOffset":56229,"count":4},{"startOffset":53283,"endOffset":53528,"count":0},{"startOffset":53652,"endOffset":53904,"count":0},{"startOffset":53955,"endOffset":54011,"count":0},{"startOffset":54097,"endOffset":54113,"count":0},{"startOffset":54114,"endOffset":54130,"count":0},{"startOffset":54159,"endOffset":54427,"count":0},{"startOffset":54547,"endOffset":54763,"count":0},{"startOffset":55042,"endOffset":55046,"count":0},{"startOffset":55881,"endOffset":55929,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":55326,"endOffset":55803,"count":4},{"startOffset":55547,"endOffset":55561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56012,"endOffset":56191,"count":4},{"startOffset":56082,"endOffset":56102,"count":0}],"isBlockCoverage":true}]},{"scriptId":"995","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/database/tables/fuel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"addTable","ranges":[{"startOffset":595,"endOffset":632,"count":1}],"isBlockCoverage":true}]},{"scriptId":"996","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/database/tables/account.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":716,"count":1}],"isBlockCoverage":true},{"functionName":"addTable","ranges":[{"startOffset":629,"endOffset":669,"count":1}],"isBlockCoverage":true}]},{"scriptId":"997","url":"node:cluster","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1316,"count":1}],"isBlockCoverage":false}]},{"scriptId":"998","url":"node:internal/cluster/primary","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11181,"count":1}],"isBlockCoverage":false},{"functionName":"cluster.setupPrimary","ranges":[{"startOffset":1886,"endOffset":3550,"count":0}],"isBlockCoverage":false},{"functionName":"setupSettingsNT","ranges":[{"startOffset":3652,"endOffset":3727,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerProcess","ranges":[{"startOffset":3731,"endOffset":5143,"count":0}],"isBlockCoverage":false},{"functionName":"removeWorker","ranges":[{"startOffset":5147,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"removeHandlesForWorker","ranges":[{"startOffset":5394,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.fork","ranges":[{"startOffset":5583,"endOffset":7249,"count":0}],"isBlockCoverage":false},{"functionName":"emitForkNT","ranges":[{"startOffset":7254,"endOffset":7319,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.disconnect","ranges":[{"startOffset":7344,"endOffset":7730,"count":0}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":7850,"endOffset":8026,"count":0}],"isBlockCoverage":false},{"functionName":"online","ranges":[{"startOffset":8030,"endOffset":8147,"count":0}],"isBlockCoverage":false},{"functionName":"exitedAfterDisconnect","ranges":[{"startOffset":8151,"endOffset":8282,"count":0}],"isBlockCoverage":false},{"functionName":"queryServer","ranges":[{"startOffset":8286,"endOffset":9912,"count":0}],"isBlockCoverage":false},{"functionName":"listening","ranges":[{"startOffset":9916,"endOffset":10207,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":10366,"endOffset":10534,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":10538,"endOffset":10644,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.disconnect","ranges":[{"startOffset":10750,"endOffset":10913,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.destroy","ranges":[{"startOffset":10945,"endOffset":11178,"count":0}],"isBlockCoverage":false}]},{"scriptId":"999","url":"node:internal/cluster/round_robin_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3380,"count":1}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle","ranges":[{"startOffset":409,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.add","ranges":[{"startOffset":1280,"endOffset":1934,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.remove","ranges":[{"startOffset":1975,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.distribute","ranges":[{"startOffset":2399,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.handoff","ranges":[{"startOffset":2784,"endOffset":3377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1000","url":"node:internal/cluster/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1104,"count":1}],"isBlockCoverage":false},{"functionName":"sendHelper","ranges":[{"startOffset":178,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"internal","ranges":[{"startOffset":675,"endOffset":1102,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1001","url":"node:internal/cluster/shared_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1147,"count":1}],"isBlockCoverage":false},{"functionName":"SharedHandle","ranges":[{"startOffset":200,"endOffset":694,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.add","ranges":[{"startOffset":727,"endOffset":875,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.remove","ranges":[{"startOffset":912,"endOffset":1144,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1002","url":"node:internal/cluster/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1370,"count":1}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":240,"endOffset":845,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.kill","ranges":[{"startOffset":985,"endOffset":1048,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.send","ranges":[{"startOffset":1077,"endOffset":1160,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isDead","ranges":[{"startOffset":1191,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isConnected","ranges":[{"startOffset":1318,"endOffset":1367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1003","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/encodings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1},{"startOffset":546,"endOffset":709,"count":8},{"startOffset":613,"endOffset":707,"count":408}],"isBlockCoverage":true}]},{"scriptId":"1004","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/encodings/internal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6113,"count":1},{"startOffset":1579,"endOffset":1623,"count":0}],"isBlockCoverage":true},{"functionName":"InternalCodec","ranges":[{"startOffset":571,"endOffset":1182,"count":1},{"startOffset":742,"endOffset":779,"count":0},{"startOffset":815,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder.end","ranges":[{"startOffset":1609,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder","ranges":[{"startOffset":1626,"endOffset":1711,"count":6}],"isBlockCoverage":true},{"functionName":"InternalEncoder","ranges":[{"startOffset":1879,"endOffset":1949,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.write","ranges":[{"startOffset":1985,"endOffset":2041,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.end","ranges":[{"startOffset":2075,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64","ranges":[{"startOffset":2227,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.write","ranges":[{"startOffset":2342,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.end","ranges":[{"startOffset":2608,"endOffset":2670,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8","ranges":[{"startOffset":2790,"endOffset":2839,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.write","ranges":[{"startOffset":2880,"endOffset":3698,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.end","ranges":[{"startOffset":3737,"endOffset":3751,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8","ranges":[{"startOffset":3886,"endOffset":4056,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.write","ranges":[{"startOffset":4097,"endOffset":5958,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.end","ranges":[{"startOffset":5997,"endOffset":6112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1005","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/encodings/utf16.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5011,"count":1}],"isBlockCoverage":true},{"functionName":"Utf16BECodec","ranges":[{"startOffset":254,"endOffset":281,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder","ranges":[{"startOffset":439,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.write","ranges":[{"startOffset":503,"endOffset":689,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.end","ranges":[{"startOffset":722,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder","ranges":[{"startOffset":755,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.write","ranges":[{"startOffset":847,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.end","ranges":[{"startOffset":1364,"endOffset":1378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Codec","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder","ranges":[{"startOffset":2113,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.write","ranges":[{"startOffset":2349,"endOffset":2402,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.end","ranges":[{"startOffset":2433,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder","ranges":[{"startOffset":2497,"endOffset":2686,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.write","ranges":[{"startOffset":2719,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.end","ranges":[{"startOffset":3418,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":3821,"endOffset":5008,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1006","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/encodings/utf7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9215,"count":1},{"startOffset":1342,"endOffset":1400,"count":256}],"isBlockCoverage":true},{"functionName":"Utf7Codec","ranges":[{"startOffset":311,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder","ranges":[{"startOffset":583,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.write","ranges":[{"startOffset":685,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.end","ranges":[{"startOffset":1091,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder","ranges":[{"startOffset":1124,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.write","ranges":[{"startOffset":1536,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.end","ranges":[{"startOffset":3349,"endOffset":3592,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPCodec","ranges":[{"startOffset":4130,"endOffset":4201,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder","ranges":[{"startOffset":4365,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.write","ranges":[{"startOffset":4571,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.end","ranges":[{"startOffset":6283,"endOffset":6744,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder","ranges":[{"startOffset":6763,"endOffset":6891,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.write","ranges":[{"startOffset":7014,"endOffset":8935,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.end","ranges":[{"startOffset":8969,"endOffset":9212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1007","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/encodings/sbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2191,"count":1}],"isBlockCoverage":true},{"functionName":"SBCSCodec","ranges":[{"startOffset":248,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder","ranges":[{"startOffset":1293,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.write","ranges":[{"startOffset":1403,"endOffset":1574,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.end","ranges":[{"startOffset":1604,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder","ranges":[{"startOffset":1621,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.write","ranges":[{"startOffset":1731,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.end","ranges":[{"startOffset":2176,"endOffset":2190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1008","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/encodings/sbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1009","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/encodings/sbcs-data-generated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18865,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1010","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/encodings/dbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21415,"count":1},{"startOffset":522,"endOffset":554,"count":256}],"isBlockCoverage":true},{"functionName":"DBCSCodec","ranges":[{"startOffset":614,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getDecodeTrieNode","ranges":[{"startOffset":5438,"endOffset":6214,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._addDecodeChunk","ranges":[{"startOffset":6255,"endOffset":8486,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getEncodeBucket","ranges":[{"startOffset":8546,"endOffset":8814,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeChar","ranges":[{"startOffset":8853,"endOffset":9204,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeSequence","ranges":[{"startOffset":9247,"endOffset":10426,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._fillEncodeTable","ranges":[{"startOffset":10467,"endOffset":11039,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder","ranges":[{"startOffset":11125,"endOffset":11442,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.write","ranges":[{"startOffset":11474,"endOffset":16174,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.end","ranges":[{"startOffset":16204,"endOffset":17110,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder","ranges":[{"startOffset":17259,"endOffset":17580,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.write","ranges":[{"startOffset":17612,"endOffset":20538,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.end","ranges":[{"startOffset":20568,"endOffset":21017,"count":0}],"isBlockCoverage":false},{"functionName":"findIdx","ranges":[{"startOffset":21094,"endOffset":21413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1011","url":"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/iconv-lite/encodings/dbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8288,"count":1}],"isBlockCoverage":true},{"functionName":"table","ranges":[{"startOffset":2563,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3052,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3996,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4205,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4732,"endOffset":4827,"count":0}],"isBlockCoverage":false},{"functionName":"gb18030","ranges":[{"startOffset":4846,"endOffset":4907,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":5275,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":7815,"endOffset":7867,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":8064,"endOffset":8160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1012","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":708,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":707,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1013","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1053,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1052,"count":1},{"startOffset":127,"endOffset":316,"count":0},{"startOffset":642,"endOffset":650,"count":0},{"startOffset":670,"endOffset":701,"count":0},{"startOffset":733,"endOffset":910,"count":0},{"startOffset":940,"endOffset":944,"count":0}],"isBlockCoverage":true},{"functionName":"lookupProperty","ranges":[{"startOffset":130,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1014","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":708,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":707,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1015","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1053,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1052,"count":2},{"startOffset":127,"endOffset":316,"count":0},{"startOffset":642,"endOffset":650,"count":0},{"startOffset":670,"endOffset":701,"count":0},{"startOffset":733,"endOffset":910,"count":0},{"startOffset":940,"endOffset":944,"count":0}],"isBlockCoverage":true},{"functionName":"lookupProperty","ranges":[{"startOffset":130,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1016","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2722,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2721,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1017","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1430,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1429,"count":1},{"startOffset":127,"endOffset":316,"count":0},{"startOffset":650,"endOffset":658,"count":0},{"startOffset":678,"endOffset":709,"count":0},{"startOffset":741,"endOffset":916,"count":0},{"startOffset":946,"endOffset":950,"count":0}],"isBlockCoverage":true},{"functionName":"lookupProperty","ranges":[{"startOffset":130,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1018","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1449,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1448,"count":1},{"startOffset":179,"endOffset":368,"count":0},{"startOffset":764,"endOffset":772,"count":0},{"startOffset":818,"endOffset":826,"count":0},{"startOffset":1161,"endOffset":1169,"count":0},{"startOffset":1223,"endOffset":1231,"count":0}],"isBlockCoverage":true},{"functionName":"lookupProperty","ranges":[{"startOffset":182,"endOffset":368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1019","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1430,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1429,"count":3},{"startOffset":127,"endOffset":316,"count":0},{"startOffset":650,"endOffset":658,"count":0},{"startOffset":678,"endOffset":709,"count":0},{"startOffset":741,"endOffset":916,"count":0},{"startOffset":946,"endOffset":950,"count":0}],"isBlockCoverage":true},{"functionName":"lookupProperty","ranges":[{"startOffset":130,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1020","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1412,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1411,"count":1},{"startOffset":179,"endOffset":368,"count":0},{"startOffset":502,"endOffset":510,"count":0},{"startOffset":556,"endOffset":564,"count":0},{"startOffset":701,"endOffset":709,"count":0},{"startOffset":763,"endOffset":771,"count":0},{"startOffset":908,"endOffset":916,"count":0},{"startOffset":967,"endOffset":975,"count":0},{"startOffset":1112,"endOffset":1120,"count":0},{"startOffset":1164,"endOffset":1172,"count":0},{"startOffset":1309,"endOffset":1317,"count":0},{"startOffset":1361,"endOffset":1369,"count":0}],"isBlockCoverage":true},{"functionName":"lookupProperty","ranges":[{"startOffset":182,"endOffset":368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1021","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":920,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":919,"count":1},{"startOffset":119,"endOffset":308,"count":0},{"startOffset":616,"endOffset":647,"count":0},{"startOffset":696,"endOffset":704,"count":0},{"startOffset":892,"endOffset":896,"count":0}],"isBlockCoverage":true},{"functionName":"lookupProperty","ranges":[{"startOffset":122,"endOffset":308,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1022","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":996,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":995,"count":1},{"startOffset":127,"endOffset":316,"count":0},{"startOffset":589,"endOffset":597,"count":0},{"startOffset":617,"endOffset":648,"count":0},{"startOffset":680,"endOffset":855,"count":0},{"startOffset":885,"endOffset":889,"count":0}],"isBlockCoverage":true},{"functionName":"lookupProperty","ranges":[{"startOffset":130,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1023","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1449,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1448,"count":2},{"startOffset":179,"endOffset":368,"count":0},{"startOffset":764,"endOffset":772,"count":0},{"startOffset":818,"endOffset":826,"count":0},{"startOffset":1161,"endOffset":1169,"count":0},{"startOffset":1223,"endOffset":1231,"count":0}],"isBlockCoverage":true},{"functionName":"lookupProperty","ranges":[{"startOffset":182,"endOffset":368,"count":0}],"isBlockCoverage":false}]}],"timestamp":1036209.928339,"source-map-cache":{"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/index.js":{"lineLengths":[25,13,0,46,13,3,40,19,23,28,3,3,45,19,23,32,3,3,45,19,23,27,3,3,54,19,23,36,3,3,45,19,23,27,3,3,52,19,23,34,3,3,49,19,23,35,3,3,43,19,23,24,3,3,44,19,23,26,3,3,48,19,23,30,3,3,46,19,23,29,3,3,46,19,23,29,3,3,48,19,23,31,3,3,46,19,23,29,3,3,41,19,23,24,3,3,51,19,23,35,3,3,55,19,23,39,3,3,47,19,23,31,3,3,55,19,23,36,3,3,55,19,23,36,3,3,0,23,3,25,54,23,1,0,3,25,40,23,1,0,3,25,30,23,1,0,3,25,30,23,1,0,3,25,38,23,1,0,3,25,28,23,1,0,3,25,30,23,1,0,3,25,32,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,33,23,1,0,3,25,35,23,1,0,3,25,31,23,1,0,3,25,31,23,1,0,123,0,23,3012,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIS:\n * JsDiff.diffChars: Character by character diff\n * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * JsDiff.diffLines: Line based diff\n *\n * JsDiff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nimport Diff from './diff/base';\nimport {diffChars} from './diff/character';\nimport {diffWords, diffWordsWithSpace} from './diff/word';\nimport {diffLines, diffTrimmedLines} from './diff/line';\nimport {diffSentences} from './diff/sentence';\n\nimport {diffCss} from './diff/css';\nimport {diffJson, canonicalize} from './diff/json';\n\nimport {diffArrays} from './diff/array';\n\nimport {applyPatch, applyPatches} from './patch/apply';\nimport {parsePatch} from './patch/parse';\nimport {merge} from './patch/merge';\nimport {structuredPatch, createTwoFilesPatch, createPatch} from './patch/create';\n\nimport {convertChangesToDMP} from './convert/dmp';\nimport {convertChangesToXML} from './convert/xml';\n\nexport {\n  Diff,\n\n  diffChars,\n  diffWords,\n  diffWordsWithSpace,\n  diffLines,\n  diffTrimmedLines,\n  diffSentences,\n\n  diffCss,\n  diffJson,\n\n  diffArrays,\n\n  structuredPatch,\n  createTwoFilesPatch,\n  createPatch,\n  applyPatch,\n  applyPatches,\n  parsePatch,\n  merge,\n  convertChangesToDMP,\n  convertChangesToXML,\n  canonicalize\n};\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/base.js":{"lineLengths":[25,13,0,46,13,3,26,0,23,18,0,18,27,0,25,45,29,7,27,85,36,0,40,25,19,5,0,27,20,0,26,21,32,37,14,20,14,21,7,63,0,0,42,42,59,59,34,34,23,40,21,17,20,76,0,74,0,67,48,20,36,31,10,91,0,0,31,95,22,33,14,31,9,0,49,52,74,0,22,72,49,9,0,60,71,0,36,50,45,19,81,80,57,0,0,73,43,67,16,80,0,28,67,9,0,143,0,69,106,16,77,44,9,7,0,19,89,86,19,0,0,19,24,32,60,0,36,43,30,11,0,34,19,11,14,11,12,43,35,0,18,21,9,7,5,4,0,27,0,25,69,49,0,67,71,31,43,30,21,24,8,12,23,17,21,24,9,5,4,0,27,0,25,87,34,34,33,39,24,0,117,15,15,20,5,0,22,32,26,9,5,0,29,18,4,0,27,0,25,40,34,50,12,101,5,4,0,27,0,25,44,17,0,44,21,27,7,5,0,15,4,0,27,0,25,40,17,4,0,27,0,25,38,27,4,0,27,0,25,30,26,3,2,0,79,23,39,17,17,0,55,45,0,29,48,70,47,47,67,11,43,14,87,7,0,47,0,29,34,7,12,85,113,89,63,0,63,47,64,39,7,5,78,83,44,0,0,51,0,158,62,21,3,0,20,1,0,26,10,24,40,4,1,22136,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/diff/base.js"],"names":["Diff","prototype","diff","oldString","newString","options","callback","self","done","value","setTimeout","undefined","castInput","removeEmpty","tokenize","newLen","length","oldLen","editLength","maxEditLength","bestPath","newPos","components","oldPos","extractCommon","join","count","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","clonePath","pushComponent","buildValues","useLongestToken","exec","ret","added","removed","last","push","commonCount","equals","left","right","comparator","ignoreCase","toLowerCase","array","i","split","chars","componentPos","componentLen","component","slice","map","oldValue","tmp","lastComponent","pop","path"],"mappings":"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","sourcesContent":["export default function Diff() {}\n\nDiff.prototype = {\n  diff(oldString, newString, options = {}) {\n    let callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    let self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function() { callback(undefined, value); }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    let newLen = newString.length, oldLen = oldString.length;\n    let editLength = 1;\n    let maxEditLength = newLen + oldLen;\n    let bestPath = [{ newPos: -1, components: [] }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    let oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{value: this.join(newString), count: newString.length}]);\n    }\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (let diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        let basePath;\n        let addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        let canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        // If we have hit the end of both strings, then we are done\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced.\n    if (callback) {\n      (function exec() {\n        setTimeout(function() {\n          // This should not happen, but we want to be safe.\n          /* istanbul ignore next */\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      }());\n    } else {\n      while (editLength <= maxEditLength) {\n        let ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  pushComponent(components, added, removed) {\n    let last = components[components.length - 1];\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {count: last.count + 1, added: added, removed: removed };\n    } else {\n      components.push({count: 1, added: added, removed: removed });\n    }\n  },\n  extractCommon(basePath, newString, oldString, diagonalPath) {\n    let newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({count: commonCount});\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n\n  equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right\n        || (this.options.ignoreCase && left.toLowerCase() === right.toLowerCase());\n    }\n  },\n  removeEmpty(array) {\n    let ret = [];\n    for (let i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  castInput(value) {\n    return value;\n  },\n  tokenize(value) {\n    return value.split('');\n  },\n  join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  let componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    let component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        let value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function(value, i) {\n          let oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        let tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  let lastComponent = components[componentLen - 1];\n  if (componentLen > 1\n      && typeof lastComponent.value === 'string'\n      && (lastComponent.added || lastComponent.removed)\n      && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return { newPos: path.newPos, components: path.components.slice(0) };\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/character.js":{"lineLengths":[25,13,0,46,13,3,30,31,0,23,3,25,49,23,1,0,123,0,23,23,25,5,23,1,25,9,23,4,0,25,38,0,23,45,53,1,880,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/diff/character.js"],"names":["characterDiff","Diff","diffChars","oldStr","newStr","options","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,aAAa,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAtB;;;;;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AAAE,SAAOL,aAAa,CAACM,IAAd,CAAmBH,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\nexport const characterDiff = new Diff();\nexport function diffChars(oldStr, newStr, options) { return characterDiff.diff(oldStr, newStr, options); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/word.js":{"lineLengths":[25,13,0,46,13,3,30,48,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,65,2,25,32,35,29,30,30,28,38,29,29,33,34,30,35,43,39,88,24,18,25,5,23,1,25,9,23,4,0,25,28,0,23,42,32,30,32,3,0,114,2,0,38,97,184,0,47,103,120,33,30,10,5,3,0,16,2,0,45,11,27,5,25,0,27,9,25,3,27,18,25,13,26,5,48,1,0,54,48,1,5824,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/diff/word.js"],"names":["extendedWordChars","reWhitespace","wordDiff","Diff","equals","left","right","options","ignoreCase","toLowerCase","ignoreWhitespace","test","tokenize","value","tokens","split","i","length","splice","diffWords","oldStr","newStr","generateOptions","diff","diffWordsWithSpace"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,iBAAiB,GAAG,+DAA1B;AAEA,IAAMC,YAAY,GAAG,IAArB;AAEO,IAAMC,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,MAAT,GAAkB,UAASC,IAAT,EAAeC,KAAf,EAAsB;AACtC,MAAI,KAAKC,OAAL,CAAaC,UAAjB,EAA6B;AAC3BH,IAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACAH,IAAAA,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAR;AACD;;AACD,SAAOJ,IAAI,KAAKC,KAAT,IAAmB,KAAKC,OAAL,CAAaG,gBAAb,IAAiC,CAACT,YAAY,CAACU,IAAb,CAAkBN,IAAlB,CAAlC,IAA6D,CAACJ,YAAY,CAACU,IAAb,CAAkBL,KAAlB,CAAxF;AACD,CAND;;AAOAJ,QAAQ,CAACU,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC;AACA,MAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,iCAAZ,CAAb,CAFkC,CAIlC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAAP,GAAgB,CAApC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C;AACA,QAAI,CAACF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAP,IAAkBF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAxB,IACKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAD,CAA7B,CADL,IAEKhB,iBAAiB,CAACW,IAAlB,CAAuBG,MAAM,CAACE,CAAC,GAAG,CAAL,CAA7B,CAFT,EAEgD;AAC9CF,MAAAA,MAAM,CAACE,CAAD,CAAN,IAAaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAnB;AACAF,MAAAA,MAAM,CAACI,MAAP,CAAcF,CAAC,GAAG,CAAlB,EAAqB,CAArB;AACAA,MAAAA,CAAC;AACF;AACF;;AAED,SAAOF,MAAP;AACD,CAjBD;;AAmBO,SAASK,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCd,OAAnC,EAA4C;AACjDA,EAAAA,OAAO;AAAG;AAAA;AAAA;;AAAAe;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBf,OAAhB,EAAyB;AAACG,IAAAA,gBAAgB,EAAE;AAAnB,GAAzB,CAAV;AACA,SAAOR,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD;;AAEM,SAASiB,kBAAT,CAA4BJ,MAA5B,EAAoCC,MAApC,EAA4Cd,OAA5C,EAAqD;AAC1D,SAAOL,QAAQ,CAACqB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8Bd,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nconst extendedWordChars = /^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$/u;\n\nconst reWhitespace = /\\S/;\n\nexport const wordDiff = new Diff();\nwordDiff.equals = function(left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || (this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n};\nwordDiff.tokenize = function(value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  let tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (let i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2]\n          && extendedWordChars.test(tokens[i])\n          && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nexport function diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {ignoreWhitespace: true});\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nexport function diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/util/params.js":{"lineLengths":[25,13,0,46,13,3,42,0,23,45,38,32,23,31,32,41,39,7,5,3,0,18,1,1248,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/util/params.js"],"names":["generateOptions","options","defaults","callback","name","hasOwnProperty"],"mappings":";;;;;;;;;AAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AACjD,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,CAACC,QAAT,GAAoBF,OAApB;AACD,GAFD,MAEO,IAAIA,OAAJ,EAAa;AAClB,SAAK,IAAIG,IAAT,IAAiBH,OAAjB,EAA0B;AACxB;AACA,UAAIA,OAAO,CAACI,cAAR,CAAuBD,IAAvB,CAAJ,EAAkC;AAChCF,QAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiBH,OAAO,CAACG,IAAD,CAAxB;AACD;AACF;AACF;;AACD,SAAOF,QAAP;AACD","sourcesContent":["export function generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (let name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/line.js":{"lineLengths":[25,13,0,46,13,3,30,44,26,0,23,3,25,49,23,1,0,3,25,35,23,1,0,123,0,23,18,25,5,23,1,25,9,23,4,0,25,28,0,23,38,20,129,0,55,27,63,0,0,53,35,0,48,44,12,42,27,7,0,26,5,3,0,18,2,0,46,49,1,0,53,15,27,5,25,0,27,9,25,3,27,18,25,14,26,5,48,1,3728,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/diff/line.js"],"names":["lineDiff","Diff","tokenize","value","retLines","linesAndNewlines","split","length","pop","i","line","options","newlineIsToken","ignoreWhitespace","trim","push","diffLines","oldStr","newStr","callback","diff","diffTrimmedLines","generateOptions"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,QAAQ,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAjB;;;;;;AACPD,QAAQ,CAACE,QAAT,GAAoB,UAASC,KAAT,EAAgB;AAClC,MAAIC,QAAQ,GAAG,EAAf;AAAA,MACIC,gBAAgB,GAAGF,KAAK,CAACG,KAAN,CAAY,WAAZ,CADvB,CADkC,CAIlC;;AACA,MAAI,CAACD,gBAAgB,CAACA,gBAAgB,CAACE,MAAjB,GAA0B,CAA3B,CAArB,EAAoD;AAClDF,IAAAA,gBAAgB,CAACG,GAAjB;AACD,GAPiC,CASlC;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,gBAAgB,CAACE,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;AAChD,QAAIC,IAAI,GAAGL,gBAAgB,CAACI,CAAD,CAA3B;;AAEA,QAAIA,CAAC,GAAG,CAAJ,IAAS,CAAC,KAAKE,OAAL,CAAaC,cAA3B,EAA2C;AACzCR,MAAAA,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAR,IAAiCG,IAAjC;AACD,KAFD,MAEO;AACL,UAAI,KAAKC,OAAL,CAAaE,gBAAjB,EAAmC;AACjCH,QAAAA,IAAI,GAAGA,IAAI,CAACI,IAAL,EAAP;AACD;;AACDV,MAAAA,QAAQ,CAACW,IAAT,CAAcL,IAAd;AACD;AACF;;AAED,SAAON,QAAP;AACD,CAxBD;;AA0BO,SAASY,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAAE,SAAOnB,QAAQ,CAACoB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BC,QAA9B,CAAP;AAAiD;;AAChG,SAASE,gBAAT,CAA0BJ,MAA1B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AACzD,MAAIR,OAAO;AAAG;AAAA;AAAA;;AAAAW;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,GAAgBH,QAAhB,EAA0B;AAACN,IAAAA,gBAAgB,EAAE;AAAnB,GAA1B,CAAd;AACA,SAAOb,QAAQ,CAACoB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BP,OAA9B,CAAP;AACD","sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/sentence.js":{"lineLengths":[25,13,0,46,13,3,38,30,0,23,3,25,49,23,1,0,123,0,23,22,25,5,23,1,25,9,23,4,0,25,36,0,23,42,46,2,0,50,53,1,1196,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/diff/sentence.js"],"names":["sentenceDiff","Diff","tokenize","value","split","diffSentences","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAGO,IAAMA,YAAY,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAArB;;;;;;AACPD,YAAY,CAACE,QAAb,GAAwB,UAASC,KAAT,EAAgB;AACtC,SAAOA,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAAE,SAAOR,YAAY,CAACS,IAAb,CAAkBH,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,CAAP;AAAqD","sourcesContent":["import Diff from './base';\n\n\nexport const sentenceDiff = new Diff();\nsentenceDiff.tokenize = function(value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nexport function diffSentences(oldStr, newStr, callback) { return sentenceDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/css.js":{"lineLengths":[25,13,0,46,13,3,26,25,0,23,3,25,49,23,1,0,123,0,23,17,25,5,23,1,25,9,23,4,0,25,26,0,23,37,38,2,0,44,48,1,1128,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/diff/css.js"],"names":["cssDiff","Diff","tokenize","value","split","diffCss","oldStr","newStr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,OAAO,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAhB;;;;;;AACPD,OAAO,CAACE,QAAR,GAAmB,UAASC,KAAT,EAAgB;AACjC,SAAOA,KAAK,CAACC,KAAN,CAAY,eAAZ,CAAP;AACD,CAFD;;AAIO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,QAAjC,EAA2C;AAAE,SAAOR,OAAO,CAACS,IAAR,CAAaH,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,CAAP;AAAgD","sourcesContent":["import Diff from './base';\n\nexport const cssDiff = new Diff();\ncssDiff.tokenize = function(value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nexport function diffCss(oldStr, newStr, callback) { return cssDiff.diff(oldStr, newStr, callback); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/json.js":{"lineLengths":[25,13,0,46,13,3,28,36,26,0,23,3,25,49,23,1,0,3,25,25,23,1,0,123,0,378,0,23,56,18,25,5,23,1,25,9,23,97,105,0,25,28,0,23,32,19,25,5,23,1,25,8,23,10,0,39,27,21,25,15,64,62,76,27,3,12,29,57,6,28,137,2,0,42,10,29,9,27,5,29,13,27,106,4,2,0,44,48,98,95,0,0,68,22,44,0,17,29,3,0,8,0,41,27,33,5,3,0,23,0,63,20,45,44,0,41,89,5,0,16,27,28,3,0,26,23,3,0,6,27,10,25,38,20,26,44,0,24,13,0,23,32,37,30,7,5,0,22,0,48,27,96,5,0,16,27,10,27,3,0,26,1,8576,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/diff/json.js"],"names":["objectPrototypeToString","Object","prototype","toString","jsonDiff","Diff","useLongestToken","tokenize","lineDiff","castInput","value","options","undefinedReplacement","stringifyReplacer","k","v","JSON","stringify","canonicalize","equals","left","right","call","replace","diffJson","oldObj","newObj","diff","obj","stack","replacementStack","replacer","key","i","length","canonicalizedObj","push","Array","pop","toJSON","sortedKeys","hasOwnProperty","sort"],"mappings":"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","sourcesContent":["import Diff from './base';\nimport {lineDiff} from './line';\n\nconst objectPrototypeToString = Object.prototype.toString;\n\n\nexport const jsonDiff = new Diff();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = lineDiff.tokenize;\njsonDiff.castInput = function(value) {\n  const {undefinedReplacement, stringifyReplacer = (k, v) => typeof v === 'undefined' ? undefinedReplacement : v} = this.options;\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function(left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nexport function diffJson(oldObj, newObj, options) { return jsonDiff.diff(oldObj, newObj, options); }\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nexport function canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  let i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  let canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    let sortedKeys = [],\n        key;\n    for (key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(key)) {\n        sortedKeys.push(key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      key = sortedKeys[i];\n      canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/diff/array.js":{"lineLengths":[25,13,0,46,13,3,32,27,0,23,3,25,49,23,1,0,123,0,23,19,25,5,23,1,25,9,23,4,0,25,30,0,23,39,23,2,0,59,15,2,0,47,50,1,1376,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/diff/array.js"],"names":["arrayDiff","Diff","tokenize","value","slice","join","removeEmpty","diffArrays","oldArr","newArr","callback","diff"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,IAAMA,SAAS,GAAG;AAAIC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,CAAJ,EAAlB;;;;;;AACPD,SAAS,CAACE,QAAV,GAAqB,UAASC,KAAT,EAAgB;AACnC,SAAOA,KAAK,CAACC,KAAN,EAAP;AACD,CAFD;;AAGAJ,SAAS,CAACK,IAAV,GAAiBL,SAAS,CAACM,WAAV,GAAwB,UAASH,KAAT,EAAgB;AACvD,SAAOA,KAAP;AACD,CAFD;;AAIO,SAASI,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAAE,SAAOV,SAAS,CAACW,IAAV,CAAeH,MAAf,EAAuBC,MAAvB,EAA+BC,QAA/B,CAAP;AAAkD","sourcesContent":["import Diff from './base';\n\nexport const arrayDiff = new Diff();\narrayDiff.tokenize = function(value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function(value) {\n  return value;\n};\n\nexport function diffArrays(oldArr, newArr, callback) { return arrayDiff.diff(oldArr, newArr, callback); }\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/patch/apply.js":{"lineLengths":[25,13,0,46,13,3,32,36,0,23,3,25,27,23,1,0,3,25,80,23,1,0,123,0,23,38,27,5,25,83,0,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,31,29,68,5,0,25,34,0,0,50,62,28,95,27,3,12,29,27,6,4,21,43,18,17,18,15,5,61,5,0,0,34,49,31,54,60,0,51,31,72,23,0,40,25,11,9,0,16,7,5,0,16,71,0,0,42,24,47,24,43,18,29,7,27,0,29,21,27,5,29,13,27,32,0,65,48,44,14,7,5,0,36,19,80,39,0,0,58,24,0,0,21,0,45,26,64,0,50,0,50,32,54,60,46,0,30,17,37,32,37,34,37,41,48,17,38,82,0,40,29,47,26,9,7,5,37,0,0,20,38,18,23,5,24,19,26,3,0,49,43,3,0,24,63,0,0,41,36,13,29,7,27,0,29,10,27,5,29,15,27,14,3,0,23,0,27,40,0,17,32,5,0,50,16,37,7,0,60,61,18,39,9,0,23,9,7,3,0,17,1,14196,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/patch/apply.js"],"names":["applyPatch","source","uniDiff","options","parsePatch","Array","isArray","length","Error","lines","split","delimiters","match","hunks","compareLine","lineNumber","line","operation","patchContent","errorCount","fuzzFactor","minLine","offset","removeEOFNL","addEOFNL","hunkFits","hunk","toPos","j","content","substr","i","maxLine","oldLines","localOffset","oldStart","iterator","distanceIterator","undefined","diffOffset","newLines","delimiter","linedelimiters","splice","previousOperation","pop","push","_k","join","applyPatches","currentIndex","processIndex","index","complete","loadFile","err","data","updatedContent","patched"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;AAEO,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,OAA5B,EAAmD;AAAA;AAAA;AAAA;AAAdC,EAAAA,OAAc,uEAAJ,EAAI;;AACxD,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,IAAAA,OAAO;AAAG;AAAA;AAAA;;AAAAE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,KAAWF,OAAX,CAAV;AACD;;AAED,MAAIG,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAJ,EAA4B;AAC1B,QAAIA,OAAO,CAACK,MAAR,GAAiB,CAArB,EAAwB;AACtB,YAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAEDN,IAAAA,OAAO,GAAGA,OAAO,CAAC,CAAD,CAAjB;AACD,GAXuD,CAaxD;;;AACA,MAAIO,KAAK,GAAGR,MAAM,CAACS,KAAP,CAAa,qBAAb,CAAZ;AAAA,MACIC,UAAU,GAAGV,MAAM,CAACW,KAAP,CAAa,sBAAb,KAAwC,EADzD;AAAA,MAEIC,KAAK,GAAGX,OAAO,CAACW,KAFpB;AAAA,MAIIC,WAAW,GAAGX,OAAO,CAACW,WAAR,IAAwB,UAACC,UAAD,EAAaC,IAAb,EAAmBC,SAAnB,EAA8BC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAA+CF,MAAAA,IAAI,KAAKE;AAAxD;AAAA,GAJ1C;AAAA,MAKIC,UAAU,GAAG,CALjB;AAAA,MAMIC,UAAU,GAAGjB,OAAO,CAACiB,UAAR,IAAsB,CANvC;AAAA,MAOIC,OAAO,GAAG,CAPd;AAAA,MAQIC,MAAM,GAAG,CARb;AAAA,MAUIC,WAVJ;AAAA,MAWIC,QAXJ;AAaA;;;;;AAGA,WAASC,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AAC7B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACjB,KAAL,CAAWF,MAA/B,EAAuCqB,CAAC,EAAxC,EAA4C;AAC1C,UAAIZ,IAAI,GAAGU,IAAI,CAACjB,KAAL,CAAWmB,CAAX,CAAX;AAAA,UACIX,SAAS,GAAID,IAAI,CAACT,MAAL,GAAc,CAAd,GAAkBS,IAAI,CAAC,CAAD,CAAtB,GAA4B,GAD7C;AAAA,UAEIa,OAAO,GAAIb,IAAI,CAACT,MAAL,GAAc,CAAd,GAAkBS,IAAI,CAACc,MAAL,CAAY,CAAZ,CAAlB,GAAmCd,IAFlD;;AAIA,UAAIC,SAAS,KAAK,GAAd,IAAqBA,SAAS,KAAK,GAAvC,EAA4C;AAC1C;AACA,YAAI,CAACH,WAAW,CAACa,KAAK,GAAG,CAAT,EAAYlB,KAAK,CAACkB,KAAD,CAAjB,EAA0BV,SAA1B,EAAqCY,OAArC,CAAhB,EAA+D;AAC7DV,UAAAA,UAAU;;AAEV,cAAIA,UAAU,GAAGC,UAAjB,EAA6B;AAC3B,mBAAO,KAAP;AACD;AACF;;AACDO,QAAAA,KAAK;AACN;AACF;;AAED,WAAO,IAAP;AACD,GAlDuD,CAoDxD;;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,KAAK,CAACN,MAA1B,EAAkCwB,CAAC,EAAnC,EAAuC;AACrC,QAAIL,IAAI,GAAGb,KAAK,CAACkB,CAAD,CAAhB;AAAA,QACIC,OAAO,GAAGvB,KAAK,CAACF,MAAN,GAAemB,IAAI,CAACO,QADlC;AAAA,QAEIC,WAAW,GAAG,CAFlB;AAAA,QAGIP,KAAK,GAAGL,MAAM,GAAGI,IAAI,CAACS,QAAd,GAAyB,CAHrC;AAKA,QAAIC,QAAQ;AAAG;AAAA;AAAA;;AAAAC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,OAAiBV,KAAjB,EAAwBN,OAAxB,EAAiCW,OAAjC,CAAf;;AAEA,WAAOE,WAAW,KAAKI,SAAvB,EAAkCJ,WAAW,GAAGE,QAAQ,EAAxD,EAA4D;AAC1D,UAAIX,QAAQ,CAACC,IAAD,EAAOC,KAAK,GAAGO,WAAf,CAAZ,EAAyC;AACvCR,QAAAA,IAAI,CAACJ,MAAL,GAAcA,MAAM,IAAIY,WAAxB;AACA;AACD;AACF;;AAED,QAAIA,WAAW,KAAKI,SAApB,EAA+B;AAC7B,aAAO,KAAP;AACD,KAjBoC,CAmBrC;AACA;;;AACAjB,IAAAA,OAAO,GAAGK,IAAI,CAACJ,MAAL,GAAcI,IAAI,CAACS,QAAnB,GAA8BT,IAAI,CAACO,QAA7C;AACD,GA3EuD,CA6ExD;;;AACA,MAAIM,UAAU,GAAG,CAAjB;;AACA,OAAK,IAAIR,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGlB,KAAK,CAACN,MAA1B,EAAkCwB,EAAC,EAAnC,EAAuC;AACrC,QAAIL,KAAI,GAAGb,KAAK,CAACkB,EAAD,CAAhB;AAAA,QACIJ,MAAK,GAAGD,KAAI,CAACS,QAAL,GAAgBT,KAAI,CAACJ,MAArB,GAA8BiB,UAA9B,GAA2C,CADvD;;AAEAA,IAAAA,UAAU,IAAIb,KAAI,CAACc,QAAL,GAAgBd,KAAI,CAACO,QAAnC;;AAEA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAI,CAACjB,KAAL,CAAWF,MAA/B,EAAuCqB,CAAC,EAAxC,EAA4C;AAC1C,UAAIZ,IAAI,GAAGU,KAAI,CAACjB,KAAL,CAAWmB,CAAX,CAAX;AAAA,UACIX,SAAS,GAAID,IAAI,CAACT,MAAL,GAAc,CAAd,GAAkBS,IAAI,CAAC,CAAD,CAAtB,GAA4B,GAD7C;AAAA,UAEIa,OAAO,GAAIb,IAAI,CAACT,MAAL,GAAc,CAAd,GAAkBS,IAAI,CAACc,MAAL,CAAY,CAAZ,CAAlB,GAAmCd,IAFlD;AAAA,UAGIyB,SAAS,GAAGf,KAAI,CAACgB,cAAL,CAAoBd,CAApB,CAHhB;;AAKA,UAAIX,SAAS,KAAK,GAAlB,EAAuB;AACrBU,QAAAA,MAAK;AACN,OAFD,MAEO,IAAIV,SAAS,KAAK,GAAlB,EAAuB;AAC5BR,QAAAA,KAAK,CAACkC,MAAN,CAAahB,MAAb,EAAoB,CAApB;AACAhB,QAAAA,UAAU,CAACgC,MAAX,CAAkBhB,MAAlB,EAAyB,CAAzB;AACF;AACC,OAJM,MAIA,IAAIV,SAAS,KAAK,GAAlB,EAAuB;AAC5BR,QAAAA,KAAK,CAACkC,MAAN,CAAahB,MAAb,EAAoB,CAApB,EAAuBE,OAAvB;AACAlB,QAAAA,UAAU,CAACgC,MAAX,CAAkBhB,MAAlB,EAAyB,CAAzB,EAA4Bc,SAA5B;AACAd,QAAAA,MAAK;AACN,OAJM,MAIA,IAAIV,SAAS,KAAK,IAAlB,EAAwB;AAC7B,YAAI2B,iBAAiB,GAAGlB,KAAI,CAACjB,KAAL,CAAWmB,CAAC,GAAG,CAAf,IAAoBF,KAAI,CAACjB,KAAL,CAAWmB,CAAC,GAAG,CAAf,EAAkB,CAAlB,CAApB,GAA2C,IAAnE;;AACA,YAAIgB,iBAAiB,KAAK,GAA1B,EAA+B;AAC7BrB,UAAAA,WAAW,GAAG,IAAd;AACD,SAFD,MAEO,IAAIqB,iBAAiB,KAAK,GAA1B,EAA+B;AACpCpB,UAAAA,QAAQ,GAAG,IAAX;AACD;AACF;AACF;AACF,GA7GuD,CA+GxD;;;AACA,MAAID,WAAJ,EAAiB;AACf,WAAO,CAACd,KAAK,CAACA,KAAK,CAACF,MAAN,GAAe,CAAhB,CAAb,EAAiC;AAC/BE,MAAAA,KAAK,CAACoC,GAAN;AACAlC,MAAAA,UAAU,CAACkC,GAAX;AACD;AACF,GALD,MAKO,IAAIrB,QAAJ,EAAc;AACnBf,IAAAA,KAAK,CAACqC,IAAN,CAAW,EAAX;AACAnC,IAAAA,UAAU,CAACmC,IAAX,CAAgB,IAAhB;AACD;;AACD,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGtC,KAAK,CAACF,MAAN,GAAe,CAArC,EAAwCwC,EAAE,EAA1C,EAA8C;AAC5CtC,IAAAA,KAAK,CAACsC,EAAD,CAAL,GAAYtC,KAAK,CAACsC,EAAD,CAAL,GAAYpC,UAAU,CAACoC,EAAD,CAAlC;AACD;;AACD,SAAOtC,KAAK,CAACuC,IAAN,CAAW,EAAX,CAAP;AACD,C,CAED;;;AACO,SAASC,YAAT,CAAsB/C,OAAtB,EAA+BC,OAA/B,EAAwC;AAC7C,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,IAAAA,OAAO;AAAG;AAAA;AAAA;;AAAAE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAA;AAAA,KAAWF,OAAX,CAAV;AACD;;AAED,MAAIgD,YAAY,GAAG,CAAnB;;AACA,WAASC,YAAT,GAAwB;AACtB,QAAIC,KAAK,GAAGlD,OAAO,CAACgD,YAAY,EAAb,CAAnB;;AACA,QAAI,CAACE,KAAL,EAAY;AACV,aAAOjD,OAAO,CAACkD,QAAR,EAAP;AACD;;AAEDlD,IAAAA,OAAO,CAACmD,QAAR,CAAiBF,KAAjB,EAAwB,UAASG,GAAT,EAAcC,IAAd,EAAoB;AAC1C,UAAID,GAAJ,EAAS;AACP,eAAOpD,OAAO,CAACkD,QAAR,CAAiBE,GAAjB,CAAP;AACD;;AAED,UAAIE,cAAc,GAAGzD,UAAU,CAACwD,IAAD,EAAOJ,KAAP,EAAcjD,OAAd,CAA/B;AACAA,MAAAA,OAAO,CAACuD,OAAR,CAAgBN,KAAhB,EAAuBK,cAAvB,EAAuC,UAASF,GAAT,EAAc;AACnD,YAAIA,GAAJ,EAAS;AACP,iBAAOpD,OAAO,CAACkD,QAAR,CAAiBE,GAAjB,CAAP;AACD;;AAEDJ,QAAAA,YAAY;AACb,OAND;AAOD,KAbD;AAcD;;AACDA,EAAAA,YAAY;AACb","sourcesContent":["import {parsePatch} from './parse';\nimport distanceIterator from '../util/distance-iterator';\n\nexport function applyPatch(source, uniDiff, options = {}) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  let lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n\n      compareLine = options.compareLine || ((lineNumber, line, operation, patchContent) => line === patchContent),\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n\n      removeEOFNL,\n      addEOFNL;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line);\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    let iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  let diffOffset = 0;\n  for (let i = 0; i < hunks.length; i++) {\n    let hunk = hunks[i],\n        toPos = hunk.oldStart + hunk.offset + diffOffset - 1;\n    diffOffset += hunk.newLines - hunk.oldLines;\n\n    for (let j = 0; j < hunk.lines.length; j++) {\n      let line = hunk.lines[j],\n          operation = (line.length > 0 ? line[0] : ' '),\n          content = (line.length > 0 ? line.substr(1) : line),\n          delimiter = hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        toPos++;\n      } else if (operation === '-') {\n        lines.splice(toPos, 1);\n        delimiters.splice(toPos, 1);\n      /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(toPos, 0, content);\n        delimiters.splice(toPos, 0, delimiter);\n        toPos++;\n      } else if (operation === '\\\\') {\n        let previousOperation = hunk.lines[j - 1] ? hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (let _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nexport function applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  let currentIndex = 0;\n  function processIndex() {\n    let index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function(err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      let updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function(err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/patch/parse.js":{"lineLengths":[25,13,0,46,13,3,32,0,23,30,27,5,25,83,53,63,16,12,0,25,19,44,0,32,76,0,47,14,21,0,0,73,0,19,32,7,0,10,80,79,0,0,27,42,0,21,0,32,29,0,57,14,37,38,43,58,81,14,12,7,5,66,18,0,0,35,62,0,21,62,46,52,0,36,59,7,0,47,59,10,5,20,53,0,0,24,29,39,90,16,32,76,32,76,16,24,60,59,64,0,30,25,5,0,30,25,5,0,21,24,0,37,84,88,149,14,7,0,94,0,94,36,56,0,32,21,39,24,39,21,24,9,14,14,7,42,0,0,43,24,5,0,46,24,41,0,0,25,39,101,7,0,42,103,7,5,0,16,3,0,30,17,3,0,14,1,13176,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/patch/parse.js"],"names":["parsePatch","uniDiff","options","diffstr","split","delimiters","match","list","i","parseIndex","index","push","length","line","test","header","exec","parseFileHeader","hunks","parseHunk","strict","Error","JSON","stringify","fileHeader","keyPrefix","data","fileName","replace","substr","trim","chunkHeaderIndex","chunkHeaderLine","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation"],"mappings":"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","sourcesContent":["export function parsePatch(uniDiff, options = {}) {\n  let diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    let index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if ((/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/).test(line)) {\n        break;\n      }\n\n      // Diff index\n      let header = (/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/).exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      let line = diffstr[i];\n\n      if ((/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/).test(line)) {\n        break;\n      } else if ((/^@@/).test(line)) {\n        index.hunks.push(parseHunk());\n      } else if (line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    const fileHeader = (/^(---|\\+\\+\\+)\\s+(.*)$/).exec(diffstr[i]);\n    if (fileHeader) {\n      let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      const data = fileHeader[2].split('\\t', 2);\n      let fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if ((/^\".*\"$/).test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    let chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    let hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    };\n\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    let addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0\n            && (i + 2 < diffstr.length)\n            && diffstr[i + 1].indexOf('+++ ') === 0\n            && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n      }\n      let operation = (diffstr[i].length == 0 && i != (diffstr.length - 1)) ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/util/distance-iterator.js":{"lineLengths":[25,13,0,46,13,3,30,0,23,63,65,47,8,25,8,23,27,25,32,31,22,30,43,30,22,14,28,79,71,0,0,43,27,7,0,30,5,0,29,30,27,82,31,0,0,43,30,7,0,31,24,80,51,0,4,1,3156,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/util/distance-iterator.js"],"names":["start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","iterator"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACe;AAAA;AAAA;AAAA;AAAA,CAASA,KAAT,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkC;AAC/C,MAAIC,WAAW,GAAG,IAAlB;AAAA,MACIC,iBAAiB,GAAG,KADxB;AAAA,MAEIC,gBAAgB,GAAG,KAFvB;AAAA,MAGIC,WAAW,GAAG,CAHlB;AAKA,SAAO,SAASC,QAAT,GAAoB;AACzB,QAAIJ,WAAW,IAAI,CAACE,gBAApB,EAAsC;AACpC,UAAID,iBAAJ,EAAuB;AACrBE,QAAAA,WAAW;AACZ,OAFD,MAEO;AACLH,QAAAA,WAAW,GAAG,KAAd;AACD,OALmC,CAOpC;AACA;;;AACA,UAAIH,KAAK,GAAGM,WAAR,IAAuBJ,OAA3B,EAAoC;AAClC,eAAOI,WAAP;AACD;;AAEDD,MAAAA,gBAAgB,GAAG,IAAnB;AACD;;AAED,QAAI,CAACD,iBAAL,EAAwB;AACtB,UAAI,CAACC,gBAAL,EAAuB;AACrBF,QAAAA,WAAW,GAAG,IAAd;AACD,OAHqB,CAKtB;AACA;;;AACA,UAAIF,OAAO,IAAID,KAAK,GAAGM,WAAvB,EAAoC;AAClC,eAAO,CAACA,WAAW,EAAnB;AACD;;AAEDF,MAAAA,iBAAiB,GAAG,IAApB;AACA,aAAOG,QAAQ,EAAf;AACD,KA9BwB,CAgCzB;AACA;;AACD,GAlCD;AAmCD","sourcesContent":["// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nexport default function(start, minLine, maxLine) {\n  let wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/patch/merge.js":{"lineLengths":[25,13,0,46,13,3,38,22,0,23,3,25,29,23,1,0,3,25,27,23,1,0,3,25,33,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,30,27,28,25,34,47,47,0,31,29,10,25,3,0,31,29,10,25,3,1,0,36,31,35,98,83,34,0,35,43,3,0,47,33,87,63,63,57,57,42,51,41,41,37,37,12,38,79,79,73,73,5,3,0,17,20,22,21,23,0,78,48,24,6,54,24,6,0,49,65,57,18,66,56,65,61,20,68,12,38,24,73,20,101,20,17,8,115,20,18,33,5,3,0,13,1,0,33,34,55,14,33,11,31,0,33,14,31,9,33,19,31,18,8,5,0,16,74,5,0,12,31,9,29,0,31,13,29,7,31,22,29,41,6,3,0,15,1,0,33,70,1,0,43,24,16,10,26,12,17,20,6,3,1,0,34,90,1,0,34,10,28,28,37,28,21,4,1,0,75,91,74,14,23,21,12,4,15,24,22,12,34,0,35,118,0,78,45,48,0,117,26,38,67,31,22,0,29,22,0,31,0,29,0,31,20,29,29,31,17,29,7,31,25,29,28,67,31,23,0,29,24,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,29,67,31,33,67,32,39,46,25,35,19,20,12,25,64,5,46,0,0,29,30,22,1,0,42,38,42,0,58,72,8,29,7,27,0,29,10,27,5,29,20,27,112,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,18,0,13,15,29,7,27,0,29,10,27,5,29,20,27,114,31,23,0,29,0,31,0,29,0,31,21,29,29,31,18,29,7,31,25,29,21,0,13,5,13,27,5,25,0,27,8,25,3,27,13,25,30,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,16,0,11,3,0,42,1,0,43,38,54,0,28,29,21,0,27,0,29,0,27,0,29,19,27,27,29,16,27,5,29,23,27,26,10,85,3,1,0,38,23,19,19,15,17,5,1,0,45,78,44,26,20,3,1,0,39,46,44,26,3,1,0,31,15,46,0,44,145,0,47,22,5,0,32,21,20,12,12,5,3,0,13,1,0,46,19,18,21,29,25,0,80,42,85,0,27,12,5,0,57,23,86,50,0,28,24,0,33,29,44,7,5,0,47,27,20,12,24,5,3,0,70,22,3,0,19,19,3,0,44,44,3,0,10,19,20,4,1,0,30,49,37,11,1,0,58,35,82,0,63,19,5,3,0,23,14,1,0,37,19,19,33,35,51,56,0,35,55,39,16,31,9,7,0,35,55,39,16,31,9,7,12,75,19,7,0,75,19,7,5,5,10,23,22,4,1,34588,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/patch/merge.js"],"names":["calcLineCount","hunk","calcOldNewLineCount","lines","oldLines","newLines","undefined","merge","mine","theirs","base","loadPatch","ret","index","newFileName","fileNameChanged","oldFileName","oldHeader","newHeader","selectField","hunks","mineIndex","theirsIndex","mineOffset","theirsOffset","length","mineCurrent","oldStart","Infinity","theirsCurrent","hunkBefore","push","cloneHunk","mergedHunk","Math","min","newStart","mergeLines","param","test","parsePatch","Error","structuredPatch","patch","conflict","check","offset","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","mutualChange","collectChange","removal","insertTrailing","myChanges","theirChanges","allRemoves","arrayStartsWith","skipRemoveSuperset","arrayEqual","swap","collectContext","merged","insert","line","state","operation","matchChanges","changes","matchIndex","contextChanges","conflicted","change","match","substr","reduce","prev","removeChanges","delta","i","changeContent","forEach","myCount","theirCount"],"mappings":"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","sourcesContent":["import {structuredPatch} from './create';\nimport {parsePatch} from './parse';\n\nimport {arrayEqual, arrayStartsWith} from '../util/array';\n\nexport function calcLineCount(hunk) {\n  const {oldLines, newLines} = calcOldNewLineCount(hunk.lines);\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nexport function merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  let ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  let mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    let mineCurrent = mine.hunks[mineIndex] || {oldStart: Infinity},\n        theirsCurrent = theirs.hunks[theirsIndex] || {oldStart: Infinity};\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      let mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if ((/^@@/m).test(param) || ((/^Index:/m).test(param))) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {mine, theirs};\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart\n    && (test.oldStart + test.oldLines) < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  let mine = {offset: mineOffset, lines: mineLines, index: 0},\n      their = {offset: theirOffset, lines: theirLines, index: 0};\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    let mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+')\n        && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      // Mine inserted\n      hunk.lines.push(... collectChange(mine));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      // Theirs inserted\n      hunk.lines.push(... collectChange(their));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges)\n        && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      hunk.lines.push(... myChanges);\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges)\n        && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      hunk.lines.push(... theirChanges);\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    hunk.lines.push(... myChanges);\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  let myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    hunk.lines.push(... theirChanges.merged);\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    let line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  let ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    let line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  let changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length\n        && state.index < state.lines.length) {\n    let change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+'\n      && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged,\n    changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function(prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (let i = 0; i < delta; i++) {\n    let changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  let oldLines = 0;\n  let newLines = 0;\n\n  lines.forEach(function(line) {\n    if (typeof line !== 'string') {\n      let myCount = calcOldNewLineCount(line.mine);\n      let theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return {oldLines, newLines};\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/patch/create.js":{"lineLengths":[25,13,0,46,13,3,42,34,50,34,0,23,3,25,31,23,1,0,179,0,190,0,416,0,130,0,91,0,183,0,23,99,17,17,3,0,47,24,3,0,12,27,5,25,0,27,7,25,3,27,12,25,28,13,14,13,53,0,32,39,25,7,3,0,17,24,24,20,18,18,0,27,29,25,6,26,78,26,0,43,31,20,0,29,53,27,31,32,32,0,19,97,43,43,9,29,0,0,31,0,29,0,31,18,29,27,31,15,29,7,31,25,29,34,51,46,0,0,26,32,14,32,7,12,52,26,76,73,35,25,0,33,24,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,32,16,35,25,0,33,37,68,0,35,0,33,0,35,23,33,31,35,20,33,11,35,29,33,54,0,22,36,60,36,60,27,12,0,72,38,51,51,86,0,72,99,80,80,13,0,70,60,13,11,0,27,28,28,24,9,7,0,30,30,5,4,0,41,29,10,27,7,3,0,10,29,29,25,25,16,4,1,0,28,15,0,45,43,3,0,82,109,109,0,47,83,59,64,0,30,25,5,0,30,25,5,0,112,36,3,0,31,1,0,103,111,1,0,79,96,1,15220,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/patch/create.js"],"names":["structuredPatch","oldFileName","newFileName","oldStr","newStr","oldHeader","newHeader","options","context","diff","diffLines","push","value","lines","contextLines","map","entry","hunks","oldRangeStart","newRangeStart","curRange","oldLine","newLine","i","current","replace","split","added","removed","prev","slice","length","contextSize","Math","min","hunk","oldStart","oldLines","newStart","newLines","oldEOFNewline","test","newEOFNewline","noNlBeforeAdds","splice","formatPatch","ret","apply","join","createTwoFilesPatch","createPatch","fileName"],"mappings":"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","sourcesContent":["import {diffLines} from '../diff/line';\n\nexport function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  const diff = diffLines(oldStr, newStr, options);\n  diff.push({value: '', lines: []}); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function(entry) { return ' ' + entry; });\n  }\n\n  let hunks = [];\n  let oldRangeStart = 0, newRangeStart = 0, curRange = [],\n      oldLine = 1, newLine = 1;\n  for (let i = 0; i < diff.length; i++) {\n    const current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        const prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      curRange.push(... lines.map(function(entry) {\n        return (current.added ? '+' : '-') + entry;\n      }));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          // Overlapping\n          curRange.push(... contextLines(lines));\n        } else {\n          // end the range and output\n          let contextSize = Math.min(lines.length, options.context);\n          curRange.push(... contextLines(lines.slice(0, contextSize)));\n\n          let hunk = {\n            oldStart: oldRangeStart,\n            oldLines: (oldLine - oldRangeStart + contextSize),\n            newStart: newRangeStart,\n            newLines: (newLine - newRangeStart + contextSize),\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            let oldEOFNewline = ((/\\n$/).test(oldStr));\n            let newEOFNewline = ((/\\n$/).test(newStr));\n            let noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n            if ((!oldEOFNewline && !noNlBeforeAdds) || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nexport function formatPatch(diff) {\n  const ret = [];\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (let i = 0; i < diff.hunks.length; i++) {\n    const hunk = diff.hunks[i];\n    // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n    ret.push(\n      '@@ -' + hunk.oldStart + ',' + hunk.oldLines\n      + ' +' + hunk.newStart + ',' + hunk.newLines\n      + ' @@'\n    );\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nexport function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nexport function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/util/array.js":{"lineLengths":[25,13,0,46,13,3,32,42,0,23,27,30,17,3,0,31,1,0,40,36,17,3,0,42,32,19,5,3,0,14,1,1476,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/util/array.js"],"names":["arrayEqual","a","b","length","arrayStartsWith","array","start","i"],"mappings":";;;;;;;;;;AAAO,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AAC/B,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;AACzB,WAAO,KAAP;AACD;;AAED,SAAOC,eAAe,CAACH,CAAD,EAAIC,CAAJ,CAAtB;AACD;;AAEM,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AAC5C,MAAIA,KAAK,CAACH,MAAN,GAAeE,KAAK,CAACF,MAAzB,EAAiC;AAC/B,WAAO,KAAP;AACD;;AAED,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACH,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACrC,QAAID,KAAK,CAACC,CAAD,CAAL,KAAaF,KAAK,CAACE,CAAD,CAAtB,EAA2B;AACzB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["export function arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nexport function arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (let i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/convert/dmp.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,65,39,15,13,16,0,44,24,0,23,20,32,21,12,20,5,0,40,3,0,13,1,1644,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/convert/dmp.js"],"names":["convertChangesToDMP","changes","ret","change","operation","i","length","added","removed","push","value"],"mappings":";;;;;;;;;AAAA;AACO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;AAAA,MACIC,MADJ;AAAA,MAEIC,SAFJ;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCF,IAAAA,MAAM,GAAGF,OAAO,CAACI,CAAD,CAAhB;;AACA,QAAIF,MAAM,CAACI,KAAX,EAAkB;AAChBH,MAAAA,SAAS,GAAG,CAAZ;AACD,KAFD,MAEO,IAAID,MAAM,CAACK,OAAX,EAAoB;AACzBJ,MAAAA,SAAS,GAAG,CAAC,CAAb;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,GAAG,CAAZ;AACD;;AAEDF,IAAAA,GAAG,CAACO,IAAJ,CAAS,CAACL,SAAD,EAAYD,MAAM,CAACO,KAAnB,CAAT;AACD;;AACD,SAAOR,GAAP;AACD","sourcesContent":["// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nexport function convertChangesToDMP(changes) {\n  let ret = [],\n      change,\n      operation;\n  for (let i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/lib/convert/xml.js":{"lineLengths":[25,13,0,46,13,3,50,0,23,39,15,0,44,28,0,23,24,32,24,5,0,39,0,23,25,32,25,5,3,0,22,1,0,24,12,31,30,30,32,11,1,2564,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/diff/src/convert/xml.js"],"names":["convertChangesToXML","changes","ret","i","length","change","added","push","removed","escapeHTML","value","join","s","n","replace"],"mappings":";;;;;;;;;AAAO,SAASA,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,MAAM,GAAGJ,OAAO,CAACE,CAAD,CAApB;;AACA,QAAIE,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT;AACD;;AAEDL,IAAAA,GAAG,CAACK,IAAJ,CAASE,UAAU,CAACJ,MAAM,CAACK,KAAR,CAAnB;;AAEA,QAAIL,MAAM,CAACC,KAAX,EAAkB;AAChBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD,KAFD,MAEO,IAAIF,MAAM,CAACG,OAAX,EAAoB;AACzBN,MAAAA,GAAG,CAACK,IAAJ,CAAS,QAAT;AACD;AACF;;AACD,SAAOL,GAAG,CAACS,IAAJ,CAAS,EAAT,CAAP;AACD;;AAED,SAASF,UAAT,CAAoBG,CAApB,EAAuB;AACrB,MAAIC,CAAC,GAAGD,CAAR;AACAC,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,OAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,CAAJ;AACAD,EAAAA,CAAC,GAAGA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,QAAhB,CAAJ;AAEA,SAAOD,CAAP;AACD","sourcesContent":["export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/get-caller-file/index.js":{"lineLengths":[13,69,69,2,58,51,46,44,208,5,55,68,34,51,54,35,56,54,75,5,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/get-caller-file/index.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,qEAAqE;AACrE,EAAE;AACF,0DAA0D;AAE1D,iBAAS,SAAS,aAAa,CAAC,QAAY;IAAZ,yBAAA,EAAA,YAAY;IAC1C,IAAI,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,SAAS,CAAC,kGAAkG,GAAG,QAAQ,GAAG,oCAAoC,GAAG,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;KACzM;IAED,IAAM,oBAAoB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IACrD,KAAK,CAAC,iBAAiB,GAAG,UAAC,CAAC,EAAE,KAAK,IAAM,OAAA,KAAK,EAAL,CAAK,CAAC;IAC/C,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IAChC,KAAK,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;IAG/C,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC/C,2BAA2B;QAC3B,gDAAgD;QAChD,8CAA8C;QAC9C,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;KAC7E;AACH,CAAC,CAAC"},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express-handlebars/dist/index.js":{"lineLengths":[13,2,54,49,47,3,62,69,59,57,25,43,52,1,24,25,43,33,1,24,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express-handlebars/lib/index.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;AAEH,2DAAqD;AAM5C,4BANF,4BAAiB,CAME;AAE1B,SAAgB,MAAM,CAAE,MAA0B;IAA1B,uBAAA,EAAA,WAA0B;IACjD,OAAO,IAAI,4BAAiB,CAAC,MAAM,CAAC,CAAC;AACtC,CAAC;AAFD,wBAEC;AAED,SAAgB,MAAM,CAAE,MAA0B;IAA1B,uBAAA,EAAA,WAA0B;IACjD,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;AAC9B,CAAC;AAFD,wBAEC"},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express-handlebars/dist/express-handlebars.js":{"lineLengths":[13,2,54,49,47,3,55,45,62,29,76,28,9,17,6,43,2,90,112,64,99,102,118,78,7,2,74,117,157,70,23,70,23,169,52,28,46,72,65,65,24,128,106,89,87,42,43,13,39,66,89,5,2,62,39,32,27,29,31,43,50,80,21,27,27,21,26,27,26,23,31,30,2,52,40,47,43,51,56,29,49,49,31,45,46,9,65,27,30,46,27,5,66,49,60,162,29,52,35,27,70,54,25,111,144,98,72,55,47,114,81,74,62,45,79,77,77,71,66,45,108,76,116,45,62,76,102,47,61,57,47,59,67,73,76,70,51,37,35,37,27,41,38,79,45,102,63,76,40,67,98,59,85,76,29,25,56,17,15,11,6,76,49,60,49,29,52,35,27,58,69,87,68,39,60,25,37,27,50,111,51,137,80,27,62,61,27,42,47,36,50,17,15,11,6,76,49,60,53,29,52,35,27,46,86,27,46,92,96,33,27,46,34,64,62,25,52,17,15,11,6,80,49,49,60,86,52,35,27,69,58,105,117,32,27,75,88,109,207,165,52,17,15,11,6,85,49,53,60,130,52,35,27,60,47,41,25,42,39,40,78,114,31,25,75,76,40,93,108,105,25,69,88,34,109,27,134,41,49,47,39,94,47,45,47,67,26,37,27,50,92,27,41,83,65,181,27,41,37,27,45,48,27,42,40,48,59,17,15,11,6,84,81,49,65,6,84,49,68,6,89,49,49,49,6,84,71,49,60,43,52,35,27,56,46,62,58,50,72,27,56,37,27,50,62,41,41,27,98,54,52,25,50,72,27,42,46,36,50,17,15,11,6,73,49,60,45,52,35,27,58,46,69,64,35,56,25,37,27,50,95,62,61,27,42,47,36,50,17,15,11,6,83,55,28,42,72,9,24,42,9,20,6,76,36,25,9,41,40,80,34,33,51,29,36,13,26,40,9,30,20,6,76,26,24,9,40,39,9,63,6,29,5,36,46],"data":{"version":3,"file":"express-handlebars.js","sourceRoot":"","sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/express-handlebars/lib/express-handlebars.ts"],"names":[],"mappings":"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"},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars.js":{"lineLengths":[13,0,26,23,0,97,0,57,0,69,0,19,0,66,0,77,0,68,0,76,0,97,0,107,0,74,0,85,0,64,0,75,0,52,19,21,0,42,67,4,45,70,4,0,46,53,76,45,43,77,0,12,1,0,20,21,0,40,0,54,0,23,0,26,36,2844,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars.js"],"names":[],"mappings":";;;;;;;iCAAoB,sBAAsB;;;;;;qCAG1B,2BAA2B;;;;sCAKpC,4BAA4B;;0CACW,gCAAgC;;oDAC/C,2CAA2C;;;;yCACtD,+BAA+B;;;;oCAE5B,0BAA0B;;;;AAEjD,IAAI,OAAO,GAAG,+BAAQ,MAAM,CAAC;AAC7B,SAAS,MAAM,GAAG;AAChB,MAAI,EAAE,GAAG,OAAO,EAAE,CAAC;;AAEnB,IAAE,CAAC,OAAO,GAAG,UAAS,KAAK,EAAE,OAAO,EAAE;AACpC,WAAO,oCAAQ,KAAK,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;GACpC,CAAC;AACF,IAAE,CAAC,UAAU,GAAG,UAAS,KAAK,EAAE,OAAO,EAAE;AACvC,WAAO,uCAAW,KAAK,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;GACvC,CAAC;;AAEF,IAAE,CAAC,GAAG,qCAAM,CAAC;AACb,IAAE,CAAC,QAAQ,uCAAW,CAAC;AACvB,IAAE,CAAC,kBAAkB,oDAAqB,CAAC;AAC3C,IAAE,CAAC,MAAM,iCAAS,CAAC;AACnB,IAAE,CAAC,KAAK,gCAAQ,CAAC;AACjB,IAAE,CAAC,sBAAsB,iDAAyB,CAAC;;AAEnD,SAAO,EAAE,CAAC;CACX;;AAED,IAAI,IAAI,GAAG,MAAM,EAAE,CAAC;AACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;AAErB,kCAAW,IAAI,CAAC,CAAC;;AAEjB,IAAI,CAAC,OAAO,yCAAU,CAAC;;AAEvB,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;;qBAER,IAAI","file":"handlebars.js","sourcesContent":["import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport {\n  parser as Parser,\n  parse,\n  parseWithoutProcessing\n} from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n  hb.parseWithoutProcessing = parseWithoutProcessing;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars.runtime.js":{"lineLengths":[13,0,26,23,0,97,0,23,0,272,0,51,0,52,0,70,71,0,64,0,75,0,61,0,73,0,53,0,54,0,57,0,58,0,64,0,75,0,96,19,44,0,25,52,50,19,47,0,18,33,38,4,0,12,1,0,20,21,0,40,0,23,0,26,36,2584,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars.runtime.js"],"names":[],"mappings":";;;;;;;;;;;8BAAsB,mBAAmB;;IAA7B,IAAI;;;;;oCAIO,0BAA0B;;;;mCAC3B,wBAAwB;;;;+BACvB,oBAAoB;;IAA/B,KAAK;;iCACQ,sBAAsB;;IAAnC,OAAO;;oCAEI,0BAA0B;;;;;AAGjD,SAAS,MAAM,GAAG;AAChB,MAAI,EAAE,GAAG,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;;AAE1C,OAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AACvB,IAAE,CAAC,UAAU,oCAAa,CAAC;AAC3B,IAAE,CAAC,SAAS,mCAAY,CAAC;AACzB,IAAE,CAAC,KAAK,GAAG,KAAK,CAAC;AACjB,IAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;;AAE7C,IAAE,CAAC,EAAE,GAAG,OAAO,CAAC;AAChB,IAAE,CAAC,QAAQ,GAAG,UAAS,IAAI,EAAE;AAC3B,WAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;GACnC,CAAC;;AAEF,SAAO,EAAE,CAAC;CACX;;AAED,IAAI,IAAI,GAAG,MAAM,EAAE,CAAC;AACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;AAErB,kCAAW,IAAI,CAAC,CAAC;;AAEjB,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;;qBAER,IAAI","file":"handlebars.runtime.js","sourcesContent":["import * as base from './handlebars/base';\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\nimport SafeString from './handlebars/safe-string';\nimport Exception from './handlebars/exception';\nimport * as Utils from './handlebars/utils';\nimport * as runtime from './handlebars/runtime';\n\nimport noConflict from './handlebars/no-conflict';\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  let hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = SafeString;\n  hb.Exception = Exception;\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function(spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst['default'] = inst;\n\nexport default inst;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/base.js":{"lineLengths":[13,0,26,54,23,0,97,0,32,0,40,0,53,0,36,0,42,0,34,0,47,0,62,0,22,26,26,46,42,0,78,24,70,21,21,16,24,23,23,15,2,0,44,35,0,63,31,33,37,0,40,46,1,0,35,37,0,30,31,0,53,52,15,84,7,40,12,30,5,4,53,30,4,0,60,52,41,12,43,112,7,36,5,4,55,31,4,0,59,52,15,87,7,43,12,33,5,4,59,33,4,5,81,61,5,71,49,3,2,0,34,0,18,41,37,6348,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/base.js"],"names":[],"mappings":";;;;;;;;qBAA8C,SAAS;;yBACjC,aAAa;;;;uBACI,WAAW;;0BACR,cAAc;;sBACrC,UAAU;;;;mCACS,yBAAyB;;AAExD,IAAM,OAAO,GAAG,OAAO,CAAC;;AACxB,IAAM,iBAAiB,GAAG,CAAC,CAAC;;AAC5B,IAAM,iCAAiC,GAAG,CAAC,CAAC;;;AAE5C,IAAM,gBAAgB,GAAG;AAC9B,GAAC,EAAE,aAAa;AAChB,GAAC,EAAE,eAAe;AAClB,GAAC,EAAE,eAAe;AAClB,GAAC,EAAE,UAAU;AACb,GAAC,EAAE,kBAAkB;AACrB,GAAC,EAAE,iBAAiB;AACpB,GAAC,EAAE,iBAAiB;AACpB,GAAC,EAAE,UAAU;CACd,CAAC;;;AAEF,IAAM,UAAU,GAAG,iBAAiB,CAAC;;AAE9B,SAAS,qBAAqB,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE;AACnE,MAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC7B,MAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;AAC/B,MAAI,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;;AAEnC,kCAAuB,IAAI,CAAC,CAAC;AAC7B,wCAA0B,IAAI,CAAC,CAAC;CACjC;;AAED,qBAAqB,CAAC,SAAS,GAAG;AAChC,aAAW,EAAE,qBAAqB;;AAElC,QAAM,qBAAQ;AACd,KAAG,EAAE,oBAAO,GAAG;;AAEf,gBAAc,EAAE,wBAAS,IAAI,EAAE,EAAE,EAAE;AACjC,QAAI,gBAAS,IAAI,CAAC,IAAI,CAAC,KAAK,UAAU,EAAE;AACtC,UAAI,EAAE,EAAE;AACN,cAAM,2BAAc,yCAAyC,CAAC,CAAC;OAChE;AACD,oBAAO,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAC5B,MAAM;AACL,UAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;KACzB;GACF;AACD,kBAAgB,EAAE,0BAAS,IAAI,EAAE;AAC/B,WAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;GAC3B;;AAED,iBAAe,EAAE,yBAAS,IAAI,EAAE,OAAO,EAAE;AACvC,QAAI,gBAAS,IAAI,CAAC,IAAI,CAAC,KAAK,UAAU,EAAE;AACtC,oBAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC7B,MAAM;AACL,UAAI,OAAO,OAAO,KAAK,WAAW,EAAE;AAClC,cAAM,yEACwC,IAAI,oBACjD,CAAC;OACH;AACD,UAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;KAC/B;GACF;AACD,mBAAiB,EAAE,2BAAS,IAAI,EAAE;AAChC,WAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;GAC5B;;AAED,mBAAiB,EAAE,2BAAS,IAAI,EAAE,EAAE,EAAE;AACpC,QAAI,gBAAS,IAAI,CAAC,IAAI,CAAC,KAAK,UAAU,EAAE;AACtC,UAAI,EAAE,EAAE;AACN,cAAM,2BAAc,4CAA4C,CAAC,CAAC;OACnE;AACD,oBAAO,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;KAC/B,MAAM;AACL,UAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;KAC5B;GACF;AACD,qBAAmB,EAAE,6BAAS,IAAI,EAAE;AAClC,WAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;GAC9B;;;;;AAKD,6BAA2B,EAAA,uCAAG;AAC5B,gDAAuB,CAAC;GACzB;CACF,CAAC;;AAEK,IAAI,GAAG,GAAG,oBAAO,GAAG,CAAC;;;QAEnB,WAAW;QAAE,MAAM","file":"base.js","sourcesContent":["import { createFrame, extend, toString } from './utils';\nimport Exception from './exception';\nimport { registerDefaultHelpers } from './helpers';\nimport { registerDefaultDecorators } from './decorators';\nimport logger from './logger';\nimport { resetLoggedProperties } from './internal/proto-access';\n\nexport const VERSION = '4.7.7';\nexport const COMPILER_REVISION = 8;\nexport const LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexport const REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nconst objectType = '[object Object]';\n\nexport function HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  registerDefaultHelpers(this);\n  registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: logger.log,\n\n  registerHelper: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple helpers');\n      }\n      extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function(name, partial) {\n    if (toString.call(name) === objectType) {\n      extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new Exception(\n          `Attempting to register a partial called \"${name}\" as undefined`\n        );\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple decorators');\n      }\n      extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses() {\n    resetLoggedProperties();\n  }\n};\n\nexport let log = logger.log;\n\nexport { createFrame, logger };\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/utils.js":{"lineLengths":[13,0,26,24,26,44,26,34,34,46,14,15,14,14,16,16,16,15,2,0,28,27,0,26,21,1,0,40,46,35,68,37,7,5,3,0,13,1,0,41,0,28,22,61,31,45,37,2,51,26,22,54,87,4,1,32,0,30,0,26,49,96,2,0,26,89,0,32,53,29,15,5,3,12,1,0,35,35,59,34,29,32,16,25,25,5,0,82,85,58,25,3,0,31,18,3,46,1,0,25,30,16,52,16,10,17,3,1,0,30,33,25,15,1,0,35,20,16,1,0,45,53,1,7328,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/utils.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["const escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nconst badChars = /[&<>\"'`=]/g,\n  possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nexport function extend(obj /* , ...source */) {\n  for (let i = 1; i < arguments.length; i++) {\n    for (let key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nexport let toString = Object.prototype.toString;\n\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nlet isFunction = function(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  isFunction = function(value) {\n    return (\n      typeof value === 'function' &&\n      toString.call(value) === '[object Function]'\n    );\n  };\n}\nexport { isFunction };\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nexport const isArray =\n  Array.isArray ||\n  function(value) {\n    return value && typeof value === 'object'\n      ? toString.call(value) === '[object Array]'\n      : false;\n  };\n\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\nexport function indexOf(array, value) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nexport function isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function createFrame(object) {\n  let frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nexport function blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nexport function appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/exception.js":{"lineLengths":[13,0,26,114,0,35,29,23,32,25,28,0,12,26,33,30,31,0,43,3,0,60,0,101,53,49,3,0,28,32,45,3,0,7,14,29,41,0,84,32,34,47,24,26,11,50,27,26,11,14,29,35,7,5,17,50,3,1,0,34,0,31,36,4284,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/exception.js"],"names":[],"mappings":";;;AAAA,IAAM,UAAU,GAAG,CACjB,aAAa,EACb,UAAU,EACV,YAAY,EACZ,eAAe,EACf,SAAS,EACT,MAAM,EACN,QAAQ,EACR,OAAO,CACR,CAAC;;AAEF,SAAS,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE;AAChC,MAAI,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,GAAG;MACxB,IAAI,YAAA;MACJ,aAAa,YAAA;MACb,MAAM,YAAA;MACN,SAAS,YAAA,CAAC;;AAEZ,MAAI,GAAG,EAAE;AACP,QAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;AACtB,iBAAa,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;AAC7B,UAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;AAC1B,aAAS,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC;;AAE3B,WAAO,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC;GACxC;;AAED,MAAI,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;;AAG1D,OAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;AAChD,QAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;GAC9C;;;AAGD,MAAI,KAAK,CAAC,iBAAiB,EAAE;AAC3B,SAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;GAC1C;;AAED,MAAI;AACF,QAAI,GAAG,EAAE;AACP,UAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,UAAI,CAAC,aAAa,GAAG,aAAa,CAAC;;;;AAInC,UAAI,MAAM,CAAC,cAAc,EAAE;AACzB,cAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;AACpC,eAAK,EAAE,MAAM;AACb,oBAAU,EAAE,IAAI;SACjB,CAAC,CAAC;AACH,cAAM,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE;AACvC,eAAK,EAAE,SAAS;AAChB,oBAAU,EAAE,IAAI;SACjB,CAAC,CAAC;OACJ,MAAM;AACL,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;OAC5B;KACF;GACF,CAAC,OAAO,GAAG,EAAE;;GAEb;CACF;;AAED,SAAS,CAAC,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;;qBAEnB,SAAS","file":"exception.js","sourcesContent":["const errorProps = [\n  'description',\n  'fileName',\n  'lineNumber',\n  'endLineNumber',\n  'message',\n  'name',\n  'number',\n  'stack'\n];\n\nfunction Exception(message, node) {\n  let loc = node && node.loc,\n    line,\n    endLineNumber,\n    column,\n    endColumn;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  let tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (let idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexport default Exception;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers.js":{"lineLengths":[13,0,26,56,46,23,0,97,0,75,0,85,0,45,0,57,0,64,0,75,0,41,0,53,0,43,0,55,0,49,0,61,0,45,0,57,0,43,51,37,46,35,36,39,37,1,0,62,37,62,22,42,5,3,1,2228,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/helpers.js"],"names":[],"mappings":";;;;;;;;;yCAAuC,gCAAgC;;;;2BAC9C,gBAAgB;;;;oCACP,0BAA0B;;;;yBACrC,cAAc;;;;0BACb,eAAe;;;;6BACZ,kBAAkB;;;;2BACpB,gBAAgB;;;;AAElC,SAAS,sBAAsB,CAAC,QAAQ,EAAE;AAC/C,yCAA2B,QAAQ,CAAC,CAAC;AACrC,2BAAa,QAAQ,CAAC,CAAC;AACvB,oCAAsB,QAAQ,CAAC,CAAC;AAChC,yBAAW,QAAQ,CAAC,CAAC;AACrB,0BAAY,QAAQ,CAAC,CAAC;AACtB,6BAAe,QAAQ,CAAC,CAAC;AACzB,2BAAa,QAAQ,CAAC,CAAC;CACxB;;AAEM,SAAS,iBAAiB,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE;AAClE,MAAI,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAChC,YAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC1D,QAAI,CAAC,UAAU,EAAE;AACf,aAAO,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;KACrC;GACF;CACF","file":"helpers.js","sourcesContent":["import registerBlockHelperMissing from './helpers/block-helper-missing';\nimport registerEach from './helpers/each';\nimport registerHelperMissing from './helpers/helper-missing';\nimport registerIf from './helpers/if';\nimport registerLog from './helpers/log';\nimport registerLookup from './helpers/lookup';\nimport registerWith from './helpers/with';\n\nexport function registerDefaultHelpers(instance) {\n  registerBlockHelperMissing(instance);\n  registerEach(instance);\n  registerHelperMissing(instance);\n  registerIf(instance);\n  registerLog(instance);\n  registerLookup(instance);\n  registerWith(instance);\n}\n\nexport function moveHelperToHooks(instance, helperName, keepHelper) {\n  if (instance.helpers[helperName]) {\n    instance.hooks[helperName] = instance.helpers[helperName];\n    if (!keepHelper) {\n      delete instance.helpers[helperName];\n    }\n  }\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js":{"lineLengths":[13,0,26,0,33,0,42,77,34,24,0,27,22,54,27,41,31,26,39,9,0,55,14,29,7,12,40,52,92,33,7,0,34,5,5,2,0,36,2844,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/helpers/block-helper-missing.js"],"names":[],"mappings":";;;;qBAAwD,UAAU;;qBAEnD,UAAS,QAAQ,EAAE;AAChC,UAAQ,CAAC,cAAc,CAAC,oBAAoB,EAAE,UAAS,OAAO,EAAE,OAAO,EAAE;AACvE,QAAI,OAAO,GAAG,OAAO,CAAC,OAAO;QAC3B,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;;AAElB,QAAI,OAAO,KAAK,IAAI,EAAE;AACpB,aAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB,MAAM,IAAI,OAAO,KAAK,KAAK,IAAI,OAAO,IAAI,IAAI,EAAE;AAC/C,aAAO,OAAO,CAAC,IAAI,CAAC,CAAC;KACtB,MAAM,IAAI,eAAQ,OAAO,CAAC,EAAE;AAC3B,UAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACtB,YAAI,OAAO,CAAC,GAAG,EAAE;AACf,iBAAO,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC9B;;AAED,eAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;OAChD,MAAM;AACL,eAAO,OAAO,CAAC,IAAI,CAAC,CAAC;OACtB;KACF,MAAM;AACL,UAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,EAAE;AAC/B,YAAI,IAAI,GAAG,mBAAY,OAAO,CAAC,IAAI,CAAC,CAAC;AACrC,YAAI,CAAC,WAAW,GAAG,yBACjB,OAAO,CAAC,IAAI,CAAC,WAAW,EACxB,OAAO,CAAC,IAAI,CACb,CAAC;AACF,eAAO,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;OAC1B;;AAED,aAAO,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAC7B;GACF,CAAC,CAAC;CACJ","file":"block-helper-missing.js","sourcesContent":["import { appendContextPath, createFrame, isArray } from '../utils';\n\nexport default function(instance) {\n  instance.registerHelper('blockHelperMissing', function(context, options) {\n    let inverse = options.inverse,\n      fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        let data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.name\n        );\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/each.js":{"lineLengths":[13,0,26,23,0,97,0,33,0,41,0,53,0,42,63,19,70,5,0,24,34,14,17,25,32,0,38,93,5,0,37,35,5,0,23,46,5,0,48,17,25,27,33,27,0,26,49,9,7,0,38,19,93,9,5,0,49,36,50,29,58,11,9,68,28,57,72,36,9,29,50,56,9,14,22,35,0,55,81,82,41,41,45,13,27,16,13,39,49,11,13,7,5,0,18,26,5,0,15,5,2,0,36,7068,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/helpers/each.js"],"names":[],"mappings":"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","file":"each.js","sourcesContent":["import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isArray,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('each', function(context, options) {\n    if (!options) {\n      throw new Exception('Must pass iterator to #each');\n    }\n\n    let fn = options.fn,\n      inverse = options.inverse,\n      i = 0,\n      ret = '',\n      data,\n      contextPath;\n\n    if (options.data && options.ids) {\n      contextPath =\n        appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret =\n        ret +\n        fn(context[field], {\n          data: data,\n          blockParams: blockParams(\n            [context[field], field],\n            [contextPath + field, null]\n          )\n        });\n    }\n\n    if (context && typeof context === 'object') {\n      if (isArray(context)) {\n        for (let j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else if (global.Symbol && context[global.Symbol.iterator]) {\n        const newContext = [];\n        const iterator = context[global.Symbol.iterator]();\n        for (let it = iterator.next(); !it.done; it = iterator.next()) {\n          newContext.push(it.value);\n        }\n        context = newContext;\n        for (let j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        let priorKey;\n\n        Object.keys(context).forEach(key => {\n          // We're running the iterations one step out of sync so we can detect\n          // the last iteration without have to scan the object twice and create\n          // an itermediate keys array.\n          if (priorKey !== undefined) {\n            execIteration(priorKey, i - 1);\n          }\n          priorKey = key;\n          i++;\n        });\n        if (priorKey !== undefined) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js":{"lineLengths":[13,0,26,23,0,97,0,41,0,53,0,42,77,33,48,23,12,63,105,5,5,2,0,36,1284,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/helpers/helper-missing.js"],"names":[],"mappings":";;;;;;;yBAAsB,cAAc;;;;qBAErB,UAAS,QAAQ,EAAE;AAChC,UAAQ,CAAC,cAAc,CAAC,eAAe,EAAE,iCAAgC;AACvE,QAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;;AAE1B,aAAO,SAAS,CAAC;KAClB,MAAM;;AAEL,YAAM,2BACJ,mBAAmB,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CACjE,CAAC;KACH;GACF,CAAC,CAAC;CACJ","file":"helper-missing.js","sourcesContent":["import Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('helperMissing', function(/* [args, ]options */) {\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new Exception(\n        'Missing helper: \"' + arguments[arguments.length - 1].name + '\"'\n      );\n    }\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/if.js":{"lineLengths":[13,0,26,23,0,97,0,33,0,41,0,53,0,42,65,32,76,5,41,43,5,0,92,99,105,83,35,12,30,5,5,0,69,32,80,5,59,26,26,24,7,5,2,0,36,2980,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/helpers/if.js"],"names":[],"mappings":";;;;;;;qBAAoC,UAAU;;yBACxB,cAAc;;;;qBAErB,UAAS,QAAQ,EAAE;AAChC,UAAQ,CAAC,cAAc,CAAC,IAAI,EAAE,UAAS,WAAW,EAAE,OAAO,EAAE;AAC3D,QAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;AACzB,YAAM,2BAAc,mCAAmC,CAAC,CAAC;KAC1D;AACD,QAAI,kBAAW,WAAW,CAAC,EAAE;AAC3B,iBAAW,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACtC;;;;;AAKD,QAAI,AAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,IAAK,eAAQ,WAAW,CAAC,EAAE;AACvE,aAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC9B,MAAM;AACL,aAAO,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;KACzB;GACF,CAAC,CAAC;;AAEH,UAAQ,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAS,WAAW,EAAE,OAAO,EAAE;AAC/D,QAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;AACzB,YAAM,2BAAc,uCAAuC,CAAC,CAAC;KAC9D;AACD,WAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE;AACpD,QAAE,EAAE,OAAO,CAAC,OAAO;AACnB,aAAO,EAAE,OAAO,CAAC,EAAE;AACnB,UAAI,EAAE,OAAO,CAAC,IAAI;KACnB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ","file":"if.js","sourcesContent":["import { isEmpty, isFunction } from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('if', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#if requires exactly one argument');\n    }\n    if (isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if ((!options.hash.includeZero && !conditional) || isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#unless requires exactly one argument');\n    }\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/log.js":{"lineLengths":[13,0,26,0,42,68,27,50,52,30,5,0,18,37,33,60,33,5,20,0,39,5,2,0,36,1880,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/helpers/log.js"],"names":[],"mappings":";;;;qBAAe,UAAS,QAAQ,EAAE;AAChC,UAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,kCAAiC;AAC9D,QAAI,IAAI,GAAG,CAAC,SAAS,CAAC;QACpB,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC5C,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,UAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;KACzB;;AAED,QAAI,KAAK,GAAG,CAAC,CAAC;AACd,QAAI,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;AAC9B,WAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;KAC5B,MAAM,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;AACrD,WAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;KAC5B;AACD,QAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;;AAEhB,YAAQ,CAAC,GAAG,MAAA,CAAZ,QAAQ,EAAQ,IAAI,CAAC,CAAC;GACvB,CAAC,CAAC;CACJ","file":"log.js","sourcesContent":["export default function(instance) {\n  instance.registerHelper('log', function(/* message, options */) {\n    let args = [undefined],\n      options = arguments[arguments.length - 1];\n    for (let i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    let level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log(...args);\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js":{"lineLengths":[13,0,26,0,42,68,15,53,17,5,46,5,2,0,36,900,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/helpers/lookup.js"],"names":[],"mappings":";;;;qBAAe,UAAS,QAAQ,EAAE;AAChC,UAAQ,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAS,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;AAC9D,QAAI,CAAC,GAAG,EAAE;;AAER,aAAO,GAAG,CAAC;KACZ;AACD,WAAO,OAAO,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;GAC3C,CAAC,CAAC;CACJ","file":"lookup.js","sourcesContent":["export default function(instance) {\n  instance.registerHelper('lookup', function(obj, field, options) {\n    if (!obj) {\n      // Note for 5.0: Change to \"obj == null\" in 5.0\n      return obj;\n    }\n    return options.lookupProperty(obj, field);\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/helpers/with.js":{"lineLengths":[13,0,26,23,0,97,0,33,0,41,0,53,0,42,63,32,78,5,37,35,5,0,24,0,35,30,40,48,94,7,0,26,19,78,9,12,35,5,5,2,0,36,2628,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/helpers/with.js"],"names":[],"mappings":";;;;;;;qBAMO,UAAU;;yBACK,cAAc;;;;qBAErB,UAAS,QAAQ,EAAE;AAChC,UAAQ,CAAC,cAAc,CAAC,MAAM,EAAE,UAAS,OAAO,EAAE,OAAO,EAAE;AACzD,QAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;AACzB,YAAM,2BAAc,qCAAqC,CAAC,CAAC;KAC5D;AACD,QAAI,kBAAW,OAAO,CAAC,EAAE;AACvB,aAAO,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9B;;AAED,QAAI,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;;AAEpB,QAAI,CAAC,eAAQ,OAAO,CAAC,EAAE;AACrB,UAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACxB,UAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,EAAE;AAC/B,YAAI,GAAG,mBAAY,OAAO,CAAC,IAAI,CAAC,CAAC;AACjC,YAAI,CAAC,WAAW,GAAG,yBACjB,OAAO,CAAC,IAAI,CAAC,WAAW,EACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CACf,CAAC;OACH;;AAED,aAAO,EAAE,CAAC,OAAO,EAAE;AACjB,YAAI,EAAE,IAAI;AACV,mBAAW,EAAE,mBAAY,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;OAChE,CAAC,CAAC;KACJ,MAAM;AACL,aAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC9B;GACF,CAAC,CAAC;CACJ","file":"with.js","sourcesContent":["import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isEmpty,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('with', function(context, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#with requires exactly one argument');\n    }\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    let fn = options.fn;\n\n    if (!isEmpty(context)) {\n      let data = options.data;\n      if (options.data && options.ids) {\n        data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.ids[0]\n        );\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/decorators.js":{"lineLengths":[13,0,26,62,23,0,97,0,55,0,67,0,46,42,1,552,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/decorators.js"],"names":[],"mappings":";;;;;;;;gCAA2B,qBAAqB;;;;AAEzC,SAAS,yBAAyB,CAAC,QAAQ,EAAE;AAClD,gCAAe,QAAQ,CAAC,CAAC;CAC1B","file":"decorators.js","sourcesContent":["import registerInline from './decorators/inline';\n\nexport function registerDefaultDecorators(instance) {\n  registerInline(instance);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js":{"lineLengths":[13,0,26,0,33,0,42,81,17,26,26,41,59,42,73,39,38,19,8,5,0,49,0,15,5,2,0,36,1972,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/decorators/inline.js"],"names":[],"mappings":";;;;qBAAuB,UAAU;;qBAElB,UAAS,QAAQ,EAAE;AAChC,UAAQ,CAAC,iBAAiB,CAAC,QAAQ,EAAE,UAAS,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE;AAC3E,QAAI,GAAG,GAAG,EAAE,CAAC;AACb,QAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACnB,WAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;AACpB,SAAG,GAAG,UAAS,OAAO,EAAE,OAAO,EAAE;;AAE/B,YAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;AAClC,iBAAS,CAAC,QAAQ,GAAG,cAAO,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC1D,YAAI,GAAG,GAAG,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC/B,iBAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC9B,eAAO,GAAG,CAAC;OACZ,CAAC;KACH;;AAED,SAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC;;AAE7C,WAAO,GAAG,CAAC;GACZ,CAAC,CAAC;CACJ","file":"inline.js","sourcesContent":["import { extend } from '../utils';\n\nexport default function(instance) {\n  instance.registerDecorator('inline', function(fn, props, container, options) {\n    let ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function(context, options) {\n        // Create a new partials stack frame prior to exec.\n        let original = container.partials;\n        container.partials = extend({}, original, props.partials);\n        let ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/logger.js":{"lineLengths":[13,0,26,0,32,0,14,48,16,0,63,44,36,75,26,25,14,36,7,5,0,17,4,0,46,28,38,0,86,43,44,29,23,7,0,114,44,7,0,80,5,3,2,0,28,36,2672,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/logger.js"],"names":[],"mappings":";;;;qBAAwB,SAAS;;AAEjC,IAAI,MAAM,GAAG;AACX,WAAS,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;AAC7C,OAAK,EAAE,MAAM;;;AAGb,aAAW,EAAE,qBAAS,KAAK,EAAE;AAC3B,QAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC7B,UAAI,QAAQ,GAAG,eAAQ,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;AAC9D,UAAI,QAAQ,IAAI,CAAC,EAAE;AACjB,aAAK,GAAG,QAAQ,CAAC;OAClB,MAAM;AACL,aAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;OAC7B;KACF;;AAED,WAAO,KAAK,CAAC;GACd;;;AAGD,KAAG,EAAE,aAAS,KAAK,EAAc;AAC/B,SAAK,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;AAElC,QACE,OAAO,OAAO,KAAK,WAAW,IAC9B,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,EACzC;AACA,UAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;AAErC,UAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACpB,cAAM,GAAG,KAAK,CAAC;OAChB;;wCAXmB,OAAO;AAAP,eAAO;;;AAY3B,aAAO,CAAC,MAAM,OAAC,CAAf,OAAO,EAAY,OAAO,CAAC,CAAC;KAC7B;GACF;CACF,CAAC;;qBAEa,MAAM","file":"logger.js","sourcesContent":["import { indexOf } from './utils';\n\nlet logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function(level) {\n    if (typeof level === 'string') {\n      let levelMap = indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function(level, ...message) {\n    level = logger.lookupLevel(level);\n\n    if (\n      typeof console !== 'undefined' &&\n      logger.lookupLevel(logger.level) <= level\n    ) {\n      let method = logger.methodMap[level];\n      // eslint-disable-next-line no-console\n      if (!console[method]) {\n        method = 'log';\n      }\n      console[method](...message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexport default logger;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js":{"lineLengths":[13,0,26,60,42,54,23,0,272,0,67,0,35,0,46,0,43,0,51,51,48,53,53,53,0,53,38,48,0,10,17,127,64,6,14,122,61,5,4,1,0,68,37,68,10,71,3,1,0,66,72,70,3,61,50,3,47,15,1,0,55,48,42,351,3,1,0,34,65,42,5,1,5752,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/internal/proto-access.js"],"names":[],"mappings":";;;;;;;;;;qCAAsC,4BAA4B;;sBAC1C,WAAW;;IAAvB,MAAM;;AAElB,IAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEtC,SAAS,wBAAwB,CAAC,cAAc,EAAE;AACvD,MAAI,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjD,wBAAsB,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;AAC9C,wBAAsB,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;AACnD,wBAAsB,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;AACnD,wBAAsB,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;;AAEnD,MAAI,wBAAwB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEnD,0BAAwB,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;;AAE9C,SAAO;AACL,cAAU,EAAE;AACV,eAAS,EAAE,6CACT,wBAAwB,EACxB,cAAc,CAAC,sBAAsB,CACtC;AACD,kBAAY,EAAE,cAAc,CAAC,6BAA6B;KAC3D;AACD,WAAO,EAAE;AACP,eAAS,EAAE,6CACT,sBAAsB,EACtB,cAAc,CAAC,mBAAmB,CACnC;AACD,kBAAY,EAAE,cAAc,CAAC,0BAA0B;KACxD;GACF,CAAC;CACH;;AAEM,SAAS,eAAe,CAAC,MAAM,EAAE,kBAAkB,EAAE,YAAY,EAAE;AACxE,MAAI,OAAO,MAAM,KAAK,UAAU,EAAE;AAChC,WAAO,cAAc,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;GACjE,MAAM;AACL,WAAO,cAAc,CAAC,kBAAkB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;GACpE;CACF;;AAED,SAAS,cAAc,CAAC,yBAAyB,EAAE,YAAY,EAAE;AAC/D,MAAI,yBAAyB,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,SAAS,EAAE;AACnE,WAAO,yBAAyB,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC;GACnE;AACD,MAAI,yBAAyB,CAAC,YAAY,KAAK,SAAS,EAAE;AACxD,WAAO,yBAAyB,CAAC,YAAY,CAAC;GAC/C;AACD,gCAA8B,CAAC,YAAY,CAAC,CAAC;AAC7C,SAAO,KAAK,CAAC;CACd;;AAED,SAAS,8BAA8B,CAAC,YAAY,EAAE;AACpD,MAAI,gBAAgB,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;AAC3C,oBAAgB,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;AACtC,UAAM,CAAC,GAAG,CACR,OAAO,EACP,iEAA+D,YAAY,oIACH,oHAC2C,CACpH,CAAC;GACH;CACF;;AAEM,SAAS,qBAAqB,GAAG;AACtC,QAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,UAAA,YAAY,EAAI;AACpD,WAAO,gBAAgB,CAAC,YAAY,CAAC,CAAC;GACvC,CAAC,CAAC;CACJ","file":"proto-access.js","sourcesContent":["import { createNewLookupObject } from './create-new-lookup-object';\nimport * as logger from '../logger';\n\nconst loggedProperties = Object.create(null);\n\nexport function createProtoAccessControl(runtimeOptions) {\n  let defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n  let defaultPropertyWhiteList = Object.create(null);\n  // eslint-disable-next-line no-proto\n  defaultPropertyWhiteList['__proto__'] = false;\n\n  return {\n    properties: {\n      whitelist: createNewLookupObject(\n        defaultPropertyWhiteList,\n        runtimeOptions.allowedProtoProperties\n      ),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: createNewLookupObject(\n        defaultMethodWhiteList,\n        runtimeOptions.allowedProtoMethods\n      ),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nexport function resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    logger.log(\n      'error',\n      `Handlebars: Access has been denied to resolve the property \"${propertyName}\" because it is not an \"own property\" of its parent.\\n` +\n        `You can add a runtime option to disable the check or this warning:\\n` +\n        `See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`\n    );\n  }\n}\n\nexport function resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(propertyName => {\n    delete loggedProperties[propertyName];\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js":{"lineLengths":[13,0,26,54,0,33,0,3,93,89,87,20,3,0,34,91,36,3,0,79,1,1096,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/internal/create-new-lookup-object.js"],"names":[],"mappings":";;;;;qBAAuB,UAAU;;;;;;;;;AAQ1B,SAAS,qBAAqB,GAAa;oCAAT,OAAO;AAAP,WAAO;;;AAC9C,SAAO,gCAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAK,OAAO,EAAC,CAAC;CAChD","file":"create-new-lookup-object.js","sourcesContent":["import { extend } from '../utils';\n\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\nexport function createNewLookupObject(...sources) {\n  return extend(Object.create(null), ...sources);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/safe-string.js":{"lineLengths":[38,13,0,26,29,23,1,0,75,26,2,0,32,36,848,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/safe-string.js"],"names":[],"mappings":";;;;AACA,SAAS,UAAU,CAAC,MAAM,EAAE;AAC1B,MAAI,CAAC,MAAM,GAAG,MAAM,CAAC;CACtB;;AAED,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,YAAW;AACvE,SAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;CACzB,CAAC;;qBAEa,UAAU","file":"safe-string.js","sourcesContent":["// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n  return '' + this.string;\n};\n\nexport default SafeString;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/runtime.js":{"lineLengths":[13,0,26,38,28,34,40,38,20,23,0,97,0,23,0,272,0,32,0,44,0,40,0,53,0,30,0,36,0,59,0,62,0,38,62,48,0,115,11,3,0,67,66,68,282,10,91,204,3,1,0,38,28,13,74,3,44,88,3,0,52,0,100,67,46,0,87,101,0,60,23,56,24,30,7,5,74,0,53,24,49,7,0,84,0,40,95,72,5,25,27,39,55,41,18,11,0,47,9,34,7,20,12,131,5,3,0,19,19,45,35,82,18,11,7,49,6,67,40,27,22,7,71,22,7,0,101,22,7,23,6,43,30,37,76,29,33,9,7,6,47,77,6,0,45,40,0,24,32,45,17,6,0,17,82,44,26,65,98,35,69,7,28,6,0,39,32,30,7,19,6,58,32,0,48,46,7,0,17,6,62,33,0,22,39,4,0,25,90,0,28,0,24,51,37,5,27,67,33,27,98,14,27,7,5,0,42,122,5,0,106,34,3,0,19,0,35,27,73,64,40,0,36,85,85,7,66,84,7,0,27,92,0,106,82,87,12,83,42,44,48,38,5,4,0,56,54,65,5,44,66,5,0,84,4,13,1,0,88,26,90,0,31,103,47,5,0,168,3,0,75,0,19,42,46,14,1,0,3,102,3,0,52,17,44,46,12,47,5,46,55,27,40,3,17,1,0,51,78,74,25,20,74,3,0,31,42,18,53,79,26,92,94,0,84,62,55,60,36,8,24,75,7,9,3,0,46,27,3,0,30,92,43,37,3,1,0,17,12,1,0,34,35,47,24,3,14,1,0,76,21,19,96,30,3,14,1,0,68,60,43,76,5,1,0,54,48,68,69,5,1,31816,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/runtime.js"],"names":[],"mappings":"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","file":"runtime.js","sourcesContent":["import * as Utils from './utils';\nimport Exception from './exception';\nimport {\n  COMPILER_REVISION,\n  createFrame,\n  LAST_COMPATIBLE_COMPILER_REVISION,\n  REVISION_CHANGES\n} from './base';\nimport { moveHelperToHooks } from './helpers';\nimport { wrapHelper } from './internal/wrapHelper';\nimport {\n  createProtoAccessControl,\n  resultIsAllowed\n} from './internal/proto-access';\n\nexport function checkRevision(compilerInfo) {\n  const compilerRevision = (compilerInfo && compilerInfo[0]) || 1,\n    currentRevision = COMPILER_REVISION;\n\n  if (\n    compilerRevision >= LAST_COMPATIBLE_COMPILER_REVISION &&\n    compilerRevision <= COMPILER_REVISION\n  ) {\n    return;\n  }\n\n  if (compilerRevision < LAST_COMPATIBLE_COMPILER_REVISION) {\n    const runtimeVersions = REVISION_CHANGES[currentRevision],\n      compilerVersions = REVISION_CHANGES[compilerRevision];\n    throw new Exception(\n      'Template was precompiled with an older version of Handlebars than the current runtime. ' +\n        'Please update your precompiler to a newer version (' +\n        runtimeVersions +\n        ') or downgrade your runtime to an older version (' +\n        compilerVersions +\n        ').'\n    );\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new Exception(\n      'Template was precompiled with a newer version of Handlebars than the current runtime. ' +\n        'Please update your runtime to a newer version (' +\n        compilerInfo[1] +\n        ').'\n    );\n  }\n}\n\nexport function template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new Exception('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new Exception('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  const templateWasPrecompiledWithCompilerV7 =\n    templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    let extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    let result = env.VM.invokePartial.call(\n      this,\n      partial,\n      context,\n      extendedOptions\n    );\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(\n        partial,\n        templateSpec.compilerOptions,\n        env\n      );\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        let lines = result.split('\\n');\n        for (let i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new Exception(\n        'The partial ' +\n          options.name +\n          ' could not be compiled when running in runtime-only mode'\n      );\n    }\n  }\n\n  // Just add water\n  let container = {\n    strict: function(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new Exception('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function(parent, propertyName) {\n      let result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function(depths, name) {\n      const len = depths.length;\n      for (let i = 0; i < len; i++) {\n        let result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function(i) {\n      let ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function(i, data, declaredBlockParams, blockParams, depths) {\n      let programWrapper = this.programs[i],\n        fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(\n          this,\n          i,\n          fn,\n          data,\n          declaredBlockParams,\n          blockParams,\n          depths\n        );\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function(param, common) {\n      let obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context, options = {}) {\n    let data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    let depths,\n      blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths =\n          context != options.depths[0]\n            ? [context].concat(options.depths)\n            : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return (\n        '' +\n        templateSpec.main(\n          container,\n          context,\n          container.helpers,\n          container.partials,\n          data,\n          blockParams,\n          depths\n        )\n      );\n    }\n\n    main = executeDecorators(\n      templateSpec.main,\n      main,\n      container,\n      options.depths || [],\n      data,\n      blockParams\n    );\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function(options) {\n    if (!options.partial) {\n      let mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(\n          options.partials,\n          env.partials\n        );\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend(\n          {},\n          env.decorators,\n          options.decorators\n        );\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = createProtoAccessControl(options);\n\n      let keepHelperInHelpers =\n        options.allowCallsToHelperMissing ||\n        templateWasPrecompiledWithCompilerV7;\n      moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function(i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new Exception('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new Exception('must pass parent depths');\n    }\n\n    return wrapProgram(\n      container,\n      i,\n      templateSpec[i],\n      data,\n      0,\n      blockParams,\n      depths\n    );\n  };\n  return ret;\n}\n\nexport function wrapProgram(\n  container,\n  i,\n  fn,\n  data,\n  declaredBlockParams,\n  blockParams,\n  depths\n) {\n  function prog(context, options = {}) {\n    let currentDepths = depths;\n    if (\n      depths &&\n      context != depths[0] &&\n      !(context === container.nullContext && depths[0] === null)\n    ) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(\n      container,\n      context,\n      container.helpers,\n      container.partials,\n      options.data || data,\n      blockParams && [options.blockParams].concat(blockParams),\n      currentDepths\n    );\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\nexport function resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nexport function invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  const currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  let partialBlock;\n  if (options.fn && options.fn !== noop) {\n    options.data = createFrame(options.data);\n    // Wrapper function to get access to currentPartialBlock from the closure\n    let fn = options.fn;\n    partialBlock = options.data['partial-block'] = function partialBlockWrapper(\n      context,\n      options = {}\n    ) {\n      // Restore the partial-block from the closure for the execution of the block\n      // i.e. the part inside the block of the partial call.\n      options.data = createFrame(options.data);\n      options.data['partial-block'] = currentPartialBlock;\n      return fn(context, options);\n    };\n    if (fn.partials) {\n      options.partials = Utils.extend({}, options.partials, fn.partials);\n    }\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new Exception('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexport function noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    let props = {};\n    prog = fn.decorator(\n      prog,\n      props,\n      container,\n      depths && depths[0],\n      data,\n      blockParams,\n      depths\n    );\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(helperName => {\n    let helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  const lookupProperty = container.lookupProperty;\n  return wrapHelper(helper, options => {\n    return Utils.extend({ lookupProperty }, options);\n  });\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js":{"lineLengths":[13,0,26,32,0,49,37,108,101,18,3,59,50,66,41,4,17,1,1548,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/internal/wrapHelper.js"],"names":[],"mappings":";;;;;AAAO,SAAS,UAAU,CAAC,MAAM,EAAE,kBAAkB,EAAE;AACrD,MAAI,OAAO,MAAM,KAAK,UAAU,EAAE;;;AAGhC,WAAO,MAAM,CAAC;GACf;AACD,MAAI,OAAO,GAAG,SAAV,OAAO,0BAAqC;AAC9C,QAAM,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAChD,aAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;AAC9D,WAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;GACtC,CAAC;AACF,SAAO,OAAO,CAAC;CAChB","file":"wrapHelper.js","sourcesContent":["export function wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n  let wrapper = function(/* dynamic arguments */) {\n    const options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n  return wrapper;\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/no-conflict.js":{"lineLengths":[13,0,26,0,44,28,61,36,28,39,41,36,5,22,4,2,0,36,1092,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/no-conflict.js"],"names":[],"mappings":";;;;qBAAe,UAAS,UAAU,EAAE;;AAElC,MAAI,IAAI,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,MAAM;MACxD,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;;AAEhC,YAAU,CAAC,UAAU,GAAG,YAAW;AACjC,QAAI,IAAI,CAAC,UAAU,KAAK,UAAU,EAAE;AAClC,UAAI,CAAC,UAAU,GAAG,WAAW,CAAC;KAC/B;AACD,WAAO,UAAU,CAAC;GACnB,CAAC;CACH","file":"no-conflict.js","sourcesContent":["export default function(Handlebars) {\n  /* istanbul ignore next */\n  let root = typeof global !== 'undefined' ? global : window,\n    $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function() {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js":{"lineLengths":[13,0,26,11,71,12,44,38,54,55,170,6,0,39,46,8,6,0,68,22,39,83,5,3,2,0,86,46,25,36,2380,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/ast.js"],"names":[],"mappings":";;;AAAA,IAAI,GAAG,GAAG;;AAER,SAAO,EAAE;;;;AAIP,oBAAgB,EAAE,0BAAS,IAAI,EAAE;AAC/B,aACE,IAAI,CAAC,IAAI,KAAK,eAAe,IAC5B,CAAC,IAAI,CAAC,IAAI,KAAK,mBAAmB,IACjC,IAAI,CAAC,IAAI,KAAK,gBAAgB,CAAA,IAC9B,CAAC,EAAE,AAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAK,IAAI,CAAC,IAAI,CAAA,AAAC,AAAC,CACvD;KACH;;AAED,YAAQ,EAAE,kBAAS,IAAI,EAAE;AACvB,aAAO,aAAY,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAAC;KACzC;;;;AAID,YAAQ,EAAE,kBAAS,IAAI,EAAE;AACvB,aACE,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CACrE;KACH;GACF;CACF,CAAC;;;;qBAIa,GAAG","file":"ast.js","sourcesContent":["let AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function(node) {\n      return (\n        node.type === 'SubExpression' ||\n        ((node.type === 'MustacheStatement' ||\n          node.type === 'BlockStatement') &&\n          !!((node.params && node.params.length) || node.hash))\n      );\n    },\n\n    scopedId: function(path) {\n      return /^\\.|this\\b/.test(path.original);\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function(path) {\n      return (\n        path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth\n      );\n    }\n  }\n};\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexport default AST;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/base.js":{"lineLengths":[13,0,26,56,22,23,0,272,0,23,0,97,0,34,0,47,0,57,0,69,0,36,0,48,0,33,0,37,0,12,27,0,49,58,33,17,3,0,30,0,82,35,70,4,0,45,0,13,1,0,32,51,58,0,27,1,2328,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/base.js"],"names":[],"mappings":";;;;;;;;;;;;;sBAAmB,UAAU;;;;iCACC,sBAAsB;;;;uBAC3B,WAAW;;IAAxB,OAAO;;qBACI,UAAU;;QAExB,MAAM;;AAEf,IAAI,EAAE,GAAG,EAAE,CAAC;AACZ,cAAO,EAAE,EAAE,OAAO,CAAC,CAAC;;AAEb,SAAS,sBAAsB,CAAC,KAAK,EAAE,OAAO,EAAE;;AAErD,MAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;AAC5B,WAAO,KAAK,CAAC;GACd;;AAED,sBAAO,EAAE,GAAG,EAAE,CAAC;;;AAGf,IAAE,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;AAC7B,WAAO,IAAI,EAAE,CAAC,cAAc,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;GACnE,CAAC;;AAEF,MAAI,GAAG,GAAG,oBAAO,KAAK,CAAC,KAAK,CAAC,CAAC;;AAE9B,SAAO,GAAG,CAAC;CACZ;;AAEM,SAAS,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE;AACpC,MAAI,GAAG,GAAG,sBAAsB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACjD,MAAI,KAAK,GAAG,mCAAsB,OAAO,CAAC,CAAC;;AAE3C,SAAO,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;CAC1B","file":"base.js","sourcesContent":["import parser from './parser';\nimport WhitespaceControl from './whitespace-control';\nimport * as Helpers from './helpers';\nimport { extend } from '../utils';\n\nexport { parser };\n\nlet yy = {};\nextend(yy, Helpers);\n\nexport function parseWithoutProcessing(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  parser.yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function(locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  let ast = parser.parse(input);\n\n  return ast;\n}\n\nexport function parse(input, options) {\n  let ast = parseWithoutProcessing(input, options);\n  let strip = new WhitespaceControl(options);\n\n  return strip.accept(ast);\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js":{"lineLengths":[62,28,13,0,26,31,46,15,1830,564,920,90,0,35,30,23,38,26,23,55,26,23,36,26,23,36,26,23,36,26,23,36,26,23,36,26,23,36,26,23,30,49,55,61,48,22,0,26,24,30,49,41,38,48,22,0,26,24,89,26,24,88,26,24,105,26,24,104,26,24,173,26,24,155,26,24,155,26,24,95,26,24,106,79,43,0,88,0,26,24,36,26,24,92,26,24,140,26,24,140,26,24,30,49,41,43,41,35,65,48,22,0,26,24,93,26,24,130,26,24,36,26,24,36,26,24,30,46,41,43,41,48,22,0,26,24,87,26,24,115,26,24,47,26,24,36,26,24,36,26,24,114,26,24,130,26,24,137,26,24,123,26,24,108,26,24,36,26,24,36,26,24,67,26,24,68,26,24,122,26,24,73,26,24,32,26,24,44,26,24,32,26,24,44,26,24,32,26,24,44,26,24,32,26,24,44,26,24,32,26,24,44,26,24,32,26,24,44,26,24,32,26,24,44,26,24,32,26,24,44,26,24,32,26,24,44,26,24,32,26,24,44,26,24,32,26,24,44,26,24,38,26,24,44,26,25,38,26,25,44,26,13,10,14912,255,52,33,10,38,28,28,32,28,35,28,29,27,31,27,24,39,36,39,34,80,42,31,73,95,34,52,50,50,13,28,26,46,48,58,17,29,13,23,31,22,23,18,18,27,18,20,25,25,26,48,49,56,24,74,39,21,66,17,84,36,38,38,82,74,25,54,208,32,178,25,177,21,17,70,120,17,36,27,43,55,55,46,38,46,55,55,59,54,61,32,52,50,25,30,27,62,62,260,37,127,25,121,55,37,25,34,65,63,63,25,68,45,46,91,45,30,27,36,17,13,24,9,6,31,30,29,56,37,57,24,41,17,14,48,36,60,48,61,50,95,68,32,28,14,37,40,34,30,30,33,35,56,28,36,44,24,46,17,64,0,51,26,14,39,36,54,0,47,82,37,35,65,73,79,0,72,42,0,67,49,59,207,18,0,42,73,17,28,14,35,34,28,14,36,48,14,45,91,93,14,53,38,39,68,17,97,14,51,43,60,67,14,35,32,36,17,51,0,63,34,37,36,17,49,56,72,89,42,34,54,21,17,28,62,61,70,53,62,174,44,43,41,53,46,86,21,39,69,45,140,68,56,17,41,36,24,188,17,14,33,36,47,29,24,38,17,14,46,52,14,43,49,14,53,98,14,43,75,14,50,38,16,27,96,0,40,90,13,0,35,48,23,58,36,41,63,36,42,28,41,21,46,0,26,23,30,26,23,36,30,0,26,23,48,26,23,36,80,81,82,88,34,28,36,47,21,0,26,23,30,26,23,36,30,0,26,23,30,26,23,30,26,23,30,26,24,36,38,30,0,26,24,30,26,24,30,26,24,30,26,24,30,26,24,46,26,24,46,26,24,30,26,24,30,26,24,30,26,24,30,26,24,43,36,38,0,26,24,36,30,0,26,24,30,26,24,30,26,24,30,26,24,30,26,24,30,26,24,40,26,24,46,26,24,46,26,24,76,26,24,76,26,24,30,26,24,30,26,24,30,26,24,30,26,24,30,26,24,30,26,24,30,26,24,30,26,24,30,26,24,83,26,24,37,26,24,29,26,13,10,1079,416,21,9,25,23,21,54,24,37,36,156908,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/parser.js"],"names":[],"mappings":"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","file":"parser.js","sourcesContent":["// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\nvar handlebars = (function(){\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"program\":4,\"EOF\":5,\"program_repetition0\":6,\"statement\":7,\"mustache\":8,\"block\":9,\"rawBlock\":10,\"partial\":11,\"partialBlock\":12,\"content\":13,\"COMMENT\":14,\"CONTENT\":15,\"openRawBlock\":16,\"rawBlock_repetition0\":17,\"END_RAW_BLOCK\":18,\"OPEN_RAW_BLOCK\":19,\"helperName\":20,\"openRawBlock_repetition0\":21,\"openRawBlock_option0\":22,\"CLOSE_RAW_BLOCK\":23,\"openBlock\":24,\"block_option0\":25,\"closeBlock\":26,\"openInverse\":27,\"block_option1\":28,\"OPEN_BLOCK\":29,\"openBlock_repetition0\":30,\"openBlock_option0\":31,\"openBlock_option1\":32,\"CLOSE\":33,\"OPEN_INVERSE\":34,\"openInverse_repetition0\":35,\"openInverse_option0\":36,\"openInverse_option1\":37,\"openInverseChain\":38,\"OPEN_INVERSE_CHAIN\":39,\"openInverseChain_repetition0\":40,\"openInverseChain_option0\":41,\"openInverseChain_option1\":42,\"inverseAndProgram\":43,\"INVERSE\":44,\"inverseChain\":45,\"inverseChain_option0\":46,\"OPEN_ENDBLOCK\":47,\"OPEN\":48,\"mustache_repetition0\":49,\"mustache_option0\":50,\"OPEN_UNESCAPED\":51,\"mustache_repetition1\":52,\"mustache_option1\":53,\"CLOSE_UNESCAPED\":54,\"OPEN_PARTIAL\":55,\"partialName\":56,\"partial_repetition0\":57,\"partial_option0\":58,\"openPartialBlock\":59,\"OPEN_PARTIAL_BLOCK\":60,\"openPartialBlock_repetition0\":61,\"openPartialBlock_option0\":62,\"param\":63,\"sexpr\":64,\"OPEN_SEXPR\":65,\"sexpr_repetition0\":66,\"sexpr_option0\":67,\"CLOSE_SEXPR\":68,\"hash\":69,\"hash_repetition_plus0\":70,\"hashSegment\":71,\"ID\":72,\"EQUALS\":73,\"blockParams\":74,\"OPEN_BLOCK_PARAMS\":75,\"blockParams_repetition_plus0\":76,\"CLOSE_BLOCK_PARAMS\":77,\"path\":78,\"dataName\":79,\"STRING\":80,\"NUMBER\":81,\"BOOLEAN\":82,\"UNDEFINED\":83,\"NULL\":84,\"DATA\":85,\"pathSegments\":86,\"SEP\":87,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",14:\"COMMENT\",15:\"CONTENT\",18:\"END_RAW_BLOCK\",19:\"OPEN_RAW_BLOCK\",23:\"CLOSE_RAW_BLOCK\",29:\"OPEN_BLOCK\",33:\"CLOSE\",34:\"OPEN_INVERSE\",39:\"OPEN_INVERSE_CHAIN\",44:\"INVERSE\",47:\"OPEN_ENDBLOCK\",48:\"OPEN\",51:\"OPEN_UNESCAPED\",54:\"CLOSE_UNESCAPED\",55:\"OPEN_PARTIAL\",60:\"OPEN_PARTIAL_BLOCK\",65:\"OPEN_SEXPR\",68:\"CLOSE_SEXPR\",72:\"ID\",73:\"EQUALS\",75:\"OPEN_BLOCK_PARAMS\",77:\"CLOSE_BLOCK_PARAMS\",80:\"STRING\",81:\"NUMBER\",82:\"BOOLEAN\",83:\"UNDEFINED\",84:\"NULL\",85:\"DATA\",87:\"SEP\"},\nproductions_: [0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,0],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$\n) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return $$[$0-1]; \nbreak;\ncase 2:this.$ = yy.prepareProgram($$[$0]);\nbreak;\ncase 3:this.$ = $$[$0];\nbreak;\ncase 4:this.$ = $$[$0];\nbreak;\ncase 5:this.$ = $$[$0];\nbreak;\ncase 6:this.$ = $$[$0];\nbreak;\ncase 7:this.$ = $$[$0];\nbreak;\ncase 8:this.$ = $$[$0];\nbreak;\ncase 9:\n    this.$ = {\n      type: 'CommentStatement',\n      value: yy.stripComment($$[$0]),\n      strip: yy.stripFlags($$[$0], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 10:\n    this.$ = {\n      type: 'ContentStatement',\n      original: $$[$0],\n      value: $$[$0],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 11:this.$ = yy.prepareRawBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 12:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1] };\nbreak;\ncase 13:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], false, this._$);\nbreak;\ncase 14:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], true, this._$);\nbreak;\ncase 15:this.$ = { open: $$[$0-5], path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 16:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 17:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 18:this.$ = { strip: yy.stripFlags($$[$0-1], $$[$0-1]), program: $$[$0] };\nbreak;\ncase 19:\n    var inverse = yy.prepareBlock($$[$0-2], $$[$0-1], $$[$0], $$[$0], false, this._$),\n        program = yy.prepareProgram([inverse], $$[$0-1].loc);\n    program.chained = true;\n\n    this.$ = { strip: $$[$0-2].strip, program: program, chain: true };\n  \nbreak;\ncase 20:this.$ = $$[$0];\nbreak;\ncase 21:this.$ = {path: $$[$0-1], strip: yy.stripFlags($$[$0-2], $$[$0])};\nbreak;\ncase 22:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 23:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 24:\n    this.$ = {\n      type: 'PartialStatement',\n      name: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      indent: '',\n      strip: yy.stripFlags($$[$0-4], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 25:this.$ = yy.preparePartialBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 26:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1], strip: yy.stripFlags($$[$0-4], $$[$0]) };\nbreak;\ncase 27:this.$ = $$[$0];\nbreak;\ncase 28:this.$ = $$[$0];\nbreak;\ncase 29:\n    this.$ = {\n      type: 'SubExpression',\n      path: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 30:this.$ = {type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 31:this.$ = {type: 'HashPair', key: yy.id($$[$0-2]), value: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 32:this.$ = yy.id($$[$0-1]);\nbreak;\ncase 33:this.$ = $$[$0];\nbreak;\ncase 34:this.$ = $$[$0];\nbreak;\ncase 35:this.$ = {type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 36:this.$ = {type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$)};\nbreak;\ncase 37:this.$ = {type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$)};\nbreak;\ncase 38:this.$ = {type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$)};\nbreak;\ncase 39:this.$ = {type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$)};\nbreak;\ncase 40:this.$ = $$[$0];\nbreak;\ncase 41:this.$ = $$[$0];\nbreak;\ncase 42:this.$ = yy.preparePath(true, $$[$0], this._$);\nbreak;\ncase 43:this.$ = yy.preparePath(false, $$[$0], this._$);\nbreak;\ncase 44: $$[$0-2].push({part: yy.id($$[$0]), original: $$[$0], separator: $$[$0-1]}); this.$ = $$[$0-2]; \nbreak;\ncase 45:this.$ = [{part: yy.id($$[$0]), original: $$[$0]}];\nbreak;\ncase 46:this.$ = [];\nbreak;\ncase 47:$$[$0-1].push($$[$0]);\nbreak;\ncase 48:this.$ = [];\nbreak;\ncase 49:$$[$0-1].push($$[$0]);\nbreak;\ncase 50:this.$ = [];\nbreak;\ncase 51:$$[$0-1].push($$[$0]);\nbreak;\ncase 58:this.$ = [];\nbreak;\ncase 59:$$[$0-1].push($$[$0]);\nbreak;\ncase 64:this.$ = [];\nbreak;\ncase 65:$$[$0-1].push($$[$0]);\nbreak;\ncase 70:this.$ = [];\nbreak;\ncase 71:$$[$0-1].push($$[$0]);\nbreak;\ncase 78:this.$ = [];\nbreak;\ncase 79:$$[$0-1].push($$[$0]);\nbreak;\ncase 82:this.$ = [];\nbreak;\ncase 83:$$[$0-1].push($$[$0]);\nbreak;\ncase 86:this.$ = [];\nbreak;\ncase 87:$$[$0-1].push($$[$0]);\nbreak;\ncase 90:this.$ = [];\nbreak;\ncase 91:$$[$0-1].push($$[$0]);\nbreak;\ncase 94:this.$ = [];\nbreak;\ncase 95:$$[$0-1].push($$[$0]);\nbreak;\ncase 98:this.$ = [$$[$0]];\nbreak;\ncase 99:$$[$0-1].push($$[$0]);\nbreak;\ncase 100:this.$ = [$$[$0]];\nbreak;\ncase 101:$$[$0-1].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{15:[2,48],17:39,18:[2,48]},{20:41,56:40,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:44,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:45,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:41,56:48,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:49,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,50]},{72:[1,35],86:51},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:52,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:53,38:55,39:[1,57],43:56,44:[1,58],45:54,47:[2,54]},{28:59,43:60,44:[1,58],47:[2,56]},{13:62,15:[1,20],18:[1,61]},{33:[2,86],57:63,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:64,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:65,47:[1,66]},{30:67,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:68,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:69,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:70,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:74,33:[2,80],50:71,63:72,64:75,65:[1,43],69:73,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,79]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,50]},{20:74,53:80,54:[2,84],63:81,64:75,65:[1,43],69:82,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:83,47:[1,66]},{47:[2,55]},{4:84,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:85,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:86,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:87,47:[1,66]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:74,33:[2,88],58:88,63:89,64:75,65:[1,43],69:90,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:91,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:92,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,31:93,33:[2,60],63:94,64:75,65:[1,43],69:95,70:76,71:77,72:[1,78],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,66],36:96,63:97,64:75,65:[1,43],69:98,70:76,71:77,72:[1,78],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,22:99,23:[2,52],63:100,64:75,65:[1,43],69:101,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,92],62:102,63:103,64:75,65:[1,43],69:104,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,105]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:106,72:[1,107],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,108],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,109]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:55,39:[1,57],43:56,44:[1,58],45:111,46:110,47:[2,76]},{33:[2,70],40:112,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,113]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:74,63:115,64:75,65:[1,43],67:114,68:[2,96],69:116,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,117]},{32:118,33:[2,62],74:119,75:[1,120]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:121,74:122,75:[1,120]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,123]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,124]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,108]},{20:74,63:125,64:75,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:74,33:[2,72],41:126,63:127,64:75,65:[1,43],69:128,70:76,71:77,72:[1,78],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,129]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,130]},{33:[2,63]},{72:[1,132],76:131},{33:[1,133]},{33:[2,69]},{15:[2,12],18:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:134,74:135,75:[1,120]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,137],77:[1,136]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,138]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],\ndefaultActions: {4:[2,1],54:[2,55],56:[2,20],60:[2,57],73:[2,81],82:[2,85],86:[2,18],90:[2,89],101:[2,53],104:[2,93],110:[2,19],111:[2,77],116:[2,97],119:[2,63],122:[2,69],135:[2,75],136:[2,32]},\nparseError: function parseError (str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == \"undefined\")\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === \"function\")\n        this.parseError = this.yy.parseError;\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1;\n        if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n            if (!recovering) {\n                expected = [];\n                for (p in table[state])\n                    if (this.terminals_[p] && p > 2) {\n                        expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    }\n                if (this.lexer.showPosition) {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                } else {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                }\n                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0)\n                    recovering--;\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n            if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== \"undefined\") {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}\n};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        if (this.options.ranges) this.yylloc.range = [0,0];\n        this.offset = 0;\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) this.yylloc.range[1]++;\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length-1);\n        this.matched = this.matched.substr(0, this.matched.length-1);\n\n        if (lines.length-1) this.yylineno -= lines.length-1;\n        var r = this.yylloc.range;\n\n        this.yylloc = {first_line: this.yylloc.first_line,\n          last_line: this.yylineno+1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ?\n              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n              this.yylloc.first_column - len\n          };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n            if (this.options.ranges) {\n                this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex () {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState () {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules () {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin (condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n) {\n\n\nfunction strip(start, end) {\n  return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n}\n\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:\n                                   if(yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"mu\");\n                                   } else if(yy_.yytext.slice(-1) === \"\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"emu\");\n                                   } else {\n                                     this.begin(\"mu\");\n                                   }\n                                   if(yy_.yytext) return 15;\n                                 \nbreak;\ncase 1:return 15;\nbreak;\ncase 2:\n                                   this.popState();\n                                   return 15;\n                                 \nbreak;\ncase 3:this.begin('raw'); return 15;\nbreak;\ncase 4:\n                                  this.popState();\n                                  // Should be using `this.topState()` below, but it currently\n                                  // returns the second top instead of the first top. Opened an\n                                  // issue about it at https://github.com/zaach/jison/issues/291\n                                  if (this.conditionStack[this.conditionStack.length-1] === 'raw') {\n                                    return 15;\n                                  } else {\n                                    strip(5, 9);\n                                    return 'END_RAW_BLOCK';\n                                  }\n                                 \nbreak;\ncase 5: return 15; \nbreak;\ncase 6:\n  this.popState();\n  return 14;\n\nbreak;\ncase 7:return 65;\nbreak;\ncase 8:return 68;\nbreak;\ncase 9: return 19; \nbreak;\ncase 10:\n                                  this.popState();\n                                  this.begin('raw');\n                                  return 23;\n                                 \nbreak;\ncase 11:return 55;\nbreak;\ncase 12:return 60;\nbreak;\ncase 13:return 29;\nbreak;\ncase 14:return 47;\nbreak;\ncase 15:this.popState(); return 44;\nbreak;\ncase 16:this.popState(); return 44;\nbreak;\ncase 17:return 34;\nbreak;\ncase 18:return 39;\nbreak;\ncase 19:return 51;\nbreak;\ncase 20:return 48;\nbreak;\ncase 21:\n  this.unput(yy_.yytext);\n  this.popState();\n  this.begin('com');\n\nbreak;\ncase 22:\n  this.popState();\n  return 14;\n\nbreak;\ncase 23:return 48;\nbreak;\ncase 24:return 73;\nbreak;\ncase 25:return 72;\nbreak;\ncase 26:return 72;\nbreak;\ncase 27:return 87;\nbreak;\ncase 28:// ignore whitespace\nbreak;\ncase 29:this.popState(); return 54;\nbreak;\ncase 30:this.popState(); return 33;\nbreak;\ncase 31:yy_.yytext = strip(1,2).replace(/\\\\\"/g,'\"'); return 80;\nbreak;\ncase 32:yy_.yytext = strip(1,2).replace(/\\\\'/g,\"'\"); return 80;\nbreak;\ncase 33:return 85;\nbreak;\ncase 34:return 82;\nbreak;\ncase 35:return 82;\nbreak;\ncase 36:return 83;\nbreak;\ncase 37:return 84;\nbreak;\ncase 38:return 81;\nbreak;\ncase 39:return 75;\nbreak;\ncase 40:return 77;\nbreak;\ncase 41:return 72;\nbreak;\ncase 42:yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g,'$1'); return 72;\nbreak;\ncase 43:return 'INVALID';\nbreak;\ncase 44:return 5;\nbreak;\n}\n};\nlexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{(?=[^\\/]))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/,/^(?:[\\s\\S]*?--(~)?\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#>)/,/^(?:\\{\\{(~)?#\\*?)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{(~)?!--)/,/^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?\\*?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)|])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:undefined(?=([~}\\s)])))/,/^(?:null(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:as\\s+\\|)/,/^(?:\\|)/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/,/^(?:\\[(\\\\\\]|[^\\]])*\\])/,/^(?:.)/,/^(?:$)/];\nlexer.conditions = {\"mu\":{\"rules\":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],\"inclusive\":false},\"emu\":{\"rules\":[2],\"inclusive\":false},\"com\":{\"rules\":[6],\"inclusive\":false},\"raw\":{\"rules\":[3,4,5],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,44],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nfunction Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();export default handlebars;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js":{"lineLengths":[13,0,26,23,0,97,0,36,0,49,0,30,88,0,25,1,57,0,58,52,0,32,25,0,26,48,26,37,0,17,15,5,0,62,62,67,69,92,0,22,31,5,21,30,5,0,43,25,0,30,76,50,56,69,9,7,5,41,59,0,68,24,5,42,35,25,0,58,5,3,0,17,2,0,160,29,29,0,72,47,47,29,28,0,35,43,0,85,33,74,5,3,0,15,31,34,0,97,64,51,69,4,0,30,40,3,0,16,42,0,28,41,5,0,29,47,5,32,45,5,0,37,114,29,35,5,37,39,3,0,15,2,0,109,24,2,0,111,28,31,10,27,21,22,4,2,0,44,24,20,3,0,76,32,25,28,14,18,3,0,41,86,3,1,44,24,11,3,0,25,28,14,18,3,0,41,86,3,1,0,58,53,2,66,2,86,18,39,44,94,11,3,0,31,81,53,1,0,57,53,2,64,2,86,18,38,58,93,11,3,0,90,31,75,52,30,1,0,39,36,16576,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/whitespace-control.js"],"names":[],"mappings":"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","file":"whitespace-control.js","sourcesContent":["import Visitor from './visitor';\n\nfunction WhitespaceControl(options = {}) {\n  this.options = options;\n}\nWhitespaceControl.prototype = new Visitor();\n\nWhitespaceControl.prototype.Program = function(program) {\n  const doStandalone = !this.options.ignoreStandalone;\n\n  let isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  let body = program.body;\n  for (let i = 0, l = body.length; i < l; i++) {\n    let current = body[i],\n      strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    let _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n      _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n      openStandalone = strip.openStandalone && _isPrevWhitespace,\n      closeStandalone = strip.closeStandalone && _isNextWhitespace,\n      inlineStandalone =\n        strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function(\n  block\n) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  let program = block.program || block.inverse,\n    inverse = block.program && block.inverse,\n    firstInverse = inverse,\n    lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  let strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    let inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (\n      !this.options.ignoreStandalone &&\n      isPrevWhitespace(program.body) &&\n      isNextWhitespace(firstInverse.body)\n    ) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function(\n  mustache\n) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function(\n  node\n) {\n  /* istanbul ignore next */\n  let strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  let prev = body[i - 1],\n    sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(\n      prev.original\n    );\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  let next = body[i + 1],\n    sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(\n      next.original\n    );\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  let current = body[i == null ? 0 : i + 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.rightStripped)\n  ) {\n    return;\n  }\n\n  let original = current.value;\n  current.value = current.value.replace(\n    multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/,\n    ''\n  );\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  let current = body[i == null ? body.length - 1 : i - 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.leftStripped)\n  ) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n  let original = current.value;\n  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexport default WhitespaceControl;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js":{"lineLengths":[13,0,26,23,0,97,0,41,0,53,0,20,20,1,0,21,23,18,0,76,45,40,24,88,81,52,136,7,25,5,4,0,67,35,55,31,0,22,72,5,4,0,73,24,44,51,31,0,22,27,12,12,7,5,4,0,35,18,13,5,0,43,29,79,5,0,23,41,5,26,0,40,0,40,0,32,17,31,20,5,4,0,38,35,4,0,40,32,0,29,29,0,33,66,37,0,39,4,0,64,64,0,36,0,57,0,57,57,57,64,54,0,29,33,4,37,39,3,2,0,39,40,36,35,1,28,39,0,35,35,1,32,39,35,34,1,0,29,36,8900,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/visitor.js"],"names":[],"mappings":"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","file":"visitor.js","sourcesContent":["import Exception from '../exception';\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function(node, name) {\n    let value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new Exception(\n          'Unexpected node type \"' +\n            value.type +\n            '\" found when accepting ' +\n            name +\n            ' on ' +\n            node.type\n        );\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new Exception(node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function(array) {\n    for (let i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new Exception('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    let ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function(/* content */) {},\n  CommentStatement: function(/* comment */) {},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function(/* path */) {},\n\n  StringLiteral: function(/* string */) {},\n  NumberLiteral: function(/* number */) {},\n  BooleanLiteral: function(/* bool */) {},\n  UndefinedLiteral: function(/* literal */) {},\n  NullLiteral: function(/* literal */) {},\n\n  Hash: function(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexport default Visitor;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js":{"lineLengths":[13,0,26,40,16,32,36,34,42,42,36,40,50,23,0,97,0,41,0,53,0,37,51,0,37,43,0,96,3,1,0,42,23,16,29,32,4,14,28,31,4,1,0,20,31,48,10,17,3,1,0,34,10,33,49,4,1,0,32,72,1,0,40,26,0,33,15,16,0,49,29,0,78,68,43,50,0,75,27,84,33,16,7,12,21,5,3,0,10,27,15,17,15,23,12,4,1,0,68,41,52,57,0,34,10,56,15,19,15,21,17,30,4,1,0,66,37,0,34,17,20,19,14,16,4,0,10,27,28,32,28,21,18,21,19,16,4,1,0,88,28,36,3,0,44,0,46,0,26,31,0,26,20,99,5,0,34,65,5,0,43,40,3,0,17,23,22,23,3,0,10,58,25,29,25,21,21,31,31,37,30,4,1,0,42,34,37,56,0,30,30,13,32,16,36,39,10,14,33,36,9,8,5,3,0,10,20,21,14,12,4,1,0,61,29,0,10,34,20,24,20,21,26,37,30,4,1,13824,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/helpers.js"],"names":[],"mappings":"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","file":"helpers.js","sourcesContent":["import Exception from '../exception';\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    let errorNode = { loc: open.path.loc };\n\n    throw new Exception(\n      open.path.original + \" doesn't match \" + close,\n      errorNode\n    );\n  }\n}\n\nexport function SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nexport function id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nexport function stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nexport function stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n}\n\nexport function preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  let original = data ? '@' : '',\n    dig = [],\n    depth = 0;\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    let part = parts[i].part,\n      // If we have [] syntax then we do not treat path references as operators,\n      // i.e. foo.[this] resolves to approximately context.foo['this']\n      isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new Exception('Invalid path: ' + original, { loc });\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data,\n    depth,\n    parts: dig,\n    original,\n    loc\n  };\n}\n\nexport function prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  let escapeFlag = open.charAt(3) || open.charAt(2),\n    escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  let decorator = /\\*/.test(open);\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path,\n    params,\n    hash,\n    escaped,\n    strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  let program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nexport function prepareBlock(\n  openBlock,\n  program,\n  inverseAndProgram,\n  close,\n  inverted,\n  locInfo\n) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  let decorator = /\\*/.test(openBlock.open);\n\n  program.blockParams = openBlock.blockParams;\n\n  let inverse, inverseStrip;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new Exception(\n        'Unexpected inverse block on decorator',\n        inverseAndProgram\n      );\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program,\n    inverse,\n    openStrip: openBlock.strip,\n    inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    const firstLoc = statements[0].loc,\n      lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\nexport function preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js":{"lineLengths":[28,0,13,0,26,28,32,26,23,0,97,0,41,0,53,0,33,0,28,0,41,0,21,0,22,0,74,77,81,81,0,22,21,0,34,34,39,19,5,0,35,35,41,94,21,7,5,0,92,36,31,35,56,21,7,5,0,16,4,0,10,0,47,25,22,23,27,45,37,0,52,0,63,26,31,17,17,19,19,16,18,29,0,32,4,0,52,44,38,58,27,0,59,0,33,56,0,16,4,0,33,43,27,75,5,0,34,36,28,15,4,0,38,58,0,28,33,42,27,5,0,37,0,37,76,0,16,4,0,50,34,0,32,32,0,54,54,0,41,0,28,48,35,30,0,61,54,42,42,31,53,12,51,0,61,54,42,42,31,41,5,0,26,4,0,54,78,77,30,0,30,67,4,0,56,27,0,34,18,53,5,0,32,28,109,32,48,48,14,69,7,5,0,44,58,20,32,5,0,68,0,38,47,43,18,5,0,65,26,4,71,40,4,0,59,33,0,53,35,12,28,5,4,44,35,4,0,56,24,50,5,4,0,51,0,48,34,41,0,28,30,35,30,12,33,5,4,68,26,29,53,0,42,0,40,40,0,23,22,0,50,4,0,44,26,23,22,41,4,0,62,71,26,29,0,42,60,47,117,12,25,24,0,24,105,5,4,0,49,30,42,0,29,57,76,0,23,64,23,60,33,27,31,69,12,82,5,4,0,49,44,4,0,49,45,4,0,49,43,4,0,49,44,4,0,39,39,4,0,29,27,14,25,0,28,0,24,37,5,17,48,5,27,4,0,12,33,23,19,37,33,7,4,0,38,17,13,5,0,26,4,0,48,65,0,79,0,43,61,85,0,61,63,26,61,0,62,98,34,38,33,40,24,44,27,7,5,0,19,22,28,25,12,22,5,4,0,43,52,32,5,4,0,38,67,0,28,26,70,7,0,22,33,7,48,54,0,41,53,33,25,7,12,26,40,81,63,9,30,61,80,16,40,30,96,11,0,49,9,7,23,5,4,0,97,30,28,0,40,40,0,21,30,12,42,5,0,18,4,0,51,86,56,67,38,30,7,5,3,2,0,42,79,127,3,0,26,29,24,3,23,29,3,0,38,61,68,1,0,39,42,0,79,124,3,0,39,29,24,3,23,29,3,0,27,0,27,40,63,99,38,3,0,72,38,20,32,5,53,3,40,20,32,5,41,4,56,20,32,5,57,4,13,1,0,26,16,16,3,0,72,40,35,21,7,5,16,3,1,0,40,26,29,90,21,18,29,18,15,37,38,22,6,3,1,42244,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/compiler.js"],"names":[],"mappings":"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","file":"compiler.js","sourcesContent":["/* eslint-disable new-cap */\n\nimport Exception from '../exception';\nimport { isArray, indexOf, extend } from '../utils';\nimport AST from './ast';\n\nconst slice = [].slice;\n\nexport function Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function(other) {\n    let len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      let opcode = this.opcodes[i],\n        otherOpcode = other.opcodes[i];\n      if (\n        opcode.opcode !== otherOpcode.opcode ||\n        !argEquals(opcode.args, otherOpcode.args)\n      ) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (let i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    options.knownHelpers = extend(\n      Object.create(null),\n      {\n        helperMissing: true,\n        blockHelperMissing: true,\n        each: true,\n        if: true,\n        unless: true,\n        with: true,\n        log: true,\n        lookup: true\n      },\n      options.knownHelpers\n    );\n\n    return this.accept(program);\n  },\n\n  compileProgram: function(program) {\n    let childCompiler = new this.compiler(), // eslint-disable-line new-cap\n      result = childCompiler.compile(program, this.options),\n      guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new Exception('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    let ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    let body = program.body,\n      bodyLength = body.length;\n    for (let i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function(block) {\n    transformLiteralToPath(block);\n\n    let program = block.program,\n      inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    let type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock(decorator) {\n    let program = decorator.program && this.compileProgram(decorator.program);\n    let params = this.setupFullMustacheParams(decorator, program, undefined),\n      path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function(partial) {\n    this.usePartial = true;\n\n    let program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    let params = partial.params;\n    if (params.length > 1) {\n      throw new Exception(\n        'Unsupported number of partial arguments: ' + params.length,\n        partial\n      );\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n      }\n    }\n\n    let partialName = partial.name.original,\n      isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    let indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n  ContentStatement: function(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function() {},\n\n  SubExpression: function(sexpr) {\n    transformLiteralToPath(sexpr);\n    let type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function(sexpr, program, inverse) {\n    let path = sexpr.path,\n      name = path.parts[0],\n      isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function(sexpr) {\n    let path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function(sexpr, program, inverse) {\n    let params = this.setupFullMustacheParams(sexpr, program, inverse),\n      path = sexpr.path,\n      name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new Exception(\n        'You specified knownHelpersOnly, but used the unknown helper ' + name,\n        sexpr\n      );\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode(\n        'invokeHelper',\n        params.length,\n        path.original,\n        AST.helpers.simpleId(path)\n      );\n    }\n  },\n\n  PathExpression: function(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    let name = path.parts[0],\n      scoped = AST.helpers.scopedId(path),\n      blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode(\n        'lookupOnContext',\n        path.parts,\n        path.falsy,\n        path.strict,\n        scoped\n      );\n    }\n  },\n\n  StringLiteral: function(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function(hash) {\n    let pairs = hash.pairs,\n      i = 0,\n      l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function(name) {\n    this.opcodes.push({\n      opcode: name,\n      args: slice.call(arguments, 1),\n      loc: this.sourceNode[0].loc\n    });\n  },\n\n  addDepth: function(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function(sexpr) {\n    let isSimple = AST.helpers.simpleId(sexpr.path);\n\n    let isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    let isHelper = !isBlockParam && AST.helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    let isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      let name = sexpr.path.parts[0],\n        options = this.options;\n      if (options.knownHelpers[name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function(params) {\n    for (let i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function(val) {\n    let value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        let blockParamIndex;\n        if (val.parts && !AST.helpers.scopedId(val) && !val.depth) {\n          blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          let blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value\n              .replace(/^this(?:\\.|$)/, '')\n              .replace(/^\\.\\//, '')\n              .replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function(sexpr, program, inverse, omitEmpty) {\n    let params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function(name) {\n    for (\n      let depth = 0, len = this.options.blockParams.length;\n      depth < len;\n      depth++\n    ) {\n      let blockParams = this.options.blockParams[depth],\n        param = blockParams && indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nexport function precompile(input, options, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' +\n        input\n    );\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let ast = env.parse(input, options),\n    environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nexport function compile(input, options = {}, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.compile. You passed ' +\n        input\n    );\n  }\n\n  options = extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let compiled;\n\n  function compileInput() {\n    let ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options),\n      templateSpec = new env.JavaScriptCompiler().compile(\n        environment,\n        options,\n        undefined,\n        true\n      );\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function(setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function(i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (isArray(a) && isArray(b) && a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    let literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js":{"lineLengths":[13,0,26,23,0,97,0,31,0,41,0,53,0,33,0,37,0,49,0,25,21,1,0,32,0,32,72,71,62,49,4,47,88,4,0,41,43,52,32,4,0,71,57,34,24,5,48,0,36,38,26,79,79,81,41,12,35,20,5,4,0,49,33,4,19,65,45,71,4,0,38,0,70,35,27,50,42,32,0,38,29,31,21,19,22,6,0,20,0,23,24,22,34,21,27,26,26,0,47,0,113,76,0,38,27,29,22,22,0,49,26,0,47,40,51,5,0,56,43,24,0,30,80,87,5,0,37,32,0,127,41,0,21,145,14,105,36,50,7,12,34,5,0,50,24,17,38,16,8,0,28,70,33,7,0,34,39,43,0,52,26,31,30,42,37,11,9,7,0,40,30,7,30,27,7,27,29,7,32,34,7,32,26,7,0,22,52,0,72,38,0,30,70,50,16,31,9,14,43,7,0,17,12,16,5,4,0,33,69,48,25,65,69,4,0,67,27,0,21,0,29,0,60,28,50,5,0,40,6,86,88,85,60,23,56,38,53,66,48,7,7,0,44,76,5,0,72,0,48,33,5,25,28,5,0,75,51,0,19,26,0,42,12,87,5,4,54,45,39,32,31,32,30,38,32,26,31,16,29,9,25,14,26,28,31,18,46,11,29,46,9,0,26,24,29,9,7,7,0,21,24,39,27,31,39,7,12,86,0,24,48,27,14,43,7,5,0,26,94,5,0,31,4,0,89,271,4,0,17,4,52,56,4,62,69,56,33,41,82,39,42,0,36,35,0,76,4,0,26,4,52,74,60,42,55,81,82,39,46,0,23,0,34,33,0,139,4,0,20,4,26,25,4,64,50,30,46,12,57,5,0,34,4,0,13,4,33,25,4,70,4,73,44,29,26,44,49,9,0,60,12,34,106,38,87,7,5,4,0,20,4,33,25,4,47,43,116,4,0,17,4,26,25,45,4,67,42,29,4,0,18,4,26,41,4,60,39,62,4,0,22,4,26,47,4,67,23,75,14,0,62,92,74,48,12,25,5,0,57,4,0,23,4,26,43,4,70,23,68,31,0,77,42,4,0,17,4,26,31,4,34,57,17,36,12,67,5,0,53,4,0,68,27,0,22,0,60,80,13,5,0,27,26,39,44,64,97,63,21,57,16,56,34,9,9,38,5,4,0,28,4,33,41,4,59,35,59,106,4,0,22,4,26,49,4,58,60,48,59,23,26,0,49,40,35,39,32,14,38,7,5,4,0,44,24,33,5,28,38,35,5,58,4,33,20,34,5,65,4,31,25,34,0,24,46,5,28,51,48,5,0,47,4,0,17,4,26,47,4,53,43,53,4,0,18,4,26,32,4,59,60,8,44,33,4,0,18,4,26,40,4,57,66,16,43,23,58,12,34,5,4,0,24,4,52,25,4,64,56,66,74,56,0,136,4,0,19,4,61,49,4,58,57,4,59,66,36,51,0,35,0,19,30,46,5,44,42,31,82,5,0,92,95,28,4,0,65,20,26,44,39,5,18,4,24,4,61,49,4,62,51,66,51,80,4,0,22,4,61,46,4,61,62,27,4,59,57,46,63,31,0,36,0,21,55,0,82,0,73,31,31,91,5,0,226,4,0,20,4,35,49,4,76,50,66,20,52,0,20,29,26,5,0,17,46,5,32,34,48,0,21,67,12,27,5,0,30,32,5,42,25,0,79,4,0,19,4,44,36,4,66,44,32,28,25,23,0,24,27,5,28,29,32,5,0,25,18,35,5,15,29,5,13,25,5,29,4,0,46,32,135,43,28,42,36,12,36,5,4,0,12,0,31,0,67,40,26,29,0,54,26,68,0,54,0,29,100,49,28,39,104,61,49,0,62,77,41,51,14,37,48,0,62,77,7,5,4,62,75,53,53,27,7,5,4,0,55,48,65,0,48,40,5,25,35,5,0,65,4,0,43,32,34,37,5,4,0,29,37,36,5,0,32,16,4,0,53,33,4,0,43,30,113,38,5,0,17,31,5,4,0,49,23,26,33,32,0,30,27,69,5,0,83,34,0,33,43,26,28,25,12,67,26,35,0,57,30,5,0,42,0,23,22,5,23,23,5,40,4,0,35,21,49,52,5,31,4,41,36,4,39,39,26,61,33,30,37,38,14,37,52,38,7,5,4,33,35,4,0,40,33,69,0,46,24,12,20,34,30,64,9,25,7,18,5,4,0,33,71,39,0,28,34,24,12,18,5,4,0,46,36,39,12,31,5,4,0,44,41,4,0,46,42,4,0,39,33,14,27,17,5,0,54,25,27,0,15,4,0,67,20,80,65,133,0,12,21,29,24,46,6,4,0,64,21,22,19,17,29,26,0,21,18,5,0,45,35,0,24,40,5,28,42,45,5,0,34,34,0,67,50,29,47,52,5,0,96,60,22,17,30,24,0,26,33,7,30,35,38,7,5,0,21,55,5,0,24,51,5,28,55,61,5,0,28,28,5,30,42,5,19,4,0,85,62,62,42,22,34,29,35,24,27,16,12,21,5,3,2,0,14,518,0,61,0,57,43,3,5,0,3,55,3,68,93,2,0,63,34,12,25,24,10,3,0,24,55,3,0,24,164,10,17,3,1,0,40,36,86488,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/javascript-compiler.js"],"names":[],"mappings":"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","file":"javascript-compiler.js","sourcesContent":["import { COMPILER_REVISION, REVISION_CHANGES } from '../base';\nimport Exception from '../exception';\nimport { isArray } from '../utils';\nimport CodeGen from './code-gen';\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function(parent, name /*,  type */) {\n    return this.internalNameLookup(parent, name);\n  },\n  depthedLookup: function(name) {\n    return [\n      this.aliasable('container.lookup'),\n      '(depths, ',\n      JSON.stringify(name),\n      ')'\n    ];\n  },\n\n  compilerInfo: function() {\n    const revision = COMPILER_REVISION,\n      versions = REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n  internalNameLookup: function(parent, name) {\n    this.lookupPropertyFunctionIsUsed = true;\n    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n  },\n\n  lookupPropertyFunctionIsUsed: false,\n\n  compile: function(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths =\n      this.useDepths ||\n      environment.useDepths ||\n      environment.useDecorators ||\n      this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    let opcodes = environment.opcodes,\n      opcode,\n      firstLoc,\n      i,\n      l;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new Exception('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend([\n        'var decorators = container.decorators, ',\n        this.lookupPropertyFunctionVarDeclaration(),\n        ';\\n'\n      ]);\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, [\n          'fn',\n          'props',\n          'container',\n          'depth0',\n          'data',\n          'blockParams',\n          'depths',\n          this.decorators.merge()\n        ]);\n      } else {\n        this.decorators.prepend(\n          'function(fn, props, container, depth0, data, blockParams, depths) {\\n'\n        );\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    let fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      let ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      let { programs, decorators } = this.context;\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = { start: { line: 1, column: 0 } };\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({ file: options.destName });\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new CodeGen(this.options.srcName);\n    this.decorators = new CodeGen(this.options.srcName);\n  },\n\n  createFunctionContext: function(asObject) {\n    let varDeclarations = '';\n\n    let locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    let aliasCount = 0;\n    Object.keys(this.aliases).forEach(alias => {\n      let node = this.aliases[alias];\n      if (node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    });\n\n    if (this.lookupPropertyFunctionIsUsed) {\n      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n    }\n\n    let params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    let source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap([\n        'function(',\n        params.join(','),\n        ') {\\n  ',\n        source,\n        '}'\n      ]);\n    }\n  },\n  mergeSource: function(varDeclarations) {\n    let isSimple = this.environment.isSimple,\n      appendOnly = !this.forceBuffer,\n      appendFirst,\n      sourceSeen,\n      bufferStart,\n      bufferEnd;\n    this.source.each(line => {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations +=\n        ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend(\n        'var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n')\n      );\n    }\n\n    return this.source.merge();\n  },\n\n  lookupPropertyFunctionVarDeclaration: function() {\n    return `\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    }\n    `.trim();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function(name) {\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    let blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    let current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource([\n      'if (!',\n      this.lastHelper,\n      ') { ',\n      current,\n      ' = ',\n      this.source.functionCall(blockHelperMissing, 'call', params),\n      '}'\n    ]);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function() {\n    if (this.isInline()) {\n      this.replaceStack(current => [' != null ? ', current, ' : \"\"']);\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      let local = this.popStack();\n      this.pushSource([\n        'if (',\n        local,\n        ' != null) { ',\n        this.appendToBuffer(local, undefined, true),\n        ' }'\n      ]);\n      if (this.environment.isSimple) {\n        this.pushSource([\n          'else { ',\n          this.appendToBuffer(\"''\", undefined, true),\n          ' }'\n        ]);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function() {\n    this.pushSource(\n      this.appendToBuffer([\n        this.aliasable('container.escapeExpression'),\n        '(',\n        this.popStack(),\n        ')'\n      ])\n    );\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function(parts, falsy, strict, scoped) {\n    let i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function(type, parts, i, falsy, strict) {\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(strictLookup(this.options.strict && strict, this, parts, type));\n      return;\n    }\n\n    let len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack(current => {\n        let lookup = this.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function() {\n    this.push([\n      this.aliasable('container.lambda'),\n      '(',\n      this.popStack(),\n      ', ',\n      this.contextName(0),\n      ')'\n    ]);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n  },\n  popHash: function() {\n    let hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator(paramSize, name) {\n    let foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n      options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push([\n      'fn = ',\n      this.decorators.functionCall(foundDecorator, '', [\n        'fn',\n        'props',\n        'container',\n        options\n      ]),\n      ' || fn;'\n    ]);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function(paramSize, name, isSimple) {\n    let nonHelper = this.popStack(),\n      helper = this.setupHelper(paramSize, name);\n\n    let possibleFunctionCalls = [];\n\n    if (isSimple) {\n      // direct call to helper\n      possibleFunctionCalls.push(helper.name);\n    }\n    // call a function from the input object\n    possibleFunctionCalls.push(nonHelper);\n    if (!this.options.strict) {\n      possibleFunctionCalls.push(\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    let functionLookupCode = [\n      '(',\n      this.itemsSeparatedBy(possibleFunctionCalls, '||'),\n      ')'\n    ];\n    let functionCall = this.source.functionCall(\n      functionLookupCode,\n      'call',\n      helper.callParams\n    );\n    this.push(functionCall);\n  },\n\n  itemsSeparatedBy: function(items, separator) {\n    let result = [];\n    result.push(items[0]);\n    for (let i = 1; i < items.length; i++) {\n      result.push(separator, items[i]);\n    }\n    return result;\n  },\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function(paramSize, name) {\n    let helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function(name, helperCall) {\n    this.useRegister('helper');\n\n    let nonHelper = this.popStack();\n\n    this.emptyHash();\n    let helper = this.setupHelper(0, name, helperCall);\n\n    let helperName = (this.lastHelper = this.nameLookup(\n      'helpers',\n      name,\n      'helper'\n    ));\n\n    let lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(\n        ' != null ? helper : ',\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    this.push([\n      '(',\n      lookup,\n      helper.paramsInit ? ['),(', helper.paramsInit] : [],\n      '),',\n      '(typeof helper === ',\n      this.aliasable('\"function\"'),\n      ' ? ',\n      this.source.functionCall('helper', 'call', helper.callParams),\n      ' : helper))'\n    ]);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function(isDynamic, name, indent) {\n    let params = [],\n      options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function(key) {\n    let value = this.popStack(),\n      context,\n      type,\n      id;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    let hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral(\n        'blockParams[' +\n          name[0] +\n          '].path[' +\n          name[1] +\n          ']' +\n          (child ? ' + ' + JSON.stringify('.' + child) : '')\n      );\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function(environment, options) {\n    let children = environment.children,\n      child,\n      compiler;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      let existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        let index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(\n          child,\n          options,\n          this.context,\n          !this.precompile\n        );\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function(child) {\n    for (let i = 0, len = this.context.environments.length; i < len; i++) {\n      let environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function(guid) {\n    let child = this.environment.children[guid],\n      programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function(source) {\n    if (this.pendingContent) {\n      this.source.push(\n        this.appendToBuffer(\n          this.source.quotedString(this.pendingContent),\n          this.pendingLocation\n        )\n      );\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function(callback) {\n    let prefix = ['('],\n      stack,\n      createdStack,\n      usedLiteral;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new Exception('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    let top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      let name = this.incrStack();\n\n      prefix = ['((', this.push(name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    let item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) {\n      this.stackVars.push('stack' + this.stackSlot);\n    }\n    return this.topStackName();\n  },\n  topStackName: function() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function() {\n    let inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (let i = 0, len = inlineStack.length; i < len; i++) {\n      let entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        let stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function(wrapped) {\n    let inline = this.isInline(),\n      item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && item instanceof Literal) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new Exception('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function() {\n    let stack = this.isInline() ? this.inlineStack : this.compileStack,\n      item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function(name) {\n    let ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function(paramSize, name, blockHelper) {\n    let params = [],\n      paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    let foundHelper = this.nameLookup('helpers', name, 'helper'),\n      callContext = this.aliasable(\n        `${this.contextName(0)} != null ? ${this.contextName(\n          0\n        )} : (container.nullContext || {})`\n      );\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function(helper, paramSize, params) {\n    let options = {},\n      contexts = [],\n      types = [],\n      ids = [],\n      objectArgs = !params,\n      param;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    let inverse = this.popStack(),\n      program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    let i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function(helper, paramSize, params, useRegister) {\n    let options = this.setupParams(helper, paramSize, params);\n    options.loc = JSON.stringify(this.source.currentLocation);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n(function() {\n  const reservedWords = (\n    'break else new var' +\n    ' case finally return void' +\n    ' catch for switch while' +\n    ' continue function this with' +\n    ' default if throw' +\n    ' delete in try' +\n    ' do instanceof typeof' +\n    ' abstract enum int short' +\n    ' boolean export interface static' +\n    ' byte extends long super' +\n    ' char final native synchronized' +\n    ' class float package throws' +\n    ' const goto private transient' +\n    ' debugger implements protected volatile' +\n    ' double import public let yield await' +\n    ' null true false'\n  ).split(' ');\n\n  const compilerWords = (JavaScriptCompiler.RESERVED_WORDS = {});\n\n  for (let i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n})();\n\n/**\n * @deprecated May be removed in the next major version\n */\nJavaScriptCompiler.isValidJavaScriptVariableName = function(name) {\n  return (\n    !JavaScriptCompiler.RESERVED_WORDS[name] &&\n    /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name)\n  );\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, type) {\n  let stack = compiler.popStack(),\n    i = 0,\n    len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [\n      compiler.aliasable('container.strict'),\n      '(',\n      stack,\n      ', ',\n      compiler.quotedString(parts[i]),\n      ', ',\n      JSON.stringify(compiler.source.currentLocation),\n      ' )'\n    ];\n  } else {\n    return stack;\n  }\n}\n\nexport default JavaScriptCompiler;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js":{"lineLengths":[19,13,0,26,0,33,0,27,0,5,28,52,88,88,42,38,3,16,9,0,79,18,57,18,17,23,5,4,28,26,31,35,33,7,25,6,39,35,33,7,35,6,61,39,6,35,22,5,4,1,0,41,30,17,0,55,44,5,15,71,61,22,3,15,1,0,27,25,19,1,0,21,31,31,4,42,48,4,36,45,4,0,27,30,31,37,7,18,4,0,29,61,27,5,4,0,27,52,74,4,30,121,0,38,19,5,0,40,0,81,4,0,57,39,71,4,0,44,173,41,4,0,46,27,0,21,0,19,0,45,45,34,58,7,7,0,39,21,17,15,4,0,48,27,0,57,14,21,7,0,43,5,0,15,4,0,50,41,21,17,0,15,3,2,0,29,36,11676,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/code-gen.js"],"names":[],"mappings":"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","file":"code-gen.js","sourcesContent":["/* global define */\nimport { isArray } from '../utils';\n\nlet SourceNode;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we asusme that\n    // they are running on the browser and thus have no need for the source-map library.\n    let SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {\n  /* NOP */\n}\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function(line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function() {\n      return { code: this.toString() };\n    },\n    toString: function() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (isArray(chunk)) {\n    let ret = [];\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function() {\n    let source = this.empty();\n    this.each(function(line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function(iter) {\n    for (let i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function() {\n    let loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function(chunk, loc = this.currentLocation || { start: {} }) {\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(\n      loc.start.line,\n      loc.start.column,\n      this.srcFile,\n      chunk\n    );\n  },\n\n  functionCall: function(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function(str) {\n    return (\n      '\"' +\n      (str + '')\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n        .replace(/\\u2029/g, '\\\\u2029') +\n      '\"'\n    );\n  },\n\n  objectLiteral: function(obj) {\n    let pairs = [];\n\n    Object.keys(obj).forEach(key => {\n      let value = castChunk(obj[key], this);\n      if (value !== 'undefined') {\n        pairs.push([this.quotedString(key), ':', value]);\n      }\n    });\n\n    let ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function(entries) {\n    let ret = this.empty();\n\n    for (let i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function(entries) {\n    let ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexport default CodeGen;\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/dist/cjs/handlebars/compiler/printer.js":{"lineLengths":[28,13,0,26,22,36,23,0,97,0,36,0,49,0,21,40,1,0,25,19,1,0,52,0,48,15,0,49,16,3,0,23,13,2,0,53,15,26,20,20,0,28,40,61,50,5,24,33,3,0,44,32,3,0,17,0,13,2,0,64,64,2,56,74,2,0,98,15,0,84,17,45,22,32,19,38,19,3,22,24,21,5,29,19,38,19,24,21,5,3,17,0,13,2,0,62,51,26,52,3,21,47,3,44,2,67,57,26,52,3,21,47,3,0,40,17,42,17,0,44,2,0,62,56,2,0,62,52,2,0,57,28,24,23,0,50,46,3,0,47,0,57,0,55,2,0,55,32,47,2,0,58,34,2,0,58,40,2,0,57,39,2,0,55,21,2,0,50,16,2,0,47,25,23,0,49,44,3,0,48,2,51,50,2,27,13604,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/handlebars/lib/handlebars/compiler/printer.js"],"names":[],"mappings":"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","file":"printer.js","sourcesContent":["/* eslint-disable new-cap */\nimport Visitor from './visitor';\n\nexport function print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nexport function PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new Visitor();\n\nPrintVisitor.prototype.pad = function(string) {\n  let out = '';\n\n  for (let i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function(program) {\n  let out = '',\n    body = program.body,\n    i,\n    l;\n\n  if (program.blockParams) {\n    let blockParams = 'BLOCK PARAMS: [';\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n      blockParams += ' ' + program.blockParams[i];\n    }\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function(mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\nPrintVisitor.prototype.Decorator = function(mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function(\n  block\n) {\n  let out = '';\n\n  out += this.pad(\n    (block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:'\n  );\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n  if (block.inverse) {\n    if (block.program) {\n      this.padding++;\n    }\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n    if (block.program) {\n      this.padding--;\n    }\n  }\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function(partial) {\n  let content = 'PARTIAL:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n  return this.pad('{{> ' + content + ' }}');\n};\nPrintVisitor.prototype.PartialBlockStatement = function(partial) {\n  let content = 'PARTIAL BLOCK:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function(content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function(comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function(sexpr) {\n  let params = sexpr.params,\n    paramStrings = [],\n    hash;\n\n  for (let i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function(id) {\n  let path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\nPrintVisitor.prototype.StringLiteral = function(string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function(number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function(bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function() {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function() {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function(hash) {\n  let pairs = hash.pairs,\n    joinedPairs = [];\n\n  for (let i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\nPrintVisitor.prototype.HashPair = function(pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */\n"],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/index.js":{"lineLengths":[13,40,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/index.js"],"sourcesContent":["'use strict';\n\n/**\n  * A Sequelize module that contains the sequelize entry point.\n  *\n  * @module sequelize\n  */\n\n/** Exports the sequelize entry point. */\nmodule.exports = require('./sequelize');\n"],"mappings":";AASA,OAAO,UAAU,QAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/sequelize.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,27,29,59,43,28,33,33,42,43,48,45,44,44,44,44,33,52,64,34,53,74,59,49,68,55,17,54,15,65,25,83,130,18,31,53,60,39,107,71,71,7,30,63,7,26,37,7,26,51,39,33,57,7,27,34,45,9,37,64,16,50,39,17,59,49,25,13,11,9,7,65,86,7,12,30,48,5,54,35,20,26,30,24,22,17,16,15,25,38,27,22,20,25,18,15,29,16,14,15,16,43,9,8,50,27,25,28,23,27,31,16,32,78,5,48,40,5,82,158,5,40,35,41,5,36,19,57,57,65,45,45,30,38,34,28,44,48,56,60,49,6,16,32,21,48,14,19,46,14,19,46,14,22,49,14,20,47,14,17,44,14,23,50,14,14,147,5,37,72,57,39,85,68,43,5,54,21,47,60,42,3,18,56,3,16,32,3,21,32,3,23,31,3,47,34,29,39,6,36,17,3,20,37,59,5,49,3,24,80,3,29,78,45,51,5,46,25,5,29,71,5,35,114,120,7,24,59,41,14,38,7,5,166,32,37,37,5,34,34,46,105,9,42,7,32,38,95,9,32,7,33,24,7,5,21,47,87,5,31,48,85,14,91,7,5,23,23,111,5,36,97,226,24,20,7,6,95,30,61,64,7,25,134,60,43,39,9,7,70,11,59,27,52,17,58,35,69,9,7,21,3,33,107,63,78,5,80,61,5,23,25,25,117,44,3,17,53,3,39,72,3,33,66,3,37,70,3,33,66,3,23,123,53,7,24,54,117,7,5,24,53,5,24,31,5,22,47,18,27,14,7,7,25,39,12,33,34,5,24,52,5,16,3,27,22,47,18,27,7,27,37,33,38,12,72,5,3,23,22,47,18,27,7,27,31,32,3,31,30,16,18,29,16,54,11,3,34,67,3,12,74,31,5,27,3,26,34,3,19,30,3,26,37,3,23,34,3,23,30,3,22,29,3,40,51,3,41,52,3,44,40,29,23,5,55,24,50,25,5,42,11,47,55,35,28,21,13,38,41,18,40,11,24,9,18,7,7,3,21,103,52,24,16,3,22,30,12,18,12,43,15,3,16,16,30,97,21,44,40,7,12,29,5,26,37,37,38,7,93,57,7,31,5,3,11,42,3,27,62,54,33,49,5,42,23,76,7,40,66,7,5,16,3,33,38,38,5,24,23,60,74,145,62,7,5,51,29,81,14,49,7,37,66,7,5,21,3,1,38,40,42,48,40,38,42,44,64,45,19,9,46,3,3,34,24,18,34,34,36,42,67,64,24,42,32,26,28,40,32,35,44,1,34,70,46,25,35,44,51,44,1,27,37,35,37,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/sequelize.js"],"sourcesContent":["'use strict';\n\nconst url = require('url');\nconst path = require('path');\nconst pgConnectionString = require('pg-connection-string');\nconst retry = require('retry-as-promised');\nconst _ = require('lodash');\n\nconst Utils = require('./utils');\nconst Model = require('./model');\nconst DataTypes = require('./data-types');\nconst Deferrable = require('./deferrable');\nconst ModelManager = require('./model-manager');\nconst Transaction = require('./transaction');\nconst QueryTypes = require('./query-types');\nconst TableHints = require('./table-hints');\nconst IndexHints = require('./index-hints');\nconst sequelizeErrors = require('./errors');\nconst Hooks = require('./hooks');\nconst Association = require('./associations/index');\nconst Validator = require('./utils/validator-extras').validator;\nconst Op = require('./operators');\nconst deprecations = require('./utils/deprecations');\nconst { QueryInterface } = require('./dialects/abstract/query-interface');\nconst { BelongsTo } = require('./associations/belongs-to');\nconst HasOne = require('./associations/has-one');\nconst { BelongsToMany } = require('./associations/belongs-to-many');\nconst { HasMany } = require('./associations/has-many');\n\n/**\n * This is the main class, the entry point to sequelize.\n */\nclass Sequelize {\n  /**\n   * Instantiate sequelize with name of database, username and password.\n   *\n   * @example\n   * // without password / with blank password\n   * const sequelize = new Sequelize('database', 'username', null, {\n   *   dialect: 'mysql'\n   * })\n   *\n   * // with password and options\n   * const sequelize = new Sequelize('my_database', 'john', 'doe', {\n   *   dialect: 'postgres'\n   * })\n   *\n   * // with database, username, and password in the options object\n   * const sequelize = new Sequelize({ database, username, password, dialect: 'mssql' });\n   *\n   * // with uri\n   * const sequelize = new Sequelize('mysql://localhost:3306/database', {})\n   *\n   * // option examples\n   * const sequelize = new Sequelize('database', 'username', 'password', {\n   *   // the sql dialect of the database\n   *   // currently supported: 'mysql', 'sqlite', 'postgres', 'mssql'\n   *   dialect: 'mysql',\n   *\n   *   // custom host; default: localhost\n   *   host: 'my.server.tld',\n   *   // for postgres, you can also specify an absolute path to a directory\n   *   // containing a UNIX socket to connect over\n   *   // host: '/sockets/psql_sockets'.\n   *\n   *   // custom port; default: dialect default\n   *   port: 12345,\n   *\n   *   // custom protocol; default: 'tcp'\n   *   // postgres only, useful for Heroku\n   *   protocol: null,\n   *\n   *   // disable logging or provide a custom logging function; default: console.log\n   *   logging: false,\n   *\n   *   // you can also pass any dialect options to the underlying dialect library\n   *   // - default is empty\n   *   // - currently supported: 'mysql', 'postgres', 'mssql'\n   *   dialectOptions: {\n   *     socketPath: '/Applications/MAMP/tmp/mysql/mysql.sock',\n   *     supportBigNumbers: true,\n   *     bigNumberStrings: true\n   *   },\n   *\n   *   // the storage engine for sqlite\n   *   // - default ':memory:'\n   *   storage: 'path/to/database.sqlite',\n   *\n   *   // disable inserting undefined values as NULL\n   *   // - default: false\n   *   omitNull: true,\n   *\n   *   // a flag for using a native library or not.\n   *   // in the case of 'pg' -- set this to true will allow SSL support\n   *   // - default: false\n   *   native: true,\n   *\n   *   // Specify options, which are used when sequelize.define is called.\n   *   // The following example:\n   *   //   define: { timestamps: false }\n   *   // is basically the same as:\n   *   //   Model.init(attributes, { timestamps: false });\n   *   //   sequelize.define(name, attributes, { timestamps: false });\n   *   // so defining the timestamps for each model will be not necessary\n   *   define: {\n   *     underscored: false,\n   *     freezeTableName: false,\n   *     charset: 'utf8',\n   *     dialectOptions: {\n   *       collate: 'utf8_general_ci'\n   *     },\n   *     timestamps: true\n   *   },\n   *\n   *   // similar for sync: you can define this to always force sync for models\n   *   sync: { force: true },\n   *\n   *   // pool configuration used to pool database connections\n   *   pool: {\n   *     max: 5,\n   *     idle: 30000,\n   *     acquire: 60000,\n   *   },\n   *\n   *   // isolation level of each transaction\n   *   // defaults to dialect default\n   *   isolationLevel: Transaction.ISOLATION_LEVELS.REPEATABLE_READ\n   * })\n   *\n   * @param {string}   [database] The name of the database\n   * @param {string}   [username=null] The username which is used to authenticate against the database.\n   * @param {string}   [password=null] The password which is used to authenticate against the database. Supports SQLCipher encryption for SQLite.\n   * @param {object}   [options={}] An object with options.\n   * @param {string}   [options.host='localhost'] The host of the relational database.\n   * @param {number}   [options.port] The port of the relational database.\n   * @param {string}   [options.username=null] The username which is used to authenticate against the database.\n   * @param {string}   [options.password=null] The password which is used to authenticate against the database.\n   * @param {string}   [options.database=null] The name of the database.\n   * @param {string}   [options.dialect] The dialect of the database you are connecting to. One of mysql, postgres, sqlite, db2, mariadb and mssql.\n   * @param {string}   [options.dialectModule=null] If specified, use this dialect library. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify 'require(\"pg.js\")' here\n   * @param {string}   [options.dialectModulePath=null] If specified, load the dialect library from this path. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify '/path/to/pg.js' here\n   * @param {object}   [options.dialectOptions] An object of additional options, which are passed directly to the connection library\n   * @param {string}   [options.storage] Only used by sqlite. Defaults to ':memory:'\n   * @param {string}   [options.protocol='tcp'] The protocol of the relational database.\n   * @param {object}   [options.define={}] Default options for model definitions. See {@link Model.init}.\n   * @param {object}   [options.query={}] Default options for sequelize.query\n   * @param {string}   [options.schema=null] A schema to use\n   * @param {object}   [options.set={}] Default options for sequelize.set\n   * @param {object}   [options.sync={}] Default options for sequelize.sync\n   * @param {string}   [options.timezone='+00:00'] The timezone used when converting a date from the database into a JavaScript date. The timezone is also used to SET TIMEZONE when connecting to the server, to ensure that the result of NOW, CURRENT_TIMESTAMP and other time related functions have in the right timezone. For best cross platform performance use the format +/-HH:MM. Will also accept string versions of timezones used by moment.js (e.g. 'America/Los_Angeles'); this is useful to capture daylight savings time changes.\n   * @param {string|boolean} [options.clientMinMessages='warning'] (Deprecated) The PostgreSQL `client_min_messages` session parameter. Set to `false` to not override the database's default.\n   * @param {boolean}  [options.standardConformingStrings=true] The PostgreSQL `standard_conforming_strings` session parameter. Set to `false` to not set the option. WARNING: Setting this to false may expose vulnerabilities and is not recommended!\n   * @param {Function} [options.logging=console.log] A function that gets executed every time Sequelize would log something. Function may receive multiple parameters but only first one is printed by `console.log`. To print all values use `(...msg) => console.log(msg)`\n   * @param {boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {boolean}  [options.omitNull=false] A flag that defines if null values should be passed as values to CREATE/UPDATE SQL queries or not.\n   * @param {boolean}  [options.native=false] A flag that defines if native library shall be used or not. Currently only has an effect for postgres\n   * @param {boolean}  [options.replication=false] Use read / write replication. To enable replication, pass an object, with two properties, read and write. Write should be an object (a single server for handling writes), and read an array of object (several servers to handle reads). Each read/write server can have the following properties: `host`, `port`, `username`, `password`, `database`\n   * @param {object}   [options.pool] sequelize connection pool configuration\n   * @param {number}   [options.pool.max=5] Maximum number of connection in pool\n   * @param {number}   [options.pool.min=0] Minimum number of connection in pool\n   * @param {number}   [options.pool.idle=10000] The maximum time, in milliseconds, that a connection can be idle before being released.\n   * @param {number}   [options.pool.acquire=60000] The maximum time, in milliseconds, that pool will try to get connection before throwing error\n   * @param {number}   [options.pool.evict=1000] The time interval, in milliseconds, after which sequelize-pool will remove idle connections.\n   * @param {Function} [options.pool.validate] A function that validates a connection. Called with client. The default function checks that client is an object, and that its state is not disconnected\n   * @param {number}   [options.pool.maxUses=Infinity] The number of times a connection can be used before discarding it for a replacement, [`used for eventual cluster rebalancing`](https://github.com/sequelize/sequelize-pool).\n   * @param {boolean}  [options.quoteIdentifiers=true] Set to `false` to make table names and attributes case-insensitive on Postgres and skip double quoting of them.  WARNING: Setting this to false may expose vulnerabilities and is not recommended!\n   * @param {string}   [options.transactionType='DEFERRED'] Set the default transaction type. See `Sequelize.Transaction.TYPES` for possible options. Sqlite only.\n   * @param {string}   [options.isolationLevel] Set the default transaction isolation level. See `Sequelize.Transaction.ISOLATION_LEVELS` for possible options.\n   * @param {object}   [options.retry] Set of flags that control when a query is automatically retried. Accepts all options for [`retry-as-promised`](https://github.com/mickhansen/retry-as-promised).\n   * @param {Array}    [options.retry.match] Only retry a query if the error matches one of these strings.\n   * @param {number}   [options.retry.max] How many times a failing query is automatically retried.  Set to 0 to disable retrying on SQL_BUSY error.\n   * @param {boolean}  [options.typeValidation=false] Run built-in type validators on insert and update, and select with where clause, e.g. validate that arguments passed to integer fields are integer-like.\n   * @param {object}   [options.operatorsAliases] String based operator alias. Pass object to limit set of aliased operators.\n   * @param {object}   [options.hooks] An object of global hook functions that are called before and after certain lifecycle events. Global hooks will run after any model-specific hooks defined for the same event (See `Sequelize.Model.init()` for a list).  Additionally, `beforeConnect()`, `afterConnect()`, `beforeDisconnect()`, and `afterDisconnect()` hooks may be defined here.\n   * @param {boolean}  [options.minifyAliases=false] A flag that defines if aliases should be minified (mostly useful to avoid Postgres alias character limit of 64)\n   * @param {boolean}  [options.logQueryParameters=false] A flag that defines if show bind parameters in log.\n   */\n  constructor(database, username, password, options) {\n    let config;\n\n    if (arguments.length === 1 && typeof database === 'object') {\n      // new Sequelize({ ... options })\n      options = database;\n      config = _.pick(options, 'host', 'port', 'database', 'username', 'password');\n    } else if (arguments.length === 1 && typeof database === 'string' || arguments.length === 2 && typeof username === 'object') {\n      // new Sequelize(URI, { ... options })\n\n      config = {};\n      options = username || {};\n\n      const urlParts = url.parse(arguments[0], true);\n\n      options.dialect = urlParts.protocol.replace(/:$/, '');\n      options.host = urlParts.hostname;\n\n      if (options.dialect === 'sqlite' && urlParts.pathname && !urlParts.pathname.startsWith('/:memory')) {\n        const storagePath = path.join(options.host, urlParts.pathname);\n        options.storage = path.resolve(options.storage || storagePath);\n      }\n\n      if (urlParts.pathname) {\n        config.database = urlParts.pathname.replace(/^\\//, '');\n      }\n\n      if (urlParts.port) {\n        options.port = urlParts.port;\n      }\n\n      if (urlParts.auth) {\n        const authParts = urlParts.auth.split(':');\n\n        config.username = authParts[0];\n\n        if (authParts.length > 1)\n          config.password = authParts.slice(1).join(':');\n      }\n\n      if (urlParts.query) {\n        // Allow host query argument to override the url host.\n        // Enables specifying domain socket hosts which cannot be specified via the typical\n        // host part of a url.\n        if (urlParts.query.host) {\n          options.host = urlParts.query.host;\n        }\n\n        if (options.dialectOptions) {\n          Object.assign(options.dialectOptions, urlParts.query);\n        } else {\n          options.dialectOptions = urlParts.query;\n          if (urlParts.query.options) {\n            try {\n              const o = JSON.parse(urlParts.query.options);\n              options.dialectOptions.options = o;\n            } catch (e) {\n              // Nothing to do, string is not a valid JSON\n              // an thus does not need any further processing\n            }\n          }\n        }\n      }\n\n      // For postgres, we can use this helper to load certs directly from the\n      // connection string.\n      if (['postgres', 'postgresql'].includes(options.dialect)) {\n        Object.assign(options.dialectOptions, pgConnectionString.parse(arguments[0]));\n      }\n    } else {\n      // new Sequelize(database, username, password, { ... options })\n      options = options || {};\n      config = { database, username, password };\n    }\n\n    Sequelize.runHooks('beforeInit', config, options);\n\n    this.options = {\n      dialect: null,\n      dialectModule: null,\n      dialectModulePath: null,\n      host: 'localhost',\n      protocol: 'tcp',\n      define: {},\n      query: {},\n      sync: {},\n      timezone: '+00:00',\n      standardConformingStrings: true,\n      // eslint-disable-next-line no-console\n      logging: console.log,\n      omitNull: false,\n      native: false,\n      replication: false,\n      ssl: undefined,\n      pool: {},\n      quoteIdentifiers: true,\n      hooks: {},\n      retry: {\n        max: 5,\n        match: [\n          'SQLITE_BUSY: database is locked'\n        ]\n      },\n      transactionType: Transaction.TYPES.DEFERRED,\n      isolationLevel: null,\n      databaseVersion: 0,\n      typeValidation: false,\n      benchmark: false,\n      minifyAliases: false,\n      logQueryParameters: false,\n      ...options\n    };\n\n    if (!this.options.dialect) {\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n    }\n\n    if (this.options.dialect === 'postgresql') {\n      this.options.dialect = 'postgres';\n    }\n\n    if (this.options.dialect === 'sqlite' && this.options.timezone !== '+00:00') {\n      throw new Error('Setting a custom timezone is not supported by SQLite, dates are always returned as UTC. Please remove the custom timezone parameter.');\n    }\n\n    if (this.options.logging === true) {\n      deprecations.noTrueLogging();\n      // eslint-disable-next-line no-console\n      this.options.logging = console.log;\n    }\n\n    this._setupHooks(options.hooks);\n\n    this.config = {\n      database: config.database || this.options.database,\n      username: config.username || this.options.username,\n      password: config.password || this.options.password || null,\n      host: config.host || this.options.host,\n      port: config.port || this.options.port,\n      pool: this.options.pool,\n      protocol: this.options.protocol,\n      native: this.options.native,\n      ssl: this.options.ssl,\n      replication: this.options.replication,\n      dialectModule: this.options.dialectModule,\n      dialectModulePath: this.options.dialectModulePath,\n      keepDefaultTimezone: this.options.keepDefaultTimezone,\n      dialectOptions: this.options.dialectOptions\n    };\n\n    let Dialect;\n    // Requiring the dialect in a switch-case to keep the\n    // require calls static. (Browserify fix)\n    switch (this.getDialect()) {\n      case 'mariadb':\n        Dialect = require('./dialects/mariadb');\n        break;\n      case 'mssql':\n        Dialect = require('./dialects/mssql');\n        break;\n      case 'mysql':\n        Dialect = require('./dialects/mysql');\n        break;\n      case 'postgres':\n        Dialect = require('./dialects/postgres');\n        break;\n      case 'sqlite':\n        Dialect = require('./dialects/sqlite');\n        break;\n      case 'db2':\n        Dialect = require('./dialects/db2');\n        break;\n      case 'snowflake':\n        Dialect = require('./dialects/snowflake');\n        break;\n      default:\n        throw new Error(`The dialect ${this.getDialect()} is not supported. Supported dialects: mssql, mariadb, mysql, postgres, db2 and sqlite.`);\n    }\n\n    this.dialect = new Dialect(this);\n    this.dialect.queryGenerator.typeValidation = options.typeValidation;\n\n    if (_.isPlainObject(this.options.operatorsAliases)) {\n      deprecations.noStringOperators();\n      this.dialect.queryGenerator.setOperatorsAliases(this.options.operatorsAliases);\n    } else if (typeof this.options.operatorsAliases === 'boolean') {\n      deprecations.noBoolOperatorAliases();\n    }\n\n    this.queryInterface = this.dialect.queryInterface;\n\n    /**\n     * Models are stored here under the name given to `sequelize.define`\n     */\n    this.models = {};\n    this.modelManager = new ModelManager(this);\n    this.connectionManager = this.dialect.connectionManager;\n\n    Sequelize.runHooks('afterInit', this);\n  }\n\n  /**\n   * Refresh data types and parsers.\n   *\n   * @private\n   */\n  refreshTypes() {\n    this.connectionManager.refreshTypeParser(DataTypes);\n  }\n\n  /**\n   * Returns the specified dialect.\n   *\n   * @returns {string} The specified dialect.\n   */\n  getDialect() {\n    return this.options.dialect;\n  }\n\n  /**\n   * Returns the database name.\n   *\n   * @returns {string} The database name.\n   */\n  getDatabaseName() {\n    return this.config.database;\n  }\n\n  /**\n   * Returns an instance of QueryInterface.\n   *\n   * @returns {QueryInterface} An instance (singleton) of QueryInterface.\n   */\n  getQueryInterface() {\n    return this.queryInterface;\n  }\n\n  /**\n   * Define a new model, representing a table in the database.\n   *\n   * The table columns are defined by the object that is given as the second argument. Each key of the object represents a column\n   *\n   * @param {string} modelName The name of the model. The model will be stored in `sequelize.models` under this name\n   * @param {object} attributes An object, where each attribute is a column of the table. See {@link Model.init}\n   * @param {object} [options] These options are merged with the default define options provided to the Sequelize constructor and passed to Model.init()\n   *\n   * @see\n   * {@link Model.init} for a more comprehensive specification of the `options` and `attributes` objects.\n   * @see\n   * <a href=\"/master/manual/model-basics.html\">Model Basics</a> guide\n   *\n   * @returns {Model} Newly defined model\n   *\n   * @example\n   * sequelize.define('modelName', {\n   *   columnA: {\n   *       type: Sequelize.BOOLEAN,\n   *       validate: {\n   *         is: [\"[a-z]\",'i'],        // will only allow letters\n   *         max: 23,                  // only allow values <= 23\n   *         isIn: {\n   *           args: [['en', 'zh']],\n   *           msg: \"Must be English or Chinese\"\n   *         }\n   *       },\n   *       field: 'column_a'\n   *   },\n   *   columnB: Sequelize.STRING,\n   *   columnC: 'MY VERY OWN COLUMN TYPE'\n   * });\n   *\n   * sequelize.models.modelName // The model will now be available in models under the name given to define\n   */\n  define(modelName, attributes, options = {}) {\n    options.modelName = modelName;\n    options.sequelize = this;\n\n    const model = class extends Model {};\n\n    model.init(attributes, options);\n\n    return model;\n  }\n\n  /**\n   * Fetch a Model which is already defined\n   *\n   * @param {string} modelName The name of a model defined with Sequelize.define\n   *\n   * @throws Will throw an error if the model is not defined (that is, if sequelize#isDefined returns false)\n   * @returns {Model} Specified model\n   */\n  model(modelName) {\n    if (!this.isDefined(modelName)) {\n      throw new Error(`${modelName} has not been defined`);\n    }\n\n    return this.modelManager.getModel(modelName);\n  }\n\n  /**\n   * Checks whether a model with the given name is defined\n   *\n   * @param {string} modelName The name of a model defined with Sequelize.define\n   *\n   * @returns {boolean} Returns true if model is already defined, otherwise false\n   */\n  isDefined(modelName) {\n    return !!this.modelManager.models.find(model => model.name === modelName);\n  }\n\n  /**\n   * Execute a query on the DB, optionally bypassing all the Sequelize goodness.\n   *\n   * By default, the function will return two arguments: an array of results, and a metadata object, containing number of affected rows etc.\n   *\n   * If you are running a type of query where you don't need the metadata, for example a `SELECT` query, you can pass in a query type to make sequelize format the results:\n   *\n   * ```js\n   * const [results, metadata] = await sequelize.query('SELECT...'); // Raw query - use array destructuring\n   *\n   * const results = await sequelize.query('SELECT...', { type: sequelize.QueryTypes.SELECT }); // SELECT query - no destructuring\n   * ```\n   *\n   * @param {string}          sql\n   * @param {object}          [options={}] Query options.\n   * @param {boolean}         [options.raw] If true, sequelize will not try to format the results of the query, or build an instance of a model from the result\n   * @param {Transaction}     [options.transaction=null] The transaction that the query should be executed under\n   * @param {QueryTypes}      [options.type='RAW'] The type of query you are executing. The query type affects how results are formatted before they are passed back. The type is a string, but `Sequelize.QueryTypes` is provided as convenience shortcuts.\n   * @param {boolean}         [options.nest=false] If true, transforms objects with `.` separated property names into nested objects using [dottie.js](https://github.com/mickhansen/dottie.js). For example { 'user.username': 'john' } becomes { user: { username: 'john' }}. When `nest` is true, the query type is assumed to be `'SELECT'`, unless otherwise specified\n   * @param {boolean}         [options.plain=false] Sets the query type to `SELECT` and return a single row\n   * @param {object|Array}    [options.replacements] Either an object of named parameter replacements in the format `:param` or an array of unnamed replacements to replace `?` in your SQL.\n   * @param {object|Array}    [options.bind] Either an object of named bind parameter in the format `_param` or an array of unnamed bind parameter to replace `$1, $2, ...` in your SQL.\n   * @param {boolean}         [options.useMaster=false] Force the query to use the write pool, regardless of the query type.\n   * @param {Function}        [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Model}           [options.instance] A sequelize model instance whose Model is to be used to build the query result\n   * @param {typeof Model}    [options.model] A sequelize model used to build the returned model instances\n   * @param {object}          [options.retry] Set of flags that control when a query is automatically retried. Accepts all options for [`retry-as-promised`](https://github.com/mickhansen/retry-as-promised).\n   * @param {Array}           [options.retry.match] Only retry a query if the error matches one of these strings.\n   * @param {Integer}         [options.retry.max] How many times a failing query is automatically retried.\n   * @param {string}          [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean}         [options.supportsSearchPath] If false do not prepend the query with the search_path (Postgres only)\n   * @param {boolean}         [options.mapToModel=false] Map returned fields to model's fields if `options.model` or `options.instance` is present. Mapping will occur before building the model instance.\n   * @param {object}          [options.fieldMap] Map returned fields to arbitrary names for `SELECT` query type.\n   * @param {boolean}         [options.rawErrors=false] Set to `true` to cause errors coming from the underlying connection/database library to be propagated unmodified and unformatted. Else, the default behavior (=false) is to reinterpret errors as sequelize.errors.BaseError objects.\n   *\n   * @returns {Promise}\n   *\n   * @see {@link Model.build} for more information about instance option.\n   */\n\n  async query(sql, options) {\n    options = { ...this.options.query, ...options };\n\n    if (options.instance && !options.model) {\n      options.model = options.instance.constructor;\n    }\n\n    if (!options.instance && !options.model) {\n      options.raw = true;\n    }\n\n    // map raw fields to model attributes\n    if (options.mapToModel) {\n      options.fieldMap = _.get(options, 'model.fieldAttributeMap', {});\n    }\n\n    options = _.defaults(options, {\n      // eslint-disable-next-line no-console\n      logging: Object.prototype.hasOwnProperty.call(this.options, 'logging') ? this.options.logging : console.log,\n      searchPath: Object.prototype.hasOwnProperty.call(this.options, 'searchPath') ? this.options.searchPath : 'DEFAULT'\n    });\n\n    if (!options.type) {\n      if (options.model || options.nest || options.plain) {\n        options.type = QueryTypes.SELECT;\n      } else {\n        options.type = QueryTypes.RAW;\n      }\n    }\n\n    //if dialect doesn't support search_path or dialect option\n    //to prepend searchPath is not true delete the searchPath option\n    if (\n      !this.dialect.supports.searchPath ||\n      !this.options.dialectOptions ||\n      !this.options.dialectOptions.prependSearchPath ||\n      options.supportsSearchPath === false\n    ) {\n      delete options.searchPath;\n    } else if (!options.searchPath) {\n      //if user wants to always prepend searchPath (dialectOptions.preprendSearchPath = true)\n      //then set to DEFAULT if none is provided\n      options.searchPath = 'DEFAULT';\n    }\n\n    if (typeof sql === 'object') {\n      if (sql.values !== undefined) {\n        if (options.replacements !== undefined) {\n          throw new Error('Both `sql.values` and `options.replacements` cannot be set at the same time');\n        }\n        options.replacements = sql.values;\n      }\n\n      if (sql.bind !== undefined) {\n        if (options.bind !== undefined) {\n          throw new Error('Both `sql.bind` and `options.bind` cannot be set at the same time');\n        }\n        options.bind = sql.bind;\n      }\n\n      if (sql.query !== undefined) {\n        sql = sql.query;\n      }\n    }\n\n    sql = sql.trim();\n\n    if (options.replacements && options.bind) {\n      throw new Error('Both `replacements` and `bind` cannot be set at the same time');\n    }\n\n    if (options.replacements) {\n      if (Array.isArray(options.replacements)) {\n        sql = Utils.format([sql].concat(options.replacements), this.options.dialect);\n      } else {\n        sql = Utils.formatNamedParameters(sql, options.replacements, this.options.dialect);\n      }\n    }\n\n    let bindParameters;\n\n    if (options.bind) {\n      [sql, bindParameters] = this.dialect.Query.formatBindParameters(sql, options.bind, this.options.dialect);\n    }\n\n    const checkTransaction = () => {\n      if (options.transaction && options.transaction.finished && !options.completesTransaction) {\n        const error = new Error(`${options.transaction.finished} has been called on this transaction(${options.transaction.id}), you can no longer use it. (The rejected query is attached as the 'sql' property of this error)`);\n        error.sql = sql;\n        throw error;\n      }\n    };\n\n    const retryOptions = { ...this.options.retry, ...options.retry };\n\n    return retry(async () => {\n      if (options.transaction === undefined && Sequelize._cls) {\n        options.transaction = Sequelize._cls.get('transaction');\n      }\n\n      checkTransaction();\n\n      const connection = await (options.transaction ? options.transaction.connection : this.connectionManager.getConnection(options));\n      \n      if (this.options.dialect === 'db2' && options.alter) {\n        if (options.alter.drop === false) {\n          connection.dropTable = false;\n        }\n      }\n      const query = new this.dialect.Query(connection, this, options);\n\n      try {\n        await this.runHooks('beforeQuery', options, query);\n        checkTransaction();\n        return await query.run(sql, bindParameters);\n      } finally {\n        await this.runHooks('afterQuery', options, query);\n        if (!options.transaction) {\n          await this.connectionManager.releaseConnection(connection);\n        }\n      }\n    }, retryOptions);\n  }\n\n  /**\n   * Execute a query which would set an environment or user variable. The variables are set per connection, so this function needs a transaction.\n   * Only works for MySQL or MariaDB.\n   *\n   * @param {object}        variables Object with multiple variables.\n   * @param {object}        [options] query options.\n   * @param {Transaction}   [options.transaction] The transaction that the query should be executed under\n   *\n   * @memberof Sequelize\n   *\n   * @returns {Promise}\n   */\n  async set(variables, options) {\n\n    // Prepare options\n    options = { ...this.options.set, ...typeof options === 'object' && options };\n\n    if (!['mysql', 'mariadb'].includes(this.options.dialect)) {\n      throw new Error('sequelize.set is only supported for mysql or mariadb');\n    }\n    if (!options.transaction || !(options.transaction instanceof Transaction) ) {\n      throw new TypeError('options.transaction is required');\n    }\n\n    // Override some options, since this isn't a SELECT\n    options.raw = true;\n    options.plain = true;\n    options.type = 'SET';\n\n    // Generate SQL Query\n    const query =\n      `SET ${\n        _.map(variables, (v, k) => `@${k} := ${typeof v === 'string' ? `\"${v}\"` : v}`).join(', ')}`;\n\n    return await this.query(query, options);\n  }\n\n  /**\n   * Escape value.\n   *\n   * @param {string} value string value to escape\n   *\n   * @returns {string}\n   */\n  escape(value) {\n    return this.dialect.queryGenerator.escape(value);\n  }\n\n  /**\n   * Create a new database schema.\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this command will do nothing.\n   *\n   * @see\n   * {@link Model.schema}\n   *\n   * @param {string} schema Name of the schema\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async createSchema(schema, options) {\n    return await this.getQueryInterface().createSchema(schema, options);\n  }\n\n  /**\n   * Show all defined schemas\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this will show all tables.\n   *\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async showAllSchemas(options) {\n    return await this.getQueryInterface().showAllSchemas(options);\n  }\n\n  /**\n   * Drop a single schema\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this drop a table matching the schema name\n   *\n   * @param {string} schema Name of the schema\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async dropSchema(schema, options) {\n    return await this.getQueryInterface().dropSchema(schema, options);\n  }\n\n  /**\n   * Drop all schemas.\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this is the equivalent of drop all tables.\n   *\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async dropAllSchemas(options) {\n    return await this.getQueryInterface().dropAllSchemas(options);\n  }\n\n  /**\n   * Sync all defined models to the DB.\n   *\n   * @param {object} [options={}] sync options\n   * @param {boolean} [options.force=false] If force is true, each Model will run `DROP TABLE IF EXISTS`, before it tries to create its own table\n   * @param {RegExp} [options.match] Match a regex against the database name before syncing, a safety check for cases where force: true is used in tests but not live code\n   * @param {boolean|Function} [options.logging=console.log] A function that logs sql queries, or false for no logging\n   * @param {string} [options.schema='public'] The schema that the tables should be created in. This can be overridden for each table in sequelize.define\n   * @param {string} [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean} [options.hooks=true] If hooks is true then beforeSync, afterSync, beforeBulkSync, afterBulkSync hooks will be called\n   * @param {boolean|object} [options.alter=false] Alters tables to fit models. Provide an object for additional configuration. Not recommended for production use. If not further configured deletes data in columns that were removed or had their type changed in the model.\n   * @param {boolean} [options.alter.drop=true] Prevents any drop statements while altering a table when set to `false`\n   *\n   * @returns {Promise}\n   */\n  async sync(options) {\n    options = {\n      ...this.options,\n      ...this.options.sync,\n      ...options,\n      hooks: options ? options.hooks !== false : true\n    };\n\n    if (options.match) {\n      if (!options.match.test(this.config.database)) {\n        throw new Error(`Database \"${this.config.database}\" does not match sync match parameter \"${options.match}\"`);\n      }\n    }\n\n    if (options.hooks) {\n      await this.runHooks('beforeBulkSync', options);\n    }\n    if (options.force) {\n      await this.drop(options);\n    }\n    const models = [];\n\n    // Topologically sort by foreign key constraints to give us an appropriate\n    // creation order\n    this.modelManager.forEachModel(model => {\n      if (model) {\n        models.push(model);\n      } else {\n        // DB should throw an SQL error if referencing non-existent table\n      }\n    });\n\n    // no models defined, just authenticate\n    if (!models.length) {\n      await this.authenticate(options);\n    } else {\n      for (const model of models) await model.sync(options);\n    }\n    if (options.hooks) {\n      await this.runHooks('afterBulkSync', options);\n    }\n    return this;\n  }\n\n  /**\n   * Truncate all tables defined through the sequelize models.\n   * This is done by calling `Model.truncate()` on each model.\n   *\n   * @param {object} [options] The options passed to Model.destroy in addition to truncate\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   * @returns {Promise}\n   *\n   * @see\n   * {@link Model.truncate} for more information\n   */\n  async truncate(options) {\n    const models = [];\n\n    this.modelManager.forEachModel(model => {\n      if (model) {\n        models.push(model);\n      }\n    }, { reverse: false });\n\n    if (options && options.cascade) {\n      for (const model of models) await model.truncate(options);\n    } else {\n      await Promise.all(models.map(model => model.truncate(options)));\n    }\n  }\n\n  /**\n   * Drop all tables defined through this sequelize instance.\n   * This is done by calling Model.drop on each model.\n   *\n   * @see\n   * {@link Model.drop} for options\n   *\n   * @param {object} [options] The options passed to each call to Model.drop\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async drop(options) {\n    const models = [];\n\n    this.modelManager.forEachModel(model => {\n      if (model) {\n        models.push(model);\n      }\n    }, { reverse: false });\n\n    for (const model of models) await model.drop(options);\n  }\n\n  /**\n   * Test the connection by trying to authenticate. It runs `SELECT 1+1 AS result` query.\n   *\n   * @param {object} [options={}] query options\n   *\n   * @returns {Promise}\n   */\n  async authenticate(options) {\n    options = {\n      raw: true,\n      plain: true,\n      type: QueryTypes.SELECT,\n      ...options\n    };\n\n    await this.query('SELECT 1+1 AS result', options);\n\n    return;\n  }\n\n  async databaseVersion(options) {\n    return await this.getQueryInterface().databaseVersion(options);\n  }\n\n  /**\n   * Get the fn for random based on the dialect\n   *\n   * @returns {Sequelize.fn}\n   */\n  random() {\n    if (['postgres', 'sqlite', 'snowflake'].includes(this.getDialect())) {\n      return this.fn('RANDOM');\n    }\n    return this.fn('RAND');\n  }\n\n  /**\n   * Creates an object representing a database function. This can be used in search queries, both in where and order parts, and as default values in column definitions.\n   * If you want to refer to columns in your function, you should use `sequelize.col`, so that the columns are properly interpreted as columns and not a strings.\n   *\n   * @see\n   * {@link Model.findAll}\n   * @see\n   * {@link Sequelize.define}\n   * @see\n   * {@link Sequelize.col}\n   *\n   * @param {string} fn The function you want to call\n   * @param {any} args All further arguments will be passed as arguments to the function\n   *\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   * @returns {Sequelize.fn}\n   *\n   * @example <caption>Convert a user's username to upper case</caption>\n   * instance.update({\n   *   username: sequelize.fn('upper', sequelize.col('username'))\n   * });\n   */\n  static fn(fn, ...args) {\n    return new Utils.Fn(fn, args);\n  }\n\n  /**\n   * Creates an object which represents a column in the DB, this allows referencing another column in your query. This is often useful in conjunction with `sequelize.fn`, since raw string arguments to fn will be escaped.\n   *\n   * @see\n   * {@link Sequelize#fn}\n   *\n   * @param {string} col The name of the column\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.col}\n   */\n  static col(col) {\n    return new Utils.Col(col);\n  }\n\n  /**\n   * Creates an object representing a call to the cast function.\n   *\n   * @param {any} val The value to cast\n   * @param {string} type The type to cast it to\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.cast}\n   */\n  static cast(val, type) {\n    return new Utils.Cast(val, type);\n  }\n\n  /**\n   * Creates an object representing a literal, i.e. something that will not be escaped.\n   *\n   * @param {any} val literal value\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.literal}\n   */\n  static literal(val) {\n    return new Utils.Literal(val);\n  }\n\n  /**\n   * An AND query\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {...string|object} args Each argument will be joined by AND\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.and}\n   */\n  static and(...args) {\n    return { [Op.and]: args };\n  }\n\n  /**\n   * An OR query\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {...string|object} args Each argument will be joined by OR\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.or}\n   */\n  static or(...args) {\n    return { [Op.or]: args };\n  }\n\n  /**\n   * Creates an object representing nested where conditions for postgres/sqlite/mysql json data-type.\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {string|object} conditionsOrPath A hash containing strings/numbers or other nested hash, a string using dot notation or a string using postgres/sqlite/mysql json syntax.\n   * @param {string|number|boolean} [value] An optional value to compare against. Produces a string of the form \"<json path> = '<value>'\".\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.json}\n   */\n  static json(conditionsOrPath, value) {\n    return new Utils.Json(conditionsOrPath, value);\n  }\n\n  /**\n   * A way of specifying attr = condition.\n   *\n   * The attr can either be an object taken from `Model.rawAttributes` (for example `Model.rawAttributes.id` or `Model.rawAttributes.name`). The\n   * attribute should be defined in your model definition. The attribute can also be an object from one of the sequelize utility functions (`sequelize.fn`, `sequelize.col` etc.)\n   *\n   * For string attributes, use the regular `{ where: { attr: something }}` syntax. If you don't want your string to be escaped, use `sequelize.literal`.\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {object} attr The attribute, which can be either an attribute object from `Model.rawAttributes` or a sequelize object, for example an instance of `sequelize.fn`. For simple string attributes, use the POJO syntax\n   * @param {symbol} [comparator='Op.eq'] operator\n   * @param {string|object} logic The condition. Can be both a simply type, or a further condition (`or`, `and`, `.literal` etc.)\n   * @since v2.0.0-dev3\n   */\n  static where(attr, comparator, logic) {\n    return new Utils.Where(attr, comparator, logic);\n  }\n\n  /**\n   * Start a transaction. When using transactions, you should pass the transaction in the options argument in order for the query to happen under that transaction @see {@link Transaction}\n   *\n   * If you have [CLS](https://github.com/Jeff-Lewis/cls-hooked) enabled, the transaction will automatically be passed to any query that runs within the callback\n   *\n   * @example\n   *\n   * try {\n   *   const transaction = await sequelize.transaction();\n   *   const user = await User.findOne(..., { transaction });\n   *   await user.update(..., { transaction });\n   *   await transaction.commit();\n   * } catch {\n   *   await transaction.rollback()\n   * }\n   *\n   * @example <caption>A syntax for automatically committing or rolling back based on the promise chain resolution is also supported</caption>\n   *\n   * try {\n   *   await sequelize.transaction(transaction => { // Note that we pass a callback rather than awaiting the call with no arguments\n   *     const user = await User.findOne(..., {transaction});\n   *     await user.update(..., {transaction});\n   *   });\n   *   // Committed\n   * } catch(err) {\n   *   // Rolled back\n   *   console.error(err);\n   * }\n   * @example <caption>To enable CLS, add it do your project, create a namespace and set it on the sequelize constructor:</caption>\n   *\n   * const cls = require('cls-hooked');\n   * const namespace = cls.createNamespace('....');\n   * const Sequelize = require('sequelize');\n   * Sequelize.useCLS(namespace);\n   *\n   * // Note, that CLS is enabled for all sequelize instances, and all instances will share the same namespace\n   *\n   * @param {object}   [options] Transaction options\n   * @param {string}   [options.type='DEFERRED'] See `Sequelize.Transaction.TYPES` for possible options. Sqlite only.\n   * @param {string}   [options.isolationLevel] See `Sequelize.Transaction.ISOLATION_LEVELS` for possible options\n   * @param {string}   [options.deferrable] Sets the constraints to be deferred or immediately checked. See `Sequelize.Deferrable`. PostgreSQL Only\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Function} [autoCallback] The callback is called with the transaction object, and should return a promise. If the promise is resolved, the transaction commits; if the promise rejects, the transaction rolls back\n   *\n   * @returns {Promise}\n   */\n  async transaction(options, autoCallback) {\n    if (typeof options === 'function') {\n      autoCallback = options;\n      options = undefined;\n    }\n\n    const transaction = new Transaction(this, options);\n\n    if (!autoCallback) {\n      await transaction.prepareEnvironment(false);\n      return transaction;\n    }\n\n    // autoCallback provided\n    return Sequelize._clsRun(async () => {\n      try {\n        await transaction.prepareEnvironment();\n        const result = await autoCallback(transaction);\n        await transaction.commit();\n        return await result;\n      } catch (err) {\n        try {\n          if (!transaction.finished) {\n            await transaction.rollback();\n          } else {\n            // release the connection, even if we don't need to rollback\n            await transaction.cleanup();\n          }\n        } catch (err0) {\n          // ignore\n        }\n        throw err;\n      }\n    });\n  }\n\n  /**\n   * Use CLS (Continuation Local Storage) with Sequelize. With Continuation\n   * Local Storage, all queries within the transaction callback will\n   * automatically receive the transaction object.\n   *\n   * CLS namespace provided is stored as `Sequelize._cls`\n   *\n   * @param {object} ns CLS namespace\n   * @returns {object} Sequelize constructor\n   */\n  static useCLS(ns) {\n    // check `ns` is valid CLS namespace\n    if (!ns || typeof ns !== 'object' || typeof ns.bind !== 'function' || typeof ns.run !== 'function') throw new Error('Must provide CLS namespace');\n\n    // save namespace as `Sequelize._cls`\n    Sequelize._cls = ns;\n\n    // return Sequelize for chaining\n    return this;\n  }\n\n  /**\n   * Run function in CLS context.\n   * If no CLS context in use, just runs the function normally\n   *\n   * @private\n   * @param {Function} fn Function to run\n   * @returns {*} Return value of function\n   */\n  static _clsRun(fn) {\n    const ns = Sequelize._cls;\n    if (!ns) return fn();\n\n    let res;\n    ns.run(context => res = fn(context));\n    return res;\n  }\n\n  log(...args) {\n    let options;\n\n    const last = _.last(args);\n\n    if (last && _.isPlainObject(last) && Object.prototype.hasOwnProperty.call(last, 'logging')) {\n      options = last;\n\n      // remove options from set of logged arguments if options.logging is equal to console.log\n      // eslint-disable-next-line no-console\n      if (options.logging === console.log) {\n        args.splice(args.length - 1, 1);\n      }\n    } else {\n      options = this.options;\n    }\n\n    if (options.logging) {\n      if (options.logging === true) {\n        deprecations.noTrueLogging();\n        // eslint-disable-next-line no-console\n        options.logging = console.log;\n      }\n\n      // second argument is sql-timings, when benchmarking option enabled\n      // eslint-disable-next-line no-console\n      if ((this.options.benchmark || options.benchmark) && options.logging === console.log) {\n        args = [`${args[0]} Elapsed time: ${args[1]}ms`];\n      }\n\n      options.logging(...args);\n    }\n  }\n\n  /**\n   * Close all connections used by this sequelize instance, and free all references so the instance can be garbage collected.\n   *\n   * Normally this is done on process exit, so you only need to call this method if you are creating multiple instances, and want\n   * to garbage collect some of them.\n   *\n   * @returns {Promise}\n   */\n  close() {\n    return this.connectionManager.close();\n  }\n\n  normalizeDataType(Type) {\n    let type = typeof Type === 'function' ? new Type() : Type;\n    const dialectTypes = this.dialect.DataTypes || {};\n\n    if (dialectTypes[type.key]) {\n      type = dialectTypes[type.key].extend(type);\n    }\n\n    if (type instanceof DataTypes.ARRAY) {\n      if (!type.type) {\n        throw new Error('ARRAY is missing type definition for its values.');\n      }\n      if (dialectTypes[type.type.key]) {\n        type.type = dialectTypes[type.type.key].extend(type.type);\n      }\n    }\n\n    return type;\n  }\n\n  normalizeAttribute(attribute) {\n    if (!_.isPlainObject(attribute)) {\n      attribute = { type: attribute };\n    }\n\n    if (!attribute.type) return attribute;\n\n    attribute.type = this.normalizeDataType(attribute.type);\n\n    if (Object.prototype.hasOwnProperty.call(attribute, 'defaultValue')) {\n      if (typeof attribute.defaultValue === 'function' &&\n        [DataTypes.NOW, DataTypes.UUIDV1, DataTypes.UUIDV4].includes(attribute.defaultValue)\n      ) {\n        attribute.defaultValue = new attribute.defaultValue();\n      }\n    }\n\n    if (attribute.type instanceof DataTypes.ENUM) {\n      // The ENUM is a special case where the type is an object containing the values\n      if (attribute.values) {\n        attribute.type.values = attribute.type.options.values = attribute.values;\n      } else {\n        attribute.values = attribute.type.values;\n      }\n\n      if (!attribute.values.length) {\n        throw new Error('Values for ENUM have not been defined.');\n      }\n    }\n\n    return attribute;\n  }\n}\n\n// Aliases\nSequelize.prototype.fn = Sequelize.fn;\nSequelize.prototype.col = Sequelize.col;\nSequelize.prototype.cast = Sequelize.cast;\nSequelize.prototype.literal = Sequelize.literal;\nSequelize.prototype.and = Sequelize.and;\nSequelize.prototype.or = Sequelize.or;\nSequelize.prototype.json = Sequelize.json;\nSequelize.prototype.where = Sequelize.where;\nSequelize.prototype.validate = Sequelize.prototype.authenticate;\n\n/**\n * Sequelize version number.\n */\n// To avoid any errors on startup when this field is unused, only resolve it as needed.\n// this is to prevent any potential issues on startup with unusual environments (eg, bundled code)\n// where relative paths may fail that are unnecessary.\nObject.defineProperty(Sequelize, 'version', {\n  enumerable: true,\n  get() {\n    return require('../package.json').version;\n  }\n});\n\nSequelize.options = { hooks: {} };\n\n/**\n * @private\n */\nSequelize.Utils = Utils;\n\n/**\n * Operators symbols to be used for querying data\n *\n * @see  {@link Operators}\n */\nSequelize.Op = Op;\n\n/**\n * Available table hints to be used for querying data in mssql for table hints\n *\n * @see {@link TableHints}\n */\nSequelize.TableHints = TableHints;\n\n/**\n * Available index hints to be used for querying data in mysql for index hints\n *\n * @see {@link IndexHints}\n */\nSequelize.IndexHints = IndexHints;\n\n/**\n * A reference to the sequelize transaction class. Use this to access isolationLevels and types when creating a transaction\n *\n * @see {@link Transaction}\n * @see {@link Sequelize.transaction}\n */\nSequelize.Transaction = Transaction;\n\n/**\n * A reference to Sequelize constructor from sequelize. Useful for accessing DataTypes, Errors etc.\n *\n * @see {@link Sequelize}\n */\nSequelize.prototype.Sequelize = Sequelize;\n\n/**\n * Available query types for use with `sequelize.query`\n *\n * @see {@link QueryTypes}\n */\nSequelize.prototype.QueryTypes = Sequelize.QueryTypes = QueryTypes;\n\n/**\n * Exposes the validator.js object, so you can extend it with custom validation functions. The validator is exposed both on the instance, and on the constructor.\n *\n * @see https://github.com/chriso/validator.js\n */\nSequelize.prototype.Validator = Sequelize.Validator = Validator;\n\nSequelize.Model = Model;\n\nSequelize.QueryInterface = QueryInterface;\nSequelize.BelongsTo = BelongsTo;\nSequelize.HasOne = HasOne;\nSequelize.HasMany = HasMany;\nSequelize.BelongsToMany = BelongsToMany;\n\nSequelize.DataTypes = DataTypes;\nfor (const dataType in DataTypes) {\n  Sequelize[dataType] = DataTypes[dataType];\n}\n\n/**\n * A reference to the deferrable collection. Use this to access the different deferrable options.\n *\n * @see {@link Transaction.Deferrable}\n * @see {@link Sequelize#transaction}\n */\nSequelize.Deferrable = Deferrable;\n\n/**\n * A reference to the sequelize association class.\n *\n * @see {@link Association}\n */\nSequelize.prototype.Association = Sequelize.Association = Association;\n\n/**\n * Provide alternative version of `inflection` module to be used by `Utils.pluralize` etc.\n *\n * @param {object} _inflection - `inflection` module\n */\nSequelize.useInflection = Utils.useInflection;\n\n/**\n * Allow hooks to be defined on Sequelize + on sequelize instance as universal hooks to run on all models\n * and on Sequelize/sequelize methods e.g. Sequelize(), Sequelize#define()\n */\nHooks.applyTo(Sequelize);\nHooks.applyTo(Sequelize.prototype);\n\n/**\n * Expose various errors available\n */\n\n// expose alias to BaseError\nSequelize.Error = sequelizeErrors.BaseError;\n\nfor (const error of Object.keys(sequelizeErrors)) {\n  Sequelize[error] = sequelizeErrors[error];\n}\n\nmodule.exports = Sequelize;\nmodule.exports.Sequelize = Sequelize;\nmodule.exports.default = Sequelize;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,42,42,28,53,34,34,41,55,39,82,82,37,27,1,38,37,19,18,27,3,16,1,32,40,19,18,29,3,16,1,38,27,26,56,1,34,30,58,66,67,42,7,25,5,5,1,38,18,20,32,35,29,27,30,76,50,72,50,16,30,9,7,7,3,16,1,22,44,62,1,30,24,75,1,28,26,36,1,32,27,37,1,34,25,35,1,30,31,24,67,1,24,58,24,77,1,54,36,18,41,55,20,5,48,18,5,51,26,5,5,1,30,43,64,85,92,3,38,17,1,44,46,42,59,35,20,82,55,7,18,7,3,56,61,3,17,1,50,48,19,39,55,58,74,63,37,7,168,53,38,24,7,49,57,39,76,11,11,7,7,3,20,1,48,56,20,30,77,117,67,14,40,7,5,3,16,1,48,29,90,1,34,34,73,1,48,52,113,1,46,41,36,24,44,25,5,15,3,42,20,3,42,20,3,39,24,3,29,25,3,31,37,3,15,1,40,39,25,17,3,39,17,3,79,17,3,37,1,54,60,20,26,46,17,21,33,100,25,7,7,19,3,16,1,60,101,23,23,31,25,3,11,1,18,22,30,32,35,56,1,28,35,35,50,1,34,35,30,17,26,40,39,65,62,48,14,55,7,7,24,3,38,1,46,23,1,42,34,25,12,17,21,3,11,38,3,1,16,35,29,12,26,17,5,19,3,1,18,36,32,12,19,36,30,3,1,20,39,20,12,19,3,1,26,36,40,12,39,41,12,35,18,27,7,5,3,1,20,37,45,12,27,25,23,5,31,33,23,3,1,22,28,78,1,36,30,52,1,40,30,70,1,40,28,67,1,36,50,43,1,44,34,30,37,37,5,16,1,48,39,26,31,17,30,47,34,123,36,9,9,5,5,16,1,28,38,26,36,61,114,64,3,15,1,30,33,44,1,32,35,49,37,28,5,18,5,1,46,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/utils.js"],"sourcesContent":["'use strict';\n\nconst DataTypes = require('./data-types');\nconst SqlString = require('./sql-string');\nconst _ = require('lodash');\nconst baseIsNative = require('lodash/_baseIsNative');\nconst uuidv1 = require('uuid').v1;\nconst uuidv4 = require('uuid').v4;\nconst operators = require('./operators');\nconst operatorsSet = new Set(Object.values(operators));\n\nlet inflection = require('inflection');\n\nexports.classToInvokable = require('./utils/class-to-invokable').classToInvokable;\nexports.joinSQLFragments = require('./utils/join-sql-fragments').joinSQLFragments;\n\nfunction useInflection(_inflection) {\n  inflection = _inflection;\n}\nexports.useInflection = useInflection;\n\nfunction camelizeIf(str, condition) {\n  let result = str;\n\n  if (condition) {\n    result = camelize(str);\n  }\n\n  return result;\n}\nexports.camelizeIf = camelizeIf;\n\nfunction underscoredIf(str, condition) {\n  let result = str;\n\n  if (condition) {\n    result = underscore(str);\n  }\n\n  return result;\n}\nexports.underscoredIf = underscoredIf;\n\nfunction isPrimitive(val) {\n  const type = typeof val;\n  return ['string', 'number', 'boolean'].includes(type);\n}\nexports.isPrimitive = isPrimitive;\n\n// Same concept as _.merge, but don't overwrite properties that have already been assigned\nfunction mergeDefaults(a, b) {\n  return _.mergeWith(a, b, (objectValue, sourceValue) => {\n    // If it's an object, let _ handle it this time, we will be called again for each property\n    if (!_.isPlainObject(objectValue) && objectValue !== undefined) {\n      // _.isNative includes a check for core-js and throws an error if present.\n      // Depending on _baseIsNative bypasses the core-js check.\n      if (_.isFunction(objectValue) && baseIsNative(objectValue)) {\n        return sourceValue || objectValue;\n      }\n      return objectValue;\n    }\n  });\n}\nexports.mergeDefaults = mergeDefaults;\n\n// An alternative to _.merge, which doesn't clone its arguments\n// Cloning is a bad idea because options arguments may contain references to sequelize\n// models - which again reference database libs which don't like to be cloned (in particular pg-native)\nfunction merge() {\n  const result = {};\n\n  for (const obj of arguments) {\n    _.forOwn(obj, (value, key) => {\n      if (value !== undefined) {\n        if (!result[key]) {\n          result[key] = value;\n        } else if (_.isPlainObject(value) && _.isPlainObject(result[key])) {\n          result[key] = merge(result[key], value);\n        } else if (Array.isArray(value) && Array.isArray(result[key])) {\n          result[key] = value.concat(result[key]);\n        } else {\n          result[key] = value;\n        }\n      }\n    });\n  }\n\n  return result;\n}\nexports.merge = merge;\n\nfunction spliceStr(str, index, count, add) {\n  return str.slice(0, index) + add + str.slice(index + count);\n}\nexports.spliceStr = spliceStr;\n\nfunction camelize(str) {\n  return str.trim().replace(/[-_\\s]+(.)?/g, (match, c) => c.toUpperCase());\n}\nexports.camelize = camelize;\n\nfunction underscore(str) {\n  return inflection.underscore(str);\n}\nexports.underscore = underscore;\n\nfunction singularize(str) {\n  return inflection.singularize(str);\n}\nexports.singularize = singularize;\n\nfunction pluralize(str) {\n  return inflection.pluralize(str);\n}\nexports.pluralize = pluralize;\n\nfunction format(arr, dialect) {\n  const timeZone = null;\n  // Make a clone of the array beacuse format modifies the passed args\n  return SqlString.format(arr[0], arr.slice(1), timeZone, dialect);\n}\nexports.format = format;\n\nfunction formatNamedParameters(sql, parameters, dialect) {\n  const timeZone = null;\n  return SqlString.formatNamedParameters(sql, parameters, timeZone, dialect);\n}\nexports.formatNamedParameters = formatNamedParameters;\n\nfunction cloneDeep(obj, onlyPlain) {\n  obj = obj || {};\n  return _.cloneDeepWith(obj, elem => {\n    // Do not try to customize cloning of arrays or POJOs\n    if (Array.isArray(elem) || _.isPlainObject(elem)) {\n      return undefined;\n    }\n\n    // If we specified to clone only plain objects & arrays, we ignore everyhing else\n    // In any case, don't clone stuff that's an object, but not a plain one - fx example sequelize models and instances\n    if (onlyPlain || typeof elem === 'object') {\n      return elem;\n    }\n\n    // Preserve special data-types like `fn` across clones. _.get() is used for checking up the prototype chain\n    if (elem && typeof elem.clone === 'function') {\n      return elem.clone();\n    }\n  });\n}\nexports.cloneDeep = cloneDeep;\n\n/* Expand and normalize finder options */\nfunction mapFinderOptions(options, Model) {\n  if (options.attributes && Array.isArray(options.attributes)) {\n    options.attributes = Model._injectDependentVirtualAttributes(options.attributes);\n    options.attributes = options.attributes.filter(v => !Model._virtualAttributes.has(v));\n  }\n\n  mapOptionFieldNames(options, Model);\n\n  return options;\n}\nexports.mapFinderOptions = mapFinderOptions;\n\n/* Used to map field names in attributes and where conditions */\nfunction mapOptionFieldNames(options, Model) {\n  if (Array.isArray(options.attributes)) {\n    options.attributes = options.attributes.map(attr => {\n      // Object lookups will force any variable to strings, we don't want that for special objects etc\n      if (typeof attr !== 'string') return attr;\n      // Map attributes to aliased syntax attributes\n      if (Model.rawAttributes[attr] && attr !== Model.rawAttributes[attr].field) {\n        return [Model.rawAttributes[attr].field, attr];\n      }\n      return attr;\n    });\n  }\n\n  if (options.where && _.isPlainObject(options.where)) {\n    options.where = mapWhereFieldNames(options.where, Model);\n  }\n\n  return options;\n}\nexports.mapOptionFieldNames = mapOptionFieldNames;\n\nfunction mapWhereFieldNames(attributes, Model) {\n  if (attributes) {\n    attributes = cloneDeep(attributes);\n    getComplexKeys(attributes).forEach(attribute => {\n      const rawAttribute = Model.rawAttributes[attribute];\n\n      if (rawAttribute && rawAttribute.field !== rawAttribute.fieldName) {\n        attributes[rawAttribute.field] = attributes[attribute];\n        delete attributes[attribute];\n      }\n\n      if (_.isPlainObject(attributes[attribute])\n        && !(rawAttribute && (\n          rawAttribute.type instanceof DataTypes.HSTORE\n          || rawAttribute.type instanceof DataTypes.JSON))) { // Prevent renaming of HSTORE & JSON fields\n        attributes[attribute] = mapOptionFieldNames({\n          where: attributes[attribute]\n        }, Model).where;\n      }\n\n      if (Array.isArray(attributes[attribute])) {\n        attributes[attribute].forEach((where, index) => {\n          if (_.isPlainObject(where)) {\n            attributes[attribute][index] = mapWhereFieldNames(where, Model);\n          }\n        });\n      }\n\n    });\n  }\n\n  return attributes;\n}\nexports.mapWhereFieldNames = mapWhereFieldNames;\n\n/* Used to map field names in values */\nfunction mapValueFieldNames(dataValues, fields, Model) {\n  const values = {};\n\n  for (const attr of fields) {\n    if (dataValues[attr] !== undefined && !Model._virtualAttributes.has(attr)) {\n      // Field name mapping\n      if (Model.rawAttributes[attr] && Model.rawAttributes[attr].field && Model.rawAttributes[attr].field !== attr) {\n        values[Model.rawAttributes[attr].field] = dataValues[attr];\n      } else {\n        values[attr] = dataValues[attr];\n      }\n    }\n  }\n\n  return values;\n}\nexports.mapValueFieldNames = mapValueFieldNames;\n\nfunction isColString(value) {\n  return typeof value === 'string' && value[0] === '$' && value[value.length - 1] === '$';\n}\nexports.isColString = isColString;\n\nfunction canTreatArrayAsAnd(arr) {\n  return arr.some(arg => _.isPlainObject(arg) || arg instanceof Where);\n}\nexports.canTreatArrayAsAnd = canTreatArrayAsAnd;\n\nfunction combineTableNames(tableName1, tableName2) {\n  return tableName1.toLowerCase() < tableName2.toLowerCase() ? tableName1 + tableName2 : tableName2 + tableName1;\n}\nexports.combineTableNames = combineTableNames;\n\nfunction toDefaultValue(value, dialect) {\n  if (typeof value === 'function') {\n    const tmp = value();\n    if (tmp instanceof DataTypes.ABSTRACT) {\n      return tmp.toSql();\n    }\n    return tmp;\n  }\n  if (value instanceof DataTypes.UUIDV1) {\n    return uuidv1();\n  }\n  if (value instanceof DataTypes.UUIDV4) {\n    return uuidv4();\n  }\n  if (value instanceof DataTypes.NOW) {\n    return now(dialect);\n  }\n  if (Array.isArray(value)) {\n    return value.slice();\n  }\n  if (_.isPlainObject(value)) {\n    return { ...value };\n  }\n  return value;\n}\nexports.toDefaultValue = toDefaultValue;\n\n/**\n * Determine if the default value provided exists and can be described\n * in a db schema using the DEFAULT directive.\n *\n * @param  {*} value Any default value.\n * @returns {boolean} yes / no.\n * @private\n */\nfunction defaultValueSchemable(value) {\n  if (value === undefined) { return false; }\n\n  // TODO this will be schemable when all supported db\n  // have been normalized for this case\n  if (value instanceof DataTypes.NOW) { return false; }\n\n  if (value instanceof DataTypes.UUIDV1 || value instanceof DataTypes.UUIDV4) { return false; }\n\n  return typeof value !== 'function';\n}\nexports.defaultValueSchemable = defaultValueSchemable;\n\nfunction removeNullValuesFromHash(hash, omitNull, options) {\n  let result = hash;\n\n  options = options || {};\n  options.allowNull = options.allowNull || [];\n\n  if (omitNull) {\n    const _hash = {};\n\n    _.forIn(hash, (val, key) => {\n      if (options.allowNull.includes(key) || key.endsWith('Id') || val !== null && val !== undefined) {\n        _hash[key] = val;\n      }\n    });\n\n    result = _hash;\n  }\n\n  return result;\n}\nexports.removeNullValuesFromHash = removeNullValuesFromHash;\n\nconst dialects = new Set(['mariadb', 'mysql', 'postgres', 'sqlite', 'mssql', 'db2']);\n\nfunction now(dialect) {\n  const d = new Date();\n  if (!dialects.has(dialect)) {\n    d.setMilliseconds(0);\n  }\n  return d;\n}\nexports.now = now;\n\n// Note: Use the `quoteIdentifier()` and `escape()` methods on the\n// `QueryInterface` instead for more portable code.\n\nconst TICK_CHAR = '`';\nexports.TICK_CHAR = TICK_CHAR;\n\nfunction addTicks(s, tickChar) {\n  tickChar = tickChar || TICK_CHAR;\n  return tickChar + removeTicks(s, tickChar) + tickChar;\n}\nexports.addTicks = addTicks;\n\nfunction removeTicks(s, tickChar) {\n  tickChar = tickChar || TICK_CHAR;\n  return s.replace(new RegExp(tickChar, 'g'), '');\n}\nexports.removeTicks = removeTicks;\n\n/**\n * Receives a tree-like object and returns a plain object which depth is 1.\n *\n * - Input:\n *\n *  {\n *    name: 'John',\n *    address: {\n *      street: 'Fake St. 123',\n *      coordinates: {\n *        longitude: 55.6779627,\n *        latitude: 12.5964313\n *      }\n *    }\n *  }\n *\n * - Output:\n *\n *  {\n *    name: 'John',\n *    address.street: 'Fake St. 123',\n *    address.coordinates.latitude: 55.6779627,\n *    address.coordinates.longitude: 12.5964313\n *  }\n *\n * @param {object} value an Object\n * @returns {object} a flattened object\n * @private\n */\nfunction flattenObjectDeep(value) {\n  if (!_.isPlainObject(value)) return value;\n  const flattenedObj = {};\n\n  function flattenObject(obj, subPath) {\n    Object.keys(obj).forEach(key => {\n      const pathToProperty = subPath ? `${subPath}.${key}` : key;\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        flattenObject(obj[key], pathToProperty);\n      } else {\n        flattenedObj[pathToProperty] = _.get(obj, key);\n      }\n    });\n    return flattenedObj;\n  }\n\n  return flattenObject(value, undefined);\n}\nexports.flattenObjectDeep = flattenObjectDeep;\n\n/**\n * Utility functions for representing SQL functions, and columns that should be escaped.\n * Please do not use these functions directly, use Sequelize.fn and Sequelize.col instead.\n *\n * @private\n */\nclass SequelizeMethod {}\nexports.SequelizeMethod = SequelizeMethod;\n\nclass Fn extends SequelizeMethod {\n  constructor(fn, args) {\n    super();\n    this.fn = fn;\n    this.args = args;\n  }\n  clone() {\n    return new Fn(this.fn, this.args);\n  }\n}\nexports.Fn = Fn;\n\nclass Col extends SequelizeMethod {\n  constructor(col, ...args) {\n    super();\n    if (args.length > 0) {\n      col = args;\n    }\n    this.col = col;\n  }\n}\nexports.Col = Col;\n\nclass Cast extends SequelizeMethod {\n  constructor(val, type, json) {\n    super();\n    this.val = val;\n    this.type = (type || '').trim();\n    this.json = json || false;\n  }\n}\nexports.Cast = Cast;\n\nclass Literal extends SequelizeMethod {\n  constructor(val) {\n    super();\n    this.val = val;\n  }\n}\nexports.Literal = Literal;\n\nclass Json extends SequelizeMethod {\n  constructor(conditionsOrPath, value) {\n    super();\n    if (_.isObject(conditionsOrPath)) {\n      this.conditions = conditionsOrPath;\n    } else {\n      this.path = conditionsOrPath;\n      if (value) {\n        this.value = value;\n      }\n    }\n  }\n}\nexports.Json = Json;\n\nclass Where extends SequelizeMethod {\n  constructor(attribute, comparator, logic) {\n    super();\n    if (logic === undefined) {\n      logic = comparator;\n      comparator = '=';\n    }\n\n    this.attribute = attribute;\n    this.comparator = comparator;\n    this.logic = logic;\n  }\n}\nexports.Where = Where;\n\n//Collection of helper methods to make it easier to work with symbol operators\n\n/**\n * getOperators\n *\n * @param  {object} obj\n * @returns {Array<symbol>} All operators properties of obj\n * @private\n */\nfunction getOperators(obj) {\n  return Object.getOwnPropertySymbols(obj).filter(s => operatorsSet.has(s));\n}\nexports.getOperators = getOperators;\n\n/**\n * getComplexKeys\n *\n * @param  {object} obj\n * @returns {Array<string|symbol>} All keys including operators\n * @private\n */\nfunction getComplexKeys(obj) {\n  return getOperators(obj).concat(Object.keys(obj));\n}\nexports.getComplexKeys = getComplexKeys;\n\n/**\n * getComplexSize\n *\n * @param  {object|Array} obj\n * @returns {number}      Length of object properties including operators if obj is array returns its length\n * @private\n */\nfunction getComplexSize(obj) {\n  return Array.isArray(obj) ? obj.length : getComplexKeys(obj).length;\n}\nexports.getComplexSize = getComplexSize;\n\n/**\n * Returns true if a where clause is empty, even with Symbols\n *\n * @param  {object} obj\n * @returns {boolean}\n * @private\n */\nfunction isWhereEmpty(obj) {\n  return !!obj && _.isEmpty(obj) && getOperators(obj).length === 0;\n}\nexports.isWhereEmpty = isWhereEmpty;\n\n/**\n * Returns ENUM name by joining table and column name\n *\n * @param {string} tableName\n * @param {string} columnName\n * @returns {string}\n * @private\n */\nfunction generateEnumName(tableName, columnName) {\n  return `enum_${tableName}_${columnName}`;\n}\nexports.generateEnumName = generateEnumName;\n\n/**\n * Returns an new Object which keys are camelized\n *\n * @param {object} obj\n * @returns {string}\n * @private\n */\nfunction camelizeObjectKeys(obj) {\n  const newObj = new Object();\n  Object.keys(obj).forEach(key => {\n    newObj[camelize(key)] = obj[key];\n  });\n  return newObj;\n}\nexports.camelizeObjectKeys = camelizeObjectKeys;\n\n/**\n * Assigns own and inherited enumerable string and symbol keyed properties of source\n * objects to the destination object.\n *\n * https://lodash.com/docs/4.17.4#defaults\n *\n * **Note:** This method mutates `object`.\n *\n * @param {object} object The destination object.\n * @param {...object} [sources] The source objects.\n * @returns {object} Returns `object`.\n * @private\n */\nfunction defaults(object, ...sources) {\n  object = Object(object);\n\n  sources.forEach(source => {\n    if (source) {\n      source = Object(source);\n\n      getComplexKeys(source).forEach(key => {\n        const value = object[key];\n        if (\n          value === undefined ||\n            _.eq(value, Object.prototype[key]) &&\n            !Object.prototype.hasOwnProperty.call(object, key)\n\n        ) {\n          object[key] = source[key];\n        }\n      });\n    }\n  });\n\n  return object;\n}\nexports.defaults = defaults;\n\n/**\n *\n * @param {object} index\n * @param {Array}  index.fields\n * @param {string} [index.name]\n * @param {string|object} tableName\n *\n * @returns {object}\n * @private\n */\nfunction nameIndex(index, tableName) {\n  if (tableName.tableName) tableName = tableName.tableName;\n\n  if (!Object.prototype.hasOwnProperty.call(index, 'name')) {\n    const fields = index.fields.map(\n      field => typeof field === 'string' ? field : field.name || field.attribute\n    );\n    index.name = underscore(`${tableName}_${fields.join('_')}`);\n  }\n\n  return index;\n}\nexports.nameIndex = nameIndex;\n\n/**\n * Checks if 2 arrays intersect.\n *\n * @param {Array} arr1\n * @param {Array} arr2\n * @private\n */\nfunction intersects(arr1, arr2) {\n  return arr1.some(v => arr2.includes(v));\n}\nexports.intersects = intersects;\n\n/**\n * Stringify a value as JSON with some differences:\n * - bigints are stringified as a json string. (`safeStringifyJson({ val: 1n })` outputs `'{ \"val\": \"1\" }'`).\n *   This is because of a decision by TC39 to not support bigint in JSON.stringify https://github.com/tc39/proposal-bigint/issues/24\n *\n * @param {any} value the value to stringify.\n * @returns {string} the resulting json.\n */\nfunction safeStringifyJson(value /* : any */) /* : string */ {\n  return JSON.stringify(value, (key, value) => {\n    if (typeof value === 'bigint') {\n      return String(value);\n    }\n\n    return value;\n  });\n}\n\nexports.safeStringifyJson = safeStringifyJson;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/data-types.js":{"lineLengths":[13,29,28,27,44,64,44,33,45,20,67,67,16,21,31,3,11,20,3,29,26,45,5,17,3,29,26,45,5,61,3,21,21,3,27,26,28,27,20,5,3,26,37,3,1,37,31,31,12,79,27,34,41,3,11,29,33,30,7,3,19,70,87,20,7,96,5,16,3,16,24,31,16,3,23,29,3,1,27,31,70,3,11,29,30,30,7,3,1,29,23,12,71,27,40,3,11,41,18,26,20,28,18,26,14,24,5,3,19,36,96,5,16,3,1,31,11,20,3,19,36,96,5,16,3,1,31,29,12,38,17,23,8,5,27,34,38,38,40,32,38,3,11,26,23,35,47,39,7,20,5,25,28,5,25,28,5,18,3,19,44,115,5,16,3,22,108,20,5,48,31,5,18,3,18,26,33,16,3,18,26,33,16,3,25,31,3,25,31,3,1,30,19,42,115,5,16,3,1,31,1,32,1,33,1,30,1,28,33,72,3,19,44,95,5,16,3,1,27,33,72,3,1,29,33,72,3,1,30,33,78,3,11,41,87,5,21,3,19,46,97,5,16,3,1,25,16,17,23,19,5,27,40,31,5,17,4,21,37,4,30,49,3,2,47,53,1,32,11,24,3,19,46,97,5,16,3,20,45,57,25,7,32,30,75,7,30,64,7,5,17,3,1,44,29,11,18,3,1,29,23,12,71,27,40,3,11,22,3,19,43,94,5,16,3,29,87,29,5,17,3,36,169,19,5,62,19,5,16,3,33,27,47,51,7,61,5,26,3,29,33,48,5,52,3,1,33,11,18,3,20,45,3,29,59,48,5,17,3,36,62,19,5,62,19,5,16,3,1,31,19,34,96,5,16,3,1,33,14,16,3,21,33,3,1,30,1,28,1,29,23,12,71,27,40,3,11,41,18,26,20,28,18,26,14,24,5,3,19,63,94,5,16,3,21,34,33,35,14,46,7,5,38,29,3,16,23,3,30,34,33,35,14,46,7,5,36,3,1,30,30,24,12,69,25,38,48,46,5,40,27,3,19,32,95,5,29,94,5,16,3,1,29,28,104,94,5,16,3,1,31,28,104,94,5,16,3,1,31,28,107,96,5,16,3,1,32,35,12,41,36,33,25,3,1,29,24,12,26,84,48,75,12,6,33,27,3,19,39,115,5,16,3,1,30,21,12,60,27,87,3,11,36,3,19,32,95,5,16,3,24,60,3,1,33,27,12,66,27,29,29,3,30,90,3,30,93,3,1,34,34,27,12,66,27,29,29,3,30,90,3,30,93,3,1,35,29,19,67,94,5,16,3,1,29,19,62,94,5,16,3,1,32,19,70,97,5,16,3,1,33,19,36,96,5,16,3,1,36,11,9,7,7,9,10,11,12,10,9,8,7,7,11,10,6,7,10,19,7,9,9,9,17,8,10,8,7,8,7,29,9,11,12,7,7,10,9,10,2,39,63,24,49,3,3,22,75,69,73,71,69,65,77,46,38,40,24,50,5,5,1,54,40,48,5,1,37,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/data-types.js"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst _ = require('lodash');\nconst wkx = require('wkx');\nconst sequelizeErrors = require('./errors');\nconst Validator = require('./utils/validator-extras').validator;\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\nconst { logger } = require('./utils/logger');\nconst warnings = {};\nconst { classToInvokable } = require('./utils/class-to-invokable');\nconst { joinSQLFragments } = require('./utils/join-sql-fragments');\n\nclass ABSTRACT {\n  toString(options) {\n    return this.toSql(options);\n  }\n  toSql() {\n    return this.key;\n  }\n  stringify(value, options) {\n    if (this._stringify) {\n      return this._stringify(value, options);\n    }\n    return value;\n  }\n  bindParam(value, options) {\n    if (this._bindParam) {\n      return this._bindParam(value, options);\n    }\n    return options.bindParam(this.stringify(value, options));\n  }\n  static toString() {\n    return this.name;\n  }\n  static warn(link, text) {\n    if (!warnings[text]) {\n      warnings[text] = true;\n      logger.warn(`${text} \\n>> Check: ${link}`);\n    }\n  }\n  static extend(oldType) {\n    return new this(oldType.options);\n  }\n}\n\nABSTRACT.prototype.dialectTypes = '';\n\n/**\n * STRING A variable length string\n */\nclass STRING extends ABSTRACT {\n  /**\n   * @param {number} [length=255] length of string\n   * @param {boolean} [binary=false] Is this binary?\n   */\n  constructor(length, binary) {\n    super();\n    const options = typeof length === 'object' && length || { length, binary };\n    this.options = options;\n    this._binary = options.binary;\n    this._length = options.length || 255;\n  }\n  toSql() {\n    return joinSQLFragments([\n      `VARCHAR(${this._length})`,\n      this._binary && 'BINARY'\n    ]);\n  }\n  validate(value) {\n    if (Object.prototype.toString.call(value) !== '[object String]') {\n      if (this.options.binary && Buffer.isBuffer(value) || typeof value === 'number') {\n        return true;\n      }\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n\n  get BINARY() {\n    this._binary = true;\n    this.options.binary = true;\n    return this;\n  }\n\n  static get BINARY() {\n    return new this().BINARY;\n  }\n}\n\n/**\n * CHAR A fixed length string\n */\nclass CHAR extends STRING {\n  /**\n   * @param {number} [length=255] length of string\n   * @param {boolean} [binary=false] Is this binary?\n   */\n  constructor(length, binary) {\n    super(typeof length === 'object' && length || { length, binary });\n  }\n  toSql() {\n    return joinSQLFragments([\n      `CHAR(${this._length})`,\n      this._binary && 'BINARY'\n    ]);\n  }\n}\n\n/**\n * Unlimited length TEXT column\n */\nclass TEXT extends ABSTRACT {\n  /**\n   * @param {string} [length=''] could be tiny, medium, long.\n   */\n  constructor(length) {\n    super();\n    const options = typeof length === 'object' && length || { length };\n    this.options = options;\n    this._length = options.length || '';\n  }\n  toSql() {\n    switch (this._length.toLowerCase()) {\n      case 'tiny':\n        return 'TINYTEXT';\n      case 'medium':\n        return 'MEDIUMTEXT';\n      case 'long':\n        return 'LONGTEXT';\n      default:\n        return this.key;\n    }\n  }\n  validate(value) {\n    if (typeof value !== 'string') {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n}\n\n/**\n * An unlimited length case-insensitive text column.\n * Original case is preserved but acts case-insensitive when comparing values (such as when finding or unique constraints).\n * Only available in Postgres and SQLite.\n *\n */\nclass CITEXT extends ABSTRACT {\n  toSql() {\n    return 'CITEXT';\n  }\n  validate(value) {\n    if (typeof value !== 'string') {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n}\n\n/**\n * Base number type which is used to build other types\n */\nclass NUMBER extends ABSTRACT {\n  /**\n   * @param {object} options type options\n   * @param {string|number} [options.length] length of type, like `INT(4)`\n   * @param {boolean} [options.zerofill] Is zero filled?\n   * @param {boolean} [options.unsigned] Is unsigned?\n   * @param {string|number} [options.decimals] number of decimal points, used with length `FLOAT(5, 4)`\n   * @param {string|number} [options.precision] defines precision for decimal type\n   * @param {string|number} [options.scale] defines scale for decimal type\n   */\n  constructor(options = {}) {\n    super();\n    if (typeof options === 'number') {\n      options = {\n        length: options\n      };\n    }\n    this.options = options;\n    this._length = options.length;\n    this._zerofill = options.zerofill;\n    this._decimals = options.decimals;\n    this._precision = options.precision;\n    this._scale = options.scale;\n    this._unsigned = options.unsigned;\n  }\n  toSql() {\n    let result = this.key;\n    if (this._length) {\n      result += `(${this._length}`;\n      if (typeof this._decimals === 'number') {\n        result += `,${this._decimals}`;\n      }\n      result += ')';\n    }\n    if (this._unsigned) {\n      result += ' UNSIGNED';\n    }\n    if (this._zerofill) {\n      result += ' ZEROFILL';\n    }\n    return result;\n  }\n  validate(value) {\n    if (!Validator.isFloat(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format(`%j is not a valid ${this.key.toLowerCase()}`, value));\n    }\n    return true;\n  }\n  _stringify(number) {\n    if (typeof number === 'number' || typeof number === 'boolean' || number === null || number === undefined) {\n      return number;\n    }\n    if (typeof number.toString === 'function') {\n      return number.toString();\n    }\n    return number;\n  }\n\n  get UNSIGNED() {\n    this._unsigned = true;\n    this.options.unsigned = true;\n    return this;\n  }\n\n  get ZEROFILL() {\n    this._zerofill = true;\n    this.options.zerofill = true;\n    return this;\n  }\n\n  static get UNSIGNED() {\n    return new this().UNSIGNED;\n  }\n\n  static get ZEROFILL() {\n    return new this().ZEROFILL;\n  }\n}\n\n/**\n * A 32 bit integer\n */\nclass INTEGER extends NUMBER {\n  validate(value) {\n    if (!Validator.isInt(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format(`%j is not a valid ${this.key.toLowerCase()}`, value));\n    }\n    return true;\n  }\n}\n\n/**\n * A 8 bit integer\n */\nclass TINYINT extends INTEGER {\n}\n\n/**\n * A 16 bit integer\n */\nclass SMALLINT extends INTEGER {\n}\n\n/**\n * A 24 bit integer\n */\nclass MEDIUMINT extends INTEGER {\n}\n\n/**\n * A 64 bit integer\n */\nclass BIGINT extends INTEGER {\n}\n\n/**\n * Floating point number (4-byte precision).\n */\nclass FLOAT extends NUMBER {\n  /**\n   * @param {string|number} [length] length of type, like `FLOAT(4)`\n   * @param {string|number} [decimals] number of decimal points, used with length `FLOAT(5, 4)`\n   */\n  constructor(length, decimals) {\n    super(typeof length === 'object' && length || { length, decimals });\n  }\n  validate(value) {\n    if (!Validator.isFloat(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid float', value));\n    }\n    return true;\n  }\n}\n\n/**\n * Floating point number (4-byte precision).\n */\nclass REAL extends NUMBER {\n  /**\n   * @param {string|number} [length] length of type, like `REAL(4)`\n   * @param {string|number} [decimals] number of decimal points, used with length `REAL(5, 4)`\n   */\n  constructor(length, decimals) {\n    super(typeof length === 'object' && length || { length, decimals });\n  }\n}\n\n/**\n * Floating point number (8-byte precision).\n */\nclass DOUBLE extends NUMBER {\n  /**\n   * @param {string|number} [length] length of type, like `DOUBLE PRECISION(25)`\n   * @param {string|number} [decimals] number of decimal points, used with length `DOUBLE PRECISION(25, 10)`\n   */\n  constructor(length, decimals) {\n    super(typeof length === 'object' && length || { length, decimals });\n  }\n}\n\n/**\n * Decimal type, variable precision, take length as specified by user\n */\nclass DECIMAL extends NUMBER {\n  /**\n   * @param {string|number} [precision] defines precision\n   * @param {string|number} [scale] defines scale\n   */\n  constructor(precision, scale) {\n    super(typeof precision === 'object' && precision || { precision, scale });\n  }\n  toSql() {\n    if (this._precision || this._scale) {\n      return `DECIMAL(${[this._precision, this._scale].filter(_.identity).join(',')})`;\n    }\n    return 'DECIMAL';\n  }\n  validate(value) {\n    if (!Validator.isDecimal(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid decimal', value));\n    }\n    return true;\n  }\n}\n\n// TODO: Create intermediate class\nconst protoExtensions = {\n  escape: false,\n  _value(value) {\n    if (isNaN(value)) {\n      return 'NaN';\n    }\n    if (!isFinite(value)) {\n      const sign = value < 0 ? '-' : '';\n      return `${sign}Infinity`;\n    }\n\n    return value;\n  },\n  _stringify(value) {\n    return `'${this._value(value)}'`;\n  },\n  _bindParam(value, options) {\n    return options.bindParam(this._value(value));\n  }\n};\n\nfor (const floating of [FLOAT, DOUBLE, REAL]) {\n  Object.assign(floating.prototype, protoExtensions);\n}\n\n/**\n * A boolean / tinyint column, depending on dialect\n */\nclass BOOLEAN extends ABSTRACT {\n  toSql() {\n    return 'TINYINT(1)';\n  }\n  validate(value) {\n    if (!Validator.isBoolean(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid boolean', value));\n    }\n    return true;\n  }\n  _sanitize(value) {\n    if (value !== null && value !== undefined) {\n      if (Buffer.isBuffer(value) && value.length === 1) {\n        // Bit fields are returned as buffers\n        value = value[0];\n      }\n      const type = typeof value;\n      if (type === 'string') {\n        // Only take action on valid boolean strings.\n        return value === 'true' ? true : value === 'false' ? false : value;\n      }\n      if (type === 'number') {\n        // Only take action on valid boolean integers.\n        return value === 1 ? true : value === 0 ? false : value;\n      }\n    }\n    return value;\n  }\n}\n\n\nBOOLEAN.parse = BOOLEAN.prototype._sanitize;\n\n/**\n * A time column\n *\n */\nclass TIME extends ABSTRACT {\n  toSql() {\n    return 'TIME';\n  }\n}\n\n/**\n * Date column with timezone, default is UTC\n */\nclass DATE extends ABSTRACT {\n  /**\n   * @param {string|number} [length] precision to allow storing milliseconds\n   */\n  constructor(length) {\n    super();\n    const options = typeof length === 'object' && length || { length };\n    this.options = options;\n    this._length = options.length || '';\n  }\n  toSql() {\n    return 'DATETIME';\n  }\n  validate(value) {\n    if (!Validator.isDate(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid date', value));\n    }\n    return true;\n  }\n  _sanitize(value, options) {\n    if ((!options || options && !options.raw) && !(value instanceof Date) && !!value) {\n      return new Date(value);\n    }\n    return value;\n  }\n  _isChanged(value, originalValue) {\n    if (originalValue && !!value &&\n      (value === originalValue ||\n        value instanceof Date && originalValue instanceof Date && value.getTime() === originalValue.getTime())) {\n      return false;\n    }\n    // not changed when set to same empty value\n    if (!originalValue && !value && originalValue === value) {\n      return false;\n    }\n    return true;\n  }\n  _applyTimezone(date, options) {\n    if (options.timezone) {\n      if (momentTz.tz.zone(options.timezone)) {\n        return momentTz(date).tz(options.timezone);\n      }\n      return date = moment(date).utcOffset(options.timezone);\n    }\n    return momentTz(date);\n  }\n  _stringify(date, options) {\n    if (!moment.isMoment(date)) {\n      date = this._applyTimezone(date, options);\n    }\n    // Z here means current timezone, _not_ UTC\n    return date.format('YYYY-MM-DD HH:mm:ss.SSS Z');\n  }\n}\n\n/**\n * A date only column (no timestamp)\n */\nclass DATEONLY extends ABSTRACT {\n  toSql() {\n    return 'DATE';\n  }\n  _stringify(date) {\n    return moment(date).format('YYYY-MM-DD');\n  }\n  _sanitize(value, options) {\n    if ((!options || options && !options.raw) && !!value) {\n      return moment(value).format('YYYY-MM-DD');\n    }\n    return value;\n  }\n  _isChanged(value, originalValue) {\n    if (originalValue && !!value && originalValue === value) {\n      return false;\n    }\n    // not changed when set to same empty value\n    if (!originalValue && !value && originalValue === value) {\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * A key / value store column. Only available in Postgres.\n */\nclass HSTORE extends ABSTRACT {\n  validate(value) {\n    if (!_.isPlainObject(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid hstore', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A JSON string column. Available in MySQL, Postgres and SQLite\n */\nclass JSONTYPE extends ABSTRACT {\n  validate() {\n    return true;\n  }\n  _stringify(value) {\n    return JSON.stringify(value);\n  }\n}\n\n/**\n * A binary storage JSON column. Only available in Postgres.\n */\nclass JSONB extends JSONTYPE {\n}\n\n/**\n * A default value of the current timestamp\n */\nclass NOW extends ABSTRACT {\n}\n\n/**\n * Binary storage\n */\nclass BLOB extends ABSTRACT {\n  /**\n   * @param {string} [length=''] could be tiny, medium, long.\n   */\n  constructor(length) {\n    super();\n    const options = typeof length === 'object' && length || { length };\n    this.options = options;\n    this._length = options.length || '';\n  }\n  toSql() {\n    switch (this._length.toLowerCase()) {\n      case 'tiny':\n        return 'TINYBLOB';\n      case 'medium':\n        return 'MEDIUMBLOB';\n      case 'long':\n        return 'LONGBLOB';\n      default:\n        return this.key;\n    }\n  }\n  validate(value) {\n    if (typeof value !== 'string' && !Buffer.isBuffer(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid blob', value));\n    }\n    return true;\n  }\n  _stringify(value) {\n    if (!Buffer.isBuffer(value)) {\n      if (Array.isArray(value)) {\n        value = Buffer.from(value);\n      }\n      else {\n        value = Buffer.from(value.toString());\n      }\n    }\n    const hex = value.toString('hex');\n    return this._hexify(hex);\n  }\n  _hexify(hex) {\n    return `X'${hex}'`;\n  }\n  _bindParam(value, options) {\n    if (!Buffer.isBuffer(value)) {\n      if (Array.isArray(value)) {\n        value = Buffer.from(value);\n      }\n      else {\n        value = Buffer.from(value.toString());\n      }\n    }\n    return options.bindParam(value);\n  }\n}\n\n\nBLOB.prototype.escape = false;\n\n/**\n * Range types are data types representing a range of values of some element type (called the range's subtype).\n * Only available in Postgres. See [the Postgres documentation](http://www.postgresql.org/docs/9.4/static/rangetypes.html) for more details\n */\nclass RANGE extends ABSTRACT {\n  /**\n   * @param {ABSTRACT} subtype A subtype for range, like RANGE(DATE)\n   */\n  constructor(subtype) {\n    super();\n    const options = _.isPlainObject(subtype) ? subtype : { subtype };\n    if (!options.subtype)\n      options.subtype = new INTEGER();\n    if (typeof options.subtype === 'function') {\n      options.subtype = new options.subtype();\n    }\n    this._subtype = options.subtype.key;\n    this.options = options;\n  }\n  validate(value) {\n    if (!Array.isArray(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid range', value));\n    }\n    if (value.length !== 2) {\n      throw new sequelizeErrors.ValidationError('A range must be an array with two elements');\n    }\n    return true;\n  }\n}\n\n/**\n * A column storing a unique universal identifier.\n * Use with `UUIDV1` or `UUIDV4` for default values.\n */\nclass UUID extends ABSTRACT {\n  validate(value, options) {\n    if (typeof value !== 'string' || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A default unique universal identifier generated following the UUID v1 standard\n */\nclass UUIDV1 extends ABSTRACT {\n  validate(value, options) {\n    if (typeof value !== 'string' || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A default unique universal identifier generated following the UUID v4 standard\n */\nclass UUIDV4 extends ABSTRACT {\n  validate(value, options) {\n    if (typeof value !== 'string' || !Validator.isUUID(value, 4) && (!options || !options.acceptStrings)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuidv4', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A virtual value that is not stored in the DB. This could for example be useful if you want to provide a default value in your model that is returned to the user but not stored in the DB.\n *\n * You could also use it to validate a value before permuting and storing it. VIRTUAL also takes a return type and dependency fields as arguments\n * If a virtual attribute is present in `attributes` it will automatically pull in the extra fields as well.\n * Return type is mostly useful for setups that rely on types like GraphQL.\n *\n * @example <caption>Checking password length before hashing it</caption>\n * sequelize.define('user', {\n *   password_hash: DataTypes.STRING,\n *   password: {\n *     type: DataTypes.VIRTUAL,\n *     set: function (val) {\n *        // Remember to set the data value, otherwise it won't be validated\n *        this.setDataValue('password', val);\n *        this.setDataValue('password_hash', this.salt + val);\n *      },\n *      validate: {\n *         isLongEnough: function (val) {\n *           if (val.length < 7) {\n *             throw new Error(\"Please choose a longer password\")\n *          }\n *       }\n *     }\n *   }\n * })\n *\n * # In the above code the password is stored plainly in the password field so it can be validated, but is never stored in the DB.\n *\n * @example <caption>Virtual with dependency fields</caption>\n * {\n *   active: {\n *     type: new DataTypes.VIRTUAL(DataTypes.BOOLEAN, ['createdAt']),\n *     get: function() {\n *       return this.get('createdAt') > Date.now() - (7 * 24 * 60 * 60 * 1000)\n *     }\n *   }\n * }\n *\n */\nclass VIRTUAL extends ABSTRACT {\n  /**\n   * @param {ABSTRACT} [ReturnType] return type for virtual type\n   * @param {Array} [fields] array of fields this virtual type is dependent on\n   */\n  constructor(ReturnType, fields) {\n    super();\n    if (typeof ReturnType === 'function')\n      ReturnType = new ReturnType();\n    this.returnType = ReturnType;\n    this.fields = fields;\n  }\n}\n\n/**\n * An enumeration, Postgres Only\n *\n * @example\n * DataTypes.ENUM('value', 'another value')\n * DataTypes.ENUM(['value', 'another value'])\n * DataTypes.ENUM({\n *   values: ['value', 'another value']\n * })\n */\nclass ENUM extends ABSTRACT {\n  /**\n   * @param {...any|{ values: any[] }|any[]} args either array of values or options object with values array. It also supports variadic values\n   */\n  constructor(...args) {\n    super();\n    const value = args[0];\n    const options = typeof value === 'object' && !Array.isArray(value) && value || {\n      values: args.reduce((result, element) => {\n        return result.concat(Array.isArray(element) ? element : [element]);\n      }, [])\n    };\n    this.values = options.values;\n    this.options = options;\n  }\n  validate(value) {\n    if (!this.values.includes(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid choice in %j', value, this.values));\n    }\n    return true;\n  }\n}\n\n/**\n * An array of `type`. Only available in Postgres.\n *\n * @example\n * DataTypes.ARRAY(DataTypes.DECIMAL)\n */\nclass ARRAY extends ABSTRACT {\n  /**\n   * @param {ABSTRACT} type type of array values\n   */\n  constructor(type) {\n    super();\n    const options = _.isPlainObject(type) ? type : { type };\n    this.options = options;\n    this.type = typeof options.type === 'function' ? new options.type() : options.type;\n  }\n  toSql() {\n    return `${this.type.toSql()}[]`;\n  }\n  validate(value) {\n    if (!Array.isArray(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid array', value));\n    }\n    return true;\n  }\n  static is(obj, type) {\n    return obj instanceof ARRAY && obj.type instanceof type;\n  }\n}\n\n/**\n * A column storing Geometry information.\n * It is only available in PostgreSQL (with PostGIS), MariaDB or MySQL.\n *\n * GeoJSON is accepted as input and returned as output.\n *\n * In PostGIS, the GeoJSON is parsed using the PostGIS function `ST_GeomFromGeoJSON`.\n * In MySQL it is parsed using the function `ST_GeomFromText`.\n *\n * Therefore, one can just follow the [GeoJSON spec](https://tools.ietf.org/html/rfc7946) for handling geometry objects.  See the following examples:\n *\n * @example <caption>Defining a Geometry type attribute</caption>\n * DataTypes.GEOMETRY\n * DataTypes.GEOMETRY('POINT')\n * DataTypes.GEOMETRY('POINT', 4326)\n *\n * @example <caption>Create a new point</caption>\n * const point = { type: 'Point', coordinates: [-76.984722, 39.807222]}; // GeoJson format: [lng, lat]\n *\n * User.create({username: 'username', geometry: point });\n *\n * @example <caption>Create a new linestring</caption>\n * const line = { type: 'LineString', 'coordinates': [ [100.0, 0.0], [101.0, 1.0] ] };\n *\n * User.create({username: 'username', geometry: line });\n *\n * @example <caption>Create a new polygon</caption>\n * const polygon = { type: 'Polygon', coordinates: [\n *                 [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\n *                   [100.0, 1.0], [100.0, 0.0] ]\n *                 ]};\n *\n * User.create({username: 'username', geometry: polygon });\n *\n * @example <caption>Create a new point with a custom SRID</caption>\n * const point = {\n *   type: 'Point',\n *   coordinates: [-76.984722, 39.807222], // GeoJson format: [lng, lat]\n *   crs: { type: 'name', properties: { name: 'EPSG:4326'} }\n * };\n *\n * User.create({username: 'username', geometry: point })\n *\n *\n * @see {@link DataTypes.GEOGRAPHY}\n */\nclass GEOMETRY extends ABSTRACT {\n  /**\n   * @param {string} [type] Type of geometry data\n   * @param {string} [srid] SRID of type\n   */\n  constructor(type, srid) {\n    super();\n    const options = _.isPlainObject(type) ? type : { type, srid };\n    this.options = options;\n    this.type = options.type;\n    this.srid = options.srid;\n  }\n  _stringify(value, options) {\n    return `ST_GeomFromText(${options.escape(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n  _bindParam(value, options) {\n    return `ST_GeomFromText(${options.bindParam(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n}\n\nGEOMETRY.prototype.escape = false;\n\n/**\n * A geography datatype represents two dimensional spacial objects in an elliptic coord system.\n *\n * __The difference from geometry and geography type:__\n *\n * PostGIS 1.5 introduced a new spatial type called geography, which uses geodetic measurement instead of Cartesian measurement.\n * Coordinate points in the geography type are always represented in WGS 84 lon lat degrees (SRID 4326),\n * but measurement functions and relationships ST_Distance, ST_DWithin, ST_Length, and ST_Area always return answers in meters or assume inputs in meters.\n *\n * __What is best to use? It depends:__\n *\n * When choosing between the geometry and geography type for data storage, you should consider what you’ll be using it for.\n * If all you do are simple measurements and relationship checks on your data, and your data covers a fairly large area, then most likely you’ll be better off storing your data using the new geography type.\n * Although the new geography data type can cover the globe, the geometry type is far from obsolete.\n * The geometry type has a much richer set of functions than geography, relationship checks are generally faster, and it has wider support currently across desktop and web-mapping tools\n *\n * @example <caption>Defining a Geography type attribute</caption>\n * DataTypes.GEOGRAPHY\n * DataTypes.GEOGRAPHY('POINT')\n * DataTypes.GEOGRAPHY('POINT', 4326)\n */\nclass GEOGRAPHY extends ABSTRACT {\n  /**\n   * @param {string} [type] Type of geography data\n   * @param {string} [srid] SRID of type\n   */\n  constructor(type, srid) {\n    super();\n    const options = _.isPlainObject(type) ? type : { type, srid };\n    this.options = options;\n    this.type = options.type;\n    this.srid = options.srid;\n  }\n  _stringify(value, options) {\n    return `ST_GeomFromText(${options.escape(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n  _bindParam(value, options) {\n    return `ST_GeomFromText(${options.bindParam(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n}\n\n\nGEOGRAPHY.prototype.escape = false;\n\n/**\n * The cidr type holds an IPv4 or IPv6 network specification. Takes 7 or 19 bytes.\n *\n * Only available for Postgres\n */\nclass CIDR extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string' || !Validator.isIPRange(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid CIDR', value));\n    }\n    return true;\n  }\n}\n\n/**\n * The INET type holds an IPv4 or IPv6 host address, and optionally its subnet. Takes 7 or 19 bytes\n *\n * Only available for Postgres\n */\nclass INET extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string' || !Validator.isIP(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid INET', value));\n    }\n    return true;\n  }\n}\n\n/**\n * The MACADDR type stores MAC addresses. Takes 6 bytes\n *\n * Only available for Postgres\n *\n */\nclass MACADDR extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string' || !Validator.isMACAddress(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid MACADDR', value));\n    }\n    return true;\n  }\n}\n\n/**\n * The TSVECTOR type stores text search vectors.\n *\n * Only available for Postgres\n *\n */\nclass TSVECTOR extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string') {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A convenience class holding commonly used data types. The data types are used when defining a new model using `Sequelize.define`, like this:\n * ```js\n * sequelize.define('model', {\n *   column: DataTypes.INTEGER\n * })\n * ```\n * When defining a model you can just as easily pass a string as type, but often using the types defined here is beneficial. For example, using `DataTypes.BLOB`, mean\n * that that column will be returned as an instance of `Buffer` when being fetched by sequelize.\n *\n * To provide a length for the data type, you can invoke it like a function: `INTEGER(2)`\n *\n * Some data types have special properties that can be accessed in order to change the data type.\n * For example, to get an unsigned integer with zerofill you can do `DataTypes.INTEGER.UNSIGNED.ZEROFILL`.\n * The order you access the properties in do not matter, so `DataTypes.INTEGER.ZEROFILL.UNSIGNED` is fine as well.\n *\n * * All number types (`INTEGER`, `BIGINT`, `FLOAT`, `DOUBLE`, `REAL`, `DECIMAL`) expose the properties `UNSIGNED` and `ZEROFILL`\n * * The `CHAR` and `STRING` types expose the `BINARY` property\n *\n * Three of the values provided here (`NOW`, `UUIDV1` and `UUIDV4`) are special default values, that should not be used to define types. Instead they are used as shorthands for\n * defining default values. For example, to get a uuid field with a default value generated following v1 of the UUID standard:\n * ```js\n * sequelize.define('model', {\n *   uuid: {\n *     type: DataTypes.UUID,\n *     defaultValue: DataTypes.UUIDV1,\n *     primaryKey: true\n *   }\n * })\n * ```\n * There may be times when you want to generate your own UUID conforming to some other algorithm. This is accomplished\n * using the defaultValue property as well, but instead of specifying one of the supplied UUID types, you return a value\n * from a function.\n * ```js\n * sequelize.define('model', {\n *   uuid: {\n *     type: DataTypes.UUID,\n *     defaultValue: function() {\n *       return generateMyId()\n *     },\n *     primaryKey: true\n *   }\n * })\n * ```\n */\nconst DataTypes = module.exports = {\n  ABSTRACT,\n  STRING,\n  CHAR,\n  TEXT,\n  NUMBER,\n  TINYINT,\n  SMALLINT,\n  MEDIUMINT,\n  INTEGER,\n  BIGINT,\n  FLOAT,\n  TIME,\n  DATE,\n  DATEONLY,\n  BOOLEAN,\n  NOW,\n  BLOB,\n  DECIMAL,\n  NUMERIC: DECIMAL,\n  UUID,\n  UUIDV1,\n  UUIDV4,\n  HSTORE,\n  JSON: JSONTYPE,\n  JSONB,\n  VIRTUAL,\n  ARRAY,\n  ENUM,\n  RANGE,\n  REAL,\n  'DOUBLE PRECISION': DOUBLE,\n  DOUBLE,\n  GEOMETRY,\n  GEOGRAPHY,\n  CIDR,\n  INET,\n  MACADDR,\n  CITEXT,\n  TSVECTOR\n};\n\n_.each(DataTypes, (dataType, name) => {\n  // guard for aliases\n  if (!Object.prototype.hasOwnProperty.call(dataType, 'key')) {\n    dataType.types = {};\n    dataType.key = dataType.prototype.key = name;\n  }\n});\n\nconst dialectMap = {};\ndialectMap.postgres = require('./dialects/postgres/data-types')(DataTypes);\ndialectMap.mysql = require('./dialects/mysql/data-types')(DataTypes);\ndialectMap.mariadb = require('./dialects/mariadb/data-types')(DataTypes);\ndialectMap.sqlite = require('./dialects/sqlite/data-types')(DataTypes);\ndialectMap.mssql = require('./dialects/mssql/data-types')(DataTypes);\ndialectMap.db2 = require('./dialects/db2/data-types')(DataTypes);\ndialectMap.snowflake = require('./dialects/snowflake/data-types')(DataTypes);\n\nconst dialectList = Object.values(dialectMap);\n\nfor (const dataTypes of dialectList) {\n  _.each(dataTypes, (DataType, key) => {\n    if (!DataType.key) {\n      DataType.key = DataType.prototype.key = key;\n    }\n  });\n}\n\n// Wrap all data types to not require `new`\nfor (const dataTypes of [DataTypes, ...dialectList]) {\n  _.each(dataTypes, (DataType, key) => {\n    dataTypes[key] = classToInvokable(DataType);\n  });\n}\n\nObject.assign(DataTypes, dialectMap);\n"],"mappings":";AAEA,MAAM,OAAO,QAAQ;AACrB,MAAM,IAAI,QAAQ;AAClB,MAAM,MAAM,QAAQ;AACpB,MAAM,kBAAkB,QAAQ;AAChC,MAAM,YAAY,QAAQ,4BAA4B;AACtD,MAAM,WAAW,QAAQ;AACzB,MAAM,SAAS,QAAQ;AACvB,MAAM,EAAE,WAAW,QAAQ;AAC3B,MAAM,WAAW;AACjB,MAAM,EAAE,qBAAqB,QAAQ;AACrC,MAAM,EAAE,qBAAqB,QAAQ;AAErC,eAAe;AAAA,EACb,SAAS,SAAS;AAChB,WAAO,KAAK,MAAM;AAAA;AAAA,EAEpB,QAAQ;AACN,WAAO,KAAK;AAAA;AAAA,EAEd,UAAU,OAAO,SAAS;AACxB,QAAI,KAAK,YAAY;AACnB,aAAO,KAAK,WAAW,OAAO;AAAA;AAEhC,WAAO;AAAA;AAAA,EAET,UAAU,OAAO,SAAS;AACxB,QAAI,KAAK,YAAY;AACnB,aAAO,KAAK,WAAW,OAAO;AAAA;AAEhC,WAAO,QAAQ,UAAU,KAAK,UAAU,OAAO;AAAA;AAAA,SAE1C,WAAW;AAChB,WAAO,KAAK;AAAA;AAAA,SAEP,KAAK,MAAM,MAAM;AACtB,QAAI,CAAC,SAAS,OAAO;AACnB,eAAS,QAAQ;AACjB,aAAO,KAAK,GAAG;AAAA,YAAoB;AAAA;AAAA;AAAA,SAGhC,OAAO,SAAS;AACrB,WAAO,IAAI,KAAK,QAAQ;AAAA;AAAA;AAI5B,SAAS,UAAU,eAAe;AAKlC,qBAAqB,SAAS;AAAA,EAK5B,YAAY,QAAQ,QAAQ;AAC1B;AACA,UAAM,UAAU,OAAO,WAAW,YAAY,UAAU,EAAE,QAAQ;AAClE,SAAK,UAAU;AACf,SAAK,UAAU,QAAQ;AACvB,SAAK,UAAU,QAAQ,UAAU;AAAA;AAAA,EAEnC,QAAQ;AACN,WAAO,iBAAiB;AAAA,MACtB,WAAW,KAAK;AAAA,MAChB,KAAK,WAAW;AAAA;AAAA;AAAA,EAGpB,SAAS,OAAO;AACd,QAAI,OAAO,UAAU,SAAS,KAAK,WAAW,mBAAmB;AAC/D,UAAI,KAAK,QAAQ,UAAU,OAAO,SAAS,UAAU,OAAO,UAAU,UAAU;AAC9E,eAAO;AAAA;AAET,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,4BAA4B;AAAA;AAEpF,WAAO;AAAA;AAAA,MAGL,SAAS;AACX,SAAK,UAAU;AACf,SAAK,QAAQ,SAAS;AACtB,WAAO;AAAA;AAAA,aAGE,SAAS;AAClB,WAAO,IAAI,OAAO;AAAA;AAAA;AAOtB,mBAAmB,OAAO;AAAA,EAKxB,YAAY,QAAQ,QAAQ;AAC1B,UAAM,OAAO,WAAW,YAAY,UAAU,EAAE,QAAQ;AAAA;AAAA,EAE1D,QAAQ;AACN,WAAO,iBAAiB;AAAA,MACtB,QAAQ,KAAK;AAAA,MACb,KAAK,WAAW;AAAA;AAAA;AAAA;AAQtB,mBAAmB,SAAS;AAAA,EAI1B,YAAY,QAAQ;AAClB;AACA,UAAM,UAAU,OAAO,WAAW,YAAY,UAAU,EAAE;AAC1D,SAAK,UAAU;AACf,SAAK,UAAU,QAAQ,UAAU;AAAA;AAAA,EAEnC,QAAQ;AACN,YAAQ,KAAK,QAAQ;AAAA,WACd;AACH,eAAO;AAAA,WACJ;AACH,eAAO;AAAA,WACJ;AACH,eAAO;AAAA;AAEP,eAAO,KAAK;AAAA;AAAA;AAAA,EAGlB,SAAS,OAAO;AACd,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,4BAA4B;AAAA;AAEpF,WAAO;AAAA;AAAA;AAUX,qBAAqB,SAAS;AAAA,EAC5B,QAAQ;AACN,WAAO;AAAA;AAAA,EAET,SAAS,OAAO;AACd,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,4BAA4B;AAAA;AAEpF,WAAO;AAAA;AAAA;AAOX,qBAAqB,SAAS;AAAA,EAU5B,YAAY,UAAU,IAAI;AACxB;AACA,QAAI,OAAO,YAAY,UAAU;AAC/B,gBAAU;AAAA,QACR,QAAQ;AAAA;AAAA;AAGZ,SAAK,UAAU;AACf,SAAK,UAAU,QAAQ;AACvB,SAAK,YAAY,QAAQ;AACzB,SAAK,YAAY,QAAQ;AACzB,SAAK,aAAa,QAAQ;AAC1B,SAAK,SAAS,QAAQ;AACtB,SAAK,YAAY,QAAQ;AAAA;AAAA,EAE3B,QAAQ;AACN,QAAI,SAAS,KAAK;AAClB,QAAI,KAAK,SAAS;AAChB,gBAAU,IAAI,KAAK;AACnB,UAAI,OAAO,KAAK,cAAc,UAAU;AACtC,kBAAU,IAAI,KAAK;AAAA;AAErB,gBAAU;AAAA;AAEZ,QAAI,KAAK,WAAW;AAClB,gBAAU;AAAA;AAEZ,QAAI,KAAK,WAAW;AAClB,gBAAU;AAAA;AAEZ,WAAO;AAAA;AAAA,EAET,SAAS,OAAO;AACd,QAAI,CAAC,UAAU,QAAQ,OAAO,SAAS;AACrC,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,qBAAqB,KAAK,IAAI,iBAAiB;AAAA;AAEvG,WAAO;AAAA;AAAA,EAET,WAAW,QAAQ;AACjB,QAAI,OAAO,WAAW,YAAY,OAAO,WAAW,aAAa,WAAW,QAAQ,WAAW,QAAW;AACxG,aAAO;AAAA;AAET,QAAI,OAAO,OAAO,aAAa,YAAY;AACzC,aAAO,OAAO;AAAA;AAEhB,WAAO;AAAA;AAAA,MAGL,WAAW;AACb,SAAK,YAAY;AACjB,SAAK,QAAQ,WAAW;AACxB,WAAO;AAAA;AAAA,MAGL,WAAW;AACb,SAAK,YAAY;AACjB,SAAK,QAAQ,WAAW;AACxB,WAAO;AAAA;AAAA,aAGE,WAAW;AACpB,WAAO,IAAI,OAAO;AAAA;AAAA,aAGT,WAAW;AACpB,WAAO,IAAI,OAAO;AAAA;AAAA;AAOtB,sBAAsB,OAAO;AAAA,EAC3B,SAAS,OAAO;AACd,QAAI,CAAC,UAAU,MAAM,OAAO,SAAS;AACnC,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,qBAAqB,KAAK,IAAI,iBAAiB;AAAA;AAEvG,WAAO;AAAA;AAAA;AAOX,sBAAsB,QAAQ;AAAA;AAM9B,uBAAuB,QAAQ;AAAA;AAM/B,wBAAwB,QAAQ;AAAA;AAMhC,qBAAqB,QAAQ;AAAA;AAM7B,oBAAoB,OAAO;AAAA,EAKzB,YAAY,QAAQ,UAAU;AAC5B,UAAM,OAAO,WAAW,YAAY,UAAU,EAAE,QAAQ;AAAA;AAAA,EAE1D,SAAS,OAAO;AACd,QAAI,CAAC,UAAU,QAAQ,OAAO,SAAS;AACrC,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,2BAA2B;AAAA;AAEnF,WAAO;AAAA;AAAA;AAOX,mBAAmB,OAAO;AAAA,EAKxB,YAAY,QAAQ,UAAU;AAC5B,UAAM,OAAO,WAAW,YAAY,UAAU,EAAE,QAAQ;AAAA;AAAA;AAO5D,qBAAqB,OAAO;AAAA,EAK1B,YAAY,QAAQ,UAAU;AAC5B,UAAM,OAAO,WAAW,YAAY,UAAU,EAAE,QAAQ;AAAA;AAAA;AAO5D,sBAAsB,OAAO;AAAA,EAK3B,YAAY,WAAW,OAAO;AAC5B,UAAM,OAAO,cAAc,YAAY,aAAa,EAAE,WAAW;AAAA;AAAA,EAEnE,QAAQ;AACN,QAAI,KAAK,cAAc,KAAK,QAAQ;AAClC,aAAO,WAAW,CAAC,KAAK,YAAY,KAAK,QAAQ,OAAO,EAAE,UAAU,KAAK;AAAA;AAE3E,WAAO;AAAA;AAAA,EAET,SAAS,OAAO;AACd,QAAI,CAAC,UAAU,UAAU,OAAO,SAAS;AACvC,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,6BAA6B;AAAA;AAErF,WAAO;AAAA;AAAA;AAKX,MAAM,kBAAkB;AAAA,EACtB,QAAQ;AAAA,EACR,OAAO,OAAO;AACZ,QAAI,MAAM,QAAQ;AAChB,aAAO;AAAA;AAET,QAAI,CAAC,SAAS,QAAQ;AACpB,YAAM,OAAO,QAAQ,IAAI,MAAM;AAC/B,aAAO,GAAG;AAAA;AAGZ,WAAO;AAAA;AAAA,EAET,WAAW,OAAO;AAChB,WAAO,IAAI,KAAK,OAAO;AAAA;AAAA,EAEzB,WAAW,OAAO,SAAS;AACzB,WAAO,QAAQ,UAAU,KAAK,OAAO;AAAA;AAAA;AAIzC,WAAW,YAAY,CAAC,OAAO,QAAQ,OAAO;AAC5C,SAAO,OAAO,SAAS,WAAW;AAAA;AAMpC,sBAAsB,SAAS;AAAA,EAC7B,QAAQ;AACN,WAAO;AAAA;AAAA,EAET,SAAS,OAAO;AACd,QAAI,CAAC,UAAU,UAAU,OAAO,SAAS;AACvC,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,6BAA6B;AAAA;AAErF,WAAO;AAAA;AAAA,EAET,UAAU,OAAO;AACf,QAAI,UAAU,QAAQ,UAAU,QAAW;AACzC,UAAI,OAAO,SAAS,UAAU,MAAM,WAAW,GAAG;AAEhD,gBAAQ,MAAM;AAAA;AAEhB,YAAM,OAAO,OAAO;AACpB,UAAI,SAAS,UAAU;AAErB,eAAO,UAAU,SAAS,OAAO,UAAU,UAAU,QAAQ;AAAA;AAE/D,UAAI,SAAS,UAAU;AAErB,eAAO,UAAU,IAAI,OAAO,UAAU,IAAI,QAAQ;AAAA;AAAA;AAGtD,WAAO;AAAA;AAAA;AAKX,QAAQ,QAAQ,QAAQ,UAAU;AAMlC,mBAAmB,SAAS;AAAA,EAC1B,QAAQ;AACN,WAAO;AAAA;AAAA;AAOX,mBAAmB,SAAS;AAAA,EAI1B,YAAY,QAAQ;AAClB;AACA,UAAM,UAAU,OAAO,WAAW,YAAY,UAAU,EAAE;AAC1D,SAAK,UAAU;AACf,SAAK,UAAU,QAAQ,UAAU;AAAA;AAAA,EAEnC,QAAQ;AACN,WAAO;AAAA;AAAA,EAET,SAAS,OAAO;AACd,QAAI,CAAC,UAAU,OAAO,OAAO,SAAS;AACpC,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,0BAA0B;AAAA;AAElF,WAAO;AAAA;AAAA,EAET,UAAU,OAAO,SAAS;AACxB,QAAK,EAAC,WAAW,WAAW,CAAC,QAAQ,QAAQ,CAAE,kBAAiB,SAAS,CAAC,CAAC,OAAO;AAChF,aAAO,IAAI,KAAK;AAAA;AAElB,WAAO;AAAA;AAAA,EAET,WAAW,OAAO,eAAe;AAC/B,QAAI,iBAAiB,CAAC,CAAC,SACpB,WAAU,iBACT,iBAAiB,QAAQ,yBAAyB,QAAQ,MAAM,cAAc,cAAc,YAAY;AAC1G,aAAO;AAAA;AAGT,QAAI,CAAC,iBAAiB,CAAC,SAAS,kBAAkB,OAAO;AACvD,aAAO;AAAA;AAET,WAAO;AAAA;AAAA,EAET,eAAe,MAAM,SAAS;AAC5B,QAAI,QAAQ,UAAU;AACpB,UAAI,SAAS,GAAG,KAAK,QAAQ,WAAW;AACtC,eAAO,SAAS,MAAM,GAAG,QAAQ;AAAA;AAEnC,aAAO,OAAO,OAAO,MAAM,UAAU,QAAQ;AAAA;AAE/C,WAAO,SAAS;AAAA;AAAA,EAElB,WAAW,MAAM,SAAS;AACxB,QAAI,CAAC,OAAO,SAAS,OAAO;AAC1B,aAAO,KAAK,eAAe,MAAM;AAAA;AAGnC,WAAO,KAAK,OAAO;AAAA;AAAA;AAOvB,uBAAuB,SAAS;AAAA,EAC9B,QAAQ;AACN,WAAO;AAAA;AAAA,EAET,WAAW,MAAM;AACf,WAAO,OAAO,MAAM,OAAO;AAAA;AAAA,EAE7B,UAAU,OAAO,SAAS;AACxB,QAAK,EAAC,WAAW,WAAW,CAAC,QAAQ,QAAQ,CAAC,CAAC,OAAO;AACpD,aAAO,OAAO,OAAO,OAAO;AAAA;AAE9B,WAAO;AAAA;AAAA,EAET,WAAW,OAAO,eAAe;AAC/B,QAAI,iBAAiB,CAAC,CAAC,SAAS,kBAAkB,OAAO;AACvD,aAAO;AAAA;AAGT,QAAI,CAAC,iBAAiB,CAAC,SAAS,kBAAkB,OAAO;AACvD,aAAO;AAAA;AAET,WAAO;AAAA;AAAA;AAOX,qBAAqB,SAAS;AAAA,EAC5B,SAAS,OAAO;AACd,QAAI,CAAC,EAAE,cAAc,QAAQ;AAC3B,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,4BAA4B;AAAA;AAEpF,WAAO;AAAA;AAAA;AAOX,uBAAuB,SAAS;AAAA,EAC9B,WAAW;AACT,WAAO;AAAA;AAAA,EAET,WAAW,OAAO;AAChB,WAAO,KAAK,UAAU;AAAA;AAAA;AAO1B,oBAAoB,SAAS;AAAA;AAM7B,kBAAkB,SAAS;AAAA;AAM3B,mBAAmB,SAAS;AAAA,EAI1B,YAAY,QAAQ;AAClB;AACA,UAAM,UAAU,OAAO,WAAW,YAAY,UAAU,EAAE;AAC1D,SAAK,UAAU;AACf,SAAK,UAAU,QAAQ,UAAU;AAAA;AAAA,EAEnC,QAAQ;AACN,YAAQ,KAAK,QAAQ;AAAA,WACd;AACH,eAAO;AAAA,WACJ;AACH,eAAO;AAAA,WACJ;AACH,eAAO;AAAA;AAEP,eAAO,KAAK;AAAA;AAAA;AAAA,EAGlB,SAAS,OAAO;AACd,QAAI,OAAO,UAAU,YAAY,CAAC,OAAO,SAAS,QAAQ;AACxD,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,0BAA0B;AAAA;AAElF,WAAO;AAAA;AAAA,EAET,WAAW,OAAO;AAChB,QAAI,CAAC,OAAO,SAAS,QAAQ;AAC3B,UAAI,MAAM,QAAQ,QAAQ;AACxB,gBAAQ,OAAO,KAAK;AAAA,aAEjB;AACH,gBAAQ,OAAO,KAAK,MAAM;AAAA;AAAA;AAG9B,UAAM,MAAM,MAAM,SAAS;AAC3B,WAAO,KAAK,QAAQ;AAAA;AAAA,EAEtB,QAAQ,KAAK;AACX,WAAO,KAAK;AAAA;AAAA,EAEd,WAAW,OAAO,SAAS;AACzB,QAAI,CAAC,OAAO,SAAS,QAAQ;AAC3B,UAAI,MAAM,QAAQ,QAAQ;AACxB,gBAAQ,OAAO,KAAK;AAAA,aAEjB;AACH,gBAAQ,OAAO,KAAK,MAAM;AAAA;AAAA;AAG9B,WAAO,QAAQ,UAAU;AAAA;AAAA;AAK7B,KAAK,UAAU,SAAS;AAMxB,oBAAoB,SAAS;AAAA,EAI3B,YAAY,SAAS;AACnB;AACA,UAAM,UAAU,EAAE,cAAc,WAAW,UAAU,EAAE;AACvD,QAAI,CAAC,QAAQ;AACX,cAAQ,UAAU,IAAI;AACxB,QAAI,OAAO,QAAQ,YAAY,YAAY;AACzC,cAAQ,UAAU,IAAI,QAAQ;AAAA;AAEhC,SAAK,WAAW,QAAQ,QAAQ;AAChC,SAAK,UAAU;AAAA;AAAA,EAEjB,SAAS,OAAO;AACd,QAAI,CAAC,MAAM,QAAQ,QAAQ;AACzB,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,2BAA2B;AAAA;AAEnF,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,IAAI,gBAAgB,gBAAgB;AAAA;AAE5C,WAAO;AAAA;AAAA;AAQX,mBAAmB,SAAS;AAAA,EAC1B,SAAS,OAAO,SAAS;AACvB,QAAI,OAAO,UAAU,YAAY,CAAC,UAAU,OAAO,UAAW,EAAC,WAAW,CAAC,QAAQ,gBAAgB;AACjG,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,0BAA0B;AAAA;AAElF,WAAO;AAAA;AAAA;AAOX,qBAAqB,SAAS;AAAA,EAC5B,SAAS,OAAO,SAAS;AACvB,QAAI,OAAO,UAAU,YAAY,CAAC,UAAU,OAAO,UAAW,EAAC,WAAW,CAAC,QAAQ,gBAAgB;AACjG,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,0BAA0B;AAAA;AAElF,WAAO;AAAA;AAAA;AAOX,qBAAqB,SAAS;AAAA,EAC5B,SAAS,OAAO,SAAS;AACvB,QAAI,OAAO,UAAU,YAAY,CAAC,UAAU,OAAO,OAAO,MAAO,EAAC,WAAW,CAAC,QAAQ,gBAAgB;AACpG,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,4BAA4B;AAAA;AAEpF,WAAO;AAAA;AAAA;AA4CX,sBAAsB,SAAS;AAAA,EAK7B,YAAY,YAAY,QAAQ;AAC9B;AACA,QAAI,OAAO,eAAe;AACxB,mBAAa,IAAI;AACnB,SAAK,aAAa;AAClB,SAAK,SAAS;AAAA;AAAA;AAclB,mBAAmB,SAAS;AAAA,EAI1B,eAAe,MAAM;AACnB;AACA,UAAM,QAAQ,KAAK;AACnB,UAAM,UAAU,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,UAAU,SAAS;AAAA,MAC7E,QAAQ,KAAK,OAAO,CAAC,QAAQ,YAAY;AACvC,eAAO,OAAO,OAAO,MAAM,QAAQ,WAAW,UAAU,CAAC;AAAA,SACxD;AAAA;AAEL,SAAK,SAAS,QAAQ;AACtB,SAAK,UAAU;AAAA;AAAA,EAEjB,SAAS,OAAO;AACd,QAAI,CAAC,KAAK,OAAO,SAAS,QAAQ;AAChC,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,kCAAkC,OAAO,KAAK;AAAA;AAEtG,WAAO;AAAA;AAAA;AAUX,oBAAoB,SAAS;AAAA,EAI3B,YAAY,MAAM;AAChB;AACA,UAAM,UAAU,EAAE,cAAc,QAAQ,OAAO,EAAE;AACjD,SAAK,UAAU;AACf,SAAK,OAAO,OAAO,QAAQ,SAAS,aAAa,IAAI,QAAQ,SAAS,QAAQ;AAAA;AAAA,EAEhF,QAAQ;AACN,WAAO,GAAG,KAAK,KAAK;AAAA;AAAA,EAEtB,SAAS,OAAO;AACd,QAAI,CAAC,MAAM,QAAQ,QAAQ;AACzB,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,2BAA2B;AAAA;AAEnF,WAAO;AAAA;AAAA,SAEF,GAAG,KAAK,MAAM;AACnB,WAAO,eAAe,SAAS,IAAI,gBAAgB;AAAA;AAAA;AAkDvD,uBAAuB,SAAS;AAAA,EAK9B,YAAY,MAAM,MAAM;AACtB;AACA,UAAM,UAAU,EAAE,cAAc,QAAQ,OAAO,EAAE,MAAM;AACvD,SAAK,UAAU;AACf,SAAK,OAAO,QAAQ;AACpB,SAAK,OAAO,QAAQ;AAAA;AAAA,EAEtB,WAAW,OAAO,SAAS;AACzB,WAAO,mBAAmB,QAAQ,OAAO,IAAI,SAAS,aAAa,OAAO;AAAA;AAAA,EAE5E,WAAW,OAAO,SAAS;AACzB,WAAO,mBAAmB,QAAQ,UAAU,IAAI,SAAS,aAAa,OAAO;AAAA;AAAA;AAIjF,SAAS,UAAU,SAAS;AAuB5B,wBAAwB,SAAS;AAAA,EAK/B,YAAY,MAAM,MAAM;AACtB;AACA,UAAM,UAAU,EAAE,cAAc,QAAQ,OAAO,EAAE,MAAM;AACvD,SAAK,UAAU;AACf,SAAK,OAAO,QAAQ;AACpB,SAAK,OAAO,QAAQ;AAAA;AAAA,EAEtB,WAAW,OAAO,SAAS;AACzB,WAAO,mBAAmB,QAAQ,OAAO,IAAI,SAAS,aAAa,OAAO;AAAA;AAAA,EAE5E,WAAW,OAAO,SAAS;AACzB,WAAO,mBAAmB,QAAQ,UAAU,IAAI,SAAS,aAAa,OAAO;AAAA;AAAA;AAKjF,UAAU,UAAU,SAAS;AAO7B,mBAAmB,SAAS;AAAA,EAC1B,SAAS,OAAO;AACd,QAAI,OAAO,UAAU,YAAY,CAAC,UAAU,UAAU,QAAQ;AAC5D,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,0BAA0B;AAAA;AAElF,WAAO;AAAA;AAAA;AASX,mBAAmB,SAAS;AAAA,EAC1B,SAAS,OAAO;AACd,QAAI,OAAO,UAAU,YAAY,CAAC,UAAU,KAAK,QAAQ;AACvD,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,0BAA0B;AAAA;AAElF,WAAO;AAAA;AAAA;AAUX,sBAAsB,SAAS;AAAA,EAC7B,SAAS,OAAO;AACd,QAAI,OAAO,UAAU,YAAY,CAAC,UAAU,aAAa,QAAQ;AAC/D,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,6BAA6B;AAAA;AAErF,WAAO;AAAA;AAAA;AAUX,uBAAuB,SAAS;AAAA,EAC9B,SAAS,OAAO;AACd,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,IAAI,gBAAgB,gBAAgB,KAAK,OAAO,4BAA4B;AAAA;AAEpF,WAAO;AAAA;AAAA;AAiDX,MAAM,YAAY,OAAO,UAAU;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,oBAAoB;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAGF,EAAE,KAAK,WAAW,CAAC,UAAU,SAAS;AAEpC,MAAI,CAAC,OAAO,UAAU,eAAe,KAAK,UAAU,QAAQ;AAC1D,aAAS,QAAQ;AACjB,aAAS,MAAM,SAAS,UAAU,MAAM;AAAA;AAAA;AAI5C,MAAM,aAAa;AACnB,WAAW,WAAW,QAAQ,kCAAkC;AAChE,WAAW,QAAQ,QAAQ,+BAA+B;AAC1D,WAAW,UAAU,QAAQ,iCAAiC;AAC9D,WAAW,SAAS,QAAQ,gCAAgC;AAC5D,WAAW,QAAQ,QAAQ,+BAA+B;AAC1D,WAAW,MAAM,QAAQ,6BAA6B;AACtD,WAAW,YAAY,QAAQ,mCAAmC;AAElE,MAAM,cAAc,OAAO,OAAO;AAElC,WAAW,aAAa,aAAa;AACnC,IAAE,KAAK,WAAW,CAAC,UAAU,QAAQ;AACnC,QAAI,CAAC,SAAS,KAAK;AACjB,eAAS,MAAM,SAAS,UAAU,MAAM;AAAA;AAAA;AAAA;AAM9C,WAAW,aAAa,CAAC,WAAW,GAAG,cAAc;AACnD,IAAE,KAAK,WAAW,CAAC,UAAU,QAAQ;AACnC,cAAU,OAAO,iBAAiB;AAAA;AAAA;AAItC,OAAO,OAAO,WAAW;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/index.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,62,55,59,60,45,58,87,57,72,75,53,62,60,76,79,63,71,53,72,66,47,66,51,70,72,57,73,85,80,3,60,68,70,74,74,72,78,76,68,82,62,82,72,89,115,99,103,91,99,99,101,105,75,97,97,78,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/index.ts"],"sourcesContent":["export { default as BaseError } from './base-error';\n\nexport { default as DatabaseError } from './database-error';\nexport { default as AggregateError } from './aggregate-error';\nexport { default as AssociationError } from './association-error';\nexport { default as BulkRecordError } from './bulk-record-error';\nexport { default as ConnectionError } from './connection-error';\nexport { default as EagerLoadingError } from './eager-loading-error';\nexport { default as EmptyResultError } from './empty-result-error';\nexport { default as InstanceError } from './instance-error';\nexport { default as OptimisticLockError } from './optimistic-lock-error';\nexport { default as QueryError } from './query-error';\nexport { default as SequelizeScopeError } from './sequelize-scope-error';\nexport {\n  default as ValidationError,\n  ValidationErrorItem,\n  ValidationErrorItemOrigin,\n  ValidationErrorItemType\n} from './validation-error';\n\nexport { default as AccessDeniedError } from './connection/access-denied-error';\nexport { default as ConnectionAcquireTimeoutError } from './connection/connection-acquire-timeout-error';\nexport { default as ConnectionRefusedError } from './connection/connection-refused-error';\nexport { default as ConnectionTimedOutError } from './connection/connection-timed-out-error';\nexport { default as HostNotFoundError } from './connection/host-not-found-error';\nexport { default as HostNotReachableError } from './connection/host-not-reachable-error';\nexport { default as InvalidConnectionError } from './connection/invalid-connection-error';\n\nexport { default as ExclusionConstraintError } from './database/exclusion-constraint-error';\nexport { default as ForeignKeyConstraintError } from './database/foreign-key-constraint-error';\nexport { default as TimeoutError } from './database/timeout-error';\nexport { default as UnknownConstraintError } from './database/unknown-constraint-error';\n\nexport { default as UniqueConstraintError } from './validation/unique-constraint-error';\n\nexport { AsyncQueueError } from '../dialects/mssql/async-queue';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqC;AAErC,4BAAyC;AACzC,6BAA0C;AAC1C,+BAA4C;AAC5C,+BAA2C;AAC3C,8BAA2C;AAC3C,iCAA6C;AAC7C,gCAA4C;AAC5C,4BAAyC;AACzC,mCAA+C;AAC/C,yBAAsC;AACtC,mCAA+C;AAC/C,8BAKO;AAEP,iCAA6C;AAC7C,8CAAyD;AACzD,sCAAkD;AAClD,wCAAmD;AACnD,kCAA6C;AAC7C,sCAAiD;AACjD,sCAAkD;AAElD,wCAAoD;AACpD,0CAAqD;AACrD,2BAAwC;AACxC,sCAAkD;AAElD,qCAAiD;AAEjD,yBAAgC;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/base-error.js":{"lineLengths":[38,82,33,25,23,66,2,19,35,3,31,24,19,37,3,1,35,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/base-error.ts"],"sourcesContent":["export interface ErrorOptions {\n  stack?: string;\n}\n\nexport interface CommonErrorProperties {\n  /** The database specific error which triggered this one */\n  readonly parent: Error;\n\n  /** The database specific error which triggered this one */\n  readonly original: Error;\n\n  /** The SQL that triggered the error */\n  readonly sql: string;\n}\n\n/**\n * The Base Error all Sequelize Errors inherit from.\n *\n * Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor.\n * All sequelize errors inherit from the base JS error object.\n *\n * This means that errors can be accessed using `Sequelize.ValidationError`\n */\nabstract class BaseError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = 'SequelizeBaseError';\n  }\n}\n\nexport default BaseError;\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAuBA,wBAAiC,MAAM;AAAA,EACrC,YAAY,SAAkB;AAC5B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,qBAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,39,3,60,55,37,26,34,36,31,38,11,41,25,27,26,65,24,33,5,3,1,43,42,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/database-error.ts"],"sourcesContent":["import BaseError, { CommonErrorProperties, ErrorOptions } from './base-error';\n\nexport interface DatabaseErrorParent\n  extends Error,\n    Pick<CommonErrorProperties, 'sql'> {\n  /** The parameters for the sql that triggered the error */\n  readonly parameters?: object;\n}\n\nexport interface DatabaseErrorSubclassOptions extends ErrorOptions {\n  parent?: DatabaseErrorParent;\n  message?: string;\n}\n\n/**\n * A base class for all database related errors.\n */\nclass DatabaseError\n  extends BaseError\n  implements DatabaseErrorParent, CommonErrorProperties\n{\n  parent: Error;\n  original: Error;\n  sql: string;\n  parameters: object;\n\n  /**\n   * @param parent The database specific error which triggered this one\n   * @param options\n   */\n  constructor(parent: DatabaseErrorParent, options: ErrorOptions = {}) {\n    super(parent.message);\n    this.name = 'SequelizeDatabaseError';\n\n    this.parent = parent;\n    this.original = parent;\n\n    this.sql = parent.sql;\n    this.parameters = parent.parameters ?? {};\n\n    if (options.stack) {\n      this.stack = options.stack;\n    }\n  }\n}\n\nexport default DatabaseError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAA+D;AAiB/D,4BACU,0BAEV;AAAA,EAUE,YAAY,QAA6B,UAAwB,IAAI;AACnE,UAAM,OAAO;AAVf;AACA;AACA;AACA;AAxBF;AAgCI,SAAK,OAAO;AAEZ,SAAK,SAAS;AACd,SAAK,WAAW;AAEhB,SAAK,MAAM,OAAO;AAClB,SAAK,aAAa,aAAO,eAAP,YAAqB;AAEvC,QAAI,QAAQ,OAAO;AACjB,WAAK,QAAQ,QAAQ;AAAA;AAAA;AAAA;AAK3B,IAAO,yBAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/aggregate-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,40,3,60,56,23,12,34,25,33,3,14,39,228,2,19,3,1,45,43,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/aggregate-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * A wrapper for multiple Errors\n *\n * @param errors The aggregated errors that occurred\n */\nclass AggregateError extends BaseError {\n  /** the aggregated errors that occurred */\n  readonly errors: Array<AggregateError | Error>;\n\n  constructor(errors: Array<AggregateError | Error>) {\n    super();\n    this.errors = errors;\n    this.name = 'AggregateError';\n  }\n\n  toString(): string {\n    const message = `AggregateError of:\\n${this.errors\n      .map((error: Error | AggregateError) =>\n        error === this\n          ? '[Circular AggregateError]'\n          : error instanceof AggregateError\n            ? String(error).replace(/\\n$/, '').replace(/^/gm, '  ')\n            : String(error).replace(/^/gm, '    ').substring(2)\n      )\n      .join('\\n')}\\n`;\n    return message;\n  }\n}\n\nexport default AggregateError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAOtB,6BAA6B,0BAAU;AAAA,EAIrC,YAAY,QAAuC;AACjD;AAHO;AAIP,SAAK,SAAS;AACd,SAAK,OAAO;AAAA;AAAA,EAGd,WAAmB;AACjB,UAAM,UAAU;AAAA,EAAuB,KAAK,OACzC,IAAI,CAAC,UACJ,UAAU,OACN,8BACA,iBAAiB,iBACf,OAAO,OAAO,QAAQ,OAAO,IAAI,QAAQ,OAAO,QAChD,OAAO,OAAO,QAAQ,OAAO,QAAQ,UAAU,IAEtD,KAAK;AAAA;AACR,WAAO;AAAA;AAAA;AAIX,IAAO,0BAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/association-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,42,3,60,58,24,19,44,3,1,49,45,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/association-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when an association is improperly constructed (see message for details)\n */\nclass AssociationError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeAssociationError';\n  }\n}\n\nexport default AssociationError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,+BAA+B,0BAAU;AAAA,EACvC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,4BAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/bulk-record-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,42,3,60,57,30,25,34,34,43,24,25,3,1,48,45,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/bulk-record-error.ts"],"sourcesContent":["import type { Model } from '..';\nimport BaseError from './base-error';\n\n/**\n * Thrown when bulk operation fails, it represent per record level error.\n * Used with AggregateError\n *\n * @param error Error for a given record/instance\n * @param record DAO instance that error belongs to\n */\nclass BulkRecordError extends BaseError {\n  errors: Error;\n  record: Model;\n\n  constructor(error: Error, record: Model) {\n    super(error.message);\n    this.name = 'SequelizeBulkRecordError';\n    this.errors = error;\n    this.record = record;\n  }\n}\n\nexport default BulkRecordError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,wBAAsB;AAStB,8BAA8B,0BAAU;AAAA,EAItC,YAAY,OAAc,QAAe;AACvC,UAAM,MAAM;AAJd;AACA;AAIE,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS;AAAA;AAAA;AAIlB,IAAO,4BAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,41,3,60,57,23,40,34,36,43,25,27,3,1,47,44,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/connection-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * A base class for all connection related errors.\n */\nclass ConnectionError extends BaseError {\n  /** The connection specific error which triggered this one */\n  parent: Error;\n  original: Error;\n\n  constructor(parent: Error) {\n    super(parent ? parent.message : '');\n    this.name = 'SequelizeConnectionError';\n    this.parent = parent;\n    this.original = parent;\n  }\n}\n\nexport default ConnectionError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,8BAA8B,0BAAU;AAAA,EAKtC,YAAY,QAAe;AACzB,UAAM,SAAS,OAAO,UAAU;AAJlC;AACA;AAIE,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,WAAW;AAAA;AAAA;AAIpB,IAAO,2BAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/eager-loading-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,44,3,60,59,24,19,45,3,1,52,47,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/eager-loading-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when an include statement is improperly constructed (see message for details)\n */\nclass EagerLoadingError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeEagerLoadingError';\n  }\n}\n\nexport default EagerLoadingError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,gCAAgC,0BAAU;AAAA,EACxC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,8BAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/empty-result-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,43,3,60,58,24,19,44,3,1,50,46,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/empty-result-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when a record was not found, Usually used with rejectOnEmpty mode (see message for details)\n */\nclass EmptyResultError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeEmptyResultError';\n  }\n}\n\nexport default EmptyResultError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,+BAA+B,0BAAU;AAAA,EACvC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,6BAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/instance-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,39,3,60,55,24,19,41,3,1,43,42,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/instance-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when a some problem occurred with Instance methods (see message for details)\n */\nclass InstanceError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeInstanceError';\n  }\n}\n\nexport default InstanceError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,4BAA4B,0BAAU;AAAA,EACpC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,yBAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/optimistic-lock-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,46,3,60,61,24,28,109,27,37,34,33,47,39,33,31,3,1,56,49,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/optimistic-lock-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\ninterface OptimisticLockErrorOptions {\n  message?: string;\n\n  /** The name of the model on which the update was attempted */\n  modelName?: string;\n\n  /** The values of the attempted update */\n  values?: Record<string, unknown>;\n  where?: Record<string, unknown>;\n}\n\n/**\n * Thrown when attempting to update a stale model instance\n */\nclass OptimisticLockError extends BaseError {\n  modelName: string | undefined;\n  values: Record<string, unknown> | undefined;\n  where: Record<string, unknown> | undefined;\n\n  constructor(options: OptimisticLockErrorOptions) {\n    options = options || {};\n    options.message =\n      options.message ||\n      `Attempting to update a stale model instance: ${options.modelName}`;\n\n    super(options.message);\n    this.name = 'SequelizeOptimisticLockError';\n    this.modelName = options.modelName;\n    this.values = options.values;\n    this.where = options.where;\n  }\n}\n\nexport default OptimisticLockError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAgBtB,kCAAkC,0BAAU;AAAA,EAK1C,YAAY,SAAqC;AAC/C,cAAU,WAAW;AACrB,YAAQ,UACN,QAAQ,WACR,gDAAgD,QAAQ;AAE1D,UAAM,QAAQ;AAVhB;AACA;AACA;AASE,SAAK,OAAO;AACZ,SAAK,YAAY,QAAQ;AACzB,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA;AAAA;AAIzB,IAAO,gCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/query-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,36,3,60,52,24,19,38,3,1,37,39,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/query-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when a query is passed invalid options (see message for details)\n */\nclass QueryError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeQueryError';\n  }\n}\n\nexport default QueryError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,yBAAyB,0BAAU;AAAA,EACjC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,sBAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/sequelize-scope-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,46,3,60,61,24,19,38,3,1,56,49,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/sequelize-scope-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Scope Error. Thrown when the sequelize cannot query the specified scope.\n */\nclass SequelizeScopeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeScopeError';\n  }\n}\n\nexport default SequelizeScopeError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,kCAAkC,0BAAU;AAAA,EAC1C,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,gCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/validation-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,49,61,57,41,3,60,78,57,56,54,60,34,34,82,46,42,54,36,36,27,83,35,32,32,33,34,36,40,41,41,33,21,29,49,23,37,45,40,38,15,51,27,14,57,64,62,33,27,9,7,5,3,39,56,3,24,36,3,45,60,61,29,56,69,64,87,5,51,16,5,79,3,1,77,73,57,46,19,34,43,38,31,18,29,66,103,5,24,33,5,3,13,51,32,28,7,21,11,3,1,47,44,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/validation-error.ts"],"sourcesContent":["import type { Model } from '..';\nimport type { ErrorOptions } from './base-error';\nimport BaseError from './base-error';\n\n/**\n * An enum that is used internally by the `ValidationErrorItem` class\n * that maps current `type` strings (as given to ValidationErrorItem.constructor()) to\n * our new `origin` values.\n */\nexport enum ValidationErrorItemType {\n  'notnull violation' = 'CORE',\n  'string violation' = 'CORE',\n  'unique violation' = 'DB',\n  'validation error' = 'FUNCTION',\n}\n\n/**\n * An enum that defines valid ValidationErrorItem `origin` values\n */\nexport enum ValidationErrorItemOrigin {\n  /**\n   * specifies errors that originate from the sequelize \"core\"\n   */\n  CORE = 'CORE',\n\n  /**\n   * specifies validation errors that originate from the storage engine\n   */\n  DB = 'DB',\n\n  /**\n   * specifies validation errors that originate from validator functions (both built-in and custom) defined for a given attribute\n   */\n  FUNCTION = 'FUNCTION',\n}\n\n/**\n * Validation Error Item\n * Instances of this class are included in the `ValidationError.errors` property.\n */\nexport class ValidationErrorItem {\n  /**\n   * @deprecated Will be removed in v7\n   */\n  static TypeStringMap = ValidationErrorItemType;\n\n  /**\n   * @deprecated Will be removed in v7\n   */\n  static Origins = ValidationErrorItemOrigin;\n\n  /**\n   * An error message\n   */\n  readonly message: string;\n\n  /**\n   * The type/origin of the validation error\n   */\n  readonly type: keyof typeof ValidationErrorItemType | null;\n\n  /**\n   * The field that triggered the validation error\n   */\n  readonly path: string | null;\n\n  /**\n   * The value that generated the error\n   */\n  readonly value: string | null;\n\n  readonly origin: keyof typeof ValidationErrorItemOrigin | null;\n\n  /**\n   * The DAO instance that caused the validation error\n   */\n  readonly instance: Model | null;\n\n  /**\n   * A validation \"key\", used for identification\n   */\n  readonly validatorKey: string | null;\n\n  /**\n   * Property name of the BUILT-IN validator function that caused the validation error (e.g. \"in\" or \"len\"), if applicable\n   */\n  readonly validatorName: string | null;\n\n  /**\n   * Parameters used with the BUILT-IN validator function, if applicable\n   */\n  readonly validatorArgs: unknown[];\n\n  /**\n   * Creates a new ValidationError item. Instances of this class are included in the `ValidationError.errors` property.\n   *\n   * @param message An error message\n   * @param type The type/origin of the validation error\n   * @param path The field that triggered the validation error\n   * @param value The value that generated the error\n   * @param instance the DAO instance that caused the validation error\n   * @param validatorKey a validation \"key\", used for identification\n   * @param fnName property name of the BUILT-IN validator function that caused the validation error (e.g. \"in\" or \"len\"), if applicable\n   * @param fnArgs parameters used with the BUILT-IN validator function, if applicable\n   */\n  constructor(\n    message: string,\n    type:\n      | keyof typeof ValidationErrorItemType\n      | keyof typeof ValidationErrorItemOrigin,\n    path: string,\n    value: string,\n    instance: Model,\n    validatorKey: string,\n    fnName: string,\n    fnArgs: unknown[]\n  ) {\n    this.message = message || '';\n    this.type = null;\n    this.path = path || null;\n\n    this.value = value !== undefined ? value : null;\n\n    this.origin = null;\n\n    this.instance = instance || null;\n\n    this.validatorKey = validatorKey || null;\n\n    this.validatorName = fnName || null;\n\n    this.validatorArgs = fnArgs || [];\n\n    if (type) {\n      if (this.isValidationErrorItemOrigin(type)) {\n        this.origin = type;\n      } else {\n        const lowercaseType = this.normalizeString(type);\n        const realType = ValidationErrorItemType[lowercaseType];\n\n        if (realType && ValidationErrorItemOrigin[realType]) {\n          this.origin = realType;\n          this.type = type;\n        }\n      }\n    }\n\n    // This doesn't need captureStackTrace because it's not a subclass of Error\n  }\n\n  private isValidationErrorItemOrigin(\n    origin:\n      | keyof typeof ValidationErrorItemOrigin\n      | keyof typeof ValidationErrorItemType\n  ): origin is keyof typeof ValidationErrorItemOrigin {\n    return (\n      ValidationErrorItemOrigin[\n        origin as keyof typeof ValidationErrorItemOrigin\n      ] !== undefined\n    );\n  }\n\n  private normalizeString<T extends string>(str: T): T {\n    return str.toLowerCase().trim() as T;\n  }\n\n  /**\n   * return a lowercase, trimmed string \"key\" that identifies the validator.\n   *\n   * Note: the string will be empty if the instance has neither a valid `validatorKey` property nor a valid `validatorName` property\n   *\n   * @param useTypeAsNS controls whether the returned value is \"namespace\",\n   *                    this parameter is ignored if the validator's `type` is not one of ValidationErrorItem.Origins\n   * @param NSSeparator a separator string for concatenating the namespace, must be not be empty,\n   *                    defaults to \".\" (fullstop). only used and validated if useTypeAsNS is TRUE.\n   * @throws {Error}    thrown if NSSeparator is found to be invalid.\n   */\n  getValidatorKey(useTypeAsNS: boolean, NSSeparator: string): string {\n    const useTANS = useTypeAsNS === undefined || !!useTypeAsNS;\n    const NSSep = NSSeparator === undefined ? '.' : NSSeparator;\n\n    const type = this.origin;\n    const key = this.validatorKey || this.validatorName;\n    const useNS = useTANS && type && ValidationErrorItemOrigin[type];\n\n    if (useNS && (typeof NSSep !== 'string' || !NSSep.length)) {\n      throw new Error('Invalid namespace separator given, must be a non-empty string');\n    }\n\n    if (!(typeof key === 'string' && key.length)) {\n      return '';\n    }\n\n    return (useNS ? [this.origin, key].join(NSSep) : key).toLowerCase().trim();\n  }\n}\n\n/**\n * Validation Error. Thrown when the sequelize validation has failed. The error contains an `errors` property,\n * which is an array with 1 or more ValidationErrorItems, one for each validation that failed.\n *\n * @param message Error message\n * @param errors Array of ValidationErrorItem objects describing the validation errors\n */\nclass ValidationError extends BaseError {\n  /** Array of ValidationErrorItem objects describing the validation errors */\n  readonly errors: ValidationErrorItem[];\n\n  constructor(\n    message: string,\n    errors: ValidationErrorItem[],\n    options: ErrorOptions = {}\n  ) {\n    super(message);\n    this.name = 'SequelizeValidationError';\n    this.message = 'Validation Error';\n    this.errors = errors || [];\n\n    // Use provided error message if available...\n    if (message) {\n      this.message = message;\n\n      // ... otherwise create a concatenated message out of existing errors.\n    } else if (this.errors.length > 0 && this.errors[0].message) {\n      this.message = this.errors\n        .map(\n          (err: ValidationErrorItem) =>\n            `${err.type || err.origin}: ${err.message}`\n        )\n        .join(',\\n');\n    }\n\n    // Allow overriding the stack if the original stacktrace is uninformative\n    if (options.stack) {\n      this.stack = options.stack;\n    }\n  }\n\n  /**\n   * Gets all validation error items for the path / field specified.\n   *\n   * @param {string} path The path to be checked for error items\n   *\n   * @returns {Array<ValidationErrorItem>} Validation error items for the specified path\n   */\n  get(path: string): ValidationErrorItem[] {\n    return this.errors.reduce<ValidationErrorItem[]>((reduced, error) => {\n      if (error.path === path) {\n        reduced.push(error);\n      }\n      return reduced;\n    }, []);\n  }\n}\n\nexport default ValidationError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,wBAAsB;AAOf,IAAK,0BAAL,kBAAK,6BAAL;AACL,kDAAsB;AACtB,iDAAqB;AACrB,iDAAqB;AACrB,iDAAqB;AAJX;AAAA;AAUL,IAAK,4BAAL,kBAAK,+BAAL;AAIL,uCAAO;AAKP,qCAAK;AAKL,2CAAW;AAdD;AAAA;AAqBL,0BAA0B;AAAA,EAiE/B,YACE,SACA,MAGA,MACA,OACA,UACA,cACA,QACA,QACA;AA9DO;AAKA;AAKA;AAKA;AAEA;AAKA;AAKA;AAKA;AAKA;AA0BP,SAAK,UAAU,WAAW;AAC1B,SAAK,OAAO;AACZ,SAAK,OAAO,QAAQ;AAEpB,SAAK,QAAQ,UAAU,SAAY,QAAQ;AAE3C,SAAK,SAAS;AAEd,SAAK,WAAW,YAAY;AAE5B,SAAK,eAAe,gBAAgB;AAEpC,SAAK,gBAAgB,UAAU;AAE/B,SAAK,gBAAgB,UAAU;AAE/B,QAAI,MAAM;AACR,UAAI,KAAK,4BAA4B,OAAO;AAC1C,aAAK,SAAS;AAAA,aACT;AACL,cAAM,gBAAgB,KAAK,gBAAgB;AAC3C,cAAM,WAAW,wBAAwB;AAEzC,YAAI,YAAY,0BAA0B,WAAW;AACnD,eAAK,SAAS;AACd,eAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAQZ,4BACN,QAGkD;AAClD,WACE,0BACE,YACI;AAAA;AAAA,EAIF,gBAAkC,KAAW;AACnD,WAAO,IAAI,cAAc;AAAA;AAAA,EAc3B,gBAAgB,aAAsB,aAA6B;AACjE,UAAM,UAAU,gBAAgB,UAAa,CAAC,CAAC;AAC/C,UAAM,QAAQ,gBAAgB,SAAY,MAAM;AAEhD,UAAM,OAAO,KAAK;AAClB,UAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,UAAM,QAAQ,WAAW,QAAQ,0BAA0B;AAE3D,QAAI,SAAU,QAAO,UAAU,YAAY,CAAC,MAAM,SAAS;AACzD,YAAM,IAAI,MAAM;AAAA;AAGlB,QAAI,CAAE,QAAO,QAAQ,YAAY,IAAI,SAAS;AAC5C,aAAO;AAAA;AAGT,WAAQ,SAAQ,CAAC,KAAK,QAAQ,KAAK,KAAK,SAAS,KAAK,cAAc;AAAA;AAAA;AArJ/D,cAJF,qBAIE,iBAAgB;AAKhB,cATF,qBASE,WAAU;AA2JnB,8BAA8B,0BAAU;AAAA,EAItC,YACE,SACA,QACA,UAAwB,IACxB;AACA,UAAM;AAPC;AAQP,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,SAAS,UAAU;AAGxB,QAAI,SAAS;AACX,WAAK,UAAU;AAAA,eAGN,KAAK,OAAO,SAAS,KAAK,KAAK,OAAO,GAAG,SAAS;AAC3D,WAAK,UAAU,KAAK,OACjB,IACC,CAAC,QACC,GAAG,IAAI,QAAQ,IAAI,WAAW,IAAI,WAErC,KAAK;AAAA;AAIV,QAAI,QAAQ,OAAO;AACjB,WAAK,QAAQ,QAAQ;AAAA;AAAA;AAAA,EAWzB,IAAI,MAAqC;AACvC,WAAO,KAAK,OAAO,OAA8B,CAAC,SAAS,UAAU;AACnE,UAAI,MAAM,SAAS,MAAM;AACvB,gBAAQ,KAAK;AAAA;AAEf,aAAO;AAAA,OACN;AAAA;AAAA;AAIP,IAAO,2BAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/access-denied-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,44,3,73,65,23,18,45,3,1,52,47,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/connection/access-denied-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database is refused due to insufficient privileges\n */\nclass AccessDeniedError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeAccessDeniedError';\n  }\n}\n\nexport default AccessDeniedError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,gCAAgC,gCAAgB;AAAA,EAC9C,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,8BAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/connection-acquire-timeout-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,57,3,73,77,23,18,57,3,1,77,60,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/connection/connection-acquire-timeout-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when connection is not acquired due to timeout\n */\nclass ConnectionAcquireTimeoutError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeConnectionAcquireTimeoutError';\n  }\n}\n\nexport default ConnectionAcquireTimeoutError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,4CAA4C,gCAAgB;AAAA,EAC1D,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,2CAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/connection-refused-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,49,3,73,70,23,18,50,3,1,62,52,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/connection/connection-refused-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database is refused\n */\nclass ConnectionRefusedError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeConnectionRefusedError';\n  }\n}\n\nexport default ConnectionRefusedError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,qCAAqC,gCAAgB;AAAA,EACnD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/connection-timed-out-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,51,3,73,71,23,18,51,3,1,65,54,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/connection/connection-timed-out-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database times out\n */\nclass ConnectionTimedOutError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeConnectionTimedOutError';\n  }\n}\n\nexport default ConnectionTimedOutError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,sCAAsC,gCAAgB;AAAA,EACpD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,qCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/host-not-found-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,45,3,73,65,23,18,45,3,1,53,48,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/connection/host-not-found-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database has a hostname that was not found\n */\nclass HostNotFoundError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeHostNotFoundError';\n  }\n}\n\nexport default HostNotFoundError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,gCAAgC,gCAAgB;AAAA,EAC9C,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,+BAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/host-not-reachable-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,49,3,73,69,23,18,49,3,1,61,52,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/connection/host-not-reachable-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database has a hostname that was not reachable\n */\nclass HostNotReachableError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeHostNotReachableError';\n  }\n}\n\nexport default HostNotReachableError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,oCAAoC,gCAAgB;AAAA,EAClD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/connection/invalid-connection-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,49,3,73,70,23,18,50,3,1,62,52,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/connection/invalid-connection-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database has invalid values for any of the connection parameters\n */\nclass InvalidConnectionError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeInvalidConnectionError';\n  }\n}\n\nexport default InvalidConnectionError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,qCAAqC,gCAAgB;AAAA,EACnD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database/exclusion-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,51,3,69,70,24,28,74,52,38,34,33,52,67,41,33,31,3,1,66,54,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/database/exclusion-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\ninterface ExclusionConstraintErrorOptions {\n  constraint?: string;\n  fields?: Record<string, string | number>;\n  table?: string;\n}\n\n/**\n * Thrown when an exclusion constraint is violated in the database\n */\nclass ExclusionConstraintError extends DatabaseError implements ExclusionConstraintErrorOptions {\n  constraint: string | undefined;\n  fields: Record<string, string | number> | undefined;\n  table: string | undefined;\n\n  constructor(\n    options: DatabaseErrorSubclassOptions & ExclusionConstraintErrorOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeExclusionConstraintError';\n\n    this.message = options.message || options.parent.message || '';\n    this.constraint = options.constraint;\n    this.fields = options.fields;\n    this.table = options.table;\n  }\n}\n\nexport default ExclusionConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,4BAA4D;AAW5D,uCAAuC,8BAAyD;AAAA,EAK9F,YACE,SACA;AACA,cAAU,WAAW;AACrB,YAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AAEjE,UAAM,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAVzC;AACA;AACA;AASE,SAAK,OAAO;AAEZ,SAAK,UAAU,QAAQ,WAAW,QAAQ,OAAO,WAAW;AAC5D,SAAK,aAAa,QAAQ;AAC1B,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA;AAAA;AAIzB,IAAO,qCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database/foreign-key-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,43,53,3,69,64,41,39,27,27,71,24,28,74,52,33,34,33,33,35,53,81,33,31,31,31,35,3,1,69,56,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/database/foreign-key-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\nexport enum RelationshipType {\n  parent = 'parent',\n  child = 'child',\n}\n\ninterface ForeignKeyConstraintErrorOptions {\n  table?: string;\n  fields?: { [field: string]: string };\n  value?: unknown;\n  index?: string;\n  reltype?: RelationshipType;\n}\n\n/**\n * Thrown when a foreign key constraint is violated in the database\n */\nclass ForeignKeyConstraintError extends DatabaseError {\n  table: string | undefined;\n  fields: { [field: string]: string } | undefined;\n  value: unknown;\n  index: string | undefined;\n  reltype: RelationshipType | undefined;\n\n  constructor(\n    options: ForeignKeyConstraintErrorOptions & DatabaseErrorSubclassOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeForeignKeyConstraintError';\n\n    this.message =\n      options.message || options.parent.message || 'Database Error';\n    this.fields = options.fields;\n    this.table = options.table;\n    this.value = options.value;\n    this.index = options.index;\n    this.reltype = options.reltype;\n  }\n}\n\nexport default ForeignKeyConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA4D;AAErD,IAAK,mBAAL,kBAAK,sBAAL;AACL,gCAAS;AACT,+BAAQ;AAFE;AAAA;AAgBZ,wCAAwC,8BAAc;AAAA,EAOpD,YACE,SACA;AACA,cAAU,WAAW;AACrB,YAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AAEjE,UAAM,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAZzC;AACA;AACA;AACA;AACA;AASE,SAAK,OAAO;AAEZ,SAAK,UACH,QAAQ,WAAW,QAAQ,OAAO,WAAW;AAC/C,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,QAAQ;AACrB,SAAK,UAAU,QAAQ;AAAA;AAAA;AAI3B,IAAO,uCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database/timeout-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,38,3,69,58,37,27,40,3,1,41,41,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/database/timeout-error.ts"],"sourcesContent":["import { ErrorOptions } from '../base-error';\nimport DatabaseError, { DatabaseErrorParent } from '../database-error';\n\n/**\n * Thrown when a database query times out because of a deadlock\n */\nclass TimeoutError extends DatabaseError {\n  constructor(parent: DatabaseErrorParent, options: ErrorOptions = {}) {\n    super(parent, options);\n    this.name = 'SequelizeTimeoutError';\n  }\n}\n\nexport default TimeoutError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,4BAAmD;AAKnD,2BAA2B,8BAAc;AAAA,EACvC,YAAY,QAA6B,UAAwB,IAAI;AACnE,UAAM,QAAQ;AACd,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,wBAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/database/unknown-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,49,3,69,68,24,28,74,52,38,34,33,50,80,41,33,31,3,1,62,52,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/database/unknown-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\ninterface UnknownConstraintErrorOptions {\n  constraint?: string;\n  fields?: Record<string, string | number>;\n  table?: string;\n}\n\n/**\n * Thrown when constraint name is not found in the database\n */\nclass UnknownConstraintError extends DatabaseError implements UnknownConstraintErrorOptions {\n  constraint: string | undefined;\n  fields: Record<string, string | number> | undefined;\n  table: string | undefined;\n\n  constructor(\n    options: UnknownConstraintErrorOptions & DatabaseErrorSubclassOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeUnknownConstraintError';\n\n    this.message = options.message || 'The specified constraint does not exist';\n    this.constraint = options.constraint;\n    this.fields = options.fields;\n    this.table = options.table;\n  }\n}\n\nexport default UnknownConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,4BAA4D;AAW5D,qCAAqC,8BAAuD;AAAA,EAK1F,YACE,SACA;AACA,cAAU,WAAW;AACrB,YAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AAEjE,UAAM,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAVzC;AACA;AACA;AASE,SAAK,OAAO;AAEZ,SAAK,UAAU,QAAQ,WAAW;AAClC,SAAK,aAAa,QAAQ;AAC1B,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA;AAAA;AAIzB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/errors/validation/unique-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,48,3,73,69,24,19,45,93,86,61,69,34,36,34,31,49,58,33,35,34,3,1,60,51,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/errors/validation/unique-constraint-error.ts"],"sourcesContent":["import { CommonErrorProperties, ErrorOptions } from '../base-error';\nimport ValidationError, { ValidationErrorItem } from '../validation-error';\n\ninterface UniqueConstraintErrorParent\n  extends Error,\n    Pick<CommonErrorProperties, 'sql'> {}\n\nexport interface UniqueConstraintErrorOptions extends ErrorOptions {\n  parent?: UniqueConstraintErrorParent;\n  original?: UniqueConstraintErrorParent;\n  errors?: ValidationErrorItem[];\n  fields?: Record<string, unknown>;\n  message?: string;\n}\n\n/**\n * Thrown when a unique constraint is violated in the database\n */\nclass UniqueConstraintError extends ValidationError implements CommonErrorProperties {\n  readonly parent: UniqueConstraintErrorParent;\n  readonly original: UniqueConstraintErrorParent;\n  readonly fields: Record<string, unknown>;\n  readonly sql: string;\n\n  constructor(options: UniqueConstraintErrorOptions) {\n    options = options ?? {};\n    options.parent = options.parent ?? { sql: '', name: '', message: '' };\n    options.message =\n      options.message || options.parent.message || 'Validation Error';\n    options.errors = options.errors ?? [];\n    super(options.message, options.errors, { stack: options.stack });\n\n    this.name = 'SequelizeUniqueConstraintError';\n    this.fields = options.fields ?? {};\n    this.parent = options.parent;\n    this.original = options.parent;\n    this.sql = options.parent.sql;\n  }\n}\n\nexport default UniqueConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,8BAAqD;AAiBrD,oCAAoC,gCAAiD;AAAA,EAMnF,YAAY,SAAuC;AAxBrD;AAyBI,cAAU,4BAAW;AACrB,YAAQ,SAAS,cAAQ,WAAR,YAAkB,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AACjE,YAAQ,UACN,QAAQ,WAAW,QAAQ,OAAO,WAAW;AAC/C,YAAQ,SAAS,cAAQ,WAAR,YAAkB;AACnC,UAAM,QAAQ,SAAS,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAXjD;AACA;AACA;AACA;AAUP,SAAK,OAAO;AACZ,SAAK,SAAS,cAAQ,WAAR,YAAkB;AAChC,SAAK,SAAS,QAAQ;AACtB,SAAK,WAAW,QAAQ;AACxB,SAAK,MAAM,QAAQ,OAAO;AAAA;AAAA;AAI9B,IAAO,kCAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mssql/async-queue.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,41,36,3,71,83,57,24,19,43,3,1,18,17,36,34,41,38,24,32,6,3,11,23,151,3,26,45,48,36,26,147,9,53,9,7,3,1,37,39,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/mssql/async-queue.ts"],"sourcesContent":["import BaseError from '../../errors/base-error';\nimport ConnectionError from '../../errors/connection-error';\n\n/**\n * Thrown when a connection to a database is closed while an operation is in progress\n */\nexport class AsyncQueueError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeAsyncQueueError';\n  }\n}\n\nclass AsyncQueue {\n  previous: Promise<unknown>;\n  closed: boolean;\n  rejectCurrent: (reason?: any) => void;\n\n  constructor() {\n    this.previous = Promise.resolve();\n    this.closed = false;\n    this.rejectCurrent = () => {\n      /** do nothing */\n    };\n  }\n\n  close() {\n    this.closed = true;\n    this.rejectCurrent(\n      new ConnectionError(\n        new AsyncQueueError(\n          'the connection was closed before this query could finish executing'\n        )\n      )\n    );\n  }\n\n  enqueue(asyncFunction: (...args: any[]) => Promise<unknown>) {\n    // This outer promise might seems superflous since down below we return asyncFunction().then(resolve, reject).\n    // However, this ensures that this.previous will never be a rejected promise so the queue will\n    // always keep going, while still communicating rejection from asyncFunction to the user.\n    return new Promise((resolve, reject) => {\n      this.previous = this.previous.then(() => {\n        this.rejectCurrent = reject;\n        if (this.closed) {\n          return reject(\n            new ConnectionError(\n              new AsyncQueueError(\n                'the connection was closed before this query could be executed'\n              )\n            )\n          );\n        }\n        return asyncFunction().then(resolve, reject);\n      });\n    });\n  }\n}\n\nexport default AsyncQueue;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsB;AACtB,8BAA4B;AAKrB,8BAA8B,0BAAU;AAAA,EAC7C,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,iBAAiB;AAAA,EAKf,cAAc;AAJd;AACA;AACA;AAGE,SAAK,WAAW,QAAQ;AACxB,SAAK,SAAS;AACd,SAAK,gBAAgB,MAAM;AAAA;AAAA;AAAA,EAK7B,QAAQ;AACN,SAAK,SAAS;AACd,SAAK,cACH,IAAI,gCACF,IAAI,gBACF;AAAA;AAAA,EAMR,QAAQ,eAAqD;AAI3D,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,WAAW,KAAK,SAAS,KAAK,MAAM;AACvC,aAAK,gBAAgB;AACrB,YAAI,KAAK,QAAQ;AACf,iBAAO,OACL,IAAI,gCACF,IAAI,gBACF;AAAA;AAKR,eAAO,gBAAgB,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAM7C,IAAO,sBAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/validator-extras.js":{"lineLengths":[13,28,52,33,20,20,20,16,4,17,39,4,22,40,4,14,27,4,15,29,4,15,29,4,22,35,4,34,14,76,47,5,30,4,37,48,4,18,97,4,17,35,42,4,17,35,42,4,32,50,4,23,40,4,26,37,4,31,47,3,2,32,78,115,2,35,40,2,40,26,3,37,41,40,22,17,3,32,46,2,30,44,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/utils/validator-extras.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst validator = _.cloneDeep(require('validator'));\nconst moment = require('moment');\n\nconst extensions = {\n  extend(name, fn) {\n    this[name] = fn;\n\n    return this;\n  },\n  notEmpty(str) {\n    return !str.match(/^[\\s\\t\\r\\n]*$/);\n  },\n  len(str, min, max) {\n    return this.isLength(str, min, max);\n  },\n  isUrl(str) {\n    return this.isURL(str);\n  },\n  isIPv6(str) {\n    return this.isIP(str, 6);\n  },\n  isIPv4(str) {\n    return this.isIP(str, 4);\n  },\n  notIn(str, values) {\n    return !this.isIn(str, values);\n  },\n  regex(str, pattern, modifiers) {\n    str += '';\n    if (Object.prototype.toString.call(pattern).slice(8, -1) !== 'RegExp') {\n      pattern = new RegExp(pattern, modifiers);\n    }\n    return str.match(pattern);\n  },\n  notRegex(str, pattern, modifiers) {\n    return !this.regex(str, pattern, modifiers);\n  },\n  isDecimal(str) {\n    return str !== '' && !!str.match(/^(?:-?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][+-]?(?:[0-9]+))?$/);\n  },\n  min(str, val) {\n    const number = parseFloat(str);\n    return isNaN(number) || number >= val;\n  },\n  max(str, val) {\n    const number = parseFloat(str);\n    return isNaN(number) || number <= val;\n  },\n  not(str, pattern, modifiers) {\n    return this.notRegex(str, pattern, modifiers);\n  },\n  contains(str, elem) {\n    return !!elem && str.includes(elem);\n  },\n  notContains(str, elem) {\n    return !this.contains(str, elem);\n  },\n  is(str, pattern, modifiers) {\n    return this.regex(str, pattern, modifiers);\n  }\n};\nexports.extensions = extensions;\n\n// instance based validators\nvalidator.isImmutable = function(value, validatorArgs, field, modelInstance) {\n  return modelInstance.isNewRecord || modelInstance.dataValues[field] === modelInstance._previousDataValues[field];\n};\n\n// extra validators\nvalidator.notNull = function(val) {\n  return val !== null && val !== undefined;\n};\n\n// https://github.com/chriso/validator.js/blob/6.2.0/validator.js\n_.forEach(extensions, (extend, key) => {\n  validator[key] = extend;\n});\n\n// map isNull to isEmpty\n// https://github.com/chriso/validator.js/commit/e33d38a26ee2f9666b319adb67c7fc0d3dea7125\nvalidator.isNull = validator.isEmpty;\n\n// isDate removed in 7.0.0\n// https://github.com/chriso/validator.js/commit/095509fc707a4dc0e99f85131df1176ad6389fc9\nvalidator.isDate = function(dateString) {\n  // avoid http://momentjs.com/guides/#/warnings/js-date/\n  // by doing a preliminary check on `dateString`\n  const parsed = Date.parse(dateString);\n  if (isNaN(parsed)) {\n    // fail if we can't parse it\n    return false;\n  }\n  // otherwise convert to ISO 8601 as moment prefers\n  // http://momentjs.com/docs/#/parsing/string/\n  const date = new Date(parsed);\n  return moment(date.toISOString()).isValid();\n};\n\nexports.validator = validator;\n"],"mappings":";AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,YAAY,EAAE,UAAU,QAAQ;AACtC,MAAM,SAAS,QAAQ;AAEvB,MAAM,aAAa;AAAA,EACjB,OAAO,MAAM,IAAI;AACf,SAAK,QAAQ;AAEb,WAAO;AAAA;AAAA,EAET,SAAS,KAAK;AACZ,WAAO,CAAC,IAAI,MAAM;AAAA;AAAA,EAEpB,IAAI,KAAK,KAAK,KAAK;AACjB,WAAO,KAAK,SAAS,KAAK,KAAK;AAAA;AAAA,EAEjC,MAAM,KAAK;AACT,WAAO,KAAK,MAAM;AAAA;AAAA,EAEpB,OAAO,KAAK;AACV,WAAO,KAAK,KAAK,KAAK;AAAA;AAAA,EAExB,OAAO,KAAK;AACV,WAAO,KAAK,KAAK,KAAK;AAAA;AAAA,EAExB,MAAM,KAAK,QAAQ;AACjB,WAAO,CAAC,KAAK,KAAK,KAAK;AAAA;AAAA,EAEzB,MAAM,KAAK,SAAS,WAAW;AAC7B,WAAO;AACP,QAAI,OAAO,UAAU,SAAS,KAAK,SAAS,MAAM,GAAG,QAAQ,UAAU;AACrE,gBAAU,IAAI,OAAO,SAAS;AAAA;AAEhC,WAAO,IAAI,MAAM;AAAA;AAAA,EAEnB,SAAS,KAAK,SAAS,WAAW;AAChC,WAAO,CAAC,KAAK,MAAM,KAAK,SAAS;AAAA;AAAA,EAEnC,UAAU,KAAK;AACb,WAAO,QAAQ,MAAM,CAAC,CAAC,IAAI,MAAM;AAAA;AAAA,EAEnC,IAAI,KAAK,KAAK;AACZ,UAAM,SAAS,WAAW;AAC1B,WAAO,MAAM,WAAW,UAAU;AAAA;AAAA,EAEpC,IAAI,KAAK,KAAK;AACZ,UAAM,SAAS,WAAW;AAC1B,WAAO,MAAM,WAAW,UAAU;AAAA;AAAA,EAEpC,IAAI,KAAK,SAAS,WAAW;AAC3B,WAAO,KAAK,SAAS,KAAK,SAAS;AAAA;AAAA,EAErC,SAAS,KAAK,MAAM;AAClB,WAAO,CAAC,CAAC,QAAQ,IAAI,SAAS;AAAA;AAAA,EAEhC,YAAY,KAAK,MAAM;AACrB,WAAO,CAAC,KAAK,SAAS,KAAK;AAAA;AAAA,EAE7B,GAAG,KAAK,SAAS,WAAW;AAC1B,WAAO,KAAK,MAAM,KAAK,SAAS;AAAA;AAAA;AAGpC,QAAQ,aAAa;AAGrB,UAAU,cAAc,SAAS,OAAO,eAAe,OAAO,eAAe;AAC3E,SAAO,cAAc,eAAe,cAAc,WAAW,WAAW,cAAc,oBAAoB;AAAA;AAI5G,UAAU,UAAU,SAAS,KAAK;AAChC,SAAO,QAAQ,QAAQ,QAAQ;AAAA;AAIjC,EAAE,QAAQ,YAAY,CAAC,QAAQ,QAAQ;AACrC,YAAU,OAAO;AAAA;AAKnB,UAAU,SAAS,UAAU;AAI7B,UAAU,SAAS,SAAS,YAAY;AAGtC,QAAM,SAAS,KAAK,MAAM;AAC1B,MAAI,MAAM,SAAS;AAEjB,WAAO;AAAA;AAIT,QAAM,OAAO,IAAI,KAAK;AACtB,SAAO,OAAO,KAAK,eAAe;AAAA;AAGpC,QAAQ,YAAY;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/logger.js":{"lineLengths":[29,38,55,51,55,41,51,57,160,32,33,35,40,26,46,37,42,5,11,2,82,38,18,26,69,34,44,51,71,36,5,16,2,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,23,22,3,48,46,14,24,34,83,34,13,13,3,17,65,3,18,47,24,14,7,3,22,71,3,1,28,34,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/utils/logger.ts"],"sourcesContent":["/**\n * @file Sequelize module for debug and deprecation messages.\n * It require a `context` for which messages will be printed.\n *\n * @module logging\n * @access package\n */\nimport nodeDebug from 'debug';\nimport util from 'util';\n\n/**\n * The configuration for sequelize's logging interface.\n *\n * @access package\n */\nexport interface LoggerConfig {\n  /**\n   * The context which the logger should log in.\n   *\n   * @default 'sequelize'\n   */\n  context?: string;\n}\n\nexport class Logger {\n  protected config: LoggerConfig;\n\n  constructor({ context = 'sequelize', ...rest }: Partial<LoggerConfig> = {}) {\n    this.config = {\n      context,\n      ...rest\n    };\n  }\n\n  /**\n   * Logs a warning in the logger's context.\n   *\n   * @param message The message of the warning.\n   */\n  warn(message: string): void {\n    console.warn(`(${this.config.context}) Warning: ${message}`);\n  }\n\n  /**\n   * Uses node's util.inspect to stringify a value.\n   *\n   * @param value The value which should be inspected.\n   * @returns The string of the inspected value.\n   */\n  inspect(value: unknown): string {\n    return util.inspect(value, {\n      showHidden: false,\n      depth: 1\n    });\n  }\n\n  /**\n   * Gets a debugger for a context.\n   *\n   * @param name The name of the context.\n   * @returns A debugger interace which can be used to debug.\n   */\n  debugContext(name: string): nodeDebug.Debugger {\n    return nodeDebug(`${this.config.context}:${name}`);\n  }\n}\n\nexport const logger = new Logger();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAOA,mBAAsB;AACtB,kBAAiB;AAgBV,aAAa;AAAA,EAGlB,YAAY,KAA4D,IAAI;AAFlE;AAEE,iBAAE,YAAU,gBAAZ,IAA4B,iBAA5B,IAA4B,CAA1B;AACZ,SAAK,SAAS;AAAA,MACZ;AAAA,OACG;AAAA;AAAA,EASP,KAAK,SAAuB;AAC1B,YAAQ,KAAK,IAAI,KAAK,OAAO,qBAAqB;AAAA;AAAA,EASpD,QAAQ,OAAwB;AAC9B,WAAO,oBAAK,QAAQ,OAAO;AAAA,MACzB,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA;AAAA,EAUX,aAAa,MAAkC;AAC7C,WAAO,0BAAU,GAAG,KAAK,OAAO,WAAW;AAAA;AAAA;AAIxC,MAAM,SAAS,IAAI;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/class-to-invokable.js":{"lineLengths":[38,82,33,25,23,66,2,19,42,3,34,27,36,32,6,30,32,5,5,1,46,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/utils/class-to-invokable.ts"],"sourcesContent":["/**\n * Utility type for a class which can be called in addion to being used as a constructor.\n */\ninterface Invokeable<Args extends Array<any>, Instance> {\n  (...args: Args): Instance;\n  new (...args: Args): Instance;\n}\n\n/**\n * Wraps a constructor to not need the `new` keyword using a proxy.\n * Only used for data types.\n *\n * @param {ProxyConstructor} Class The class instance to wrap as invocable.\n * @returns {Proxy} Wrapped class instance.\n * @private\n */\nexport function classToInvokable<Args extends Array<any>, Instance extends object>(\n  Class: new (...args: Args) => Instance\n): Invokeable<Args, Instance> {\n  return new Proxy<Invokeable<Args, Instance>>(Class as any, {\n    apply(_target, _thisArg, args: Args) {\n      return new Class(...args);\n    },\n    construct(_target, args: Args) {\n      return new Class(...args);\n    }\n  });\n}\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAgBO,0BACL,OAC4B;AAC5B,SAAO,IAAI,MAAkC,OAAc;AAAA,IACzD,MAAM,SAAS,UAAU,MAAY;AACnC,aAAO,IAAI,MAAM,GAAG;AAAA;AAAA,IAEtB,UAAU,SAAS,MAAY;AAC7B,aAAO,IAAI,MAAM,GAAG;AAAA;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/join-sql-fragments.js":{"lineLengths":[38,160,82,33,25,23,66,2,42,72,15,2,19,53,42,3,39,28,1,40,25,1,39,67,64,28,12,34,5,12,59,12,6,6,31,14,12,1,34,25,14,47,56,34,40,5,20,5,42,51,152,5,3,59,67,52,1,47,40,19,32,36,21,29,40,3,1,46,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/utils/join-sql-fragments.ts"],"sourcesContent":["import { SQLFragment, TruthySQLFragment } from '../generic/sql-fragment';\n\nfunction doesNotWantLeadingSpace(str: string): boolean {\n  return /^[;,)]/.test(str);\n}\nfunction doesNotWantTrailingSpace(str: string): boolean {\n  return /\\($/.test(str);\n}\n\n/**\n * Joins an array of strings with a single space between them,\n * except for:\n *\n * - Strings starting with ';', ',' and ')', which do not get a leading space.\n * - Strings ending with '(', which do not get a trailing space.\n *\n * @param {string[]} parts\n * @returns {string}\n * @private\n */\nfunction singleSpaceJoinHelper(parts: string[]): string {\n  return parts.reduce(\n    ({ skipNextLeadingSpace, result }, part) => {\n      if (skipNextLeadingSpace || doesNotWantLeadingSpace(part)) {\n        result += part.trim();\n      } else {\n        result += ` ${part.trim()}`;\n      }\n      return {\n        skipNextLeadingSpace: doesNotWantTrailingSpace(part),\n        result\n      };\n    },\n    {\n      skipNextLeadingSpace: true,\n      result: ''\n    }\n  ).result;\n}\n\n/**\n * Joins an array with a single space, auto trimming when needed.\n *\n * Certain elements do not get leading/trailing spaces.\n *\n * @param {SQLFragment[]} array The array to be joined. Falsy values are skipped. If an\n * element is another array, this function will be called recursively on that array.\n * Otherwise, if a non-string, non-falsy value is present, a TypeError will be thrown.\n *\n * @returns {string} The joined string.\n *\n * @private\n */\nexport function joinSQLFragments(array: SQLFragment[]): string {\n  if (array.length === 0) return '';\n\n  const truthyArray: TruthySQLFragment[] = array.filter(\n    (x): x is string | SQLFragment[] => !!x\n  );\n  const flattenedArray: string[] = truthyArray.map(\n    (fragment: TruthySQLFragment) => {\n      if (Array.isArray(fragment)) {\n        return joinSQLFragments(fragment);\n      }\n\n      return fragment;\n    }\n  );\n\n  // Ensure strings\n  for (const fragment of flattenedArray) {\n    if (fragment && typeof fragment !== 'string') {\n      throw new JoinSQLFragmentsError(\n        flattenedArray,\n        fragment,\n        `Tried to construct a SQL string with a non-string, non-falsy fragment (${fragment}).`\n      );\n    }\n  }\n\n  // Trim fragments\n  const trimmedArray = flattenedArray.map(x => x.trim());\n\n  // Skip full-whitespace fragments (empty after the above trim)\n  const nonEmptyStringArray = trimmedArray.filter(x => x !== '');\n\n  return singleSpaceJoinHelper(nonEmptyStringArray);\n}\n\nexport class JoinSQLFragmentsError extends TypeError {\n  args: SQLFragment[];\n  fragment: any; // iirc this error is only used when we get an invalid fragment.\n\n  constructor(args: SQLFragment[], fragment: any, message: string) {\n    super(message);\n    \n    this.args = args;\n    this.fragment = fragment;\n    this.name = 'JoinSQLFragmentsError';\n  }\n}\n"],"mappings":";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA,iCAAiC,KAAsB;AACrD,SAAO,SAAS,KAAK;AAAA;AAEvB,kCAAkC,KAAsB;AACtD,SAAO,MAAM,KAAK;AAAA;AAcpB,+BAA+B,OAAyB;AACtD,SAAO,MAAM,OACX,CAAC,EAAE,sBAAsB,UAAU,SAAS;AAC1C,QAAI,wBAAwB,wBAAwB,OAAO;AACzD,gBAAU,KAAK;AAAA,WACV;AACL,gBAAU,IAAI,KAAK;AAAA;AAErB,WAAO;AAAA,MACL,sBAAsB,yBAAyB;AAAA,MAC/C;AAAA;AAAA,KAGJ;AAAA,IACE,sBAAsB;AAAA,IACtB,QAAQ;AAAA,KAEV;AAAA;AAgBG,0BAA0B,OAA8B;AAC7D,MAAI,MAAM,WAAW;AAAG,WAAO;AAE/B,QAAM,cAAmC,MAAM,OAC7C,CAAC,MAAmC,CAAC,CAAC;AAExC,QAAM,iBAA2B,YAAY,IAC3C,CAAC,aAAgC;AAC/B,QAAI,MAAM,QAAQ,WAAW;AAC3B,aAAO,iBAAiB;AAAA;AAG1B,WAAO;AAAA;AAKX,aAAW,YAAY,gBAAgB;AACrC,QAAI,YAAY,OAAO,aAAa,UAAU;AAC5C,YAAM,IAAI,sBACR,gBACA,UACA,0EAA0E;AAAA;AAAA;AAMhF,QAAM,eAAe,eAAe,IAAI,OAAK,EAAE;AAG/C,QAAM,sBAAsB,aAAa,OAAO,OAAK,MAAM;AAE3D,SAAO,sBAAsB;AAAA;AAGxB,oCAAoC,UAAU;AAAA,EAInD,YAAY,MAAqB,UAAe,SAAiB;AAC/D,UAAM;AAJR;AACA;AAKE,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,OAAO;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/postgres/data-types.js":{"lineLengths":[13,28,27,33,111,54,98,142,32,39,34,34,5,3,43,43,43,49,51,43,45,43,45,32,31,26,7,32,27,7,46,5,31,95,40,44,37,28,11,38,29,11,9,38,7,19,5,25,33,24,7,34,25,7,19,5,3,47,43,25,19,5,3,49,41,13,25,23,7,27,5,3,48,37,13,25,98,30,7,20,5,3,43,41,25,19,5,3,47,37,13,25,23,7,27,5,3,53,43,13,23,5,22,47,59,27,9,40,103,9,40,66,9,7,19,5,3,46,46,37,13,40,5,21,54,37,7,18,5,32,31,26,7,32,27,7,46,5,31,134,40,44,37,28,11,38,29,11,9,31,7,19,5,3,50,43,25,20,44,5,3,46,45,25,20,44,5,3,47,43,25,20,44,5,3,41,31,4,46,41,25,20,44,5,3,45,37,25,20,44,5,3,45,41,25,20,44,5,3,47,39,35,30,27,101,30,37,32,7,27,84,32,7,27,84,32,7,5,3,21,37,13,25,107,30,7,21,5,18,30,5,3,44,45,13,28,22,34,24,36,9,22,7,20,5,25,42,65,5,32,76,5,32,63,5,3,51,47,13,31,22,34,24,36,9,22,7,20,5,25,42,65,5,32,76,5,31,63,5,3,53,13,41,19,14,20,37,7,5,19,20,37,7,37,5,23,39,5,32,51,5,25,20,37,7,33,5,3,34,47,39,29,35,63,7,45,62,88,73,54,11,30,9,74,23,9,45,64,9,37,9,53,48,5,33,49,35,50,7,26,5,33,49,35,67,7,38,5,13,82,5,18,83,5,61,48,5,3,35,33,36,15,27,26,24,28,25,6,16,22,25,26,23,20,5,4,43,71,34,74,48,7,45,52,41,23,9,7,35,13,4,79,65,20,43,33,48,57,50,110,127,52,14,30,7,5,15,4,79,59,4,37,25,19,5,3,41,10,12,9,11,9,9,11,12,13,12,11,12,9,13,9,31,10,13,14,11,10,8,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/postgres/data-types.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst wkx = require('wkx');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'http://www.postgresql.org/docs/9.4/static/datatype.html');\n\n  /**\n   * Removes unsupported Postgres options, i.e., LENGTH, UNSIGNED and ZEROFILL, for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._length || dataType.options.length || dataType._unsigned || dataType._zerofill) {\n      warn(`PostgresSQL does not support '${dataType.key}' with LENGTH, UNSIGNED or ZEROFILL. Plain '${dataType.key}' will be used instead.`);\n      dataType._length = undefined;\n      dataType.options.length = undefined;\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * types:\n   * {\n   *   oids: [oid],\n   *   array_oids: [oid]\n   * }\n   *\n   * @see oid here https://github.com/lib/pq/blob/master/oid/types.go\n   */\n\n  BaseTypes.UUID.types.postgres = ['uuid'];\n  BaseTypes.CIDR.types.postgres = ['cidr'];\n  BaseTypes.INET.types.postgres = ['inet'];\n  BaseTypes.MACADDR.types.postgres = ['macaddr'];\n  BaseTypes.TSVECTOR.types.postgres = ['tsvector'];\n  BaseTypes.JSON.types.postgres = ['json'];\n  BaseTypes.JSONB.types.postgres = ['jsonb'];\n  BaseTypes.TIME.types.postgres = ['time'];\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    _stringify(value, options) {\n      if (value === Infinity) {\n        return 'Infinity';\n      }\n      if (value === -Infinity) {\n        return '-Infinity';\n      }\n      return super._stringify(value, options);\n    }\n    _sanitize(value, options) {\n      if ((!options || options && !options.raw) && value !== Infinity && value !== -Infinity) {\n        if (typeof value === 'string') {\n          const lower = value.toLowerCase();\n          if (lower === 'infinity') {\n            return Infinity;\n          }\n          if (lower === '-infinity') {\n            return -Infinity;\n          }\n        }\n        return super._sanitize(value);\n      }\n      return value;\n    }\n    static parse(value) {\n      if (value === 'infinity') {\n        return Infinity;\n      }\n      if (value === '-infinity') {\n        return -Infinity;\n      }\n      return value;\n    }\n  }\n\n  BaseTypes.DATEONLY.types.postgres = ['date'];\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    static parse(value) {\n      return value;\n    }\n  }\n\n  // numeric\n  BaseTypes.DECIMAL.types.postgres = ['numeric'];\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (this._binary) {\n        return 'BYTEA';\n      }\n      return super.toSql();\n    }\n  }\n\n  BaseTypes.STRING.types.postgres = ['varchar'];\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      if (this._length) {\n        warn('PostgreSQL does not support TEXT with options. Plain `TEXT` will be used instead.');\n        this._length = undefined;\n      }\n      return 'TEXT';\n    }\n  }\n\n  BaseTypes.TEXT.types.postgres = ['text'];\n\n  class CITEXT extends BaseTypes.CITEXT {\n    static parse(value) {\n      return value;\n    }\n  }\n\n  BaseTypes.CITEXT.types.postgres = ['citext'];\n\n  class CHAR extends BaseTypes.CHAR {\n    toSql() {\n      if (this._binary) {\n        return 'BYTEA';\n      }\n      return super.toSql();\n    }\n  }\n\n  BaseTypes.CHAR.types.postgres = ['char', 'bpchar'];\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BOOLEAN';\n    }\n    _sanitize(value) {\n      if (value !== null && value !== undefined) {\n        if (Buffer.isBuffer(value) && value.length === 1) {\n          // Bit fields are returned as buffers\n          value = value[0];\n        }\n        if (typeof value === 'string') {\n          // Only take action on valid boolean strings.\n          return ['true', 't'].includes(value) ? true : ['false', 'f'].includes(value) ? false : value;\n        }\n        if (typeof value === 'number') {\n          // Only take action on valid boolean integers.\n          return value === 1 ? true : value === 0 ? false : value;\n        }\n      }\n      return value;\n    }\n  }\n\n  BOOLEAN.parse = BOOLEAN.prototype._sanitize;\n\n  BaseTypes.BOOLEAN.types.postgres = ['bool'];\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'TIMESTAMP WITH TIME ZONE';\n    }\n    validate(value) {\n      if (value !== Infinity && value !== -Infinity) {\n        return super.validate(value);\n      }\n      return true;\n    }\n    _stringify(value, options) {\n      if (value === Infinity) {\n        return 'Infinity';\n      }\n      if (value === -Infinity) {\n        return '-Infinity';\n      }\n      return super._stringify(value, options);\n    }\n    _sanitize(value, options) {\n      if ((!options || options && !options.raw) && !(value instanceof Date) && !!value && value !== Infinity && value !== -Infinity) {\n        if (typeof value === 'string') {\n          const lower = value.toLowerCase();\n          if (lower === 'infinity') {\n            return Infinity;\n          }\n          if (lower === '-infinity') {\n            return -Infinity;\n          }\n        }\n        return new Date(value);\n      }\n      return value;\n    }\n  }\n\n  BaseTypes.DATE.types.postgres = ['timestamptz'];\n\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // int2\n  BaseTypes.TINYINT.types.postgres = ['int2'];\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // int2\n  BaseTypes.SMALLINT.types.postgres = ['int2'];\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  INTEGER.parse = function parse(value) {\n    return parseInt(value, 10);\n  };\n\n  // int4\n  BaseTypes.INTEGER.types.postgres = ['int4'];\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // int8\n  BaseTypes.BIGINT.types.postgres = ['int8'];\n\n  class REAL extends BaseTypes.REAL {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // float4\n  BaseTypes.REAL.types.postgres = ['float4'];\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // float8\n  BaseTypes.DOUBLE.types.postgres = ['float8'];\n\n  class FLOAT extends BaseTypes.FLOAT {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // POSTGRES does only support lengths as parameter.\n      // Values between 1-24 result in REAL\n      // Values between 25-53 result in DOUBLE PRECISION\n      // If decimals are provided remove these and print a warning\n      if (this._decimals) {\n        warn('PostgreSQL does not support FLOAT with decimals. Plain `FLOAT` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._decimals = undefined;\n      }\n      if (this._unsigned) {\n        warn('PostgreSQL does not support FLOAT unsigned. `UNSIGNED` was removed.');\n        this._unsigned = undefined;\n      }\n      if (this._zerofill) {\n        warn('PostgreSQL does not support FLOAT zerofill. `ZEROFILL` was removed.');\n        this._zerofill = undefined;\n      }\n    }\n  }\n  delete FLOAT.parse; // Float has no separate type in PG\n\n  class BLOB extends BaseTypes.BLOB {\n    toSql() {\n      if (this._length) {\n        warn('PostgreSQL does not support BLOB (BYTEA) with options. Plain `BYTEA` will be used instead.');\n        this._length = undefined;\n      }\n      return 'BYTEA';\n    }\n    _hexify(hex) {\n      // bytea hex format http://www.postgresql.org/docs/current/static/datatype-binary.html\n      return `E'\\\\\\\\x${hex}'`;\n    }\n  }\n\n  BaseTypes.BLOB.types.postgres = ['bytea'];\n\n  class GEOMETRY extends BaseTypes.GEOMETRY {\n    toSql() {\n      let result = this.key;\n      if (this.type) {\n        result += `(${this.type}`;\n        if (this.srid) {\n          result += `,${this.srid}`;\n        }\n        result += ')';\n      }\n      return result;\n    }\n    static parse(value) {\n      const b = Buffer.from(value, 'hex');\n      return wkx.Geometry.parse(b).toGeoJSON({ shortCrs: true });\n    }\n    _stringify(value, options) {\n      return `ST_GeomFromGeoJSON(${options.escape(JSON.stringify(value))})`;\n    }\n    _bindParam(value, options) {\n      return `ST_GeomFromGeoJSON(${options.bindParam(value)})`;\n    }\n  }\n\n  BaseTypes.GEOMETRY.types.postgres = ['geometry'];\n\n\n  class GEOGRAPHY extends BaseTypes.GEOGRAPHY {\n    toSql() {\n      let result = 'GEOGRAPHY';\n      if (this.type) {\n        result += `(${this.type}`;\n        if (this.srid) {\n          result += `,${this.srid}`;\n        }\n        result += ')';\n      }\n      return result;\n    }\n    static parse(value) {\n      const b = Buffer.from(value, 'hex');\n      return wkx.Geometry.parse(b).toGeoJSON({ shortCrs: true });\n    }\n    _stringify(value, options) {\n      return `ST_GeomFromGeoJSON(${options.escape(JSON.stringify(value))})`;\n    }\n    bindParam(value, options) {\n      return `ST_GeomFromGeoJSON(${options.bindParam(value)})`;\n    }\n  }\n\n  BaseTypes.GEOGRAPHY.types.postgres = ['geography'];\n\n  let hstore;\n\n  class HSTORE extends BaseTypes.HSTORE {\n    constructor() {\n      super();\n      if (!hstore) {\n        // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated\n        hstore = require('./hstore');\n      }\n    }\n    _value(value) {\n      if (!hstore) {\n        // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated\n        hstore = require('./hstore');\n      }\n      return hstore.stringify(value);\n    }\n    _stringify(value) {\n      return `'${this._value(value)}'`;\n    }\n    _bindParam(value, options) {\n      return options.bindParam(this._value(value));\n    }\n    static parse(value) {\n      if (!hstore) {\n        // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated\n        hstore = require('./hstore');\n      }\n      return hstore.parse(value);\n    }\n  }\n\n  HSTORE.prototype.escape = false;\n\n  BaseTypes.HSTORE.types.postgres = ['hstore'];\n\n  class RANGE extends BaseTypes.RANGE {\n    _value(values, options) {\n      if (!Array.isArray(values)) {\n        return this.options.subtype.stringify(values, options);\n      }\n      const valueInclusivity = [true, false];\n      const valuesStringified = values.map((value, index) => {\n        if (_.isObject(value) && Object.prototype.hasOwnProperty.call(value, 'value')) {\n          if (Object.prototype.hasOwnProperty.call(value, 'inclusive')) {\n            valueInclusivity[index] = value.inclusive;\n          }\n          value = value.value;\n        }\n        if (value === null || value === -Infinity || value === Infinity) {\n          // Pass through \"unbounded\" bounds unchanged\n          return value;\n        }\n        if (this.options.subtype.stringify) {\n          return this.options.subtype.stringify(value, options);\n        }\n        return options.escape(value);\n      });\n      // Array.map does not preserve extra array properties\n      valuesStringified.inclusive = valueInclusivity;\n      return range.stringify(valuesStringified);\n    }\n    _stringify(values, options) {\n      const value = this._value(values, options);\n      if (!Array.isArray(values)) {\n        return `'${value}'::${this.toCastType()}`;\n      }\n      return `'${value}'`;\n    }\n    _bindParam(values, options) {\n      const value = this._value(values, options);\n      if (!Array.isArray(values)) {\n        return `${options.bindParam(value)}::${this.toCastType()}`;\n      }\n      return options.bindParam(value);\n    }\n    toSql() {\n      return BaseTypes.RANGE.types.postgres.subtypes[this._subtype.toLowerCase()];\n    }\n    toCastType() {\n      return BaseTypes.RANGE.types.postgres.castTypes[this._subtype.toLowerCase()];\n    }\n    static parse(value, options = { parser: val => val }) {\n      return range.parse(value, options.parser);\n    }\n  }\n  const range = require('./range');\n\n  RANGE.prototype.escape = false;\n\n  BaseTypes.RANGE.types.postgres = {\n    subtypes: {\n      integer: 'int4range',\n      decimal: 'numrange',\n      date: 'tstzrange',\n      dateonly: 'daterange',\n      bigint: 'int8range'\n    },\n    castTypes: {\n      integer: 'int4',\n      decimal: 'numeric',\n      date: 'timestamptz',\n      dateonly: 'date',\n      bigint: 'int8'\n    }\n  };\n\n  // TODO: Why are base types being manipulated??\n  BaseTypes.ARRAY.prototype.escape = false;\n  BaseTypes.ARRAY.prototype._value = function _value(values, options) {\n    return values.map(value => {\n      if (options && options.bindParam && this.type && this.type._value) {\n        return this.type._value(value, options);\n      }\n      if (this.type && this.type.stringify) {\n        value = this.type.stringify(value, options);\n\n        if (this.type.escape === false) {\n          return value;\n        }\n      }\n      return options.escape(value);\n    }, this);\n  };\n  BaseTypes.ARRAY.prototype._stringify = function _stringify(values, options) {\n    let str = `ARRAY[${this._value(values, options).join(',')}]`;\n\n    if (this.type) {\n      const Utils = require('../../utils');\n      let castKey = this.toSql();\n\n      if (this.type instanceof BaseTypes.ENUM) {\n        const table = options.field.Model.getTableName();\n        const useSchema = table.schema !== undefined;\n        const schemaWithDelimiter = useSchema ? `${Utils.addTicks(table.schema, '\"')}${table.delimiter}` : '';\n\n        castKey = `${Utils.addTicks(\n          Utils.generateEnumName(useSchema ? table.tableName : table, options.field.field),\n          '\"'\n        ) }[]`;\n\n        str += `::${schemaWithDelimiter}${castKey}`;\n      } else {\n        str += `::${castKey}`;\n      }\n    }\n\n    return str;\n  };\n  BaseTypes.ARRAY.prototype._bindParam = function _bindParam(values, options) {\n    return options.bindParam(this._value(values, options));\n  };\n\n  class ENUM extends BaseTypes.ENUM {\n    static parse(value) {\n      return value;\n    }\n  }\n\n  BaseTypes.ENUM.types.postgres = [null];\n\n  return {\n    DECIMAL,\n    BLOB,\n    STRING,\n    CHAR,\n    TEXT,\n    CITEXT,\n    TINYINT,\n    SMALLINT,\n    INTEGER,\n    BIGINT,\n    BOOLEAN,\n    DATE,\n    DATEONLY,\n    REAL,\n    'DOUBLE PRECISION': DOUBLE,\n    FLOAT,\n    GEOMETRY,\n    GEOGRAPHY,\n    HSTORE,\n    RANGE,\n    ENUM\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/postgres/range.js":{"lineLengths":[13,28,37,23,14,3,50,42,3,31,1,44,15,16,3,29,20,3,30,21,3,26,1,26,20,16,27,46,19,19,24,90,64,33,38,29,37,37,36,10,35,3,34,28,67,50,63,34,5,5,50,50,105,1,30,31,21,16,26,14,3,66,26,17,40,12,43,81,6,5,16,1,22,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/postgres/range.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\nfunction stringifyRangeBound(bound) {\n  if (bound === null) {\n    return '' ;\n  }\n  if (bound === Infinity || bound === -Infinity) {\n    return bound.toString().toLowerCase();\n  }\n  return JSON.stringify(bound);\n}\n\nfunction parseRangeBound(bound, parseType) {\n  if (!bound) {\n    return null;\n  }\n  if (bound === 'infinity') {\n    return Infinity;\n  }\n  if (bound === '-infinity') {\n    return -Infinity;\n  }\n  return parseType(bound);\n\n}\n\nfunction stringify(data) {\n  if (data === null) return null;\n\n  if (!Array.isArray(data)) throw new Error('range must be an array');\n  if (!data.length) return 'empty';\n  if (data.length !== 2) throw new Error('range array length must be 0 (empty) or 2 (lower and upper bounds)');\n\n  if (Object.prototype.hasOwnProperty.call(data, 'inclusive')) {\n    if (data.inclusive === false) data.inclusive = [false, false];\n    else if (!data.inclusive) data.inclusive = [true, false];\n    else if (data.inclusive === true) data.inclusive = [true, true];\n  } else {\n    data.inclusive = [true, false];\n  }\n\n  _.each(data, (value, index) => {\n    if (_.isObject(value)) {\n      if (Object.prototype.hasOwnProperty.call(value, 'inclusive')) data.inclusive[index] = !!value.inclusive;\n      if (Object.prototype.hasOwnProperty.call(value, 'value')) data[index] = value.value;\n    }\n  });\n\n  const lowerBound = stringifyRangeBound(data[0]);\n  const upperBound = stringifyRangeBound(data[1]);\n\n  return `${(data.inclusive[0] ? '[' : '(') + lowerBound},${upperBound}${data.inclusive[1] ? ']' : ')'}`;\n}\nexports.stringify = stringify;\n\nfunction parse(value, parser) {\n  if (value === null) return null;\n  if (value === 'empty') {\n    return [];\n  }\n\n  let result = value\n    .substring(1, value.length - 1)\n    .split(',', 2);\n\n  if (result.length !== 2) return value;\n\n  result = result.map((item, index) => {\n    return {\n      value: parseRangeBound(item, parser),\n      inclusive: index === 0 ? value[0] === '[' : value[value.length - 1] === ']'\n    };\n  });\n\n  return result;\n}\nexports.parse = parse;\n"],"mappings":";AAEA,MAAM,IAAI,QAAQ;AAElB,6BAA6B,OAAO;AAClC,MAAI,UAAU,MAAM;AAClB,WAAO;AAAA;AAET,MAAI,UAAU,YAAY,UAAU,WAAW;AAC7C,WAAO,MAAM,WAAW;AAAA;AAE1B,SAAO,KAAK,UAAU;AAAA;AAGxB,yBAAyB,OAAO,WAAW;AACzC,MAAI,CAAC,OAAO;AACV,WAAO;AAAA;AAET,MAAI,UAAU,YAAY;AACxB,WAAO;AAAA;AAET,MAAI,UAAU,aAAa;AACzB,WAAO;AAAA;AAET,SAAO,UAAU;AAAA;AAInB,mBAAmB,MAAM;AACvB,MAAI,SAAS;AAAM,WAAO;AAE1B,MAAI,CAAC,MAAM,QAAQ;AAAO,UAAM,IAAI,MAAM;AAC1C,MAAI,CAAC,KAAK;AAAQ,WAAO;AACzB,MAAI,KAAK,WAAW;AAAG,UAAM,IAAI,MAAM;AAEvC,MAAI,OAAO,UAAU,eAAe,KAAK,MAAM,cAAc;AAC3D,QAAI,KAAK,cAAc;AAAO,WAAK,YAAY,CAAC,OAAO;AAAA,aAC9C,CAAC,KAAK;AAAW,WAAK,YAAY,CAAC,MAAM;AAAA,aACzC,KAAK,cAAc;AAAM,WAAK,YAAY,CAAC,MAAM;AAAA,SACrD;AACL,SAAK,YAAY,CAAC,MAAM;AAAA;AAG1B,IAAE,KAAK,MAAM,CAAC,OAAO,UAAU;AAC7B,QAAI,EAAE,SAAS,QAAQ;AACrB,UAAI,OAAO,UAAU,eAAe,KAAK,OAAO;AAAc,aAAK,UAAU,SAAS,CAAC,CAAC,MAAM;AAC9F,UAAI,OAAO,UAAU,eAAe,KAAK,OAAO;AAAU,aAAK,SAAS,MAAM;AAAA;AAAA;AAIlF,QAAM,aAAa,oBAAoB,KAAK;AAC5C,QAAM,aAAa,oBAAoB,KAAK;AAE5C,SAAO,GAAI,MAAK,UAAU,KAAK,MAAM,OAAO,cAAc,aAAa,KAAK,UAAU,KAAK,MAAM;AAAA;AAEnG,QAAQ,YAAY;AAEpB,eAAe,OAAO,QAAQ;AAC5B,MAAI,UAAU;AAAM,WAAO;AAC3B,MAAI,UAAU,SAAS;AACrB,WAAO;AAAA;AAGT,MAAI,SAAS,MACV,UAAU,GAAG,MAAM,SAAS,GAC5B,MAAM,KAAK;AAEd,MAAI,OAAO,WAAW;AAAG,WAAO;AAEhC,WAAS,OAAO,IAAI,CAAC,MAAM,UAAU;AACnC,WAAO;AAAA,MACL,OAAO,gBAAgB,MAAM;AAAA,MAC7B,WAAW,UAAU,IAAI,MAAM,OAAO,MAAM,MAAM,MAAM,SAAS,OAAO;AAAA;AAAA;AAI5E,SAAO;AAAA;AAET,QAAQ,QAAQ;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mysql/data-types.js":{"lineLengths":[13,27,28,44,33,33,104,44,48,42,40,43,45,46,43,46,42,40,44,43,64,49,37,37,42,44,48,40,43,13,37,27,34,7,27,34,7,24,5,3,37,13,69,5,31,35,50,7,25,54,7,48,5,34,29,27,21,7,47,62,14,57,7,19,5,3,45,25,28,5,3,37,13,31,5,3,70,45,29,24,33,32,15,7,57,33,15,7,94,5,25,29,41,20,7,29,69,5,13,26,5,3,37,20,85,5,3,41,32,104,5,3,10,9,9,13,9,13,12,18,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/mysql/data-types.js"],"sourcesContent":["'use strict';\n\nconst wkx = require('wkx');\nconst _ = require('lodash');\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://dev.mysql.com/doc/refman/5.7/en/data-types.html';\n\n  /**\n   * types: [buffer_type, ...]\n   *\n   * @see buffer_type here https://dev.mysql.com/doc/refman/5.7/en/c-api-prepared-statement-type-codes.html\n   * @see hex here https://github.com/sidorares/node-mysql2/blob/master/lib/constants/types.js\n   */\n\n  BaseTypes.DATE.types.mysql = ['DATETIME'];\n  BaseTypes.STRING.types.mysql = ['VAR_STRING'];\n  BaseTypes.CHAR.types.mysql = ['STRING'];\n  BaseTypes.TEXT.types.mysql = ['BLOB'];\n  BaseTypes.TINYINT.types.mysql = ['TINY'];\n  BaseTypes.SMALLINT.types.mysql = ['SHORT'];\n  BaseTypes.MEDIUMINT.types.mysql = ['INT24'];\n  BaseTypes.INTEGER.types.mysql = ['LONG'];\n  BaseTypes.BIGINT.types.mysql = ['LONGLONG'];\n  BaseTypes.FLOAT.types.mysql = ['FLOAT'];\n  BaseTypes.TIME.types.mysql = ['TIME'];\n  BaseTypes.DATEONLY.types.mysql = ['DATE'];\n  BaseTypes.BOOLEAN.types.mysql = ['TINY'];\n  BaseTypes.BLOB.types.mysql = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.mysql = ['NEWDECIMAL'];\n  BaseTypes.UUID.types.mysql = false;\n  BaseTypes.ENUM.types.mysql = false;\n  BaseTypes.REAL.types.mysql = ['DOUBLE'];\n  BaseTypes.DOUBLE.types.mysql = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.mysql = ['GEOMETRY'];\n  BaseTypes.JSON.types.mysql = ['JSON'];\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    toSql() {\n      let definition = super.toSql();\n      if (this._unsigned) {\n        definition += ' UNSIGNED';\n      }\n      if (this._zerofill) {\n        definition += ' ZEROFILL';\n      }\n      return definition;\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return this._length ? `DATETIME(${this._length})` : 'DATETIME';\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n      // Fractional DATETIMEs only supported on MySQL 5.6.4+\n      if (this._length) {\n        return date.format('YYYY-MM-DD HH:mm:ss.SSS');\n      }\n      return date.format('YYYY-MM-DD HH:mm:ss');\n    }\n    static parse(value, options) {\n      value = value.string();\n      if (value === null) {\n        return value;\n      }\n      if (momentTz.tz.zone(options.timezone)) {\n        value = momentTz.tz(value, options.timezone).toDate();\n      }\n      else {\n        value = new Date(`${value} ${options.timezone}`);\n      }\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return value.string();\n    }\n  }\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36) BINARY';\n    }\n  }\n\n  const SUPPORTED_GEOMETRY_TYPES = ['POINT', 'LINESTRING', 'POLYGON'];\n\n  class GEOMETRY extends BaseTypes.GEOMETRY {\n    constructor(type, srid) {\n      super(type, srid);\n      if (_.isEmpty(this.type)) {\n        this.sqlType = this.key;\n        return;\n      }\n      if (SUPPORTED_GEOMETRY_TYPES.includes(this.type)) {\n        this.sqlType = this.type;\n        return;\n      }\n      throw new Error(`Supported geometry types are: ${SUPPORTED_GEOMETRY_TYPES.join(', ')}`);\n    }\n    static parse(value) {\n      value = value.buffer();\n      // Empty buffer, MySQL doesn't support POINT EMPTY\n      // check, https://dev.mysql.com/worklog/task/?id=2381\n      if (!value || value.length === 0) {\n        return null;\n      }\n      // For some reason, discard the first 4 bytes\n      value = value.slice(4);\n      return wkx.Geometry.parse(value).toGeoJSON({ shortCrs: true });\n    }\n    toSql() {\n      return this.sqlType;\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql(options) {\n      return `ENUM(${this.values.map(value => options.escape(value)).join(', ')})`;\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value : JSON.stringify(value);\n    }\n  }\n\n  return {\n    ENUM,\n    DATE,\n    DATEONLY,\n    UUID,\n    GEOMETRY,\n    DECIMAL,\n    JSON: JSONTYPE\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mariadb/data-types.js":{"lineLengths":[13,27,28,44,33,33,105,46,50,44,42,45,47,48,45,48,44,42,46,45,66,51,39,39,44,46,50,42,43,13,37,27,34,7,27,34,7,24,5,3,37,13,69,5,31,35,50,7,52,5,34,29,27,21,7,47,62,14,57,7,19,5,3,45,25,28,5,3,37,13,31,5,3,45,29,24,33,32,14,33,7,5,25,29,41,20,7,29,69,5,13,26,5,3,37,20,85,5,3,41,32,104,5,3,10,9,9,13,9,13,12,18,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/mariadb/data-types.js"],"sourcesContent":["'use strict';\n\nconst wkx = require('wkx');\nconst _ = require('lodash');\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://mariadb.com/kb/en/library/resultset/#field-types';\n\n  /**\n   * types: [buffer_type, ...]\n   *\n   * @see documentation : https://mariadb.com/kb/en/library/resultset/#field-types\n   * @see connector implementation : https://github.com/MariaDB/mariadb-connector-nodejs/blob/master/lib/const/field-type.js\n   */\n\n  BaseTypes.DATE.types.mariadb = ['DATETIME'];\n  BaseTypes.STRING.types.mariadb = ['VAR_STRING'];\n  BaseTypes.CHAR.types.mariadb = ['STRING'];\n  BaseTypes.TEXT.types.mariadb = ['BLOB'];\n  BaseTypes.TINYINT.types.mariadb = ['TINY'];\n  BaseTypes.SMALLINT.types.mariadb = ['SHORT'];\n  BaseTypes.MEDIUMINT.types.mariadb = ['INT24'];\n  BaseTypes.INTEGER.types.mariadb = ['LONG'];\n  BaseTypes.BIGINT.types.mariadb = ['LONGLONG'];\n  BaseTypes.FLOAT.types.mariadb = ['FLOAT'];\n  BaseTypes.TIME.types.mariadb = ['TIME'];\n  BaseTypes.DATEONLY.types.mariadb = ['DATE'];\n  BaseTypes.BOOLEAN.types.mariadb = ['TINY'];\n  BaseTypes.BLOB.types.mariadb = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.mariadb = ['NEWDECIMAL'];\n  BaseTypes.UUID.types.mariadb = false;\n  BaseTypes.ENUM.types.mariadb = false;\n  BaseTypes.REAL.types.mariadb = ['DOUBLE'];\n  BaseTypes.DOUBLE.types.mariadb = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.mariadb = ['GEOMETRY'];\n  BaseTypes.JSON.types.mariadb = ['JSON'];\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    toSql() {\n      let definition = super.toSql();\n      if (this._unsigned) {\n        definition += ' UNSIGNED';\n      }\n      if (this._zerofill) {\n        definition += ' ZEROFILL';\n      }\n      return definition;\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return this._length ? `DATETIME(${this._length})` : 'DATETIME';\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n\n      return date.format('YYYY-MM-DD HH:mm:ss.SSS');\n    }\n    static parse(value, options) {\n      value = value.string();\n      if (value === null) {\n        return value;\n      }\n      if (momentTz.tz.zone(options.timezone)) {\n        value = momentTz.tz(value, options.timezone).toDate();\n      }\n      else {\n        value = new Date(`${value} ${options.timezone}`);\n      }\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return value.string();\n    }\n  }\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36) BINARY';\n    }\n  }\n\n  class GEOMETRY extends BaseTypes.GEOMETRY {\n    constructor(type, srid) {\n      super(type, srid);\n      if (_.isEmpty(this.type)) {\n        this.sqlType = this.key;\n      }\n      else {\n        this.sqlType = this.type;\n      }\n    }\n    static parse(value) {\n      value = value.buffer();\n      // Empty buffer, MySQL doesn't support POINT EMPTY\n      // check, https://dev.mysql.com/worklog/task/?id=2381\n      if (!value || value.length === 0) {\n        return null;\n      }\n      // For some reason, discard the first 4 bytes\n      value = value.slice(4);\n      return wkx.Geometry.parse(value).toGeoJSON({ shortCrs: true });\n    }\n    toSql() {\n      return this.sqlType;\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql(options) {\n      return `ENUM(${this.values.map(value => options.escape(value)).join(', ')})`;\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value\n        : JSON.stringify(value);\n    }\n  }\n\n  return {\n    ENUM,\n    DATE,\n    DATEONLY,\n    UUID,\n    GEOMETRY,\n    DECIMAL,\n    JSON: JSONTYPE\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/data-types.js":{"lineLengths":[13,33,93,54,51,129,34,34,5,3,45,64,56,41,47,49,51,47,45,43,41,45,47,65,47,41,38,41,55,42,50,41,24,30,5,3,37,33,32,49,7,28,5,3,45,24,18,5,3,41,13,25,49,7,31,5,3,37,13,25,94,30,7,20,5,3,41,13,35,5,3,37,13,25,46,7,27,5,3,41,13,28,27,30,7,27,30,7,25,37,49,41,9,22,7,20,5,3,43,25,20,44,5,3,45,25,20,44,5,3,47,25,20,44,5,3,43,25,20,44,5,3,41,25,20,44,5,3,39,3,41,3,37,3,33,36,19,5,26,17,5,31,22,5,32,23,5,3,49,35,3,91,49,3,37,13,20,5,3,10,9,13,11,9,11,10,9,31,12,13,14,12,11,9,9,19,10,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/sqlite/data-types.js"],"sourcesContent":["'use strict';\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'https://www.sqlite.org/datatype3.html');\n\n  /**\n   * Removes unsupported SQLite options, i.e., UNSIGNED and ZEROFILL, for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._zerofill || dataType._unsigned) {\n      warn(`SQLite does not support '${dataType.key}' with UNSIGNED or ZEROFILL. Plain '${dataType.key}' will be used instead.`);\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * @see https://sqlite.org/datatype3.html\n   */\n\n  BaseTypes.DATE.types.sqlite = ['DATETIME'];\n  BaseTypes.STRING.types.sqlite = ['VARCHAR', 'VARCHAR BINARY'];\n  BaseTypes.CHAR.types.sqlite = ['CHAR', 'CHAR BINARY'];\n  BaseTypes.TEXT.types.sqlite = ['TEXT'];\n  BaseTypes.TINYINT.types.sqlite = ['TINYINT'];\n  BaseTypes.SMALLINT.types.sqlite = ['SMALLINT'];\n  BaseTypes.MEDIUMINT.types.sqlite = ['MEDIUMINT'];\n  BaseTypes.INTEGER.types.sqlite = ['INTEGER'];\n  BaseTypes.BIGINT.types.sqlite = ['BIGINT'];\n  BaseTypes.FLOAT.types.sqlite = ['FLOAT'];\n  BaseTypes.TIME.types.sqlite = ['TIME'];\n  BaseTypes.DATEONLY.types.sqlite = ['DATE'];\n  BaseTypes.BOOLEAN.types.sqlite = ['TINYINT'];\n  BaseTypes.BLOB.types.sqlite = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.sqlite = ['DECIMAL'];\n  BaseTypes.UUID.types.sqlite = ['UUID'];\n  BaseTypes.ENUM.types.sqlite = false;\n  BaseTypes.REAL.types.sqlite = ['REAL'];\n  BaseTypes.DOUBLE.types.sqlite = ['DOUBLE PRECISION'];\n  BaseTypes.GEOMETRY.types.sqlite = false;\n  BaseTypes.JSON.types.sqlite = ['JSON', 'JSONB'];\n\n  class JSONTYPE extends BaseTypes.JSON {\n    static parse(data) {\n      return JSON.parse(data);\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    static parse(date, options) {\n      if (!date.includes('+')) {\n        // For backwards compat. Dates inserted by sequelize < 2.0dev12 will not have a timestamp set\n        return new Date(date + options.timezone);\n      }\n      return new Date(date); // We already have a timezone stored in the string\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(date) {\n      return date;\n    }\n  }\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (this._binary) {\n        return `VARCHAR BINARY(${this._length})`;\n      }\n      return super.toSql(this);\n    }\n  }\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      if (this._length) {\n        warn('SQLite does not support TEXT with options. Plain `TEXT` will be used instead.');\n        this._length = undefined;\n      }\n      return 'TEXT';\n    }\n  }\n\n  class CITEXT extends BaseTypes.CITEXT {\n    toSql() {\n      return 'TEXT COLLATE NOCASE';\n    }\n  }\n\n  class CHAR extends BaseTypes.CHAR {\n    toSql() {\n      if (this._binary) {\n        return `CHAR BINARY(${this._length})`;\n      }\n      return super.toSql();\n    }\n  }\n\n  class NUMBER extends BaseTypes.NUMBER {\n    toSql() {\n      let result = this.key;\n      if (this._unsigned) {\n        result += ' UNSIGNED';\n      }\n      if (this._zerofill) {\n        result += ' ZEROFILL';\n      }\n      if (this._length) {\n        result += `(${this._length}`;\n        if (typeof this._decimals === 'number') {\n          result += `,${this._decimals}`;\n        }\n        result += ')';\n      }\n      return result;\n    }\n  }\n\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class MEDIUMINT extends BaseTypes.MEDIUMINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class FLOAT extends BaseTypes.FLOAT {\n  }\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n  }\n\n  class REAL extends BaseTypes.REAL { }\n\n  function parseFloating(value) {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    if (value === 'NaN') {\n      return NaN;\n    }\n    if (value === 'Infinity') {\n      return Infinity;\n    }\n    if (value === '-Infinity') {\n      return -Infinity;\n    }\n  }\n  for (const floating of [FLOAT, DOUBLE, REAL]) {\n    floating.parse = parseFloating;\n  }\n\n\n  for (const num of [FLOAT, DOUBLE, REAL, TINYINT, SMALLINT, MEDIUMINT, INTEGER, BIGINT]) {\n    num.prototype.toSql = NUMBER.prototype.toSql;\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'TEXT';\n    }\n  }\n\n  return {\n    DATE,\n    DATEONLY,\n    STRING,\n    CHAR,\n    NUMBER,\n    FLOAT,\n    REAL,\n    'DOUBLE PRECISION': DOUBLE,\n    TINYINT,\n    SMALLINT,\n    MEDIUMINT,\n    INTEGER,\n    BIGINT,\n    TEXT,\n    ENUM,\n    JSON: JSONTYPE,\n    CITEXT\n  };\n};\n"],"mappings":";AAEA,OAAO,UAAU,eAAa;AAC5B,QAAM,OAAO,UAAU,SAAS,KAAK,KAAK,QAAW;AAQrD,2CAAyC,UAAU;AACjD,QAAI,SAAS,aAAa,SAAS,WAAW;AAC5C,WAAK,4BAA4B,SAAS,0CAA0C,SAAS;AAC7F,eAAS,YAAY;AACrB,eAAS,YAAY;AAAA;AAAA;AAQzB,YAAU,KAAK,MAAM,SAAS,CAAC;AAC/B,YAAU,OAAO,MAAM,SAAS,CAAC,WAAW;AAC5C,YAAU,KAAK,MAAM,SAAS,CAAC,QAAQ;AACvC,YAAU,KAAK,MAAM,SAAS,CAAC;AAC/B,YAAU,QAAQ,MAAM,SAAS,CAAC;AAClC,YAAU,SAAS,MAAM,SAAS,CAAC;AACnC,YAAU,UAAU,MAAM,SAAS,CAAC;AACpC,YAAU,QAAQ,MAAM,SAAS,CAAC;AAClC,YAAU,OAAO,MAAM,SAAS,CAAC;AACjC,YAAU,MAAM,MAAM,SAAS,CAAC;AAChC,YAAU,KAAK,MAAM,SAAS,CAAC;AAC/B,YAAU,SAAS,MAAM,SAAS,CAAC;AACnC,YAAU,QAAQ,MAAM,SAAS,CAAC;AAClC,YAAU,KAAK,MAAM,SAAS,CAAC,YAAY,QAAQ;AACnD,YAAU,QAAQ,MAAM,SAAS,CAAC;AAClC,YAAU,KAAK,MAAM,SAAS,CAAC;AAC/B,YAAU,KAAK,MAAM,SAAS;AAC9B,YAAU,KAAK,MAAM,SAAS,CAAC;AAC/B,YAAU,OAAO,MAAM,SAAS,CAAC;AACjC,YAAU,SAAS,MAAM,SAAS;AAClC,YAAU,KAAK,MAAM,SAAS,CAAC,QAAQ;AAEvC,yBAAuB,UAAU,KAAK;AAAA,WAC7B,MAAM,MAAM;AACjB,aAAO,KAAK,MAAM;AAAA;AAAA;AAItB,qBAAmB,UAAU,KAAK;AAAA,WACzB,MAAM,MAAM,SAAS;AAC1B,UAAI,CAAC,KAAK,SAAS,MAAM;AAEvB,eAAO,IAAI,KAAK,OAAO,QAAQ;AAAA;AAEjC,aAAO,IAAI,KAAK;AAAA;AAAA;AAIpB,yBAAuB,UAAU,SAAS;AAAA,WACjC,MAAM,MAAM;AACjB,aAAO;AAAA;AAAA;AAIX,uBAAqB,UAAU,OAAO;AAAA,IACpC,QAAQ;AACN,UAAI,KAAK,SAAS;AAChB,eAAO,kBAAkB,KAAK;AAAA;AAEhC,aAAO,MAAM,MAAM;AAAA;AAAA;AAIvB,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,UAAI,KAAK,SAAS;AAChB,aAAK;AACL,aAAK,UAAU;AAAA;AAEjB,aAAO;AAAA;AAAA;AAIX,uBAAqB,UAAU,OAAO;AAAA,IACpC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,UAAI,KAAK,SAAS;AAChB,eAAO,eAAe,KAAK;AAAA;AAE7B,aAAO,MAAM;AAAA;AAAA;AAIjB,uBAAqB,UAAU,OAAO;AAAA,IACpC,QAAQ;AACN,UAAI,SAAS,KAAK;AAClB,UAAI,KAAK,WAAW;AAClB,kBAAU;AAAA;AAEZ,UAAI,KAAK,WAAW;AAClB,kBAAU;AAAA;AAEZ,UAAI,KAAK,SAAS;AAChB,kBAAU,IAAI,KAAK;AACnB,YAAI,OAAO,KAAK,cAAc,UAAU;AACtC,oBAAU,IAAI,KAAK;AAAA;AAErB,kBAAU;AAAA;AAEZ,aAAO;AAAA;AAAA;AAIX,wBAAsB,UAAU,QAAQ;AAAA,IACtC,YAAY,QAAQ;AAClB,YAAM;AACN,sCAAgC;AAAA;AAAA;AAIpC,yBAAuB,UAAU,SAAS;AAAA,IACxC,YAAY,QAAQ;AAClB,YAAM;AACN,sCAAgC;AAAA;AAAA;AAIpC,0BAAwB,UAAU,UAAU;AAAA,IAC1C,YAAY,QAAQ;AAClB,YAAM;AACN,sCAAgC;AAAA;AAAA;AAIpC,wBAAsB,UAAU,QAAQ;AAAA,IACtC,YAAY,QAAQ;AAClB,YAAM;AACN,sCAAgC;AAAA;AAAA;AAIpC,uBAAqB,UAAU,OAAO;AAAA,IACpC,YAAY,QAAQ;AAClB,YAAM;AACN,sCAAgC;AAAA;AAAA;AAIpC,sBAAoB,UAAU,MAAM;AAAA;AAGpC,uBAAqB,UAAU,OAAO;AAAA;AAGtC,qBAAmB,UAAU,KAAK;AAAA;AAElC,yBAAuB,OAAO;AAC5B,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO;AAAA;AAET,QAAI,UAAU,OAAO;AACnB,aAAO;AAAA;AAET,QAAI,UAAU,YAAY;AACxB,aAAO;AAAA;AAET,QAAI,UAAU,aAAa;AACzB,aAAO;AAAA;AAAA;AAGX,aAAW,YAAY,CAAC,OAAO,QAAQ,OAAO;AAC5C,aAAS,QAAQ;AAAA;AAInB,aAAW,OAAO,CAAC,OAAO,QAAQ,MAAM,SAAS,UAAU,WAAW,SAAS,SAAS;AACtF,QAAI,UAAU,QAAQ,OAAO,UAAU;AAAA;AAGzC,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,oBAAoB;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mssql/data-types.js":{"lineLengths":[13,33,33,125,54,98,115,32,39,34,34,5,3,36,44,37,37,39,40,42,39,39,38,36,40,40,37,40,37,37,37,39,41,37,13,25,52,120,34,9,109,7,30,5,18,24,5,3,41,13,26,43,7,39,5,32,25,48,7,35,5,32,74,5,3,34,37,13,25,52,119,33,9,108,7,29,5,3,43,13,19,5,3,37,13,24,5,3,35,13,25,5,3,37,13,30,5,3,45,25,48,5,3,43,25,20,44,5,3,43,25,20,44,5,3,45,25,20,44,5,3,41,25,20,44,5,3,37,35,30,84,93,30,37,32,32,7,5,3,39,35,30,27,96,30,37,7,27,79,32,7,27,79,32,7,5,3,37,13,28,5,3,10,9,12,9,11,9,9,13,8,12,13,12,11,9,10,8,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/mssql/data-types.js"],"sourcesContent":["'use strict';\n\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'https://msdn.microsoft.com/en-us/library/ms187752%28v=sql.110%29.aspx');\n\n  /**\n   * Removes unsupported MSSQL options, i.e., LENGTH, UNSIGNED and ZEROFILL, for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._length || dataType.options.length || dataType._unsigned || dataType._zerofill) {\n      warn(`MSSQL does not support '${dataType.key}' with options. Plain '${dataType.key}' will be used instead.`);\n      dataType._length = undefined;\n      dataType.options.length = undefined;\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * types: [hex, ...]\n   *\n   * @see hex here https://github.com/tediousjs/tedious/blob/master/src/data-type.ts\n   */\n\n  BaseTypes.DATE.types.mssql = [43];\n  BaseTypes.STRING.types.mssql = [231, 173];\n  BaseTypes.CHAR.types.mssql = [175];\n  BaseTypes.TEXT.types.mssql = false;\n  // https://msdn.microsoft.com/en-us/library/ms187745(v=sql.110).aspx\n  BaseTypes.TINYINT.types.mssql = [30];\n  BaseTypes.SMALLINT.types.mssql = [34];\n  BaseTypes.MEDIUMINT.types.mssql = false;\n  BaseTypes.INTEGER.types.mssql = [38];\n  BaseTypes.BIGINT.types.mssql = false;\n  BaseTypes.FLOAT.types.mssql = [109];\n  BaseTypes.TIME.types.mssql = [41];\n  BaseTypes.DATEONLY.types.mssql = [40];\n  BaseTypes.BOOLEAN.types.mssql = [104];\n  BaseTypes.BLOB.types.mssql = [165];\n  BaseTypes.DECIMAL.types.mssql = [106];\n  BaseTypes.UUID.types.mssql = false;\n  BaseTypes.ENUM.types.mssql = false;\n  BaseTypes.REAL.types.mssql = [109];\n  BaseTypes.DOUBLE.types.mssql = [109];\n  // BaseTypes.GEOMETRY.types.mssql = [240]; // not yet supported\n  BaseTypes.GEOMETRY.types.mssql = false;\n\n  class BLOB extends BaseTypes.BLOB {\n    toSql() {\n      if (this._length) {\n        if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n          warn('MSSQL does not support BLOB with the `length` = `tiny` option. `VARBINARY(256)` will be used instead.');\n          return 'VARBINARY(256)';\n        }\n        warn('MSSQL does not support BLOB with the `length` option. `VARBINARY(MAX)` will be used instead.');\n      }\n      return 'VARBINARY(MAX)';\n    }\n    _hexify(hex) {\n      return `0x${hex}`;\n    }\n  }\n\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (!this._binary) {\n        return `NVARCHAR(${this._length})`;\n      }\n      return `BINARY(${this._length})`;\n    }\n    _stringify(value, options) {\n      if (this._binary) {\n        return BLOB.prototype._stringify(value);\n      }\n      return options.escape(value);\n    }\n    _bindParam(value, options) {\n      return options.bindParam(this._binary ? Buffer.from(value) : value);\n    }\n  }\n\n  STRING.prototype.escape = false;\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      // TEXT is deprecated in mssql and it would normally be saved as a non-unicode string.\n      // Using unicode is just future proof\n      if (this._length) {\n        if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n          warn('MSSQL does not support TEXT with the `length` = `tiny` option. `NVARCHAR(256)` will be used instead.');\n          return 'NVARCHAR(256)';\n        }\n        warn('MSSQL does not support TEXT with the `length` option. `NVARCHAR(MAX)` will be used instead.');\n      }\n      return 'NVARCHAR(MAX)';\n    }\n  }\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BIT';\n    }\n  }\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36)';\n    }\n  }\n\n  class NOW extends BaseTypes.NOW {\n    toSql() {\n      return 'GETDATE()';\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'DATETIMEOFFSET';\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return moment(value).format('YYYY-MM-DD');\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class REAL extends BaseTypes.REAL {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // MSSQL does not support any options for real\n      if (this._length || this.options.length || this._unsigned || this._zerofill) {\n        warn('MSSQL does not support REAL with options. Plain `REAL` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n  }\n  class FLOAT extends BaseTypes.FLOAT {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // MSSQL does only support lengths as option.\n      // Values between 1-24 result in 7 digits precision (4 bytes storage size)\n      // Values between 25-53 result in 15 digits precision (8 bytes storage size)\n      // If decimals are provided remove these and print a warning\n      if (this._decimals) {\n        warn('MSSQL does not support Float with decimals. Plain `FLOAT` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n      }\n      if (this._unsigned) {\n        warn('MSSQL does not support Float unsigned. `UNSIGNED` was removed.');\n        this._unsigned = undefined;\n      }\n      if (this._zerofill) {\n        warn('MSSQL does not support Float zerofill. `ZEROFILL` was removed.');\n        this._zerofill = undefined;\n      }\n    }\n  }\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'VARCHAR(255)';\n    }\n  }\n\n  return {\n    BLOB,\n    BOOLEAN,\n    ENUM,\n    STRING,\n    UUID,\n    DATE,\n    DATEONLY,\n    NOW,\n    TINYINT,\n    SMALLINT,\n    INTEGER,\n    BIGINT,\n    REAL,\n    FLOAT,\n    TEXT\n  };\n};\n"],"mappings":";AAEA,MAAM,SAAS,QAAQ;AAEvB,OAAO,UAAU,eAAa;AAC5B,QAAM,OAAO,UAAU,SAAS,KAAK,KAAK,QAAW;AAQrD,2CAAyC,UAAU;AACjD,QAAI,SAAS,WAAW,SAAS,QAAQ,UAAU,SAAS,aAAa,SAAS,WAAW;AAC3F,WAAK,2BAA2B,SAAS,6BAA6B,SAAS;AAC/E,eAAS,UAAU;AACnB,eAAS,QAAQ,SAAS;AAC1B,eAAS,YAAY;AACrB,eAAS,YAAY;AAAA;AAAA;AAUzB,YAAU,KAAK,MAAM,QAAQ,CAAC;AAC9B,YAAU,OAAO,MAAM,QAAQ,CAAC,KAAK;AACrC,YAAU,KAAK,MAAM,QAAQ,CAAC;AAC9B,YAAU,KAAK,MAAM,QAAQ;AAE7B,YAAU,QAAQ,MAAM,QAAQ,CAAC;AACjC,YAAU,SAAS,MAAM,QAAQ,CAAC;AAClC,YAAU,UAAU,MAAM,QAAQ;AAClC,YAAU,QAAQ,MAAM,QAAQ,CAAC;AACjC,YAAU,OAAO,MAAM,QAAQ;AAC/B,YAAU,MAAM,MAAM,QAAQ,CAAC;AAC/B,YAAU,KAAK,MAAM,QAAQ,CAAC;AAC9B,YAAU,SAAS,MAAM,QAAQ,CAAC;AAClC,YAAU,QAAQ,MAAM,QAAQ,CAAC;AACjC,YAAU,KAAK,MAAM,QAAQ,CAAC;AAC9B,YAAU,QAAQ,MAAM,QAAQ,CAAC;AACjC,YAAU,KAAK,MAAM,QAAQ;AAC7B,YAAU,KAAK,MAAM,QAAQ;AAC7B,YAAU,KAAK,MAAM,QAAQ,CAAC;AAC9B,YAAU,OAAO,MAAM,QAAQ,CAAC;AAEhC,YAAU,SAAS,MAAM,QAAQ;AAEjC,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,UAAI,KAAK,SAAS;AAChB,YAAI,KAAK,QAAQ,kBAAkB,QAAQ;AACzC,eAAK;AACL,iBAAO;AAAA;AAET,aAAK;AAAA;AAEP,aAAO;AAAA;AAAA,IAET,QAAQ,KAAK;AACX,aAAO,KAAK;AAAA;AAAA;AAKhB,uBAAqB,UAAU,OAAO;AAAA,IACpC,QAAQ;AACN,UAAI,CAAC,KAAK,SAAS;AACjB,eAAO,YAAY,KAAK;AAAA;AAE1B,aAAO,UAAU,KAAK;AAAA;AAAA,IAExB,WAAW,OAAO,SAAS;AACzB,UAAI,KAAK,SAAS;AAChB,eAAO,KAAK,UAAU,WAAW;AAAA;AAEnC,aAAO,QAAQ,OAAO;AAAA;AAAA,IAExB,WAAW,OAAO,SAAS;AACzB,aAAO,QAAQ,UAAU,KAAK,UAAU,OAAO,KAAK,SAAS;AAAA;AAAA;AAIjE,SAAO,UAAU,SAAS;AAE1B,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AAGN,UAAI,KAAK,SAAS;AAChB,YAAI,KAAK,QAAQ,kBAAkB,QAAQ;AACzC,eAAK;AACL,iBAAO;AAAA;AAET,aAAK;AAAA;AAEP,aAAO;AAAA;AAAA;AAIX,wBAAsB,UAAU,QAAQ;AAAA,IACtC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,oBAAkB,UAAU,IAAI;AAAA,IAC9B,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,yBAAuB,UAAU,SAAS;AAAA,WACjC,MAAM,OAAO;AAClB,aAAO,OAAO,OAAO,OAAO;AAAA;AAAA;AAIhC,wBAAsB,UAAU,QAAQ;AAAA,IACtC,YAAY,QAAQ;AAClB,YAAM;AACN,sCAAgC;AAAA;AAAA;AAGpC,wBAAsB,UAAU,QAAQ;AAAA,IACtC,YAAY,QAAQ;AAClB,YAAM;AACN,sCAAgC;AAAA;AAAA;AAGpC,yBAAuB,UAAU,SAAS;AAAA,IACxC,YAAY,QAAQ;AAClB,YAAM;AACN,sCAAgC;AAAA;AAAA;AAGpC,uBAAqB,UAAU,OAAO;AAAA,IACpC,YAAY,QAAQ;AAClB,YAAM;AACN,sCAAgC;AAAA;AAAA;AAGpC,qBAAmB,UAAU,KAAK;AAAA,IAChC,YAAY,QAAQ,UAAU;AAC5B,YAAM,QAAQ;AAEd,UAAI,KAAK,WAAW,KAAK,QAAQ,UAAU,KAAK,aAAa,KAAK,WAAW;AAC3E,aAAK;AACL,aAAK,UAAU;AACf,aAAK,QAAQ,SAAS;AACtB,aAAK,YAAY;AACjB,aAAK,YAAY;AAAA;AAAA;AAAA;AAIvB,sBAAoB,UAAU,MAAM;AAAA,IAClC,YAAY,QAAQ,UAAU;AAC5B,YAAM,QAAQ;AAKd,UAAI,KAAK,WAAW;AAClB,aAAK;AACL,aAAK,UAAU;AACf,aAAK,QAAQ,SAAS;AAAA;AAExB,UAAI,KAAK,WAAW;AAClB,aAAK;AACL,aAAK,YAAY;AAAA;AAEnB,UAAI,KAAK,WAAW;AAClB,aAAK;AACL,aAAK,YAAY;AAAA;AAAA;AAAA;AAIvB,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/db2/data-types.js":{"lineLengths":[13,44,33,33,159,54,98,113,32,39,34,34,5,3,43,43,38,49,45,46,46,44,42,58,38,42,71,38,44,54,41,38,42,39,37,13,25,52,29,9,54,29,9,52,28,9,39,7,20,5,18,62,5,23,35,65,7,33,35,14,46,7,40,31,5,18,25,5,3,41,13,26,34,44,9,39,7,31,52,7,32,55,7,37,5,32,25,61,7,35,5,32,74,5,3,34,37,13,18,25,45,22,22,18,24,23,18,22,24,18,9,34,31,9,22,29,9,14,29,7,33,38,14,41,7,79,17,5,3,43,13,23,5,22,47,59,27,9,40,78,72,47,67,9,7,19,5,3,46,37,13,37,5,3,35,13,28,5,3,37,13,29,25,7,29,25,7,67,5,31,35,50,7,29,23,57,22,9,57,7,48,5,25,38,31,7,27,21,7,44,19,5,3,45,25,50,5,3,43,25,20,44,5,3,43,25,20,44,5,3,45,25,20,44,5,3,41,25,20,44,5,3,37,35,30,84,91,30,37,32,32,7,5,3,39,35,30,27,94,30,37,7,27,77,32,7,27,77,32,7,5,3,37,13,28,5,3,41,35,30,84,93,30,37,32,32,7,5,13,22,5,3,47,10,9,12,9,11,9,9,13,8,12,13,12,11,31,11,9,10,8,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/db2/data-types.js"],"sourcesContent":["'use strict';\n\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined,\n    'https://www.ibm.com/support/knowledgecenter/SSEPGG_11.1.0/' +\n    'com.ibm.db2.luw.sql.ref.doc/doc/r0008478.html');\n\n  /**\n   * Removes unsupported Db2 options, i.e., LENGTH, UNSIGNED and ZEROFILL,\n   * for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._length || dataType.options.length || dataType._unsigned || dataType._zerofill) {\n      warn(`Db2 does not support '${dataType.key}' with options. Plain '${dataType.key}' will be used instead.`);\n      dataType._length = undefined;\n      dataType.options.length = undefined;\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * types: [hex, ...]\n   *\n   * @see Data types and table columns: https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.1.0/com.ibm.db2.luw.admin.dbobj.doc/doc/c0055357.html \n   */\n\n  BaseTypes.DATE.types.db2 = ['TIMESTAMP'];\n  BaseTypes.STRING.types.db2 = ['VARCHAR'];\n  BaseTypes.CHAR.types.db2 = ['CHAR'];\n  BaseTypes.TEXT.types.db2 = ['VARCHAR', 'CLOB'];\n  BaseTypes.TINYINT.types.db2 = ['SMALLINT'];\n  BaseTypes.SMALLINT.types.db2 = ['SMALLINT'];\n  BaseTypes.MEDIUMINT.types.db2 = ['INTEGER'];\n  BaseTypes.INTEGER.types.db2 = ['INTEGER'];\n  BaseTypes.BIGINT.types.db2 = ['BIGINT'];\n  BaseTypes.FLOAT.types.db2 = ['DOUBLE', 'REAL', 'FLOAT'];\n  BaseTypes.TIME.types.db2 = ['TIME'];\n  BaseTypes.DATEONLY.types.db2 = ['DATE'];\n  BaseTypes.BOOLEAN.types.db2 = ['BOOLEAN', 'BOOL', 'SMALLINT', 'BIT'];\n  BaseTypes.BLOB.types.db2 = ['BLOB'];\n  BaseTypes.DECIMAL.types.db2 = ['DECIMAL'];\n  BaseTypes.UUID.types.db2 = ['CHAR () FOR BIT DATA'];\n  BaseTypes.ENUM.types.db2 = ['VARCHAR'];\n  BaseTypes.REAL.types.db2 = ['REAL'];\n  BaseTypes.DOUBLE.types.db2 = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.db2 = false;\n\n  class BLOB extends BaseTypes.BLOB {\n    toSql() {\n      if (this._length) {\n        if (this._length.toLowerCase() === 'tiny') { // tiny = 255 bytes\n          return 'BLOB(255)';\n        }\n        if (this._length.toLowerCase() === 'medium') { // medium = 16M\n          return 'BLOB(16M)';\n        }\n        if (this._length.toLowerCase() === 'long') { // long = 2GB\n          return 'BLOB(2G)';\n        }\n        return `BLOB(${ this._length })`;\n      }\n      return 'BLOB'; // 1MB\n    }\n    escape(blob) {\n      return `BLOB('${ blob.toString().replace(/'/g, \"''\") }')`;\n    }\n    _stringify(value) {\n      if (Buffer.isBuffer(value)) {\n        return `BLOB('${ value.toString().replace(/'/g, \"''\") }')`;\n      }\n      if (Array.isArray(value)) {\n        value = Buffer.from(value);\n      } else {\n        value = Buffer.from(value.toString());\n      }\n      const hex = value.toString('hex');\n      return this._hexify(hex);\n    }\n    _hexify(hex) {\n      return `x'${ hex }'`;\n    }\n  }\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (!this._binary) {\n        if (this._length <= 4000) {\n          return `VARCHAR(${ this._length })`;\n        }\n        return `CLOB(${ this._length })`;\n      }\n      if (this._length < 255) {\n        return `CHAR(${ this._length }) FOR BIT DATA`;\n      }\n      if (this._length <= 4000) {\n        return `VARCHAR(${ this._length }) FOR BIT DATA`;\n      }\n      return `BLOB(${ this._length })`;\n    }\n    _stringify(value, options) {\n      if (this._binary) {\n        return BLOB.prototype._hexify(value.toString('hex'));\n      }\n      return options.escape(value);\n    }\n    _bindParam(value, options) {\n      return options.bindParam(this._binary ? Buffer.from(value) : value);\n    }\n  }\n  STRING.prototype.escape = false;\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      let len = 0;\n      if (this._length) {\n        switch (this._length.toLowerCase()) {\n          case 'tiny':\n            len = 256; // tiny = 2^8\n            break;\n          case 'medium':\n            len = 8192; // medium = 2^13 = 8k\n            break;\n          case 'long':\n            len = 65536; // long = 64k\n            break;\n        }\n        if ( isNaN(this._length) ) {\n          this._length = 32672;\n        }\n        if (len > 0 ) { this._length = len; }\n      } else { this._length = 32672; }\n      if ( this._length > 32672 )\n      {\n        len = `CLOB(${ this._length })`;\n      }\n      else\n      {\n        len = `VARCHAR(${ this._length })`;\n      }\n      warn(`Db2 does not support TEXT datatype. ${len} will be used instead.`);\n      return len;\n    }\n  }\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BOOLEAN';\n    }\n    _sanitize(value) {\n      if (value !== null && value !== undefined) {\n        if (Buffer.isBuffer(value) && value.length === 1) {\n          // Bit fields are returned as buffers\n          value = value[0];\n        }\n\n        if (typeof value === 'string') {\n          // Only take action on valid boolean strings.\n          value = value === 'true' ? true : value === 'false' ? false : value;\n          value = value === '\\u0001' ? true : value === '\\u0000' ? false : value;\n\n        } else if (typeof value === 'number') {\n          // Only take action on valid boolean integers.\n          value = value === 1 ? true : value === 0 ? false : value;\n        }\n      }\n\n      return value;\n    }\n  }\n  BOOLEAN.parse = BOOLEAN.prototype._sanitize;\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36) FOR BIT DATA';\n    }\n  }\n\n  class NOW extends BaseTypes.NOW {\n    toSql() {\n      return 'CURRENT TIME';\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      if (this._length < 0) { this._length = 0; }\n      if (this._length > 6) { this._length = 6; }\n      return `TIMESTAMP${ this._length ? `(${ this._length })` : ''}`;\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n\n      if (this._length > 0) {\n        let msec = '.';\n        for ( let i = 0; i < this._length && i < 6; i++ ) {\n          msec += 'S';\n        }\n        return date.format(`YYYY-MM-DD HH:mm:ss${msec}`);\n      }\n      return date.format('YYYY-MM-DD HH:mm:ss');\n    }\n    static parse(value) {\n      if (typeof value !== 'string') {\n        value = value.string();\n      }\n      if (value === null) {\n        return value;\n      }\n      value = new Date(momentTz.utc(value));\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return momentTz(value).format('YYYY-MM-DD');\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class REAL extends BaseTypes.REAL {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // Db2 does not support any options for real\n      if (this._length || this.options.length || this._unsigned || this._zerofill) {\n        warn('Db2 does not support REAL with options. Plain `REAL` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n  }\n\n  class FLOAT extends BaseTypes.FLOAT {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // Db2 does only support lengths as option.\n      // Values between 1-24 result in 7 digits precision (4 bytes storage size)\n      // Values between 25-53 result in 15 digits precision (8 bytes size)\n      // If decimals are provided remove these and print a warning\n      if (this._decimals) {\n        warn('Db2 does not support Float with decimals. Plain `FLOAT` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n      }\n      if (this._unsigned) {\n        warn('Db2 does not support Float unsigned. `UNSIGNED` was removed.');\n        this._unsigned = undefined;\n      }\n      if (this._zerofill) {\n        warn('Db2 does not support Float zerofill. `ZEROFILL` was removed.');\n        this._zerofill = undefined;\n      }\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'VARCHAR(255)';\n    }\n  }\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // db2 does not support any parameters for double\n      if (this._length || this.options.length ||\n          this._unsigned || this._zerofill)\n      {\n        warn('db2 does not support DOUBLE with options. ' +\n             'Plain DOUBLE will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n    toSql() {\n      return 'DOUBLE';\n    }\n  }\n  DOUBLE.prototype.key = DOUBLE.key = 'DOUBLE';\n\n  return {\n    BLOB,\n    BOOLEAN,\n    ENUM,\n    STRING,\n    UUID,\n    DATE,\n    DATEONLY,\n    NOW,\n    TINYINT,\n    SMALLINT,\n    INTEGER,\n    DOUBLE,\n    'DOUBLE PRECISION': DOUBLE,\n    BIGINT,\n    REAL,\n    FLOAT,\n    TEXT\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/snowflake/data-types.js":{"lineLengths":[13,44,33,33,108,48,52,46,44,47,49,50,47,50,46,44,48,47,68,53,41,41,46,48,52,44,37,13,25,5,31,35,50,7,25,54,7,48,5,34,29,27,21,7,47,62,14,57,7,19,5,3,45,25,28,5,3,37,13,27,5,3,37,13,20,5,3,43,13,23,5,3,41,32,104,5,3,10,9,9,12,13,9,18,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/snowflake/data-types.js"],"sourcesContent":["'use strict';\n\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://dev.snowflake.com/doc/refman/5.7/en/data-types.html';\n\n  /**\n   * types: [buffer_type, ...]\n   *\n   * @see buffer_type here https://dev.snowflake.com/doc/refman/5.7/en/c-api-prepared-statement-type-codes.html\n   * @see hex here https://github.com/sidorares/node-mysql2/blob/master/lib/constants/types.js\n   */\n\n  BaseTypes.DATE.types.snowflake = ['DATETIME'];\n  BaseTypes.STRING.types.snowflake = ['VAR_STRING'];\n  BaseTypes.CHAR.types.snowflake = ['STRING'];\n  BaseTypes.TEXT.types.snowflake = ['BLOB'];\n  BaseTypes.TINYINT.types.snowflake = ['TINY'];\n  BaseTypes.SMALLINT.types.snowflake = ['SHORT'];\n  BaseTypes.MEDIUMINT.types.snowflake = ['INT24'];\n  BaseTypes.INTEGER.types.snowflake = ['LONG'];\n  BaseTypes.BIGINT.types.snowflake = ['LONGLONG'];\n  BaseTypes.FLOAT.types.snowflake = ['FLOAT'];\n  BaseTypes.TIME.types.snowflake = ['TIME'];\n  BaseTypes.DATEONLY.types.snowflake = ['DATE'];\n  BaseTypes.BOOLEAN.types.snowflake = ['TINY'];\n  BaseTypes.BLOB.types.snowflake = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.snowflake = ['NEWDECIMAL'];\n  BaseTypes.UUID.types.snowflake = false;\n  // Enum is not supported\n  // https://docs.snowflake.com/en/sql-reference/data-types-unsupported.html\n  BaseTypes.ENUM.types.snowflake = false;\n  BaseTypes.REAL.types.snowflake = ['DOUBLE'];\n  BaseTypes.DOUBLE.types.snowflake = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.snowflake = ['GEOMETRY'];\n  BaseTypes.JSON.types.snowflake = ['JSON'];\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'TIMESTAMP';\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n      if (this._length) {\n        return date.format('YYYY-MM-DD HH:mm:ss.SSS');\n      }\n      return date.format('YYYY-MM-DD HH:mm:ss');\n    }\n    static parse(value, options) {\n      value = value.string();\n      if (value === null) {\n        return value;\n      }\n      if (momentTz.tz.zone(options.timezone)) {\n        value = momentTz.tz(value, options.timezone).toDate();\n      }\n      else {\n        value = new Date(`${value} ${options.timezone}`);\n      }\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return value.string();\n    }\n  }\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      // https://community.snowflake.com/s/question/0D50Z00009LH2fl/what-is-the-best-way-to-store-uuids\n      return 'VARCHAR(36)';\n    }\n  }\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      return 'TEXT';\n    }\n  }\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BOOLEAN';\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value : JSON.stringify(value);\n    }\n  }\n\n  return {\n    TEXT,\n    DATE,\n    BOOLEAN,\n    DATEONLY,\n    UUID,\n    JSON: JSONTYPE\n  };\n};\n"],"mappings":";AAEA,MAAM,WAAW,QAAQ;AACzB,MAAM,SAAS,QAAQ;AAEvB,OAAO,UAAU,eAAa;AAC5B,YAAU,SAAS,UAAU,eAAe;AAS5C,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,OAAO,MAAM,YAAY,CAAC;AACpC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,SAAS,MAAM,YAAY,CAAC;AACtC,YAAU,UAAU,MAAM,YAAY,CAAC;AACvC,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,OAAO,MAAM,YAAY,CAAC;AACpC,YAAU,MAAM,MAAM,YAAY,CAAC;AACnC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,SAAS,MAAM,YAAY,CAAC;AACtC,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,KAAK,MAAM,YAAY,CAAC,YAAY,QAAQ;AACtD,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,KAAK,MAAM,YAAY;AAGjC,YAAU,KAAK,MAAM,YAAY;AACjC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,OAAO,MAAM,YAAY,CAAC;AACpC,YAAU,SAAS,MAAM,YAAY,CAAC;AACtC,YAAU,KAAK,MAAM,YAAY,CAAC;AAElC,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA,IAET,WAAW,MAAM,SAAS;AACxB,UAAI,CAAC,OAAO,SAAS,OAAO;AAC1B,eAAO,KAAK,eAAe,MAAM;AAAA;AAEnC,UAAI,KAAK,SAAS;AAChB,eAAO,KAAK,OAAO;AAAA;AAErB,aAAO,KAAK,OAAO;AAAA;AAAA,WAEd,MAAM,OAAO,SAAS;AAC3B,cAAQ,MAAM;AACd,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA;AAET,UAAI,SAAS,GAAG,KAAK,QAAQ,WAAW;AACtC,gBAAQ,SAAS,GAAG,OAAO,QAAQ,UAAU;AAAA,aAE1C;AACH,gBAAQ,IAAI,KAAK,GAAG,SAAS,QAAQ;AAAA;AAEvC,aAAO;AAAA;AAAA;AAIX,yBAAuB,UAAU,SAAS;AAAA,WACjC,MAAM,OAAO;AAClB,aAAO,MAAM;AAAA;AAAA;AAGjB,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AAEN,aAAO;AAAA;AAAA;AAIX,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,wBAAsB,UAAU,QAAQ;AAAA,IACtC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,yBAAuB,UAAU,KAAK;AAAA,IACpC,WAAW,OAAO,SAAS;AACzB,aAAO,QAAQ,cAAc,WAAW,OAAO,UAAU,WAAW,QAAQ,KAAK,UAAU;AAAA;AAAA;AAI/F,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/sql-string.js":{"lineLengths":[13,42,45,57,40,18,18,5,29,65,12,53,5,15,9,1,34,50,23,39,18,3,23,19,50,22,7,32,18,28,18,37,12,3,28,83,3,29,34,62,5,51,3,27,81,45,81,5,56,3,21,60,3,78,34,33,38,5,10,55,18,18,23,18,23,18,23,18,23,17,23,17,23,16,26,7,7,3,45,1,24,49,29,32,59,3,40,25,19,5,59,5,1,24,64,56,63,19,5,33,58,5,84,5,1,54,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/sql-string.js"],"sourcesContent":["'use strict';\n\nconst dataTypes = require('./data-types');\nconst { logger } = require('./utils/logger');\n\nfunction arrayToList(array, timeZone, dialect, format) {\n  return array.reduce((sql, val, i) => {\n    if (i !== 0) {\n      sql += ', ';\n    }\n    if (Array.isArray(val)) {\n      sql += `(${arrayToList(val, timeZone, dialect, format)})`;\n    } else {\n      sql += escape(val, timeZone, dialect, format);\n    }\n    return sql;\n  }, '');\n}\nexports.arrayToList = arrayToList;\n\nfunction escape(val, timeZone, dialect, format) {\n  let prependN = false;\n  if (val === undefined || val === null) {\n    return 'NULL';\n  }\n  switch (typeof val) {\n    case 'boolean':\n    // SQLite doesn't have true/false support. MySQL aliases true/false to 1/0\n    // for us. Postgres actually has a boolean type with true/false literals,\n    // but sequelize doesn't use it yet.\n      if (['sqlite', 'mssql'].includes(dialect)) {\n        return +!!val;\n      }\n      return (!!val).toString();\n    case 'number':\n      return val.toString();\n    case 'string':\n    // In mssql, prepend N to all quoted vals which are originally a string (for\n    // unicode compatibility)\n      prependN = dialect === 'mssql';\n      break;\n  }\n\n  if (val instanceof Date) {\n    val = dataTypes[dialect].DATE.prototype.stringify(val, { timezone: timeZone });\n  }\n\n  if (Buffer.isBuffer(val)) {\n    if (dataTypes[dialect].BLOB) {\n      return dataTypes[dialect].BLOB.prototype.stringify(val);\n    }\n\n    return dataTypes.BLOB.prototype.stringify(val);\n  }\n\n  if (Array.isArray(val)) {\n    const partialEscape = escVal => escape(escVal, timeZone, dialect, format);\n    if (dialect === 'postgres' && !format) {\n      return dataTypes.ARRAY.prototype.stringify(val, { escape: partialEscape });\n    }\n    return arrayToList(val, timeZone, dialect, format);\n  }\n\n  if (!val.replace) {\n    throw new Error(`Invalid value ${logger.inspect(val)}`);\n  }\n\n  if (['postgres', 'sqlite', 'mssql', 'snowflake', 'db2'].includes(dialect)) {\n    // http://www.postgresql.org/docs/8.2/static/sql-syntax-lexical.html#SQL-SYNTAX-STRINGS\n    // http://stackoverflow.com/q/603572/130598\n    val = val.replace(/'/g, \"''\");\n\n    if (dialect === 'postgres') {\n      // null character is not allowed in Postgres\n      val = val.replace(/\\0/g, '\\\\0');\n    }\n  } else {\n\n    // eslint-disable-next-line no-control-regex\n    val = val.replace(/[\\0\\n\\r\\b\\t\\\\'\"\\x1a]/g, s => {\n      switch (s) {\n        case '\\0': return '\\\\0';\n        case '\\n': return '\\\\n';\n        case '\\r': return '\\\\r';\n        case '\\b': return '\\\\b';\n        case '\\t': return '\\\\t';\n        case '\\x1a': return '\\\\Z';\n        default: return `\\\\${s}`;\n      }\n    });\n  }\n  return `${(prependN ? \"N'\" : \"'\") + val}'`;\n}\nexports.escape = escape;\n\nfunction format(sql, values, timeZone, dialect) {\n  values = [].concat(values);\n\n  if (typeof sql !== 'string') {\n    throw new Error(`Invalid SQL string provided: ${sql}`);\n  }\n\n  return sql.replace(/\\?/g, match => {\n    if (!values.length) {\n      return match;\n    }\n\n    return escape(values.shift(), timeZone, dialect, true);\n  });\n}\nexports.format = format;\n\nfunction formatNamedParameters(sql, values, timeZone, dialect) {\n  return sql.replace(/:+(?!\\d)(\\w+)/g, (value, key) => {\n    if ('postgres' === dialect && '::' === value.slice(0, 2)) {\n      return value;\n    }\n\n    if (values[key] !== undefined) {\n      return escape(values[key], timeZone, dialect, true);\n    }\n    throw new Error(`Named parameter \"${value}\" has no value in the given object.`);\n  });\n}\nexports.formatNamedParameters = formatNamedParameters;\n"],"mappings":";AAEA,MAAM,YAAY,QAAQ;AAC1B,MAAM,EAAE,WAAW,QAAQ;AAE3B,qBAAqB,OAAO,UAAU,SAAS,SAAQ;AACrD,SAAO,MAAM,OAAO,CAAC,KAAK,KAAK,MAAM;AACnC,QAAI,MAAM,GAAG;AACX,aAAO;AAAA;AAET,QAAI,MAAM,QAAQ,MAAM;AACtB,aAAO,IAAI,YAAY,KAAK,UAAU,SAAS;AAAA,WAC1C;AACL,aAAO,OAAO,KAAK,UAAU,SAAS;AAAA;AAExC,WAAO;AAAA,KACN;AAAA;AAEL,QAAQ,cAAc;AAEtB,gBAAgB,KAAK,UAAU,SAAS,SAAQ;AAC9C,MAAI,WAAW;AACf,MAAI,QAAQ,UAAa,QAAQ,MAAM;AACrC,WAAO;AAAA;AAET,UAAQ,OAAO;AAAA,SACR;AAIH,UAAI,CAAC,UAAU,SAAS,SAAS,UAAU;AACzC,eAAO,CAAC,CAAC,CAAC;AAAA;AAEZ,aAAQ,EAAC,CAAC,KAAK;AAAA,SACZ;AACH,aAAO,IAAI;AAAA,SACR;AAGH,iBAAW,YAAY;AACvB;AAAA;AAGJ,MAAI,eAAe,MAAM;AACvB,UAAM,UAAU,SAAS,KAAK,UAAU,UAAU,KAAK,EAAE,UAAU;AAAA;AAGrE,MAAI,OAAO,SAAS,MAAM;AACxB,QAAI,UAAU,SAAS,MAAM;AAC3B,aAAO,UAAU,SAAS,KAAK,UAAU,UAAU;AAAA;AAGrD,WAAO,UAAU,KAAK,UAAU,UAAU;AAAA;AAG5C,MAAI,MAAM,QAAQ,MAAM;AACtB,UAAM,gBAAgB,YAAU,OAAO,QAAQ,UAAU,SAAS;AAClE,QAAI,YAAY,cAAc,CAAC,SAAQ;AACrC,aAAO,UAAU,MAAM,UAAU,UAAU,KAAK,EAAE,QAAQ;AAAA;AAE5D,WAAO,YAAY,KAAK,UAAU,SAAS;AAAA;AAG7C,MAAI,CAAC,IAAI,SAAS;AAChB,UAAM,IAAI,MAAM,iBAAiB,OAAO,QAAQ;AAAA;AAGlD,MAAI,CAAC,YAAY,UAAU,SAAS,aAAa,OAAO,SAAS,UAAU;AAGzE,UAAM,IAAI,QAAQ,MAAM;AAExB,QAAI,YAAY,YAAY;AAE1B,YAAM,IAAI,QAAQ,OAAO;AAAA;AAAA,SAEtB;AAGL,UAAM,IAAI,QAAQ,yBAAyB,OAAK;AAC9C,cAAQ;AAAA,aACD;AAAM,iBAAO;AAAA,aACb;AAAM,iBAAO;AAAA,aACb;AAAM,iBAAO;AAAA,aACb;AAAM,iBAAO;AAAA,aACb;AAAM,iBAAO;AAAA,aACb;AAAQ,iBAAO;AAAA;AACX,iBAAO,KAAK;AAAA;AAAA;AAAA;AAI3B,SAAO,GAAI,YAAW,OAAO,OAAO;AAAA;AAEtC,QAAQ,SAAS;AAEjB,gBAAgB,KAAK,QAAQ,UAAU,SAAS;AAC9C,WAAS,GAAG,OAAO;AAEnB,MAAI,OAAO,QAAQ,UAAU;AAC3B,UAAM,IAAI,MAAM,gCAAgC;AAAA;AAGlD,SAAO,IAAI,QAAQ,OAAO,WAAS;AACjC,QAAI,CAAC,OAAO,QAAQ;AAClB,aAAO;AAAA;AAGT,WAAO,OAAO,OAAO,SAAS,UAAU,SAAS;AAAA;AAAA;AAGrD,QAAQ,SAAS;AAEjB,+BAA+B,KAAK,QAAQ,UAAU,SAAS;AAC7D,SAAO,IAAI,QAAQ,kBAAkB,CAAC,OAAO,QAAQ;AACnD,QAAI,AAAe,YAAf,cAA0B,AAAS,MAAM,MAAM,GAAG,OAAxB,MAA4B;AACxD,aAAO;AAAA;AAGT,QAAI,OAAO,SAAS,QAAW;AAC7B,aAAO,OAAO,OAAO,MAAM,UAAU,SAAS;AAAA;AAEhD,UAAM,IAAI,MAAM,oBAAoB;AAAA;AAAA;AAGxC,QAAQ,wBAAwB;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/operators.js":{"lineLengths":[38,82,33,25,23,66,2,19,15,34,3,12,23,23,25,23,25,23,25,23,23,29,27,33,29,35,39,35,37,31,37,33,39,33,39,33,35,37,35,39,41,45,43,25,23,25,25,31,25,41,27,28,2,27,20,37,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/operators.ts"],"sourcesContent":["interface OpTypes {\n  /**\n   * Operator -|- (PG range is adjacent to operator)\n   *\n   * ```js\n   * [Op.adjacent]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * -|- [1, 2)\n   * ```\n   */\n  readonly adjacent: unique symbol;\n  /**\n   * Operator ALL\n   *\n   * ```js\n   * [Op.gt]: {\n   *  [Op.all]: literal('SELECT 1')\n   * }\n   * ```\n   * In SQL\n   * ```sql\n   * > ALL (SELECT 1)\n   * ```\n   */\n  readonly all: unique symbol;\n  /**\n   * Operator AND\n   *\n   * ```js\n   * [Op.and]: {a: 5}\n   * ```\n   * In SQL\n   * ```sql\n   * AND (a = 5)\n   * ```\n   */\n  readonly and: unique symbol;\n  /**\n   * Operator ANY ARRAY (PG only)\n   *\n   * ```js\n   * [Op.any]: [2,3]\n   * ```\n   * In SQL\n   * ```sql\n   * ANY ARRAY[2, 3]::INTEGER\n   * ```\n   *\n   * Operator LIKE ANY ARRAY (also works for iLike and notLike)\n   *\n   * ```js\n   * [Op.like]: { [Op.any]: ['cat', 'hat']}\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE ANY ARRAY['cat', 'hat']\n   * ```\n   */\n  readonly any: unique symbol;\n  /**\n   * Operator BETWEEN\n   *\n   * ```js\n   * [Op.between]: [6, 10]\n   * ```\n   * In SQL\n   * ```sql\n   * BETWEEN 6 AND 10\n   * ```\n   */\n  readonly between: unique symbol;\n  /**\n   * With dialect specific column identifiers (PG in this example)\n   *\n   * ```js\n   * [Op.col]: 'user.organization_id'\n   * ```\n   * In SQL\n   * ```sql\n   * = \"user\".\"organization_id\"\n   * ```\n   */\n  readonly col: unique symbol;\n  /**\n   * Operator <@ (PG array contained by operator)\n   *\n   * ```js\n   * [Op.contained]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * <@ [1, 2)\n   * ```\n   */\n  readonly contained: unique symbol;\n  /**\n   * Operator @> (PG array contains operator)\n   *\n   * ```js\n   * [Op.contains]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * @> [1, 2)\n   * ```\n   */\n  readonly contains: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.endsWith]: 'hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE '%hat'\n   * ```\n   */\n  readonly endsWith: unique symbol;\n  /**\n   * Operator =\n   *\n   * ```js\n   * [Op.eq]: 3\n   * ```\n   * In SQL\n   * ```sql\n   * = 3\n   * ```\n   */\n  readonly eq: unique symbol;\n  /**\n   * Operator >\n   *\n   * ```js\n   * [Op.gt]: 6\n   * ```\n   * In SQL\n   * ```sql\n   * > 6\n   * ```\n   */\n  readonly gt: unique symbol;\n  /**\n   * Operator >=\n   *\n   * ```js\n   * [Op.gte]: 6\n   * ```\n   * In SQL\n   * ```sql\n   * >= 6\n   * ```\n   */\n  readonly gte: unique symbol;\n\n  /**\n   * Operator ILIKE (case insensitive) (PG only)\n   *\n   * ```js\n   * [Op.iLike]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * ILIKE '%hat'\n   * ```\n   */\n  readonly iLike: unique symbol;\n  /**\n   * Operator IN\n   *\n   * ```js\n   * [Op.in]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * IN [1, 2]\n   * ```\n   */\n  readonly in: unique symbol;\n  /**\n   * Operator ~* (PG only)\n   *\n   * ```js\n   * [Op.iRegexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * ~* '^[h|a|t]'\n   * ```\n   */\n  readonly iRegexp: unique symbol;\n  /**\n   * Operator IS\n   *\n   * ```js\n   * [Op.is]: null\n   * ```\n   * In SQL\n   * ```sql\n   * IS null\n   * ```\n   */\n  readonly is: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.like]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE '%hat'\n   * ```\n   */\n  readonly like: unique symbol;\n  /**\n   * Operator <\n   *\n   * ```js\n   * [Op.lt]: 10\n   * ```\n   * In SQL\n   * ```sql\n   * < 10\n   * ```\n   */\n  readonly lt: unique symbol;\n  /**\n   * Operator <=\n   *\n   * ```js\n   * [Op.lte]: 10\n   * ```\n   * In SQL\n   * ```sql\n   * <= 10\n   * ```\n   */\n  readonly lte: unique symbol;\n  /**\n   * Operator @@\n   *\n   * ```js\n   * [Op.match]: Sequelize.fn('to_tsquery', 'fat & rat')`\n   * ```\n   * In SQL\n   * ```sql\n   * @@ to_tsquery('fat & rat')\n   * ```\n   */\n  readonly match: unique symbol;\n  /**\n   * Operator !=\n   *\n   * ```js\n   * [Op.ne]: 20\n   * ```\n   * In SQL\n   * ```sql\n   * != 20\n   * ```\n   */\n  readonly ne: unique symbol;\n  /**\n   * Operator &> (PG range does not extend to the left of operator)\n   *\n   * ```js\n   * [Op.noExtendLeft]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * &> [1, 2)\n   * ```\n   */\n  readonly noExtendLeft: unique symbol;\n  /**\n   * Operator &< (PG range does not extend to the right of operator)\n   *\n   * ```js\n   * [Op.noExtendRight]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * &< [1, 2)\n   * ```\n   */\n  readonly noExtendRight: unique symbol;\n  /**\n   * Operator NOT\n   *\n   * ```js\n   * [Op.not]: true\n   * ```\n   * In SQL\n   * ```sql\n   * IS NOT TRUE\n   * ```\n   */\n  readonly not: unique symbol;\n  /**\n   * Operator NOT BETWEEN\n   *\n   * ```js\n   * [Op.notBetween]: [11, 15]\n   * ```\n   * In SQL\n   * ```sql\n   * NOT BETWEEN 11 AND 15\n   * ```\n   */\n  readonly notBetween: unique symbol;\n  /**\n   * Operator NOT ILIKE (case insensitive) (PG only)\n   *\n   * ```js\n   * [Op.notILike]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * NOT ILIKE '%hat'\n   * ```\n   */\n  readonly notILike: unique symbol;\n  /**\n   * Operator NOT IN\n   *\n   * ```js\n   * [Op.notIn]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * NOT IN [1, 2]\n   * ```\n   */\n  readonly notIn: unique symbol;\n  /**\n   * Operator !~* (PG only)\n   *\n   * ```js\n   * [Op.notIRegexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * !~* '^[h|a|t]'\n   * ```\n   */\n  readonly notIRegexp: unique symbol;\n  /**\n   * Operator NOT LIKE\n   *\n   * ```js\n   * [Op.notLike]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * NOT LIKE '%hat'\n   * ```\n   */\n  readonly notLike: unique symbol;\n  /**\n   * Operator NOT REGEXP (MySQL/PG only)\n   *\n   * ```js\n   * [Op.notRegexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * NOT REGEXP/!~ '^[h|a|t]'\n   * ```\n   */\n  readonly notRegexp: unique symbol;\n  /**\n   * Operator OR\n   *\n   * ```js\n   * [Op.or]: [{a: 5}, {a: 6}]\n   * ```\n   * In SQL\n   * ```sql\n   * (a = 5 OR a = 6)\n   * ```\n   */\n  readonly or: unique symbol;\n  /**\n   * Operator && (PG array overlap operator)\n   *\n   * ```js\n   * [Op.overlap]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * && [1, 2)\n   * ```\n   */\n  readonly overlap: unique symbol;\n  /**\n   * Internal placeholder\n   *\n   * ```js\n   * [Op.placeholder]: true\n   * ```\n   */\n  readonly placeholder: unique symbol;\n  /**\n   * Operator REGEXP (MySQL/PG only)\n   *\n   * ```js\n   * [Op.regexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * REGEXP/~ '^[h|a|t]'\n   * ```\n   */\n  readonly regexp: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.startsWith]: 'hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE 'hat%'\n   * ```\n   */\n  readonly startsWith: unique symbol;\n  /**\n   * Operator << (PG range strictly left of operator)\n   *\n   * ```js\n   * [Op.strictLeft]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * << [1, 2)\n   * ```\n   */\n  readonly strictLeft: unique symbol;\n  /**\n   * Operator >> (PG range strictly right of operator)\n   *\n   * ```js\n   * [Op.strictRight]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * >> [1, 2)\n   * ```\n   */\n  readonly strictRight: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.substring]: 'hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE '%hat%'\n   * ```\n   */\n  readonly substring: unique symbol;\n  /**\n   * Operator VALUES\n   *\n   * ```js\n   * [Op.values]: [4, 5, 6]\n   * ```\n   * In SQL\n   * ```sql\n   * VALUES (4), (5), (6)\n   * ```\n   */\n  readonly values: unique symbol;\n}\n\n// Note: These symbols are registered in the Global Symbol Registry\n//  to counter bugs when two different versions of this library are loaded\n//  Source issue: https://github.com/sequelize/sequelize/issues/8663\n// This is not an endorsement of having two different versions of the library loaded at the same time,\n//  a lot more is going to silently break if you do this.\nexport const Op: OpTypes = {\n  eq: Symbol.for('eq'),\n  ne: Symbol.for('ne'),\n  gte: Symbol.for('gte'),\n  gt: Symbol.for('gt'),\n  lte: Symbol.for('lte'),\n  lt: Symbol.for('lt'),\n  not: Symbol.for('not'),\n  is: Symbol.for('is'),\n  in: Symbol.for('in'),\n  notIn: Symbol.for('notIn'),\n  like: Symbol.for('like'),\n  notLike: Symbol.for('notLike'),\n  iLike: Symbol.for('iLike'),\n  notILike: Symbol.for('notILike'),\n  startsWith: Symbol.for('startsWith'),\n  endsWith: Symbol.for('endsWith'),\n  substring: Symbol.for('substring'),\n  regexp: Symbol.for('regexp'),\n  notRegexp: Symbol.for('notRegexp'),\n  iRegexp: Symbol.for('iRegexp'),\n  notIRegexp: Symbol.for('notIRegexp'),\n  between: Symbol.for('between'),\n  notBetween: Symbol.for('notBetween'),\n  overlap: Symbol.for('overlap'),\n  contains: Symbol.for('contains'),\n  contained: Symbol.for('contained'),\n  adjacent: Symbol.for('adjacent'),\n  strictLeft: Symbol.for('strictLeft'),\n  strictRight: Symbol.for('strictRight'),\n  noExtendRight: Symbol.for('noExtendRight'),\n  noExtendLeft: Symbol.for('noExtendLeft'),\n  and: Symbol.for('and'),\n  or: Symbol.for('or'),\n  any: Symbol.for('any'),\n  all: Symbol.for('all'),\n  values: Symbol.for('values'),\n  col: Symbol.for('col'),\n  placeholder: Symbol.for('placeholder'),\n  join: Symbol.for('join'),\n  match: Symbol.for('match')\n} as OpTypes;\n\nexport default Op;\n\n// https://github.com/sequelize/sequelize/issues/13791\n// remove me in v7: kept for backward compatibility as `export default Op` is\n// transpiled to `module.exports.default` instead of `module.exports`\nmodule.exports = Op;\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAqeO,MAAM,KAAc;AAAA,EACzB,IAAI,OAAO,IAAI;AAAA,EACf,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,IAAI,OAAO,IAAI;AAAA,EACf,OAAO,OAAO,IAAI;AAAA,EAClB,MAAM,OAAO,IAAI;AAAA,EACjB,SAAS,OAAO,IAAI;AAAA,EACpB,OAAO,OAAO,IAAI;AAAA,EAClB,UAAU,OAAO,IAAI;AAAA,EACrB,YAAY,OAAO,IAAI;AAAA,EACvB,UAAU,OAAO,IAAI;AAAA,EACrB,WAAW,OAAO,IAAI;AAAA,EACtB,QAAQ,OAAO,IAAI;AAAA,EACnB,WAAW,OAAO,IAAI;AAAA,EACtB,SAAS,OAAO,IAAI;AAAA,EACpB,YAAY,OAAO,IAAI;AAAA,EACvB,SAAS,OAAO,IAAI;AAAA,EACpB,YAAY,OAAO,IAAI;AAAA,EACvB,SAAS,OAAO,IAAI;AAAA,EACpB,UAAU,OAAO,IAAI;AAAA,EACrB,WAAW,OAAO,IAAI;AAAA,EACtB,UAAU,OAAO,IAAI;AAAA,EACrB,YAAY,OAAO,IAAI;AAAA,EACvB,aAAa,OAAO,IAAI;AAAA,EACxB,eAAe,OAAO,IAAI;AAAA,EAC1B,cAAc,OAAO,IAAI;AAAA,EACzB,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,KAAK,OAAO,IAAI;AAAA,EAChB,QAAQ,OAAO,IAAI;AAAA,EACnB,KAAK,OAAO,IAAI;AAAA,EAChB,aAAa,OAAO,IAAI;AAAA,EACxB,MAAM,OAAO,IAAI;AAAA,EACjB,OAAO,OAAO,IAAI;AAAA;AAGpB,IAAO,oBAAQ;AAKf,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/model.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,33,28,33,33,45,55,64,58,44,44,51,51,42,33,58,34,64,52,10,15,13,12,10,10,11,16,9,8,12,14,11,15,18,10,10,10,12,13,13,12,14,9,10,10,8,3,141,13,31,46,3,31,46,3,19,38,3,42,58,60,24,41,81,64,44,11,9,47,193,73,90,9,12,5,30,24,40,57,16,29,118,5,36,67,28,52,60,7,5,25,34,20,46,28,43,38,3,32,17,12,40,30,20,47,78,34,94,11,7,57,80,85,49,11,11,7,121,187,73,7,121,187,73,7,121,187,73,7,29,37,108,29,9,7,5,30,3,47,26,46,53,7,5,61,75,25,104,7,5,93,21,5,62,65,31,146,54,19,6,86,44,38,12,69,5,19,3,34,20,18,52,39,138,7,14,13,40,27,27,30,30,9,8,5,46,51,29,25,28,8,5,46,51,29,25,28,8,5,46,51,29,28,8,5,33,38,32,25,24,28,8,5,90,35,46,39,7,7,42,48,50,5,3,26,30,3,40,39,44,75,52,53,44,98,11,45,9,7,5,3,42,25,13,42,42,41,29,13,5,92,3,53,46,78,94,7,40,5,19,3,41,18,16,26,23,64,43,56,33,16,33,9,63,7,68,34,7,37,34,92,70,47,18,47,11,29,34,26,48,48,25,9,28,56,25,9,26,41,25,9,7,5,106,3,54,26,23,23,32,20,7,26,24,21,22,37,35,25,8,44,28,29,21,16,9,39,21,152,9,29,27,14,50,42,36,18,13,11,9,7,5,34,17,28,29,29,51,44,7,5,20,49,55,73,17,9,41,42,36,17,28,9,43,17,9,45,17,9,26,53,34,17,30,9,36,21,53,47,39,9,9,17,23,3,57,23,27,34,30,28,41,40,26,39,39,5,56,46,31,42,86,43,69,7,77,68,80,68,81,21,7,44,73,82,85,34,55,55,16,49,41,9,14,53,34,52,16,41,119,9,7,47,44,98,31,46,44,34,9,7,102,114,82,43,7,84,44,7,5,76,31,5,19,3,65,52,45,47,103,63,38,58,57,37,107,13,39,15,44,11,11,7,12,63,5,26,32,72,7,60,5,103,38,32,121,27,29,50,59,29,31,22,35,10,22,23,9,26,125,7,44,43,5,14,40,28,12,127,5,32,30,70,5,61,38,41,5,36,123,5,55,30,5,36,54,78,7,34,134,55,7,135,56,7,5,67,78,5,19,3,60,59,27,36,108,5,36,74,24,27,7,24,105,261,7,201,5,72,23,247,5,23,3,37,37,20,13,5,59,38,24,34,16,57,7,5,35,58,7,3,31,24,72,5,31,15,18,7,62,26,24,5,17,3,33,25,13,178,3,30,26,41,32,19,3,50,61,41,5,44,54,42,7,67,49,7,96,73,67,47,9,9,5,19,45,5,53,3,34,57,3,41,71,58,7,3,41,29,54,5,39,49,70,29,36,5,27,13,51,54,8,18,39,34,16,65,42,72,5,29,35,23,19,29,25,22,27,28,19,26,23,17,17,16,46,95,5,27,36,48,34,132,12,46,5,39,57,60,76,155,7,44,142,7,7,71,63,38,86,7,82,133,7,76,79,7,23,7,42,111,26,57,35,34,66,85,118,9,39,81,9,7,45,128,74,7,45,128,74,7,70,128,74,7,5,31,107,59,5,68,33,29,39,44,40,47,49,16,3,30,37,39,39,38,38,58,101,44,36,29,41,39,12,9,29,46,46,12,9,9,58,66,45,9,29,41,39,12,9,29,46,46,12,9,9,36,43,41,30,12,9,48,9,7,31,34,39,36,53,56,29,35,36,26,25,54,74,30,34,40,40,71,7,43,44,7,64,38,67,7,39,65,7,57,42,110,39,61,39,64,42,7,77,120,7,92,20,119,43,59,38,16,55,9,63,42,59,36,26,53,39,7,73,62,7,84,63,45,22,34,32,7,7,88,36,35,7,17,11,58,64,61,103,89,89,59,71,90,17,7,77,5,54,115,62,60,35,108,5,64,74,56,3,37,41,29,3,30,72,70,44,53,24,49,5,24,31,5,49,80,24,44,62,79,9,36,49,36,44,74,19,77,134,9,7,104,43,73,21,61,34,83,21,11,42,21,57,44,60,56,69,72,390,95,58,15,13,11,99,9,7,5,74,125,58,41,19,41,20,7,15,7,34,104,5,24,48,5,16,3,30,84,3,35,56,3,34,38,6,63,27,18,40,41,43,57,7,5,17,3,25,47,3,21,24,3,41,59,150,116,5,34,54,12,40,5,3,24,37,6,14,18,62,21,26,23,18,18,5,41,36,19,23,37,29,90,42,88,59,39,63,11,16,26,9,92,42,14,28,47,42,26,9,7,18,43,65,70,14,92,7,5,16,3,33,58,164,5,51,87,116,7,5,72,26,50,39,41,144,31,24,49,5,41,36,36,24,70,5,92,26,29,58,217,83,7,5,30,59,94,5,57,42,50,24,61,5,110,108,24,57,5,54,56,42,7,54,36,7,51,5,55,3,58,36,13,5,95,92,65,213,5,3,56,36,24,50,24,41,96,82,7,5,36,22,3,48,52,21,29,22,26,24,22,62,30,75,64,28,24,43,42,70,39,11,22,148,40,12,7,203,37,106,7,8,20,3,41,41,18,5,45,91,23,41,8,12,74,5,39,3,33,58,143,5,39,35,127,198,26,7,5,51,17,8,3,65,39,46,31,40,41,26,38,46,5,54,64,52,27,71,5,28,58,28,31,5,176,28,24,44,14,49,7,12,76,5,45,50,116,17,3,31,39,51,23,24,50,5,33,26,66,5,42,33,5,35,47,44,25,26,25,63,32,75,33,10,5,18,3,41,58,151,5,50,34,39,5,45,31,27,7,12,12,35,6,3,36,55,3,36,55,3,36,55,3,33,32,45,5,37,3,40,61,36,43,28,40,48,7,5,29,118,5,66,3,40,45,37,24,33,31,23,28,21,3,37,61,215,5,15,47,28,52,43,55,7,45,30,5,29,3,38,61,216,5,42,27,53,83,35,105,7,5,76,67,14,32,7,5,53,15,20,9,58,22,30,81,27,30,7,52,43,55,7,31,31,11,59,76,60,9,31,21,68,20,70,102,111,177,53,85,106,20,9,39,46,67,70,176,13,13,9,64,63,21,34,20,37,7,15,47,35,7,5,3,40,37,100,5,54,41,53,5,46,14,28,9,56,81,46,7,63,29,19,119,18,7,53,33,5,3,40,30,18,22,20,33,62,62,92,40,25,32,50,26,31,5,27,39,5,67,114,91,58,56,77,76,5,56,77,98,5,51,121,5,112,48,48,5,24,59,5,135,28,31,24,58,20,5,18,3,50,26,16,5,51,58,39,25,36,43,28,40,48,7,5,115,65,33,24,20,31,31,19,42,35,37,16,36,9,7,76,84,7,139,85,7,35,76,65,65,50,93,144,16,85,9,7,27,71,7,30,26,61,57,62,15,53,25,76,11,12,29,28,59,9,7,37,62,81,28,23,13,42,51,52,49,12,14,58,131,44,61,48,67,40,63,69,15,13,47,21,13,95,48,39,23,112,60,75,74,119,13,14,9,48,45,56,40,59,50,13,11,56,40,59,50,13,11,79,55,28,11,21,11,41,51,101,9,41,121,32,43,39,43,13,11,98,56,54,11,122,9,70,113,9,134,37,42,43,39,162,25,15,70,43,128,76,15,13,13,9,7,56,205,42,59,46,54,43,40,59,40,70,193,80,17,63,69,15,13,11,45,19,11,93,46,37,21,110,61,33,60,75,74,45,120,139,52,80,98,264,29,19,99,17,15,37,13,109,48,39,23,68,107,72,11,12,7,40,49,159,93,72,11,73,40,9,37,9,27,70,7,24,6,57,3,34,45,28,39,3,33,39,31,59,104,5,149,123,5,35,18,29,19,21,28,7,41,45,25,24,56,5,18,34,153,104,5,15,64,43,31,89,82,21,130,8,71,161,12,110,5,34,103,5,24,55,5,18,3,33,45,47,30,18,28,16,34,25,45,24,56,5,18,34,170,104,5,29,61,64,148,84,29,143,34,103,5,24,55,5,18,3,40,39,31,43,62,21,18,29,23,19,23,8,41,59,60,46,44,29,9,7,12,64,94,69,43,7,5,65,160,5,25,18,27,39,113,32,68,70,7,88,55,28,48,68,7,5,24,34,55,34,32,5,23,18,35,34,38,29,41,33,37,34,9,29,26,30,73,53,50,66,52,13,13,65,27,41,62,68,51,15,15,33,48,20,71,13,11,26,12,25,50,28,38,59,11,16,75,82,27,29,15,53,52,14,36,9,7,5,15,29,45,127,19,12,76,57,74,149,30,53,33,14,32,7,5,34,102,28,5,24,34,54,32,5,18,3,42,138,3,37,80,105,5,18,3,37,47,13,5,53,37,91,5,37,65,5,36,3,32,47,42,3,55,21,3,26,74,3,43,28,35,24,32,34,104,45,9,17,9,54,61,104,61,16,35,9,25,13,5,31,43,43,12,16,21,7,45,45,52,37,32,35,35,52,7,12,39,5,33,79,5,42,62,86,80,131,5,49,21,24,143,12,143,5,28,49,5,26,3,43,64,11,18,22,8,3,44,89,208,3,23,87,61,20,11,30,54,5,59,38,64,5,61,3,14,65,3,21,32,3,28,56,43,30,5,33,3,21,56,20,19,5,28,14,91,65,7,95,50,79,9,52,51,9,36,7,34,5,92,24,15,35,43,85,21,11,80,51,11,9,7,37,129,49,9,7,20,5,27,3,28,15,22,50,19,28,26,29,36,36,9,7,188,50,49,16,35,9,71,14,33,37,35,41,25,15,46,13,12,38,55,57,11,43,48,11,16,38,50,11,9,26,73,9,7,18,5,17,19,23,43,5,51,54,44,48,54,32,7,12,95,46,20,7,25,38,93,73,57,54,52,13,11,22,9,103,22,9,124,22,9,7,137,85,7,319,54,32,7,35,5,16,3,26,29,3,23,25,35,41,7,19,5,25,29,18,5,26,32,18,5,34,3,17,14,43,5,83,3,36,30,22,36,59,5,50,44,25,66,26,36,31,41,37,29,23,44,6,16,85,44,35,27,9,81,111,14,69,113,7,5,3,23,31,89,5,39,35,18,20,7,26,29,69,14,101,7,45,5,39,32,34,36,33,7,5,64,97,74,59,56,42,58,72,96,41,5,92,39,5,99,63,28,5,36,69,43,7,112,47,7,5,37,81,143,7,5,85,99,5,79,99,5,71,136,5,27,35,5,24,71,71,22,26,68,64,7,70,55,95,25,57,63,34,11,9,68,7,24,31,96,39,30,9,7,5,109,132,46,22,17,91,43,35,28,19,44,107,10,5,105,27,18,45,18,104,95,21,18,14,27,23,77,12,31,24,78,7,23,84,5,88,22,28,55,43,17,15,11,14,66,7,5,69,175,74,66,7,5,45,45,80,208,45,23,17,38,34,91,43,35,28,19,61,61,48,44,110,115,50,67,96,251,27,17,87,15,13,83,18,168,63,48,11,12,10,5,24,71,5,41,67,33,5,29,18,3,25,30,25,17,46,7,61,20,140,5,38,35,16,32,7,16,3,27,59,3,33,59,47,28,31,36,39,48,43,33,68,61,26,62,45,5,36,3,26,30,18,18,16,24,70,5,35,15,85,76,70,123,60,75,69,53,7,93,12,180,5,24,69,5,18,3,19,59,47,5,111,139,88,45,17,3,26,57,47,30,18,18,16,24,70,5,73,76,148,59,114,24,69,20,5,18,3,36,36,39,82,28,54,16,3,36,64,11,18,22,8,3,17,39,19,5,47,19,5,146,3,23,54,3,40,44,3,12,33,17,8,3,35,3,41,3,34,3,37,3,1,40,27,23,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/model.js"],"sourcesContent":["'use strict';\n\nconst assert = require('assert');\nconst _ = require('lodash');\nconst Dottie = require('dottie');\n\nconst Utils = require('./utils');\nconst { logger } = require('./utils/logger');\nconst BelongsTo = require('./associations/belongs-to');\nconst BelongsToMany = require('./associations/belongs-to-many');\nconst InstanceValidator = require('./instance-validator');\nconst QueryTypes = require('./query-types');\nconst sequelizeErrors = require('./errors');\nconst Association = require('./associations/base');\nconst HasMany = require('./associations/has-many');\nconst DataTypes = require('./data-types');\nconst Hooks = require('./hooks');\nconst associationsMixin = require('./associations/mixin');\nconst Op = require('./operators');\nconst { noDoubleNestedGroup } = require('./utils/deprecations');\n\n\n// This list will quickly become dated, but failing to maintain this list just means\n// we won't throw a warning when we should. At least most common cases will forever be covered\n// so we stop throwing erroneous warnings when we shouldn't.\nconst validQueryKeywords = new Set(['where', 'attributes', 'paranoid', 'include', 'order', 'limit', 'offset',\n  'transaction', 'lock', 'raw', 'logging', 'benchmark', 'having', 'searchPath', 'rejectOnEmpty', 'plain',\n  'scope', 'group', 'through', 'defaults', 'distinct', 'primary', 'exception', 'type', 'hooks', 'force',\n  'name']);\n\n// List of attributes that should not be implicitly passed into subqueries/includes.\nconst nonCascadingOptions = ['include', 'attributes', 'originalAttributes', 'order', 'where', 'limit', 'offset', 'plain', 'group', 'having'];\n\n/**\n * A Model represents a table in the database. Instances of this class represent a database row.\n *\n * Model instances operate with the concept of a `dataValues` property, which stores the actual values represented by the instance.\n * By default, the values from dataValues can also be accessed directly from the Instance, that is:\n * ```js\n * instance.field\n * // is the same as\n * instance.get('field')\n * // is the same as\n * instance.getDataValue('field')\n * ```\n * However, if getters and/or setters are defined for `field` they will be invoked, instead of returning the value from `dataValues`.\n * Accessing properties directly or using `get` is preferred for regular use, `getDataValue` should only be used for custom getters.\n *\n * @see\n   * {@link Sequelize#define} for more information about getters and setters\n * @mixes Hooks\n */\nclass Model {\n  static get queryInterface() {\n    return this.sequelize.getQueryInterface();\n  }\n\n  static get queryGenerator() {\n    return this.queryInterface.queryGenerator;\n  }\n\n  /**\n   * A reference to the sequelize instance\n   *\n   * @see\n   * {@link Sequelize}\n   *\n   * @property sequelize\n   *\n   * @returns {Sequelize}\n   */\n  get sequelize() {\n    return this.constructor.sequelize;\n  }\n\n  /**\n   * Builds a new model instance.\n   *\n   * @param {object}  [values={}] an object of key value pairs\n   * @param {object}  [options] instance construction options\n   * @param {boolean} [options.raw=false] If set to true, values will ignore field and virtual setters.\n   * @param {boolean} [options.isNewRecord=true] Is this a new record\n   * @param {Array}   [options.include] an array of include options - Used to build prefetched/included model instances. See `set`\n   */\n  constructor(values = {}, options = {}) {\n    if (!this.constructor._overwrittenAttributesChecked) {\n      this.constructor._overwrittenAttributesChecked = true;\n\n      // setTimeout is hacky but necessary.\n      // Public Class Fields declared by descendants of this class\n      // will not be available until after their call to super, so after\n      // this constructor is done running.\n      setTimeout(() => {\n        const overwrittenAttributes = [];\n        for (const key of Object.keys(this.constructor._attributeManipulation)) {\n          if (Object.prototype.hasOwnProperty.call(this, key)) {\n            overwrittenAttributes.push(key);\n          }\n        }\n\n        if (overwrittenAttributes.length > 0) {\n          logger.warn(`Model ${JSON.stringify(this.constructor.name)} is declaring public class fields for attribute(s): ${overwrittenAttributes.map(attr => JSON.stringify(attr)).join(', ')}.` +\n            '\\nThese class fields are shadowing Sequelize\\'s attribute getters & setters.' +\n            '\\nSee https://sequelize.org/main/manual/model-basics.html#caveat-with-public-class-fields');\n        }\n      }, 0);\n    }\n\n    options = {\n      isNewRecord: true,\n      _schema: this.constructor._schema,\n      _schemaDelimiter: this.constructor._schemaDelimiter,\n      ...options\n    };\n\n    if (options.attributes) {\n      options.attributes = options.attributes.map(attribute => Array.isArray(attribute) ? attribute[1] : attribute);\n    }\n\n    if (!options.includeValidated) {\n      this.constructor._conformIncludes(options, this.constructor);\n      if (options.include) {\n        this.constructor._expandIncludeAll(options);\n        this.constructor._validateIncludedElements(options);\n      }\n    }\n\n    this.dataValues = {};\n    this._previousDataValues = {};\n    this.uniqno = 1;\n    this._changed = new Set();\n    this._options = options;\n\n    /**\n     * Returns true if this instance has not yet been persisted to the database\n     *\n     * @property isNewRecord\n     * @returns {boolean}\n     */\n    this.isNewRecord = options.isNewRecord;\n\n    this._initValues(values, options);\n  }\n\n  _initValues(values, options) {\n    let defaults;\n    let key;\n\n    values = { ...values };\n\n    if (options.isNewRecord) {\n      defaults = {};\n\n      if (this.constructor._hasDefaultValues) {\n        defaults = _.mapValues(this.constructor._defaultValues, valueFn => {\n          const value = valueFn();\n          return value && value instanceof Utils.SequelizeMethod ? value : _.cloneDeep(value);\n        });\n      }\n\n      // set id to null if not passed as value, a newly created dao has no id\n      // removing this breaks bulkCreate\n      // do after default values since it might have UUID as a default value\n      if (this.constructor.primaryKeyAttributes.length) {\n        this.constructor.primaryKeyAttributes.forEach(primaryKeyAttribute => {\n          if (!Object.prototype.hasOwnProperty.call(defaults, primaryKeyAttribute)) {\n            defaults[primaryKeyAttribute] = null;\n          }\n        });\n      }\n\n      if (this.constructor._timestampAttributes.createdAt && defaults[this.constructor._timestampAttributes.createdAt]) {\n        this.dataValues[this.constructor._timestampAttributes.createdAt] = Utils.toDefaultValue(defaults[this.constructor._timestampAttributes.createdAt], this.sequelize.options.dialect);\n        delete defaults[this.constructor._timestampAttributes.createdAt];\n      }\n\n      if (this.constructor._timestampAttributes.updatedAt && defaults[this.constructor._timestampAttributes.updatedAt]) {\n        this.dataValues[this.constructor._timestampAttributes.updatedAt] = Utils.toDefaultValue(defaults[this.constructor._timestampAttributes.updatedAt], this.sequelize.options.dialect);\n        delete defaults[this.constructor._timestampAttributes.updatedAt];\n      }\n\n      if (this.constructor._timestampAttributes.deletedAt && defaults[this.constructor._timestampAttributes.deletedAt]) {\n        this.dataValues[this.constructor._timestampAttributes.deletedAt] = Utils.toDefaultValue(defaults[this.constructor._timestampAttributes.deletedAt], this.sequelize.options.dialect);\n        delete defaults[this.constructor._timestampAttributes.deletedAt];\n      }\n\n      for (key in defaults) {\n        if (values[key] === undefined) {\n          this.set(key, Utils.toDefaultValue(defaults[key], this.sequelize.options.dialect), { raw: true });\n          delete values[key];\n        }\n      }\n    }\n\n    this.set(values, options);\n  }\n\n  // validateIncludedElements should have been called before this method\n  static _paranoidClause(model, options = {}) {\n    // Apply on each include\n    // This should be handled before handling where conditions because of logic with returns\n    // otherwise this code will never run on includes of a already conditionable where\n    if (options.include) {\n      for (const include of options.include) {\n        this._paranoidClause(include.model, include);\n      }\n    }\n\n    // apply paranoid when groupedLimit is used\n    if (_.get(options, 'groupedLimit.on.options.paranoid')) {\n      const throughModel = _.get(options, 'groupedLimit.on.through.model');\n      if (throughModel) {\n        options.groupedLimit.through = this._paranoidClause(throughModel, options.groupedLimit.through);\n      }\n    }\n\n    if (!model.options.timestamps || !model.options.paranoid || options.paranoid === false) {\n      // This model is not paranoid, nothing to do here;\n      return options;\n    }\n\n    const deletedAtCol = model._timestampAttributes.deletedAt;\n    const deletedAtAttribute = model.rawAttributes[deletedAtCol];\n    const deletedAtObject = {};\n\n    let deletedAtDefaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n\n    deletedAtDefaultValue = deletedAtDefaultValue || {\n      [Op.eq]: null\n    };\n\n    deletedAtObject[deletedAtAttribute.field || deletedAtCol] = deletedAtDefaultValue;\n\n    if (Utils.isWhereEmpty(options.where)) {\n      options.where = deletedAtObject;\n    } else {\n      options.where = { [Op.and]: [deletedAtObject, options.where] };\n    }\n\n    return options;\n  }\n\n  static _addDefaultAttributes() {\n    const tail = {};\n    let head = {};\n\n    // Add id if no primary key was manually added to definition\n    // Can't use this.primaryKeys here, since this function is called before PKs are identified\n    if (!_.some(this.rawAttributes, 'primaryKey')) {\n      if ('id' in this.rawAttributes) {\n        // Something is fishy here!\n        throw new Error(`A column called 'id' was added to the attributes of '${this.tableName}' but not marked with 'primaryKey: true'`);\n      }\n\n      head = {\n        id: {\n          type: new DataTypes.INTEGER(),\n          allowNull: false,\n          primaryKey: true,\n          autoIncrement: true,\n          _autoGenerated: true\n        }\n      };\n    }\n\n    if (this._timestampAttributes.createdAt) {\n      tail[this._timestampAttributes.createdAt] = {\n        type: DataTypes.DATE,\n        allowNull: false,\n        _autoGenerated: true\n      };\n    }\n\n    if (this._timestampAttributes.updatedAt) {\n      tail[this._timestampAttributes.updatedAt] = {\n        type: DataTypes.DATE,\n        allowNull: false,\n        _autoGenerated: true\n      };\n    }\n\n    if (this._timestampAttributes.deletedAt) {\n      tail[this._timestampAttributes.deletedAt] = {\n        type: DataTypes.DATE,\n        _autoGenerated: true\n      };\n    }\n\n    if (this._versionAttribute) {\n      tail[this._versionAttribute] = {\n        type: DataTypes.INTEGER,\n        allowNull: false,\n        defaultValue: 0,\n        _autoGenerated: true\n      };\n    }\n\n    const newRawAttributes = {\n      ...head,\n      ...this.rawAttributes\n    };\n    _.each(tail, (value, attr) => {\n      if (newRawAttributes[attr] === undefined) {\n        newRawAttributes[attr] = value;\n      }\n    });\n\n    this.rawAttributes = newRawAttributes;\n\n    if (!Object.keys(this.primaryKeys).length) {\n      this.primaryKeys.id = this.rawAttributes.id;\n    }\n  }\n\n  /**\n   * Returns the attributes of the model.\n   *\n   * @returns {object|any}\n  */\n  static getAttributes() {\n    return this.rawAttributes;\n  }\n\n  static _findAutoIncrementAttribute() {\n    this.autoIncrementAttribute = null;\n\n    for (const name in this.rawAttributes) {\n      if (Object.prototype.hasOwnProperty.call(this.rawAttributes, name)) {\n        const definition = this.rawAttributes[name];\n        if (definition && definition.autoIncrement) {\n          if (this.autoIncrementAttribute) {\n            throw new Error('Invalid Instance definition. Only one autoincrement field allowed.');\n          }\n          this.autoIncrementAttribute = name;\n        }\n      }\n    }\n  }\n\n  static _conformIncludes(options, self) {\n    if (!options.include) return;\n\n    // if include is not an array, wrap in an array\n    if (!Array.isArray(options.include)) {\n      options.include = [options.include];\n    } else if (!options.include.length) {\n      delete options.include;\n      return;\n    }\n\n    // convert all included elements to { model: Model } form\n    options.include = options.include.map(include => this._conformInclude(include, self));\n  }\n\n  static _transformStringAssociation(include, self) {\n    if (self && typeof include === 'string') {\n      if (!Object.prototype.hasOwnProperty.call(self.associations, include)) {\n        throw new Error(`Association with alias \"${include}\" does not exist on ${self.name}`);\n      }\n      return self.associations[include];\n    }\n    return include;\n  }\n\n  static _conformInclude(include, self) {\n    if (include) {\n      let model;\n\n      if (include._pseudo) return include;\n\n      include = this._transformStringAssociation(include, self);\n\n      if (include instanceof Association) {\n        if (self && include.target.name === self.name) {\n          model = include.source;\n        } else {\n          model = include.target;\n        }\n\n        return { model, association: include, as: include.as };\n      }\n\n      if (include.prototype && include.prototype instanceof Model) {\n        return { model: include };\n      }\n\n      if (_.isPlainObject(include)) {\n        if (include.association) {\n          include.association = this._transformStringAssociation(include.association, self);\n\n          if (self && include.association.target.name === self.name) {\n            model = include.association.source;\n          } else {\n            model = include.association.target;\n          }\n\n          if (!include.model) include.model = model;\n          if (!include.as) include.as = include.association.as;\n\n          this._conformIncludes(include, model);\n          return include;\n        }\n\n        if (include.model) {\n          this._conformIncludes(include, include.model);\n          return include;\n        }\n\n        if (include.all) {\n          this._conformIncludes(include);\n          return include;\n        }\n      }\n    }\n\n    throw new Error('Include unexpected. Element has to be either a Model, an Association or an object.');\n  }\n\n  static _expandIncludeAllElement(includes, include) {\n    // check 'all' attribute provided is valid\n    let all = include.all;\n    delete include.all;\n\n    if (all !== true) {\n      if (!Array.isArray(all)) {\n        all = [all];\n      }\n\n      const validTypes = {\n        BelongsTo: true,\n        HasOne: true,\n        HasMany: true,\n        One: ['BelongsTo', 'HasOne'],\n        Has: ['HasOne', 'HasMany'],\n        Many: ['HasMany']\n      };\n\n      for (let i = 0; i < all.length; i++) {\n        const type = all[i];\n        if (type === 'All') {\n          all = true;\n          break;\n        }\n\n        const types = validTypes[type];\n        if (!types) {\n          throw new sequelizeErrors.EagerLoadingError(`include all '${type}' is not valid - must be BelongsTo, HasOne, HasMany, One, Has, Many or All`);\n        }\n\n        if (types !== true) {\n          // replace type placeholder e.g. 'One' with its constituent types e.g. 'HasOne', 'BelongsTo'\n          all.splice(i, 1);\n          i--;\n          for (let j = 0; j < types.length; j++) {\n            if (!all.includes(types[j])) {\n              all.unshift(types[j]);\n              i++;\n            }\n          }\n        }\n      }\n    }\n\n    // add all associations of types specified to includes\n    const nested = include.nested;\n    if (nested) {\n      delete include.nested;\n\n      if (!include.include) {\n        include.include = [];\n      } else if (!Array.isArray(include.include)) {\n        include.include = [include.include];\n      }\n    }\n\n    const used = [];\n    (function addAllIncludes(parent, includes) {\n      _.forEach(parent.associations, association => {\n        if (all !== true && !all.includes(association.associationType)) {\n          return;\n        }\n\n        // check if model already included, and skip if so\n        const model = association.target;\n        const as = association.options.as;\n\n        const predicate = { model };\n        if (as) {\n          // We only add 'as' to the predicate if it actually exists\n          predicate.as = as;\n        }\n\n        if (_.some(includes, predicate)) {\n          return;\n        }\n\n        // skip if recursing over a model already nested\n        if (nested && used.includes(model)) {\n          return;\n        }\n        used.push(parent);\n\n        // include this model\n        const thisInclude = Utils.cloneDeep(include);\n        thisInclude.model = model;\n        if (as) {\n          thisInclude.as = as;\n        }\n        includes.push(thisInclude);\n\n        // run recursively if nested\n        if (nested) {\n          addAllIncludes(model, thisInclude.include);\n          if (thisInclude.include.length === 0) delete thisInclude.include;\n        }\n      });\n      used.pop();\n    })(this, includes);\n  }\n\n  static _validateIncludedElements(options, tableNames) {\n    if (!options.model) options.model = this;\n\n    tableNames = tableNames || {};\n    options.includeNames = [];\n    options.includeMap = {};\n\n    /* Legacy */\n    options.hasSingleAssociation = false;\n    options.hasMultiAssociation = false;\n\n    if (!options.parent) {\n      options.topModel = options.model;\n      options.topLimit = options.limit;\n    }\n\n    options.include = options.include.map(include => {\n      include = this._conformInclude(include);\n      include.parent = options;\n      include.topLimit = options.topLimit;\n\n      this._validateIncludedElement.call(options.model, include, tableNames, options);\n\n      if (include.duplicating === undefined) {\n        include.duplicating = include.association.isMultiAssociation;\n      }\n\n      include.hasDuplicating = include.hasDuplicating || include.duplicating;\n      include.hasRequired = include.hasRequired || include.required;\n\n      options.hasDuplicating = options.hasDuplicating || include.hasDuplicating;\n      options.hasRequired = options.hasRequired || include.required;\n\n      options.hasWhere = options.hasWhere || include.hasWhere || !!include.where;\n      return include;\n    });\n\n    for (const include of options.include) {\n      include.hasParentWhere = options.hasParentWhere || !!options.where;\n      include.hasParentRequired = options.hasParentRequired || !!options.required;\n\n      if (include.subQuery !== false && options.hasDuplicating && options.topLimit) {\n        if (include.duplicating) {\n          include.subQuery = include.subQuery || false;\n          include.subQueryFilter = include.hasRequired;\n        } else {\n          include.subQuery = include.hasRequired;\n          include.subQueryFilter = false;\n        }\n      } else {\n        include.subQuery = include.subQuery || false;\n        if (include.duplicating) {\n          include.subQueryFilter = include.subQuery;\n        } else {\n          include.subQueryFilter = false;\n          include.subQuery = include.subQuery || include.hasParentRequired && include.hasRequired && !include.separate;\n        }\n      }\n\n      options.includeMap[include.as] = include;\n      options.includeNames.push(include.as);\n\n      // Set top level options\n      if (options.topModel === options.model && options.subQuery === undefined && options.topLimit) {\n        if (include.subQuery) {\n          options.subQuery = include.subQuery;\n        } else if (include.hasDuplicating) {\n          options.subQuery = true;\n        }\n      }\n\n      /* Legacy */\n      options.hasIncludeWhere = options.hasIncludeWhere || include.hasIncludeWhere || !!include.where;\n      options.hasIncludeRequired = options.hasIncludeRequired || include.hasIncludeRequired || !!include.required;\n\n      if (include.association.isMultiAssociation || include.hasMultiAssociation) {\n        options.hasMultiAssociation = true;\n      }\n      if (include.association.isSingleAssociation || include.hasSingleAssociation) {\n        options.hasSingleAssociation = true;\n      }\n    }\n\n    if (options.topModel === options.model && options.subQuery === undefined) {\n      options.subQuery = false;\n    }\n    return options;\n  }\n\n  static _validateIncludedElement(include, tableNames, options) {\n    tableNames[include.model.getTableName()] = true;\n\n    if (include.attributes && !options.raw) {\n      include.model._expandAttributes(include);\n\n      include.originalAttributes = include.model._injectDependentVirtualAttributes(include.attributes);\n\n      include = Utils.mapFinderOptions(include, include.model);\n\n      if (include.attributes.length) {\n        _.each(include.model.primaryKeys, (attr, key) => {\n          // Include the primary key if it's not already included - take into account that the pk might be aliased (due to a .field prop)\n          if (!include.attributes.some(includeAttr => {\n            if (attr.field !== key) {\n              return Array.isArray(includeAttr) && includeAttr[0] === attr.field && includeAttr[1] === key;\n            }\n            return includeAttr === key;\n          })) {\n            include.attributes.unshift(key);\n          }\n        });\n      }\n    } else {\n      include = Utils.mapFinderOptions(include, include.model);\n    }\n\n    // pseudo include just needed the attribute logic, return\n    if (include._pseudo) {\n      if (!include.attributes) {\n        include.attributes = Object.keys(include.model.tableAttributes);\n      }\n      return Utils.mapFinderOptions(include, include.model);\n    }\n\n    // check if the current Model is actually associated with the passed Model - or it's a pseudo include\n    const association = include.association || this._getIncludedAssociation(include.model, include.as);\n\n    include.association = association;\n    include.as = association.as;\n\n    // If through, we create a pseudo child include, to ease our parsing later on\n    if (include.association.through && Object(include.association.through.model) === include.association.through.model) {\n      if (!include.include) include.include = [];\n      const through = include.association.through;\n\n      include.through = _.defaults(include.through || {}, {\n        model: through.model,\n        as: through.model.name,\n        association: {\n          isSingleAssociation: true\n        },\n        _pseudo: true,\n        parent: include\n      });\n\n\n      if (through.scope) {\n        include.through.where = include.through.where ? { [Op.and]: [include.through.where, through.scope] } : through.scope;\n      }\n\n      include.include.push(include.through);\n      tableNames[through.tableName] = true;\n    }\n\n    // include.model may be the main model, while the association target may be scoped - thus we need to look at association.target/source\n    let model;\n    if (include.model.scoped === true) {\n      // If the passed model is already scoped, keep that\n      model = include.model;\n    } else {\n      // Otherwise use the model that was originally passed to the association\n      model = include.association.target.name === include.model.name ? include.association.target : include.association.source;\n    }\n\n    model._injectScope(include);\n\n    // This check should happen after injecting the scope, since the scope may contain a .attributes\n    if (!include.attributes) {\n      include.attributes = Object.keys(include.model.tableAttributes);\n    }\n\n    include = Utils.mapFinderOptions(include, include.model);\n\n    if (include.required === undefined) {\n      include.required = !!include.where;\n    }\n\n    if (include.association.scope) {\n      include.where = include.where ? { [Op.and]: [include.where, include.association.scope] } : include.association.scope;\n    }\n\n    if (include.limit && include.separate === undefined) {\n      include.separate = true;\n    }\n\n    if (include.separate === true) {\n      if (!(include.association instanceof HasMany)) {\n        throw new Error('Only HasMany associations support include.separate');\n      }\n\n      include.duplicating = false;\n\n      if (\n        options.attributes\n        && options.attributes.length\n        && !_.flattenDepth(options.attributes, 2).includes(association.sourceKey)\n      ) {\n        options.attributes.push(association.sourceKey);\n      }\n\n      if (\n        include.attributes\n        && include.attributes.length\n        && !_.flattenDepth(include.attributes, 2).includes(association.foreignKey)\n      ) {\n        include.attributes.push(association.foreignKey);\n      }\n    }\n\n    // Validate child includes\n    if (Object.prototype.hasOwnProperty.call(include, 'include')) {\n      this._validateIncludedElements.call(include.model, include, tableNames);\n    }\n\n    return include;\n  }\n\n  static _getIncludedAssociation(targetModel, targetAlias) {\n    const associations = this.getAssociations(targetModel);\n    let association = null;\n    if (associations.length === 0) {\n      throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is not associated to ${this.name}!`);\n    }\n    if (associations.length === 1) {\n      association = this.getAssociationForAlias(targetModel, targetAlias);\n      if (association) {\n        return association;\n      }\n      if (targetAlias) {\n        const existingAliases = this.getAssociations(targetModel).map(association => association.as);\n        throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is associated to ${this.name} using an alias. ` +\n          `You've included an alias (${targetAlias}), but it does not match the alias(es) defined in your association (${existingAliases.join(', ')}).`);\n      }\n      throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is associated to ${this.name} using an alias. ` +\n        'You must use the \\'as\\' keyword to specify the alias within your include statement.');\n    }\n    association = this.getAssociationForAlias(targetModel, targetAlias);\n    if (!association) {\n      throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is associated to ${this.name} multiple times. ` +\n        'To identify the correct association, you must use the \\'as\\' keyword to specify the alias of the association you want to include.');\n    }\n    return association;\n  }\n\n\n  static _expandIncludeAll(options) {\n    const includes = options.include;\n    if (!includes) {\n      return;\n    }\n\n    for (let index = 0; index < includes.length; index++) {\n      const include = includes[index];\n\n      if (include.all) {\n        includes.splice(index, 1);\n        index--;\n\n        this._expandIncludeAllElement(includes, include);\n      }\n    }\n\n    includes.forEach(include => {\n      this._expandIncludeAll.call(include.model, include);\n    });\n  }\n\n  static _conformIndex(index) {\n    if (!index.fields) {\n      throw new Error('Missing \"fields\" property for index definition');\n    }\n\n    index = _.defaults(index, {\n      type: '',\n      parser: null\n    });\n\n    if (index.type && index.type.toLowerCase() === 'unique') {\n      index.unique = true;\n      delete index.type;\n    }\n\n    return index;\n  }\n\n\n  static _uniqIncludes(options) {\n    if (!options.include) return;\n\n    options.include = _(options.include)\n      .groupBy(include => `${include.model && include.model.name}-${include.as}`)\n      .map(includes => this._assignOptions(...includes))\n      .value();\n  }\n\n  static _baseMerge(...args) {\n    _.assignWith(...args);\n    this._conformIncludes(args[0], this);\n    this._uniqIncludes(args[0]);\n    return args[0];\n  }\n\n  static _mergeFunction(objValue, srcValue, key) {\n    if (Array.isArray(objValue) && Array.isArray(srcValue)) {\n      return _.union(objValue, srcValue);\n    }\n    if (['where', 'having'].includes(key)) {\n      if (srcValue instanceof Utils.SequelizeMethod) {\n        srcValue = { [Op.and]: srcValue };\n      }\n      if (_.isPlainObject(objValue) && _.isPlainObject(srcValue)) {\n        return Object.assign(objValue, srcValue);\n      }\n    } else if (key === 'attributes' && _.isPlainObject(objValue) && _.isPlainObject(srcValue)) {\n      return _.assignWith(objValue, srcValue, (objValue, srcValue) => {\n        if (Array.isArray(objValue) && Array.isArray(srcValue)) {\n          return _.union(objValue, srcValue);\n        }\n      });\n    }\n    // If we have a possible object/array to clone, we try it.\n    // Otherwise, we return the original value when it's not undefined,\n    // or the resulting object in that case.\n    if (srcValue) {\n      return Utils.cloneDeep(srcValue, true);\n    }\n    return srcValue === undefined ? objValue : srcValue;\n  }\n\n  static _assignOptions(...args) {\n    return this._baseMerge(...args, this._mergeFunction);\n  }\n\n  static _defaultsOptions(target, opts) {\n    return this._baseMerge(target, opts, (srcValue, objValue, key) => {\n      return this._mergeFunction(objValue, srcValue, key);\n    });\n  }\n\n  /**\n   * Initialize a model, representing a table in the DB, with attributes and options.\n   *\n   * The table columns are defined by the hash that is given as the first argument.\n   * Each attribute of the hash represents a column.\n   *\n   * @example\n   * Project.init({\n   *   columnA: {\n   *     type: Sequelize.BOOLEAN,\n   *     validate: {\n   *       is: ['[a-z]','i'],        // will only allow letters\n   *       max: 23,                  // only allow values <= 23\n   *       isIn: {\n   *         args: [['en', 'zh']],\n   *         msg: \"Must be English or Chinese\"\n   *       }\n   *     },\n   *     field: 'column_a'\n   *     // Other attributes here\n   *   },\n   *   columnB: Sequelize.STRING,\n   *   columnC: 'MY VERY OWN COLUMN TYPE'\n   * }, {sequelize})\n   *\n   * sequelize.models.modelName // The model will now be available in models under the class name\n   *\n   * @see\n   * <a href=\"/master/manual/model-basics.html\">Model Basics</a> guide\n   *\n   * @see\n   * <a href=\"/master/manual/model-basics.html\">Hooks</a> guide\n   *\n   * @see\n   * <a href=\"/master/manual/validations-and-constraints.html\"/>Validations & Constraints</a> guide\n   *\n   * @param {object}                  attributes An object, where each attribute is a column of the table. Each column can be either a DataType, a string or a type-description object, with the properties described below:\n   * @param {string|DataTypes|object} attributes.column The description of a database column\n   * @param {string|DataTypes}        attributes.column.type A string or a data type\n   * @param {boolean}                 [attributes.column.allowNull=true] If false, the column will have a NOT NULL constraint, and a not null validation will be run before an instance is saved.\n   * @param {any}                     [attributes.column.defaultValue=null] A literal default value, a JavaScript function, or an SQL function (see `sequelize.fn`)\n   * @param {string|boolean}          [attributes.column.unique=false] If true, the column will get a unique constraint. If a string is provided, the column will be part of a composite unique index. If multiple columns have the same string, they will be part of the same unique index\n   * @param {boolean}                 [attributes.column.primaryKey=false] If true, this attribute will be marked as primary key\n   * @param {string}                  [attributes.column.field=null] If set, sequelize will map the attribute name to a different name in the database\n   * @param {boolean}                 [attributes.column.autoIncrement=false] If true, this column will be set to auto increment\n   * @param {boolean}                 [attributes.column.autoIncrementIdentity=false] If true, combined with autoIncrement=true, will use Postgres `GENERATED BY DEFAULT AS IDENTITY` instead of `SERIAL`. Postgres 10+ only.\n   * @param {string}                  [attributes.column.comment=null] Comment for this column\n   * @param {string|Model}            [attributes.column.references=null] An object with reference configurations\n   * @param {string|Model}            [attributes.column.references.model] If this column references another table, provide it here as a Model, or a string\n   * @param {string}                  [attributes.column.references.key='id'] The column of the foreign table that this column references\n   * @param {string}                  [attributes.column.onUpdate] What should happen when the referenced key is updated. One of CASCADE, RESTRICT, SET DEFAULT, SET NULL or NO ACTION\n   * @param {string}                  [attributes.column.onDelete] What should happen when the referenced key is deleted. One of CASCADE, RESTRICT, SET DEFAULT, SET NULL or NO ACTION\n   * @param {Function}                [attributes.column.get] Provide a custom getter for this column. Use `this.getDataValue(String)` to manipulate the underlying values.\n   * @param {Function}                [attributes.column.set] Provide a custom setter for this column. Use `this.setDataValue(String, Value)` to manipulate the underlying values.\n   * @param {object}                  [attributes.column.validate] An object of validations to execute for this column every time the model is saved. Can be either the name of a validation provided by validator.js, a validation function provided by extending validator.js (see the `DAOValidator` property for more details), or a custom validation function. Custom validation functions are called with the value of the field and the instance itself as the `this` binding, and can possibly take a second callback argument, to signal that they are asynchronous. If the validator is sync, it should throw in the case of a failed validation; if it is async, the callback should be called with the error text.\n   * @param {object}                  options These options are merged with the default define options provided to the Sequelize constructor\n   * @param {object}                  options.sequelize Define the sequelize instance to attach to the new Model. Throw error if none is provided.\n   * @param {string}                  [options.modelName] Set name of the model. By default its same as Class name.\n   * @param {object}                  [options.defaultScope={}] Define the default search scope to use for this model. Scopes have the same form as the options passed to find / findAll\n   * @param {object}                  [options.scopes] More scopes, defined in the same way as defaultScope above. See `Model.scope` for more information about how scopes are defined, and what you can do with them\n   * @param {boolean}                 [options.omitNull] Don't persist null values. This means that all columns with null values will not be saved\n   * @param {boolean}                 [options.timestamps=true] Adds createdAt and updatedAt timestamps to the model.\n   * @param {boolean}                 [options.paranoid=false] Calling `destroy` will not delete the model, but instead set a `deletedAt` timestamp if this is true. Needs `timestamps=true` to work\n   * @param {boolean}                 [options.underscored=false] Add underscored field to all attributes, this covers user defined attributes, timestamps and foreign keys. Will not affect attributes with explicitly set `field` option\n   * @param {boolean}                 [options.freezeTableName=false] If freezeTableName is true, sequelize will not try to alter the model name to get the table name. Otherwise, the model name will be pluralized\n   * @param {object}                  [options.name] An object with two attributes, `singular` and `plural`, which are used when this model is associated to others.\n   * @param {string}                  [options.name.singular=Utils.singularize(modelName)] Singular name for model\n   * @param {string}                  [options.name.plural=Utils.pluralize(modelName)] Plural name for model\n   * @param {Array<object>}           [options.indexes] indexes definitions\n   * @param {string}                  [options.indexes[].name] The name of the index. Defaults to model name + _ + fields concatenated\n   * @param {string}                  [options.indexes[].type] Index type. Only used by mysql. One of `UNIQUE`, `FULLTEXT` and `SPATIAL`\n   * @param {string}                  [options.indexes[].using] The method to create the index by (`USING` statement in SQL). BTREE and HASH are supported by mysql and postgres, and postgres additionally supports GIST and GIN.\n   * @param {string}                  [options.indexes[].operator] Specify index operator.\n   * @param {boolean}                 [options.indexes[].unique=false] Should the index by unique? Can also be triggered by setting type to `UNIQUE`\n   * @param {boolean}                 [options.indexes[].concurrently=false] PostgresSQL will build the index without taking any write locks. Postgres only\n   * @param {Array<string|object>}    [options.indexes[].fields] An array of the fields to index. Each field can either be a string containing the name of the field, a sequelize object (e.g `sequelize.fn`), or an object with the following attributes: `attribute` (field name), `length` (create a prefix index of length chars), `order` (the direction the column should be sorted in), `collate` (the collation (sort order) for the column)\n   * @param {string|boolean}          [options.createdAt] Override the name of the createdAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.\n   * @param {string|boolean}          [options.updatedAt] Override the name of the updatedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.\n   * @param {string|boolean}          [options.deletedAt] Override the name of the deletedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.\n   * @param {string}                  [options.tableName] Defaults to pluralized model name, unless freezeTableName is true, in which case it uses model name verbatim\n   * @param {string}                  [options.schema='public'] schema\n   * @param {string}                  [options.engine] Specify engine for model's table\n   * @param {string}                  [options.charset] Specify charset for model's table\n   * @param {string}                  [options.comment] Specify comment for model's table\n   * @param {string}                  [options.collate] Specify collation for model's table\n   * @param {string}                  [options.initialAutoIncrement] Set the initial AUTO_INCREMENT value for the table in MySQL.\n   * @param {object}                  [options.hooks] An object of hook function that are called before and after certain lifecycle events. The possible hooks are: beforeValidate, afterValidate, validationFailed, beforeBulkCreate, beforeBulkDestroy, beforeBulkUpdate, beforeCreate, beforeDestroy, beforeUpdate, afterCreate, beforeSave, afterDestroy, afterUpdate, afterBulkCreate, afterSave, afterBulkDestroy and afterBulkUpdate. See Hooks for more information about hook functions and their signatures. Each property can either be a function, or an array of functions.\n   * @param {object}                  [options.validate] An object of model wide validations. Validations have access to all model values via `this`. If the validator function takes an argument, it is assumed to be async, and is called with a callback that accepts an optional error.\n   *\n   * @returns {Model}\n   */\n  static init(attributes, options = {}) {\n    if (!options.sequelize) {\n      throw new Error('No Sequelize instance passed');\n    }\n\n    this.sequelize = options.sequelize;\n\n    const globalOptions = this.sequelize.options;\n\n    options = Utils.merge(_.cloneDeep(globalOptions.define), options);\n\n    if (!options.modelName) {\n      options.modelName = this.name;\n    }\n\n    options = Utils.merge({\n      name: {\n        plural: Utils.pluralize(options.modelName),\n        singular: Utils.singularize(options.modelName)\n      },\n      indexes: [],\n      omitNull: globalOptions.omitNull,\n      schema: globalOptions.schema\n    }, options);\n\n    this.sequelize.runHooks('beforeDefine', attributes, options);\n\n    if (options.modelName !== this.name) {\n      Object.defineProperty(this, 'name', { value: options.modelName });\n    }\n    delete options.modelName;\n\n    this.options = {\n      timestamps: true,\n      validate: {},\n      freezeTableName: false,\n      underscored: false,\n      paranoid: false,\n      rejectOnEmpty: false,\n      whereCollection: null,\n      schema: null,\n      schemaDelimiter: '',\n      defaultScope: {},\n      scopes: {},\n      indexes: [],\n      ...options\n    };\n\n    // if you call \"define\" multiple times for the same modelName, do not clutter the factory\n    if (this.sequelize.isDefined(this.name)) {\n      this.sequelize.modelManager.removeModel(this.sequelize.modelManager.getModel(this.name));\n    }\n\n    this.associations = {};\n    this._setupHooks(options.hooks);\n\n    this.underscored = this.options.underscored;\n\n    if (!this.options.tableName) {\n      this.tableName = this.options.freezeTableName ? this.name : Utils.underscoredIf(Utils.pluralize(this.name), this.underscored);\n    } else {\n      this.tableName = this.options.tableName;\n    }\n\n    this._schema = this.options.schema;\n    this._schemaDelimiter = this.options.schemaDelimiter;\n\n    // error check options\n    _.each(options.validate, (validator, validatorType) => {\n      if (Object.prototype.hasOwnProperty.call(attributes, validatorType)) {\n        throw new Error(`A model validator function must not have the same name as a field. Model: ${this.name}, field/validation name: ${validatorType}`);\n      }\n\n      if (typeof validator !== 'function') {\n        throw new Error(`Members of the validate option must be functions. Model: ${this.name}, error with validate member ${validatorType}`);\n      }\n    });\n\n    this.rawAttributes = _.mapValues(attributes, (attribute, name) => {\n      attribute = this.sequelize.normalizeAttribute(attribute);\n\n      if (attribute.type === undefined) {\n        throw new Error(`Unrecognized datatype for attribute \"${this.name}.${name}\"`);\n      }\n\n      if (attribute.allowNull !== false && _.get(attribute, 'validate.notNull')) {\n        throw new Error(`Invalid definition for \"${this.name}.${name}\", \"notNull\" validator is only allowed with \"allowNull:false\"`);\n      }\n\n      if (_.get(attribute, 'references.model.prototype') instanceof Model) {\n        attribute.references.model = attribute.references.model.getTableName();\n      }\n\n      return attribute;\n    });\n\n    const tableName = this.getTableName();\n    this._indexes = this.options.indexes\n      .map(index => Utils.nameIndex(this._conformIndex(index), tableName));\n\n    this.primaryKeys = {};\n    this._readOnlyAttributes = new Set();\n    this._timestampAttributes = {};\n\n    // setup names of timestamp attributes\n    if (this.options.timestamps) {\n      for (const key of ['createdAt', 'updatedAt', 'deletedAt']) {\n        if (!['undefined', 'string', 'boolean'].includes(typeof this.options[key])) {\n          throw new Error(`Value for \"${key}\" option must be a string or a boolean, got ${typeof this.options[key]}`);\n        }\n        if (this.options[key] === '') {\n          throw new Error(`Value for \"${key}\" option cannot be an empty string`);\n        }\n      }\n\n      if (this.options.createdAt !== false) {\n        this._timestampAttributes.createdAt =\n          typeof this.options.createdAt === 'string' ? this.options.createdAt : 'createdAt';\n        this._readOnlyAttributes.add(this._timestampAttributes.createdAt);\n      }\n      if (this.options.updatedAt !== false) {\n        this._timestampAttributes.updatedAt =\n          typeof this.options.updatedAt === 'string' ? this.options.updatedAt : 'updatedAt';\n        this._readOnlyAttributes.add(this._timestampAttributes.updatedAt);\n      }\n      if (this.options.paranoid && this.options.deletedAt !== false) {\n        this._timestampAttributes.deletedAt =\n          typeof this.options.deletedAt === 'string' ? this.options.deletedAt : 'deletedAt';\n        this._readOnlyAttributes.add(this._timestampAttributes.deletedAt);\n      }\n    }\n\n    // setup name for version attribute\n    if (this.options.version) {\n      this._versionAttribute = typeof this.options.version === 'string' ? this.options.version : 'version';\n      this._readOnlyAttributes.add(this._versionAttribute);\n    }\n\n    this._hasReadOnlyAttributes = this._readOnlyAttributes.size > 0;\n\n    // Add head and tail default attributes (id, timestamps)\n    this._addDefaultAttributes();\n    this.refreshAttributes();\n    this._findAutoIncrementAttribute();\n\n    this._scope = this.options.defaultScope;\n    this._scopeNames = ['defaultScope'];\n\n    this.sequelize.modelManager.addModel(this);\n    this.sequelize.runHooks('afterDefine', this);\n\n    return this;\n  }\n\n  static refreshAttributes() {\n    const attributeManipulation = {};\n\n    this.prototype._customGetters = {};\n    this.prototype._customSetters = {};\n\n    ['get', 'set'].forEach(type => {\n      const opt = `${type}terMethods`;\n      const funcs = { ...this.options[opt] };\n      const _custom = type === 'get' ? this.prototype._customGetters : this.prototype._customSetters;\n\n      _.each(funcs, (method, attribute) => {\n        _custom[attribute] = method;\n\n        if (type === 'get') {\n          funcs[attribute] = function() {\n            return this.get(attribute);\n          };\n        }\n        if (type === 'set') {\n          funcs[attribute] = function(value) {\n            return this.set(attribute, value);\n          };\n        }\n      });\n\n      _.each(this.rawAttributes, (options, attribute) => {\n        if (Object.prototype.hasOwnProperty.call(options, type)) {\n          _custom[attribute] = options[type];\n        }\n\n        if (type === 'get') {\n          funcs[attribute] = function() {\n            return this.get(attribute);\n          };\n        }\n        if (type === 'set') {\n          funcs[attribute] = function(value) {\n            return this.set(attribute, value);\n          };\n        }\n      });\n\n      _.each(funcs, (fct, name) => {\n        if (!attributeManipulation[name]) {\n          attributeManipulation[name] = {\n            configurable: true\n          };\n        }\n        attributeManipulation[name][type] = fct;\n      });\n    });\n\n    this._dataTypeChanges = {};\n    this._dataTypeSanitizers = {};\n\n    this._hasBooleanAttributes = false;\n    this._hasDateAttributes = false;\n    this._jsonAttributes = new Set();\n    this._virtualAttributes = new Set();\n    this._defaultValues = {};\n    this.prototype.validators = {};\n\n    this.fieldRawAttributesMap = {};\n\n    this.primaryKeys = {};\n    this.uniqueKeys = {};\n\n    _.each(this.rawAttributes, (definition, name) => {\n      definition.type = this.sequelize.normalizeDataType(definition.type);\n\n      definition.Model = this;\n      definition.fieldName = name;\n      definition._modelAttribute = true;\n\n      if (definition.field === undefined) {\n        definition.field = Utils.underscoredIf(name, this.underscored);\n      }\n\n      if (definition.primaryKey === true) {\n        this.primaryKeys[name] = definition;\n      }\n\n      this.fieldRawAttributesMap[definition.field] = definition;\n\n      if (definition.type._sanitize) {\n        this._dataTypeSanitizers[name] = definition.type._sanitize;\n      }\n\n      if (definition.type._isChanged) {\n        this._dataTypeChanges[name] = definition.type._isChanged;\n      }\n\n      if (definition.type instanceof DataTypes.BOOLEAN) {\n        this._hasBooleanAttributes = true;\n      } else if (definition.type instanceof DataTypes.DATE || definition.type instanceof DataTypes.DATEONLY) {\n        this._hasDateAttributes = true;\n      } else if (definition.type instanceof DataTypes.JSON) {\n        this._jsonAttributes.add(name);\n      } else if (definition.type instanceof DataTypes.VIRTUAL) {\n        this._virtualAttributes.add(name);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(definition, 'defaultValue')) {\n        this._defaultValues[name] = () => Utils.toDefaultValue(definition.defaultValue, this.sequelize.options.dialect);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(definition, 'unique') && definition.unique) {\n        let idxName;\n        if (\n          typeof definition.unique === 'object' &&\n          Object.prototype.hasOwnProperty.call(definition.unique, 'name')\n        ) {\n          idxName = definition.unique.name;\n        } else if (typeof definition.unique === 'string') {\n          idxName = definition.unique;\n        } else {\n          idxName = `${this.tableName}_${name}_unique`;\n        }\n\n        const idx = this.uniqueKeys[idxName] || { fields: [] };\n\n        idx.fields.push(definition.field);\n        idx.msg = idx.msg || definition.unique.msg || null;\n        idx.name = idxName || false;\n        idx.column = name;\n        idx.customIndex = definition.unique !== true;\n\n        this.uniqueKeys[idxName] = idx;\n      }\n\n      if (Object.prototype.hasOwnProperty.call(definition, 'validate')) {\n        this.prototype.validators[name] = definition.validate;\n      }\n\n      if (definition.index === true && definition.type instanceof DataTypes.JSONB) {\n        this._indexes.push(\n          Utils.nameIndex(\n            this._conformIndex({\n              fields: [definition.field || name],\n              using: 'gin'\n            }),\n            this.getTableName()\n          )\n        );\n\n        delete definition.index;\n      }\n    });\n\n    // Create a map of field to attribute names\n    this.fieldAttributeMap = _.reduce(this.fieldRawAttributesMap, (map, value, key) => {\n      if (key !== value.fieldName) {\n        map[key] = value.fieldName;\n      }\n      return map;\n    }, {});\n\n    this._hasJsonAttributes = !!this._jsonAttributes.size;\n\n    this._hasVirtualAttributes = !!this._virtualAttributes.size;\n\n    this._hasDefaultValues = !_.isEmpty(this._defaultValues);\n\n    this.tableAttributes = _.omitBy(this.rawAttributes, (_a, key) => this._virtualAttributes.has(key));\n\n    this.prototype._hasCustomGetters = Object.keys(this.prototype._customGetters).length;\n    this.prototype._hasCustomSetters = Object.keys(this.prototype._customSetters).length;\n\n    for (const key of Object.keys(attributeManipulation)) {\n      if (Object.prototype.hasOwnProperty.call(Model.prototype, key)) {\n        this.sequelize.log(`Not overriding built-in method from model attribute: ${key}`);\n        continue;\n      }\n      Object.defineProperty(this.prototype, key, attributeManipulation[key]);\n    }\n\n    this.prototype.rawAttributes = this.rawAttributes;\n    this.prototype._isAttribute = key => Object.prototype.hasOwnProperty.call(this.prototype.rawAttributes, key);\n\n    // Primary key convenience constiables\n    this.primaryKeyAttributes = Object.keys(this.primaryKeys);\n    this.primaryKeyAttribute = this.primaryKeyAttributes[0];\n    if (this.primaryKeyAttribute) {\n      this.primaryKeyField = this.rawAttributes[this.primaryKeyAttribute].field || this.primaryKeyAttribute;\n    }\n\n    this._hasPrimaryKeys = this.primaryKeyAttributes.length > 0;\n    this._isPrimaryKey = key => this.primaryKeyAttributes.includes(key);\n\n    this._attributeManipulation = attributeManipulation;\n  }\n\n  /**\n   * Remove attribute from model definition\n   *\n   * @param {string} attribute name of attribute to remove\n   */\n  static removeAttribute(attribute) {\n    delete this.rawAttributes[attribute];\n    this.refreshAttributes();\n  }\n\n  /**\n   * Sync this Model to the DB, that is create the table.\n   *\n   * @param {object} [options] sync options\n   *\n   * @see\n   * {@link Sequelize#sync} for options\n   *\n   * @returns {Promise<Model>}\n   */\n  static async sync(options) {\n    options = { ...this.options, ...options };\n    options.hooks = options.hooks === undefined ? true : !!options.hooks;\n\n    const attributes = this.tableAttributes;\n    const rawAttributes = this.fieldRawAttributesMap;\n\n    if (options.hooks) {\n      await this.runHooks('beforeSync', options);\n    }\n    if (options.force) {\n      await this.drop(options);\n    }\n\n    const tableName = this.getTableName(options);\n\n    await this.queryInterface.createTable(tableName, attributes, options, this);\n\n    if (options.alter) {\n      const tableInfos = await Promise.all([\n        this.queryInterface.describeTable(tableName, options),\n        this.queryInterface.getForeignKeyReferencesForTable(tableName, options)\n      ]);\n      const columns = tableInfos[0];\n      // Use for alter foreign keys\n      const foreignKeyReferences = tableInfos[1];\n      const removedConstraints = {};\n\n      for (const columnName in attributes) {\n        if (!Object.prototype.hasOwnProperty.call(attributes, columnName)) continue;\n        if (!columns[columnName] && !columns[attributes[columnName].field]) {\n          await this.queryInterface.addColumn(tableName, attributes[columnName].field || columnName, attributes[columnName], options);\n        }\n      }\n\n      if (options.alter === true || typeof options.alter === 'object' && options.alter.drop !== false) {\n        for (const columnName in columns) {\n          if (!Object.prototype.hasOwnProperty.call(columns, columnName)) continue;\n          const currentAttribute = rawAttributes[columnName];\n          if (!currentAttribute) {\n            await this.queryInterface.removeColumn(tableName, columnName, options);\n            continue;\n          }\n          if (currentAttribute.primaryKey) continue;\n          // Check foreign keys. If it's a foreign key, it should remove constraint first.\n          const references = currentAttribute.references;\n          if (currentAttribute.references) {\n            const database = this.sequelize.config.database;\n            const schema = this.sequelize.config.schema;\n            // Find existed foreign keys\n            for (const foreignKeyReference of foreignKeyReferences) {\n              const constraintName = foreignKeyReference.constraintName;\n              if (!!constraintName\n                && foreignKeyReference.tableCatalog === database\n                && (schema ? foreignKeyReference.tableSchema === schema : true)\n                && foreignKeyReference.referencedTableName === references.model\n                && foreignKeyReference.referencedColumnName === references.key\n                && (schema ? foreignKeyReference.referencedTableSchema === schema : true)\n                && !removedConstraints[constraintName]) {\n                // Remove constraint on foreign keys.\n                await this.queryInterface.removeConstraint(tableName, constraintName, options);\n                removedConstraints[constraintName] = true;\n              }\n            }\n          }\n          await this.queryInterface.changeColumn(tableName, columnName, currentAttribute, options);\n        }\n      }\n    }\n    let indexes = await this.queryInterface.showIndex(tableName, options);\n    indexes = this._indexes.filter(item1 =>\n      !indexes.some(item2 => item1.name === item2.name)\n    ).sort((index1, index2) => {\n      if (this.sequelize.options.dialect === 'postgres') {\n      // move concurrent indexes to the bottom to avoid weird deadlocks\n        if (index1.concurrently === true) return 1;\n        if (index2.concurrently === true) return -1;\n      }\n\n      return 0;\n    });\n\n    for (const index of indexes) {\n      await this.queryInterface.addIndex(tableName, { ...options, ...index });\n    }\n\n    if (options.hooks) {\n      await this.runHooks('afterSync', options);\n    }\n\n    return this;\n  }\n\n  /**\n   * Drop the table represented by this Model\n   *\n   * @param {object}   [options] drop options\n   * @param {boolean}  [options.cascade=false]   Also drop all objects depending on this table, such as views. Only works in postgres\n   * @param {Function} [options.logging=false]   A function that gets executed while running the query to log the sql.\n   * @param {boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   *\n   * @returns {Promise}\n   */\n  static async drop(options) {\n    return await this.queryInterface.dropTable(this.getTableName(options), options);\n  }\n\n  static async dropSchema(schema) {\n    return await this.queryInterface.dropSchema(schema);\n  }\n\n  /**\n   * Apply a schema to this model. For postgres, this will actually place the schema in front of the table name - `\"schema\".\"tableName\"`,\n   * while the schema will be prepended to the table name for mysql and sqlite - `'schema.tablename'`.\n   *\n   * This method is intended for use cases where the same model is needed in multiple schemas. In such a use case it is important\n   * to call `model.schema(schema, [options]).sync()` for each model to ensure the models are created in the correct schema.\n   *\n   * If a single default schema per model is needed, set the `options.schema='schema'` parameter during the `define()` call\n   * for the model.\n   *\n   * @param {string}   schema The name of the schema\n   * @param {object}   [options] schema options\n   * @param {string}   [options.schemaDelimiter='.'] The character(s) that separates the schema name from the table name\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   *\n   * @see\n   * {@link Sequelize#define} for more information about setting a default schema.\n   *\n   * @returns {Model}\n   */\n  static schema(schema, options) {\n\n    const clone = class extends this {};\n    Object.defineProperty(clone, 'name', { value: this.name });\n\n    clone._schema = schema;\n\n    if (options) {\n      if (typeof options === 'string') {\n        clone._schemaDelimiter = options;\n      } else if (options.schemaDelimiter) {\n        clone._schemaDelimiter = options.schemaDelimiter;\n      }\n    }\n\n    return clone;\n  }\n\n  /**\n   * Get the table name of the model, taking schema into account. The method will return The name as a string if the model has no schema,\n   * or an object with `tableName`, `schema` and `delimiter` properties.\n   *\n   * @returns {string|object}\n   */\n  static getTableName() {\n    return this.queryGenerator.addSchema(this);\n  }\n\n  /**\n   * Get un-scoped model\n   *\n   * @returns {Model}\n   */\n  static unscoped() {\n    return this.scope();\n  }\n\n  /**\n   * Add a new scope to the model. This is especially useful for adding scopes with includes, when the model you want to include is not available at the time this model is defined.\n   *\n   * By default this will throw an error if a scope with that name already exists. Pass `override: true` in the options object to silence this error.\n   *\n   * @param {string}          name The name of the scope. Use `defaultScope` to override the default scope\n   * @param {object|Function} scope scope or options\n   * @param {object}          [options] scope options\n   * @param {boolean}         [options.override=false] override old scope if already defined\n   */\n  static addScope(name, scope, options) {\n    options = { override: false, ...options };\n\n    if ((name === 'defaultScope' && Object.keys(this.options.defaultScope).length > 0 || name in this.options.scopes) && options.override === false) {\n      throw new Error(`The scope ${name} already exists. Pass { override: true } as options to silence this error`);\n    }\n\n    if (name === 'defaultScope') {\n      this.options.defaultScope = this._scope = scope;\n    } else {\n      this.options.scopes[name] = scope;\n    }\n  }\n\n  /**\n   * Apply a scope created in `define` to the model.\n   *\n   * @example <caption>how to create scopes</caption>\n   * const Model = sequelize.define('model', attributes, {\n   *   defaultScope: {\n   *     where: {\n   *       username: 'dan'\n   *     },\n   *     limit: 12\n   *   },\n   *   scopes: {\n   *     isALie: {\n   *       where: {\n   *         stuff: 'cake'\n   *       }\n   *     },\n   *     complexFunction: function(email, accessLevel) {\n   *       return {\n   *         where: {\n   *           email: {\n   *             [Op.like]: email\n   *           },\n   *           access_level {\n   *             [Op.gte]: accessLevel\n   *           }\n   *         }\n   *       }\n   *     }\n   *   }\n   * })\n   *\n   * # As you have defined a default scope, every time you do Model.find, the default scope is appended to your query. Here's a couple of examples:\n   *\n   * Model.findAll() // WHERE username = 'dan'\n   * Model.findAll({ where: { age: { [Op.gt]: 12 } } }) // WHERE age > 12 AND username = 'dan'\n   *\n   * @example <caption>To invoke scope functions you can do</caption>\n   * Model.scope({ method: ['complexFunction', 'dan@sequelize.com', 42]}).findAll()\n   * // WHERE email like 'dan@sequelize.com%' AND access_level >= 42\n   *\n   * @param {?Array|object|string} [option] The scope(s) to apply. Scopes can either be passed as consecutive arguments, or as an array of arguments. To apply simple scopes and scope functions with no arguments, pass them as strings. For scope function, pass an object, with a `method` property. The value can either be a string, if the method does not take any arguments, or an array, where the first element is the name of the method, and consecutive elements are arguments to that method. Pass null to remove all scopes, including the default.\n   *\n   * @returns {Model} A reference to the model, with the scope(s) applied. Calling scope again on the returned model will clear the previous scope.\n   */\n  static scope(option) {\n    const self = class extends this {};\n    let scope;\n    let scopeName;\n\n    Object.defineProperty(self, 'name', { value: this.name });\n\n    self._scope = {};\n    self._scopeNames = [];\n    self.scoped = true;\n\n    if (!option) {\n      return self;\n    }\n\n    const options = _.flatten(arguments);\n\n    for (const option of options) {\n      scope = null;\n      scopeName = null;\n\n      if (_.isPlainObject(option)) {\n        if (option.method) {\n          if (Array.isArray(option.method) && !!self.options.scopes[option.method[0]]) {\n            scopeName = option.method[0];\n            scope = self.options.scopes[scopeName].apply(self, option.method.slice(1));\n          }\n          else if (self.options.scopes[option.method]) {\n            scopeName = option.method;\n            scope = self.options.scopes[scopeName].apply(self);\n          }\n        } else {\n          scope = option;\n        }\n      } else if (option === 'defaultScope' && _.isPlainObject(self.options.defaultScope)) {\n        scope = self.options.defaultScope;\n      } else {\n        scopeName = option;\n        scope = self.options.scopes[scopeName];\n        if (typeof scope === 'function') {\n          scope = scope();\n        }\n      }\n\n      if (scope) {\n        this._conformIncludes(scope, this);\n        // clone scope so it doesn't get modified\n        this._assignOptions(self._scope, Utils.cloneDeep(scope));\n        self._scopeNames.push(scopeName ? scopeName : 'defaultScope');\n      } else {\n        throw new sequelizeErrors.SequelizeScopeError(`Invalid scope ${scopeName} called.`);\n      }\n    }\n\n    return self;\n  }\n\n  /**\n   * Search for multiple instances.\n   *\n   * @example <caption>Simple search using AND and =</caption>\n   * Model.findAll({\n   *   where: {\n   *     attr1: 42,\n   *     attr2: 'cake'\n   *   }\n   * })\n   *\n   * # WHERE attr1 = 42 AND attr2 = 'cake'\n   *\n   * @example <caption>Using greater than, less than etc.</caption>\n   * const {gt, lte, ne, in: opIn} = Sequelize.Op;\n   *\n   * Model.findAll({\n   *   where: {\n   *     attr1: {\n   *       [gt]: 50\n   *     },\n   *     attr2: {\n   *       [lte]: 45\n   *     },\n   *     attr3: {\n   *       [opIn]: [1,2,3]\n   *     },\n   *     attr4: {\n   *       [ne]: 5\n   *     }\n   *   }\n   * })\n   *\n   * # WHERE attr1 > 50 AND attr2 <= 45 AND attr3 IN (1,2,3) AND attr4 != 5\n   *\n   * @example <caption>Queries using OR</caption>\n   * const {or, and, gt, lt} = Sequelize.Op;\n   *\n   * Model.findAll({\n   *   where: {\n   *     name: 'a project',\n   *     [or]: [\n   *       {id: [1, 2, 3]},\n   *       {\n   *         [and]: [\n   *           {id: {[gt]: 10}},\n   *           {id: {[lt]: 100}}\n   *         ]\n   *       }\n   *     ]\n   *   }\n   * });\n   *\n   * # WHERE `Model`.`name` = 'a project' AND (`Model`.`id` IN (1, 2, 3) OR (`Model`.`id` > 10 AND `Model`.`id` < 100));\n   *\n   * @see\n   * {@link Operators} for possible operators\n   * __Alias__: _all_\n   *\n   * The promise is resolved with an array of Model instances if the query succeeds._\n   *\n   * @param  {object}                                                    [options] A hash of options to describe the scope of the search\n   * @param  {object}                                                    [options.where] A hash of attributes to describe your search. See above for examples.\n   * @param  {Array<string>|object}                                      [options.attributes] A list of the attributes that you want to select, or an object with `include` and `exclude` keys. To rename an attribute, you can pass an array, with two elements - the first is the name of the attribute in the DB (or some kind of expression such as `Sequelize.literal`, `Sequelize.fn` and so on), and the second is the name you want the attribute to have in the returned instance\n   * @param  {Array<string>}                                             [options.attributes.include] Select all the attributes of the model, plus some additional ones. Useful for aggregations, e.g. `{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }`\n   * @param  {Array<string>}                                             [options.attributes.exclude] Select all the attributes of the model, except some few. Useful for security purposes e.g. `{ attributes: { exclude: ['password'] } }`\n   * @param  {boolean}                                                   [options.paranoid=true] If true, only non-deleted records will be returned. If false, both deleted and non-deleted records will be returned. Only applies if `options.paranoid` is true for the model.\n   * @param  {Array<object|Model|string>}                                [options.include] A list of associations to eagerly load using a left join. Supported is either `{ include: [ Model1, Model2, ...]}` or `{ include: [{ model: Model1, as: 'Alias' }]}` or `{ include: ['Alias']}`. If your association are set up with an `as` (eg. `X.hasMany(Y, { as: 'Z }`, you need to specify Z in the as attribute when eager loading Y).\n   * @param  {Model}                                                     [options.include[].model] The model you want to eagerly load\n   * @param  {string}                                                    [options.include[].as] The alias of the relation, in case the model you want to eagerly load is aliased. For `hasOne` / `belongsTo`, this should be the singular name, and for `hasMany`, it should be the plural\n   * @param  {Association}                                               [options.include[].association] The association you want to eagerly load. (This can be used instead of providing a model/as pair)\n   * @param  {object}                                                    [options.include[].where] Where clauses to apply to the child models. Note that this converts the eager load to an inner join, unless you explicitly set `required: false`\n   * @param  {boolean}                                                   [options.include[].or=false] Whether to bind the ON and WHERE clause together by OR instead of AND.\n   * @param  {object}                                                    [options.include[].on] Supply your own ON condition for the join.\n   * @param  {Array<string>}                                             [options.include[].attributes] A list of attributes to select from the child model\n   * @param  {boolean}                                                   [options.include[].required] If true, converts to an inner join, which means that the parent model will only be loaded if it has any matching children. True if `include.where` is set, false otherwise.\n   * @param  {boolean}                                                   [options.include[].right] If true, converts to a right join if dialect support it. Ignored if `include.required` is true.\n   * @param  {boolean}                                                   [options.include[].separate] If true, runs a separate query to fetch the associated instances, only supported for hasMany associations\n   * @param  {number}                                                    [options.include[].limit] Limit the joined rows, only supported with include.separate=true\n   * @param  {string}                                                    [options.include[].through.as] The alias for the join model, in case you want to give it a different name than the default one.\n   * @param  {boolean}                                                   [options.include[].through.paranoid] If true, only non-deleted records will be returned from the join table. If false, both deleted and non-deleted records will be returned. Only applies if through model is paranoid.\n   * @param  {object}                                                    [options.include[].through.where] Filter on the join model for belongsToMany relations\n   * @param  {Array}                                                     [options.include[].through.attributes] A list of attributes to select from the join model for belongsToMany relations\n   * @param  {Array<object|Model|string>}                                [options.include[].include] Load further nested related models\n   * @param  {boolean}                                                   [options.include[].duplicating] Mark the include as duplicating, will prevent a subquery from being used.\n   * @param  {Array|Sequelize.fn|Sequelize.col|Sequelize.literal}        [options.order] Specifies an ordering. Using an array, you can provide several columns / functions to order by. Each element can be further wrapped in a two-element array. The first element is the column / function to order by, the second is the direction. For example: `order: [['name', 'DESC']]`. In this way the column will be escaped, but the direction will not.\n   * @param  {number}                                                    [options.limit] Limit for result\n   * @param  {number}                                                    [options.offset] Offset for result\n   * @param  {Transaction}                                               [options.transaction] Transaction to run query under\n   * @param  {string|object}                                             [options.lock] Lock the selected rows. Possible options are transaction.LOCK.UPDATE and transaction.LOCK.SHARE. Postgres also supports transaction.LOCK.KEY_SHARE, transaction.LOCK.NO_KEY_UPDATE and specific model locks with joins.\n   * @param  {boolean}                                                   [options.skipLocked] Skip locked rows. Only supported in Postgres.\n   * @param  {boolean}                                                   [options.raw] Return raw result. See sequelize.query for more information.\n   * @param  {Function}                                                  [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param  {boolean}                                                   [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {object}                                                    [options.having] Having options\n   * @param  {string}                                                    [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param  {boolean|Error}                                             [options.rejectOnEmpty=false] Throws an error when no records found\n   * @param  {boolean}                                                   [options.dotNotation] Allows including tables having the same attribute/column names - which have a dot in them.\n   *\n   * @see\n   * {@link Sequelize#query}\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  static async findAll(options) {\n    if (options !== undefined && !_.isPlainObject(options)) {\n      throw new sequelizeErrors.QueryError('The argument passed to findAll must be an options object, use findByPk if you wish to pass a single primary key value');\n    }\n\n    if (options !== undefined && options.attributes) {\n      if (!Array.isArray(options.attributes) && !_.isPlainObject(options.attributes)) {\n        throw new sequelizeErrors.QueryError('The attributes option must be an array of column names or an object');\n      }\n    }\n\n    this.warnOnInvalidOptions(options, Object.keys(this.rawAttributes));\n\n    const tableNames = {};\n\n    tableNames[this.getTableName(options)] = true;\n    options = Utils.cloneDeep(options);\n\n    _.defaults(options, { hooks: true });\n\n    // set rejectOnEmpty option, defaults to model options\n    options.rejectOnEmpty = Object.prototype.hasOwnProperty.call(options, 'rejectOnEmpty')\n      ? options.rejectOnEmpty\n      : this.options.rejectOnEmpty;\n\n    this._injectScope(options);\n\n    if (options.hooks) {\n      await this.runHooks('beforeFind', options);\n    }\n    this._conformIncludes(options, this);\n    this._expandAttributes(options);\n    this._expandIncludeAll(options);\n\n    if (options.hooks) {\n      await this.runHooks('beforeFindAfterExpandIncludeAll', options);\n    }\n    options.originalAttributes = this._injectDependentVirtualAttributes(options.attributes);\n\n    if (options.include) {\n      options.hasJoin = true;\n\n      this._validateIncludedElements(options, tableNames);\n\n      // If we're not raw, we have to make sure we include the primary key for de-duplication\n      if (\n        options.attributes\n        && !options.raw\n        && this.primaryKeyAttribute\n        && !options.attributes.includes(this.primaryKeyAttribute)\n        && (!options.group || !options.hasSingleAssociation || options.hasMultiAssociation)\n      ) {\n        options.attributes = [this.primaryKeyAttribute].concat(options.attributes);\n      }\n    }\n\n    if (!options.attributes) {\n      options.attributes = Object.keys(this.rawAttributes);\n      options.originalAttributes = this._injectDependentVirtualAttributes(options.attributes);\n    }\n\n    // whereCollection is used for non-primary key updates\n    this.options.whereCollection = options.where || null;\n\n    Utils.mapFinderOptions(options, this);\n\n    options = this._paranoidClause(this, options);\n\n    if (options.hooks) {\n      await this.runHooks('beforeFindAfterOptions', options);\n    }\n    const selectOptions = { ...options, tableNames: Object.keys(tableNames) };\n    const results = await this.queryInterface.select(this, this.getTableName(selectOptions), selectOptions);\n    if (options.hooks) {\n      await this.runHooks('afterFind', results, options);\n    }\n\n    //rejectOnEmpty mode\n    if (_.isEmpty(results) && options.rejectOnEmpty) {\n      if (typeof options.rejectOnEmpty === 'function') {\n        throw new options.rejectOnEmpty();\n      }\n      if (typeof options.rejectOnEmpty === 'object') {\n        throw options.rejectOnEmpty;\n      }\n      throw new sequelizeErrors.EmptyResultError();\n    }\n\n    return await Model._findSeparate(results, options);\n  }\n\n  static warnOnInvalidOptions(options, validColumnNames) {\n    if (!_.isPlainObject(options)) {\n      return;\n    }\n\n    const unrecognizedOptions = Object.keys(options).filter(k => !validQueryKeywords.has(k));\n    const unexpectedModelAttributes = _.intersection(unrecognizedOptions, validColumnNames);\n    if (!options.where && unexpectedModelAttributes.length > 0) {\n      logger.warn(`Model attributes (${unexpectedModelAttributes.join(', ')}) passed into finder method options of model ${this.name}, but the options.where object is empty. Did you forget to use options.where?`);\n    }\n  }\n\n  static _injectDependentVirtualAttributes(attributes) {\n    if (!this._hasVirtualAttributes) return attributes;\n    if (!attributes || !Array.isArray(attributes)) return attributes;\n\n    for (const attribute of attributes) {\n      if (\n        this._virtualAttributes.has(attribute)\n        && this.rawAttributes[attribute].type.fields\n      ) {\n        attributes = attributes.concat(this.rawAttributes[attribute].type.fields);\n      }\n    }\n\n    attributes = _.uniq(attributes);\n\n    return attributes;\n  }\n\n  static async _findSeparate(results, options) {\n    if (!options.include || options.raw || !results) return results;\n\n    const original = results;\n    if (options.plain) results = [results];\n\n    if (!results.length) return original;\n\n    await Promise.all(options.include.map(async include => {\n      if (!include.separate) {\n        return await Model._findSeparate(\n          results.reduce((memo, result) => {\n            let associations = result.get(include.association.as);\n\n            // Might be an empty belongsTo relation\n            if (!associations) return memo;\n\n            // Force array so we can concat no matter if it's 1:1 or :M\n            if (!Array.isArray(associations)) associations = [associations];\n\n            for (let i = 0, len = associations.length; i !== len; ++i) {\n              memo.push(associations[i]);\n            }\n            return memo;\n          }, []),\n          {\n\n            ..._.omit(options, 'include', 'attributes', 'order', 'where', 'limit', 'offset', 'plain', 'scope'),\n            include: include.include || []\n          }\n        );\n      }\n\n      const map = await include.association.get(results, {\n\n        ..._.omit(options, nonCascadingOptions),\n        ..._.omit(include, ['parent', 'association', 'as', 'originalAttributes'])\n      });\n\n      for (const result of results) {\n        result.set(\n          include.association.as,\n          map[result.get(include.association.sourceKey)],\n          { raw: true }\n        );\n      }\n    }));\n\n    return original;\n  }\n\n  /**\n   * Search for a single instance by its primary key._\n   *\n   * @param  {number|string|Buffer}      param The value of the desired instance's primary key.\n   * @param  {object}                    [options] find options\n   * @param  {Transaction}               [options.transaction] Transaction to run query under\n   * @param  {string}                    [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @see\n   * {@link Model.findAll}           for a full explanation of options, Note that options.where is not supported.\n   *\n   * @returns {Promise<Model>}\n   */\n  static async findByPk(param, options) {\n    // return Promise resolved with null if no arguments are passed\n    if ([null, undefined].includes(param)) {\n      return null;\n    }\n\n    options = Utils.cloneDeep(options) || {};\n\n    if (typeof param === 'number' || typeof param === 'string' || Buffer.isBuffer(param)) {\n      options.where = {\n        [this.primaryKeyAttribute]: param\n      };\n    } else {\n      throw new Error(`Argument passed to findByPk is invalid: ${param}`);\n    }\n\n    // Bypass a possible overloaded findOne\n    // note: in v6, we don't bypass overload https://github.com/sequelize/sequelize/issues/14003\n    return await this.findOne(options);\n  }\n\n  /**\n   * Search for a single instance. Returns the first instance found, or null if none can be found.\n   *\n   * @param  {object}       [options] A hash of options to describe the scope of the search\n   * @param  {Transaction}  [options.transaction] Transaction to run query under\n   * @param  {string}       [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @see\n   * {@link Model.findAll} for an explanation of options\n   *\n   * @returns {Promise<Model|null>}\n   */\n  static async findOne(options) {\n    if (options !== undefined && !_.isPlainObject(options)) {\n      throw new Error('The argument passed to findOne must be an options object, use findByPk if you wish to pass a single primary key value');\n    }\n    options = Utils.cloneDeep(options);\n\n    if (options.limit === undefined) {\n      const uniqueSingleColumns = _.chain(this.uniqueKeys).values().filter(c => c.fields.length === 1).map('column').value();\n\n      // Don't add limit if querying directly on the pk or a unique column\n      if (!options.where || !_.some(options.where, (value, key) =>\n        (key === this.primaryKeyAttribute || uniqueSingleColumns.includes(key)) &&\n          (Utils.isPrimitive(value) || Buffer.isBuffer(value))\n      )) {\n        options.limit = 1;\n      }\n    }\n\n    // Bypass a possible overloaded findAll.\n    // note: in v6, we don't bypass overload https://github.com/sequelize/sequelize/issues/14003\n    return await this.findAll(_.defaults(options, {\n      plain: true\n    }));\n  }\n\n  /**\n   * Run an aggregation method on the specified field\n   *\n   * @param {string}          attribute The attribute to aggregate over. Can be a field name or *\n   * @param {string}          aggregateFunction The function to use for aggregation, e.g. sum, max etc.\n   * @param {object}          [options] Query options. See sequelize.query for full options\n   * @param {object}          [options.where] A hash of search attributes.\n   * @param {Function}        [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {boolean}         [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {DataTypes|string} [options.dataType] The type of the result. If `field` is a field in this Model, the default will be the type of that field, otherwise defaults to float.\n   * @param {boolean}         [options.distinct] Applies DISTINCT to the field being aggregated over\n   * @param {Transaction}     [options.transaction] Transaction to run query under\n   * @param {boolean}         [options.plain] When `true`, the first returned value of `aggregateFunction` is cast to `dataType` and returned. If additional attributes are specified, along with `group` clauses, set `plain` to `false` to return all values of all returned rows.  Defaults to `true`\n   *\n   * @returns {Promise<DataTypes|object>} Returns the aggregate result cast to `options.dataType`, unless `options.plain` is false, in which case the complete data result is returned.\n   */\n  static async aggregate(attribute, aggregateFunction, options) {\n    options = Utils.cloneDeep(options);\n\n    // We need to preserve attributes here as the `injectScope` call would inject non aggregate columns.\n    const prevAttributes = options.attributes;\n    this._injectScope(options);\n    options.attributes = prevAttributes;\n    this._conformIncludes(options, this);\n\n    if (options.include) {\n      this._expandIncludeAll(options);\n      this._validateIncludedElements(options);\n    }\n\n    const attrOptions = this.rawAttributes[attribute];\n    const field = attrOptions && attrOptions.field || attribute;\n    let aggregateColumn = this.sequelize.col(field);\n\n    if (options.distinct) {\n      aggregateColumn = this.sequelize.fn('DISTINCT', aggregateColumn);\n    }\n\n    let { group } = options;\n    if (Array.isArray(group) && Array.isArray(group[0])) {\n      noDoubleNestedGroup();\n      group = _.flatten(group);\n    }\n    options.attributes = _.unionBy(\n      options.attributes,\n      group,\n      [[this.sequelize.fn(aggregateFunction, aggregateColumn), aggregateFunction]],\n      a => Array.isArray(a) ? a[1] : a\n    );\n\n    if (!options.dataType) {\n      if (attrOptions) {\n        options.dataType = attrOptions.type;\n      } else {\n        // Use FLOAT as fallback\n        options.dataType = new DataTypes.FLOAT();\n      }\n    } else {\n      options.dataType = this.sequelize.normalizeDataType(options.dataType);\n    }\n\n    Utils.mapOptionFieldNames(options, this);\n    options = this._paranoidClause(this, options);\n\n    const value = await this.queryInterface.rawSelect(this.getTableName(options), options, aggregateFunction, this);\n    return value;\n  }\n\n  /**\n   * Count the number of records matching the provided where clause.\n   *\n   * If you provide an `include` option, the number of matching associations will be counted instead.\n   *\n   * @param {object}        [options] options\n   * @param {object}        [options.where] A hash of search attributes.\n   * @param {object}        [options.include] Include options. See `find` for details\n   * @param {boolean}       [options.paranoid=true] Set `true` to count only non-deleted records. Can be used on models with `paranoid` enabled\n   * @param {boolean}       [options.distinct] Apply COUNT(DISTINCT(col)) on primary key or on options.col.\n   * @param {string}        [options.col] Column on which COUNT() should be applied\n   * @param {Array}         [options.attributes] Used in conjunction with `group`\n   * @param {Array}         [options.group] For creating complex counts. Will return multiple rows as needed.\n   * @param {Transaction}   [options.transaction] Transaction to run query under\n   * @param {Function}      [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {boolean}       [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {string}        [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise<number>}\n   */\n  static async count(options) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, { hooks: true });\n    options.raw = true;\n    if (options.hooks) {\n      await this.runHooks('beforeCount', options);\n    }\n    let col = options.col || '*';\n    if (options.include) {\n      col = `${this.name}.${options.col || this.primaryKeyField}`;\n    }\n    if (options.distinct && col === '*') {\n      col = this.primaryKeyField;\n    }\n    options.plain = !options.group;\n    options.dataType = new DataTypes.INTEGER();\n    options.includeIgnoreAttributes = false;\n\n    // No limit, offset or order for the options max be given to count()\n    // Set them to null to prevent scopes setting those values\n    options.limit = null;\n    options.offset = null;\n    options.order = null;\n\n    const result = await this.aggregate(col, 'count', options);\n\n    // When grouping is used, some dialects such as PG are returning the count as string\n    // --> Manually convert it to number\n    if (Array.isArray(result)) {\n      return result.map(item => ({\n        ...item,\n        count: Number(item.count)\n      }));\n    }\n\n    return result;\n  }\n\n  /**\n   * Find all the rows matching your query, within a specified offset / limit, and get the total number of rows matching your query. This is very useful for paging\n   *\n   * @example\n   * const result = await Model.findAndCountAll({\n   *   where: ...,\n   *   limit: 12,\n   *   offset: 12\n   * });\n   *\n   * # In the above example, `result.rows` will contain rows 13 through 24, while `result.count` will return the total number of rows that matched your query.\n   *\n   * # When you add includes, only those which are required (either because they have a where clause, or because `required` is explicitly set to true on the include) will be added to the count part.\n   *\n   * # Suppose you want to find all users who have a profile attached:\n   *\n   * User.findAndCountAll({\n   *   include: [\n   *      { model: Profile, required: true}\n   *   ],\n   *   limit: 3\n   * });\n   *\n   * # Because the include for `Profile` has `required` set it will result in an inner join, and only the users who have a profile will be counted. If we remove `required` from the include, both users with and without profiles will be counted\n   *\n   * @param {object} [options] See findAll options\n   *\n   * @see\n   * {@link Model.findAll} for a specification of find and query options\n   * @see\n   * {@link Model.count} for a specification of count options\n   *\n   * @returns {Promise<{count: number | number[], rows: Model[]}>}\n   */\n  static async findAndCountAll(options) {\n    if (options !== undefined && !_.isPlainObject(options)) {\n      throw new Error('The argument passed to findAndCountAll must be an options object, use findByPk if you wish to pass a single primary key value');\n    }\n\n    const countOptions = Utils.cloneDeep(options);\n\n    if (countOptions.attributes) {\n      countOptions.attributes = undefined;\n    }\n\n    const [count, rows] = await Promise.all([\n      this.count(countOptions),\n      this.findAll(options)\n    ]);\n\n    return {\n      count,\n      rows: count === 0 ? [] : rows\n    };\n  }\n\n  /**\n   * Find the maximum value of field\n   *\n   * @param {string} field attribute / field name\n   * @param {object} [options] See aggregate\n   *\n   * @see\n   * {@link Model.aggregate} for options\n   *\n   * @returns {Promise<*>}\n   */\n  static async max(field, options) {\n    return await this.aggregate(field, 'max', options);\n  }\n\n  /**\n   * Find the minimum value of field\n   *\n   * @param {string} field attribute / field name\n   * @param {object} [options] See aggregate\n   *\n   * @see\n   * {@link Model.aggregate} for options\n   *\n   * @returns {Promise<*>}\n   */\n  static async min(field, options) {\n    return await this.aggregate(field, 'min', options);\n  }\n\n  /**\n   * Find the sum of field\n   *\n   * @param {string} field attribute / field name\n   * @param {object} [options] See aggregate\n   *\n   * @see\n   * {@link Model.aggregate} for options\n   *\n   * @returns {Promise<number>}\n   */\n  static async sum(field, options) {\n    return await this.aggregate(field, 'sum', options);\n  }\n\n  /**\n   * Builds a new model instance.\n   *\n   * @param {object|Array} values An object of key value pairs or an array of such. If an array, the function will return an array of instances.\n   * @param {object}  [options] Instance build options\n   * @param {boolean} [options.raw=false] If set to true, values will ignore field and virtual setters.\n   * @param {boolean} [options.isNewRecord=true] Is this new record\n   * @param {Array}   [options.include] an array of include options - Used to build prefetched/included model instances. See `set`\n   *\n   * @returns {Model|Array<Model>}\n   */\n  static build(values, options) {\n    if (Array.isArray(values)) {\n      return this.bulkBuild(values, options);\n    }\n\n    return new this(values, options);\n  }\n\n  static bulkBuild(valueSets, options) {\n    options = { isNewRecord: true, ...options };\n\n    if (!options.includeValidated) {\n      this._conformIncludes(options, this);\n      if (options.include) {\n        this._expandIncludeAll(options);\n        this._validateIncludedElements(options);\n      }\n    }\n\n    if (options.attributes) {\n      options.attributes = options.attributes.map(attribute => Array.isArray(attribute) ? attribute[1] : attribute);\n    }\n\n    return valueSets.map(values => this.build(values, options));\n  }\n\n  /**\n   * Builds a new model instance and calls save on it.\n   *\n   * @see\n   * {@link Model.build}\n   * @see\n   * {@link Model.save}\n   *\n   * @param  {object}         values                       Hash of data values to create new record with\n   * @param  {object}         [options]                    Build and query options\n   * @param  {boolean}        [options.raw=false]          If set to true, values will ignore field and virtual setters.\n   * @param  {boolean}        [options.isNewRecord=true]   Is this new record\n   * @param  {Array}          [options.include]            An array of include options - Used to build prefetched/included model instances. See `set`\n   * @param  {string[]}       [options.fields]             An optional array of strings, representing database columns. If fields is provided, only those columns will be validated and saved.\n   * @param  {boolean}        [options.silent=false]       If true, the updatedAt timestamp will not be updated.\n   * @param  {boolean}        [options.validate=true]      If false, validations won't be run.\n   * @param  {boolean}        [options.hooks=true]         Run before and after create / update + validate hooks\n   * @param  {Function}       [options.logging=false]      A function that gets executed while running the query to log the sql.\n   * @param  {boolean}        [options.benchmark=false]    Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {Transaction}    [options.transaction]        Transaction to run query under\n   * @param  {string}         [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param  {boolean|Array}  [options.returning=true]     Appends RETURNING <model columns> to get back all defined values; if an array of column names, append RETURNING <columns> to get back specific columns (Postgres only)\n   *\n   * @returns {Promise<Model>}\n   *\n   */\n  static async create(values, options) {\n    options = Utils.cloneDeep(options || {});\n\n    return await this.build(values, {\n      isNewRecord: true,\n      attributes: options.fields,\n      include: options.include,\n      raw: options.raw,\n      silent: options.silent\n    }).save(options);\n  }\n\n  /**\n   * Find a row that matches the query, or build (but don't save) the row if none is found.\n   * The successful result of the promise will be (instance, built)\n   *\n   * @param {object}   options find options\n   * @param {object}   options.where A hash of search attributes. If `where` is a plain object it will be appended with defaults to build a new instance.\n   * @param {object}   [options.defaults] Default values to use if building a new instance\n   * @param {object}   [options.transaction] Transaction to run query under\n   *\n   * @returns {Promise<Model,boolean>}\n   */\n  static async findOrBuild(options) {\n    if (!options || !options.where || arguments.length > 1) {\n      throw new Error(\n        'Missing where attribute in the options parameter passed to findOrBuild. ' +\n        'Please note that the API has changed, and is now options only (an object with where, defaults keys, transaction etc.)'\n      );\n    }\n\n    let values;\n\n    let instance = await this.findOne(options);\n    if (instance === null) {\n      values = { ...options.defaults };\n      if (_.isPlainObject(options.where)) {\n        values = Utils.defaults(values, options.where);\n      }\n\n      instance = this.build(values, options);\n\n      return [instance, true];\n    }\n\n    return [instance, false];\n  }\n\n  /**\n   * Find a row that matches the query, or build and save the row if none is found\n   * The successful result of the promise will be (instance, created)\n   *\n   * If no transaction is passed in the `options` object, a new transaction will be created internally, to prevent the race condition where a matching row is created by another connection after the find but before the insert call.\n   * However, it is not always possible to handle this case in SQLite, specifically if one transaction inserts and another tries to select before the first one has committed. In this case, an instance of sequelize. TimeoutError will be thrown instead.\n   * If a transaction is created, a savepoint will be created instead, and any unique constraint violation will be handled internally.\n   *\n   * @see\n   * {@link Model.findAll} for a full specification of find and options\n   *\n   * @param {object}      options find and create options\n   * @param {object}      options.where where A hash of search attributes. If `where` is a plain object it will be appended with defaults to build a new instance.\n   * @param {object}      [options.defaults] Default values to use if creating a new instance\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   *\n   * @returns {Promise<Model,boolean>}\n   */\n  static async findOrCreate(options) {\n    if (!options || !options.where || arguments.length > 1) {\n      throw new Error(\n        'Missing where attribute in the options parameter passed to findOrCreate. ' +\n        'Please note that the API has changed, and is now options only (an object with where, defaults keys, transaction etc.)'\n      );\n    }\n\n    options = { ...options };\n\n    if (options.defaults) {\n      const defaults = Object.keys(options.defaults);\n      const unknownDefaults = defaults.filter(name => !this.rawAttributes[name]);\n\n      if (unknownDefaults.length) {\n        logger.warn(`Unknown attributes (${unknownDefaults}) passed to defaults option of findOrCreate`);\n      }\n    }\n\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    const internalTransaction = !options.transaction;\n    let values;\n    let transaction;\n\n    try {\n      const t = await this.sequelize.transaction(options);\n      transaction = t;\n      options.transaction = t;\n\n      const found = await this.findOne(Utils.defaults({ transaction }, options));\n      if (found !== null) {\n        return [found, false];\n      }\n\n      values = { ...options.defaults };\n      if (_.isPlainObject(options.where)) {\n        values = Utils.defaults(values, options.where);\n      }\n\n      options.exception = true;\n      options.returning = true;\n\n      try {\n        const created = await this.create(values, options);\n        if (created.get(this.primaryKeyAttribute, { raw: true }) === null) {\n          // If the query returned an empty result for the primary key, we know that this was actually a unique constraint violation\n          throw new sequelizeErrors.UniqueConstraintError();\n        }\n\n        return [created, true];\n      } catch (err) {\n        if (!(err instanceof sequelizeErrors.UniqueConstraintError)) throw err;\n        const flattenedWhere = Utils.flattenObjectDeep(options.where);\n        const flattenedWhereKeys = Object.keys(flattenedWhere).map(name => _.last(name.split('.')));\n        const whereFields = flattenedWhereKeys.map(name => _.get(this.rawAttributes, `${name}.field`, name));\n        const defaultFields = options.defaults && Object.keys(options.defaults)\n          .filter(name => this.rawAttributes[name])\n          .map(name => this.rawAttributes[name].field || name);\n\n        const errFieldKeys = Object.keys(err.fields);\n        const errFieldsWhereIntersects = Utils.intersects(errFieldKeys, whereFields);\n        if (defaultFields && !errFieldsWhereIntersects && Utils.intersects(errFieldKeys, defaultFields)) {\n          throw err;\n        }\n\n        if (errFieldsWhereIntersects) {\n          _.each(err.fields, (value, key) => {\n            const name = this.fieldRawAttributesMap[key].fieldName;\n            if (value.toString() !== options.where[name].toString()) {\n              throw new Error(`${this.name}#findOrCreate: value used for ${name} was not equal for both the find and the create calls, '${options.where[name]}' vs '${value}'`);\n            }\n          });\n        }\n\n        // Someone must have created a matching instance inside the same transaction since we last did a find. Let's find it!\n        const otherCreated = await this.findOne(Utils.defaults({\n          transaction: internalTransaction ? null : transaction\n        }, options));\n\n        // Sanity check, ideally we caught this at the defaultFeilds/err.fields check\n        // But if we didn't and instance is null, we will throw\n        if (otherCreated === null) throw err;\n\n        return [otherCreated, false];\n      }\n    } finally {\n      if (internalTransaction && transaction) {\n        await transaction.commit();\n      }\n    }\n  }\n\n  /**\n   * A more performant findOrCreate that may not work under a transaction (working in postgres)\n   * Will execute a find call, if empty then attempt to create, if unique constraint then attempt to find again\n   *\n   * @see\n   * {@link Model.findAll} for a full specification of find and options\n   *\n   * @param {object} options find options\n   * @param {object} options.where A hash of search attributes. If `where` is a plain object it will be appended with defaults to build a new instance.\n   * @param {object} [options.defaults] Default values to use if creating a new instance\n   *\n   * @returns {Promise<Model,boolean>}\n   */\n  static async findCreateFind(options) {\n    if (!options || !options.where) {\n      throw new Error(\n        'Missing where attribute in the options parameter passed to findCreateFind.'\n      );\n    }\n\n    let values = { ...options.defaults };\n    if (_.isPlainObject(options.where)) {\n      values = Utils.defaults(values, options.where);\n    }\n\n\n    const found = await this.findOne(options);\n    if (found) return [found, false];\n\n    try {\n      const createOptions = { ...options };\n\n      // To avoid breaking a postgres transaction, run the create with `ignoreDuplicates`.\n      if (this.sequelize.options.dialect === 'postgres' && options.transaction) {\n        createOptions.ignoreDuplicates = true;\n      }\n\n      const created = await this.create(values, createOptions);\n      return [created, true];\n    } catch (err) {\n      if (!(err instanceof sequelizeErrors.UniqueConstraintError || err instanceof sequelizeErrors.EmptyResultError)) {\n        throw err;\n      }\n\n      const foundAgain = await this.findOne(options);\n      return [foundAgain, false];\n    }\n  }\n\n  /**\n   * Insert or update a single row. An update will be executed if a row which matches the supplied values on either the primary key or a unique key is found. Note that the unique index must be defined in your sequelize model and not just in the table. Otherwise you may experience a unique constraint violation, because sequelize fails to identify the row that should be updated.\n   *\n   * **Implementation details:**\n   *\n   * * MySQL - Implemented with ON DUPLICATE KEY UPDATE`\n   * * PostgreSQL - Implemented with ON CONFLICT DO UPDATE. If update data contains PK field, then PK is selected as the default conflict key. Otherwise first unique constraint/index will be selected, which can satisfy conflict key requirements.\n   * * SQLite - Implemented with ON CONFLICT DO UPDATE\n   * * MSSQL - Implemented as a single query using `MERGE` and `WHEN (NOT) MATCHED THEN`\n   *\n   * **Note** that Postgres/SQLite returns null for created, no matter if the row was created or updated\n   *\n   * @param  {object}        values                                        hash of values to upsert\n   * @param  {object}        [options]                                     upsert options\n   * @param  {boolean}       [options.validate=true]                       Run validations before the row is inserted\n   * @param  {Array}         [options.fields=Object.keys(this.attributes)] The fields to update if the record already exists. Defaults to all changed fields.  If none of the specified fields are present on the provided `values` object, an insert will still be attempted, but duplicate key conflicts will be ignored.\n   * @param  {boolean}       [options.hooks=true]                          Run before / after upsert hooks?\n   * @param  {boolean}       [options.returning=true]                      If true, fetches back auto generated values\n   * @param  {Transaction}   [options.transaction]                         Transaction to run query under\n   * @param  {Function}      [options.logging=false]                       A function that gets executed while running the query to log the sql.\n   * @param  {boolean}       [options.benchmark=false]                     Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {string}        [options.searchPath=DEFAULT]                  An optional parameter to specify the schema search_path (Postgres only)\n   * @param  {Array<string>} [options.conflictFields]                      Optional override for the conflict fields in the ON CONFLICT part of the query. Only supported in Postgres >= 9.5 and SQLite >= 3.24.0\n   *\n   * @returns {Promise<Array<Model, boolean | null>>} returns an array with two elements, the first being the new record and the second being `true` if it was just created or `false` if it already existed (except on Postgres and SQLite, which can't detect this and will always return `null` instead of a boolean).\n   */\n  static async upsert(values, options) {\n    options = {\n      hooks: true,\n      returning: true,\n      validate: true,\n      ...Utils.cloneDeep(options)\n    };\n\n    const createdAtAttr = this._timestampAttributes.createdAt;\n    const updatedAtAttr = this._timestampAttributes.updatedAt;\n    const hasPrimary = this.primaryKeyField in values || this.primaryKeyAttribute in values;\n    const instance = this.build(values);\n\n    options.model = this;\n    options.instance = instance;\n\n    const changed = Array.from(instance._changed);\n    if (!options.fields) {\n      options.fields = changed;\n    }\n\n    if (options.validate) {\n      await instance.validate(options);\n    }\n    // Map field names\n    const updatedDataValues = _.pick(instance.dataValues, changed);\n    const insertValues = Utils.mapValueFieldNames(instance.dataValues, Object.keys(instance.rawAttributes), this);\n    const updateValues = Utils.mapValueFieldNames(updatedDataValues, options.fields, this);\n    const now = Utils.now(this.sequelize.options.dialect);\n\n    // Attach createdAt\n    if (createdAtAttr && !insertValues[createdAtAttr]) {\n      const field = this.rawAttributes[createdAtAttr].field || createdAtAttr;\n      insertValues[field] = this._getDefaultTimestamp(createdAtAttr) || now;\n    }\n    if (updatedAtAttr && !insertValues[updatedAtAttr]) {\n      const field = this.rawAttributes[updatedAtAttr].field || updatedAtAttr;\n      insertValues[field] = updateValues[field] = this._getDefaultTimestamp(updatedAtAttr) || now;\n    }\n\n    // Db2 does not allow NULL values for unique columns.\n    // Add dummy values if not provided by test case or user.\n    if (this.sequelize.options.dialect === 'db2') {\n      this.uniqno = this.sequelize.dialect.queryGenerator.addUniqueFields(\n        insertValues, this.rawAttributes, this.uniqno);\n    }\n\n    // Build adds a null value for the primary key, if none was given by the user.\n    // We need to remove that because of some Postgres technicalities.\n    if (!hasPrimary && this.primaryKeyAttribute && !this.rawAttributes[this.primaryKeyAttribute].defaultValue) {\n      delete insertValues[this.primaryKeyField];\n      delete updateValues[this.primaryKeyField];\n    }\n\n    if (options.hooks) {\n      await this.runHooks('beforeUpsert', values, options);\n    }\n    const result = await this.queryInterface.upsert(this.getTableName(options), insertValues, updateValues, instance.where(), options);\n\n    const [record] = result;\n    record.isNewRecord = false;\n\n    if (options.hooks) {\n      await this.runHooks('afterUpsert', result, options);\n      return result;\n    }\n    return result;\n  }\n\n  /**\n   * Create and insert multiple instances in bulk.\n   *\n   * The success handler is passed an array of instances, but please notice that these may not completely represent the state of the rows in the DB. This is because MySQL\n   * and SQLite do not make it easy to obtain back automatically generated IDs and other default values in a way that can be mapped to multiple records.\n   * To obtain Instances for the newly created values, you will need to query for them again.\n   *\n   * If validation fails, the promise is rejected with an array-like AggregateError\n   *\n   * @param  {Array}          records                          List of objects (key/value pairs) to create instances from\n   * @param  {object}         [options]                        Bulk create options\n   * @param  {Array}          [options.fields]                 Fields to insert (defaults to all fields)\n   * @param  {boolean}        [options.validate=false]         Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation\n   * @param  {boolean}        [options.hooks=true]             Run before / after bulk create hooks?\n   * @param  {boolean}        [options.individualHooks=false]  Run before / after create hooks for each individual Instance? BulkCreate hooks will still be run if options.hooks is true.\n   * @param  {boolean}        [options.ignoreDuplicates=false] Ignore duplicate values for primary keys? (not supported by MSSQL or Postgres < 9.5)\n   * @param  {Array}          [options.updateOnDuplicate]      Fields to update if row key already exists (on duplicate key update)? (only supported by MySQL, MariaDB, SQLite >= 3.24.0 & Postgres >= 9.5).\n   * @param  {Transaction}    [options.transaction]            Transaction to run query under\n   * @param  {Function}       [options.logging=false]          A function that gets executed while running the query to log the sql.\n   * @param  {boolean}        [options.benchmark=false]        Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {boolean|Array}  [options.returning=false]        If true, append RETURNING <model columns> to get back all defined values; if an array of column names, append RETURNING <columns> to get back specific columns (Postgres only)\n   * @param  {string}         [options.searchPath=DEFAULT]     An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  static async bulkCreate(records, options = {}) {\n    if (!records.length) {\n      return [];\n    }\n\n    const dialect = this.sequelize.options.dialect;\n    const now = Utils.now(this.sequelize.options.dialect);\n    options = Utils.cloneDeep(options);\n\n    options.model = this;\n\n    if (!options.includeValidated) {\n      this._conformIncludes(options, this);\n      if (options.include) {\n        this._expandIncludeAll(options);\n        this._validateIncludedElements(options);\n      }\n    }\n\n    const instances = records.map(values => this.build(values, { isNewRecord: true, include: options.include }));\n\n    const recursiveBulkCreate = async (instances, options) => {\n      options = {\n        validate: false,\n        hooks: true,\n        individualHooks: false,\n        ignoreDuplicates: false,\n        ...options\n      };\n\n      if (options.returning === undefined) {\n        if (options.association) {\n          options.returning = false;\n        } else {\n          options.returning = true;\n        }\n      }\n\n      if (options.ignoreDuplicates && ['mssql', 'db2'].includes(dialect)) {\n        throw new Error(`${dialect} does not support the ignoreDuplicates option.`);\n      }\n      if (options.updateOnDuplicate && (dialect !== 'mysql' && dialect !== 'mariadb' && dialect !== 'sqlite' && dialect !== 'postgres')) {\n        throw new Error(`${dialect} does not support the updateOnDuplicate option.`);\n      }\n\n      const model = options.model;\n\n      options.fields = options.fields || Object.keys(model.rawAttributes);\n      const createdAtAttr = model._timestampAttributes.createdAt;\n      const updatedAtAttr = model._timestampAttributes.updatedAt;\n\n      if (options.updateOnDuplicate !== undefined) {\n        if (Array.isArray(options.updateOnDuplicate) && options.updateOnDuplicate.length) {\n          options.updateOnDuplicate = _.intersection(\n            _.without(Object.keys(model.tableAttributes), createdAtAttr),\n            options.updateOnDuplicate\n          );\n        } else {\n          throw new Error('updateOnDuplicate option only supports non-empty array.');\n        }\n      }\n\n      // Run before hook\n      if (options.hooks) {\n        await model.runHooks('beforeBulkCreate', instances, options);\n      }\n      // Validate\n      if (options.validate) {\n        const errors = [];\n        const validateOptions = { ...options };\n        validateOptions.hooks = options.individualHooks;\n\n        await Promise.all(instances.map(async instance => {\n          try {\n            await instance.validate(validateOptions);\n          } catch (err) {\n            errors.push(new sequelizeErrors.BulkRecordError(err, instance));\n          }\n        }));\n\n        delete options.skip;\n        if (errors.length) {\n          throw new sequelizeErrors.AggregateError(errors);\n        }\n      }\n      if (options.individualHooks) {\n        await Promise.all(instances.map(async instance => {\n          const individualOptions = {\n            ...options,\n            validate: false,\n            hooks: true\n          };\n          delete individualOptions.fields;\n          delete individualOptions.individualHooks;\n          delete individualOptions.ignoreDuplicates;\n\n          await instance.save(individualOptions);\n        }));\n      } else {\n        if (options.include && options.include.length) {\n          await Promise.all(options.include.filter(include => include.association instanceof BelongsTo).map(async include => {\n            const associationInstances = [];\n            const associationInstanceIndexToInstanceMap = [];\n\n            for (const instance of instances) {\n              const associationInstance = instance.get(include.as);\n              if (associationInstance) {\n                associationInstances.push(associationInstance);\n                associationInstanceIndexToInstanceMap.push(instance);\n              }\n            }\n\n            if (!associationInstances.length) {\n              return;\n            }\n\n            const includeOptions = _(Utils.cloneDeep(include))\n              .omit(['association'])\n              .defaults({\n                transaction: options.transaction,\n                logging: options.logging\n              }).value();\n\n            const createdAssociationInstances = await recursiveBulkCreate(associationInstances, includeOptions);\n            for (const idx in createdAssociationInstances) {\n              const associationInstance = createdAssociationInstances[idx];\n              const instance = associationInstanceIndexToInstanceMap[idx];\n\n              await include.association.set(instance, associationInstance, { save: false, logging: options.logging });\n            }\n          }));\n        }\n\n        // Create all in one query\n        // Recreate records from instances to represent any changes made in hooks or validation\n        records = instances.map(instance => {\n          const values = instance.dataValues;\n\n          // set createdAt/updatedAt attributes\n          if (createdAtAttr && !values[createdAtAttr]) {\n            values[createdAtAttr] = now;\n            if (!options.fields.includes(createdAtAttr)) {\n              options.fields.push(createdAtAttr);\n            }\n          }\n          if (updatedAtAttr && !values[updatedAtAttr]) {\n            values[updatedAtAttr] = now;\n            if (!options.fields.includes(updatedAtAttr)) {\n              options.fields.push(updatedAtAttr);\n            }\n          }\n\n          const out = Utils.mapValueFieldNames(values, options.fields, model);\n          for (const key of model._virtualAttributes) {\n            delete out[key];\n          }\n          return out;\n        });\n\n        // Map attributes to fields for serial identification\n        const fieldMappedAttributes = {};\n        for (const attr in model.tableAttributes) {\n          fieldMappedAttributes[model.rawAttributes[attr].field || attr] = model.rawAttributes[attr];\n        }\n\n        // Map updateOnDuplicate attributes to fields\n        if (options.updateOnDuplicate) {\n          options.updateOnDuplicate = options.updateOnDuplicate.map(attr => model.rawAttributes[attr].field || attr);\n\n          const upsertKeys = [];\n\n          for (const i of model._indexes) {\n            if (i.unique && !i.where) { // Don't infer partial indexes\n              upsertKeys.push(...i.fields);\n            }\n          }\n\n          const firstUniqueKey = Object.values(model.uniqueKeys).find(c => c.fields.length > 0);\n\n          if (firstUniqueKey && firstUniqueKey.fields) {\n            upsertKeys.push(...firstUniqueKey.fields);\n          }\n\n          options.upsertKeys = upsertKeys.length > 0\n            ? upsertKeys\n            : Object.values(model.primaryKeys).map(x => x.field);\n        }\n\n        // Map returning attributes to fields\n        if (options.returning && Array.isArray(options.returning)) {\n          options.returning = options.returning.map(attr => _.get(model.rawAttributes[attr], 'field', attr));\n        }\n\n        const results = await model.queryInterface.bulkInsert(model.getTableName(options), records, options, fieldMappedAttributes);\n        if (Array.isArray(results)) {\n          results.forEach((result, i) => {\n            const instance = instances[i];\n\n            for (const key in result) {\n              if (!instance || key === model.primaryKeyAttribute &&\n                instance.get(model.primaryKeyAttribute) &&\n                ['mysql', 'mariadb', 'sqlite'].includes(dialect)) {\n                // The query.js for these DBs is blind, it autoincrements the\n                // primarykey value, even if it was set manually. Also, it can\n                // return more results than instances, bug?.\n                continue;\n              }\n              if (Object.prototype.hasOwnProperty.call(result, key)) {\n                const record = result[key];\n\n                const attr = _.find(model.rawAttributes, attribute => attribute.fieldName === key || attribute.field === key);\n\n                instance.dataValues[attr && attr.fieldName || key] = record;\n              }\n            }\n          });\n        }\n      }\n\n      if (options.include && options.include.length) {\n        await Promise.all(options.include.filter(include => !(include.association instanceof BelongsTo ||\n          include.parent && include.parent.association instanceof BelongsToMany)).map(async include => {\n          const associationInstances = [];\n          const associationInstanceIndexToInstanceMap = [];\n\n          for (const instance of instances) {\n            let associated = instance.get(include.as);\n            if (!Array.isArray(associated)) associated = [associated];\n\n            for (const associationInstance of associated) {\n              if (associationInstance) {\n                if (!(include.association instanceof BelongsToMany)) {\n                  associationInstance.set(include.association.foreignKey, instance.get(include.association.sourceKey || instance.constructor.primaryKeyAttribute, { raw: true }), { raw: true });\n                  Object.assign(associationInstance, include.association.scope);\n                }\n                associationInstances.push(associationInstance);\n                associationInstanceIndexToInstanceMap.push(instance);\n              }\n            }\n          }\n\n          if (!associationInstances.length) {\n            return;\n          }\n\n          const includeOptions = _(Utils.cloneDeep(include))\n            .omit(['association'])\n            .defaults({\n              transaction: options.transaction,\n              logging: options.logging\n            }).value();\n\n          const createdAssociationInstances = await recursiveBulkCreate(associationInstances, includeOptions);\n          if (include.association instanceof BelongsToMany) {\n            const valueSets = [];\n\n            for (const idx in createdAssociationInstances) {\n              const associationInstance = createdAssociationInstances[idx];\n              const instance = associationInstanceIndexToInstanceMap[idx];\n\n              const values = {\n                [include.association.foreignKey]: instance.get(instance.constructor.primaryKeyAttribute, { raw: true }),\n                [include.association.otherKey]: associationInstance.get(associationInstance.constructor.primaryKeyAttribute, { raw: true }),\n                // Include values defined in the association\n                ...include.association.through.scope\n              };\n              if (associationInstance[include.association.through.model.name]) {\n                for (const attr of Object.keys(include.association.through.model.rawAttributes)) {\n                  if (include.association.through.model.rawAttributes[attr]._autoGenerated ||\n                    attr === include.association.foreignKey ||\n                    attr === include.association.otherKey ||\n                    typeof associationInstance[include.association.through.model.name][attr] === undefined) {\n                    continue;\n                  }\n                  values[attr] = associationInstance[include.association.through.model.name][attr];\n                }\n              }\n\n              valueSets.push(values);\n            }\n\n            const throughOptions = _(Utils.cloneDeep(include))\n              .omit(['association', 'attributes'])\n              .defaults({\n                transaction: options.transaction,\n                logging: options.logging\n              }).value();\n            throughOptions.model = include.association.throughModel;\n            const throughInstances = include.association.throughModel.bulkBuild(valueSets, throughOptions);\n\n            await recursiveBulkCreate(throughInstances, throughOptions);\n          }\n        }));\n      }\n\n      // map fields back to attributes\n      instances.forEach(instance => {\n        for (const attr in model.rawAttributes) {\n          if (model.rawAttributes[attr].field &&\n              instance.dataValues[model.rawAttributes[attr].field] !== undefined &&\n              model.rawAttributes[attr].field !== attr\n          ) {\n            instance.dataValues[attr] = instance.dataValues[model.rawAttributes[attr].field];\n            delete instance.dataValues[model.rawAttributes[attr].field];\n          }\n          instance._previousDataValues[attr] = instance.dataValues[attr];\n          instance.changed(attr, false);\n        }\n        instance.isNewRecord = false;\n      });\n\n      // Run after hook\n      if (options.hooks) {\n        await model.runHooks('afterBulkCreate', instances, options);\n      }\n\n      return instances;\n    };\n\n    return await recursiveBulkCreate(instances, options);\n  }\n\n  /**\n   * Truncate all instances of the model. This is a convenient method for Model.destroy({ truncate: true }).\n   *\n   * @param {object}           [options] The options passed to Model.destroy in addition to truncate\n   * @param {boolean|Function} [options.cascade = false] Truncates all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.\n   * @param {boolean}          [options.restartIdentity=false] Automatically restart sequences owned by columns of the truncated table.\n   * @param {Transaction}      [options.transaction] Transaction to run query under\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   * @param {boolean}          [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {string}           [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise}\n   *\n   * @see\n   * {@link Model.destroy} for more information\n   */\n  static async truncate(options) {\n    options = Utils.cloneDeep(options) || {};\n    options.truncate = true;\n    return await this.destroy(options);\n  }\n\n  /**\n   * Delete multiple instances, or set their deletedAt timestamp to the current time if `paranoid` is enabled.\n   *\n   * @param  {object}       options                         destroy options\n   * @param  {object}       [options.where]                 Filter the destroy\n   * @param  {boolean}      [options.hooks=true]            Run before / after bulk destroy hooks?\n   * @param  {boolean}      [options.individualHooks=false] If set to true, destroy will SELECT all records matching the where parameter and will execute before / after destroy hooks on each row\n   * @param  {number}       [options.limit]                 How many rows to delete\n   * @param  {boolean}      [options.force=false]           Delete instead of setting deletedAt to current timestamp (only applicable if `paranoid` is enabled)\n   * @param  {boolean}      [options.truncate=false]        If set to true, dialects that support it will use TRUNCATE instead of DELETE FROM. If a table is truncated the where and limit options are ignored\n   * @param  {boolean}      [options.cascade=false]         Only used in conjunction with TRUNCATE. Truncates  all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.\n   * @param  {boolean}      [options.restartIdentity=false] Only used in conjunction with TRUNCATE. Automatically restart sequences owned by columns of the truncated table.\n   * @param  {Transaction}  [options.transaction] Transaction to run query under\n   * @param  {Function}     [options.logging=false]         A function that gets executed while running the query to log the sql.\n   * @param  {boolean}      [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   *\n   * @returns {Promise<number>} The number of destroyed rows\n   */\n  static async destroy(options) {\n    options = Utils.cloneDeep(options);\n\n    this._injectScope(options);\n\n    if (!options || !(options.where || options.truncate)) {\n      throw new Error('Missing where or truncate attribute in the options parameter of model.destroy.');\n    }\n\n    if (!options.truncate && !_.isPlainObject(options.where) && !Array.isArray(options.where) && !(options.where instanceof Utils.SequelizeMethod)) {\n      throw new Error('Expected plain object, array or sequelize method in the options.where parameter of model.destroy.');\n    }\n\n    options = _.defaults(options, {\n      hooks: true,\n      individualHooks: false,\n      force: false,\n      cascade: false,\n      restartIdentity: false\n    });\n\n    options.type = QueryTypes.BULKDELETE;\n\n    Utils.mapOptionFieldNames(options, this);\n    options.model = this;\n\n\n    // Run before hook\n    if (options.hooks) {\n      await this.runHooks('beforeBulkDestroy', options);\n    }\n    let instances;\n    // Get daos and run beforeDestroy hook on each record individually\n    if (options.individualHooks) {\n      instances = await this.findAll({ where: options.where, transaction: options.transaction, logging: options.logging, benchmark: options.benchmark });\n\n      await Promise.all(instances.map(instance => this.runHooks('beforeDestroy', instance, options)));\n    }\n    let result;\n    // Run delete query (or update if paranoid)\n    if (this._timestampAttributes.deletedAt && !options.force) {\n      // Set query type appropriately when running soft delete\n      options.type = QueryTypes.BULKUPDATE;\n\n      const attrValueHash = {};\n      const deletedAtAttribute = this.rawAttributes[this._timestampAttributes.deletedAt];\n      const field = this.rawAttributes[this._timestampAttributes.deletedAt].field;\n      const where = {\n        [field]: Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null\n      };\n\n\n      attrValueHash[field] = Utils.now(this.sequelize.options.dialect);\n      result = await this.queryInterface.bulkUpdate(this.getTableName(options), attrValueHash, Object.assign(where, options.where), options, this.rawAttributes);\n    } else {\n      result = await this.queryInterface.bulkDelete(this.getTableName(options), options.where, options, this);\n    }\n    // Run afterDestroy hook on each record individually\n    if (options.individualHooks) {\n      await Promise.all(\n        instances.map(instance => this.runHooks('afterDestroy', instance, options))\n      );\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.runHooks('afterBulkDestroy', options);\n    }\n    return result;\n  }\n\n  /**\n   * Restore multiple instances if `paranoid` is enabled.\n   *\n   * @param  {object}       options                         restore options\n   * @param  {object}       [options.where]                 Filter the restore\n   * @param  {boolean}      [options.hooks=true]            Run before / after bulk restore hooks?\n   * @param  {boolean}      [options.individualHooks=false] If set to true, restore will find all records within the where parameter and will execute before / after bulkRestore hooks on each row\n   * @param  {number}       [options.limit]                 How many rows to undelete (only for mysql)\n   * @param  {Function}     [options.logging=false]         A function that gets executed while running the query to log the sql.\n   * @param  {boolean}      [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {Transaction}  [options.transaction]           Transaction to run query under\n   *\n   * @returns {Promise}\n   */\n  static async restore(options) {\n    if (!this._timestampAttributes.deletedAt) throw new Error('Model is not paranoid');\n\n    options = {\n      hooks: true,\n      individualHooks: false,\n      ...options\n    };\n\n    options.type = QueryTypes.RAW;\n    options.model = this;\n\n    Utils.mapOptionFieldNames(options, this);\n\n    // Run before hook\n    if (options.hooks) {\n      await this.runHooks('beforeBulkRestore', options);\n    }\n\n    let instances;\n    // Get daos and run beforeRestore hook on each record individually\n    if (options.individualHooks) {\n      instances = await this.findAll({ where: options.where, transaction: options.transaction, logging: options.logging, benchmark: options.benchmark, paranoid: false });\n\n      await Promise.all(instances.map(instance => this.runHooks('beforeRestore', instance, options)));\n    }\n    // Run undelete query\n    const attrValueHash = {};\n    const deletedAtCol = this._timestampAttributes.deletedAt;\n    const deletedAtAttribute = this.rawAttributes[deletedAtCol];\n    const deletedAtDefaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n\n    attrValueHash[deletedAtAttribute.field || deletedAtCol] = deletedAtDefaultValue;\n    options.omitNull = false;\n    const result = await this.queryInterface.bulkUpdate(this.getTableName(options), attrValueHash, options.where, options, this.rawAttributes);\n    // Run afterDestroy hook on each record individually\n    if (options.individualHooks) {\n      await Promise.all(\n        instances.map(instance => this.runHooks('afterRestore', instance, options))\n      );\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.runHooks('afterBulkRestore', options);\n    }\n    return result;\n  }\n\n  /**\n   * Update multiple instances that match the where options.\n   *\n   * @param  {object}         values                          hash of values to update\n   * @param  {object}         options                         update options\n   * @param  {object}         options.where                   Options to describe the scope of the search.\n   * @param  {boolean}        [options.paranoid=true]         If true, only non-deleted records will be updated. If false, both deleted and non-deleted records will be updated. Only applies if `options.paranoid` is true for the model.\n   * @param  {Array}          [options.fields]                Fields to update (defaults to all fields)\n   * @param  {boolean}        [options.validate=true]         Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation\n   * @param  {boolean}        [options.hooks=true]            Run before / after bulk update hooks?\n   * @param  {boolean}        [options.sideEffects=true]      Whether or not to update the side effects of any virtual setters.\n   * @param  {boolean}        [options.individualHooks=false] Run before / after update hooks?. If true, this will execute a SELECT followed by individual UPDATEs. A select is needed, because the row data needs to be passed to the hooks\n   * @param  {boolean|Array}  [options.returning=false]       If true, append RETURNING <model columns> to get back all defined values; if an array of column names, append RETURNING <columns> to get back specific columns (Postgres only)\n   * @param  {number}         [options.limit]                 How many rows to update (only for mysql and mariadb, implemented as TOP(n) for MSSQL; for sqlite it is supported only when rowid is present)\n   * @param  {Function}       [options.logging=false]         A function that gets executed while running the query to log the sql.\n   * @param  {boolean}        [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {Transaction}    [options.transaction]           Transaction to run query under\n   * @param  {boolean}        [options.silent=false]          If true, the updatedAt timestamp will not be updated.\n   *\n   * @returns {Promise<Array<number,number>>}  The promise returns an array with one or two elements. The first element is always the number\n   * of affected rows, while the second element is the actual affected rows (only supported in postgres with `options.returning` true).\n   *\n   */\n  static async update(values, options) {\n    options = Utils.cloneDeep(options);\n\n    this._injectScope(options);\n    this._optionsMustContainWhere(options);\n\n    options = this._paranoidClause(this, _.defaults(options, {\n      validate: true,\n      hooks: true,\n      individualHooks: false,\n      returning: false,\n      force: false,\n      sideEffects: true\n    }));\n\n    options.type = QueryTypes.BULKUPDATE;\n\n    // Clone values so it doesn't get modified for caller scope and ignore undefined values\n    values = _.omitBy(values, value => value === undefined);\n\n    // Remove values that are not in the options.fields\n    if (options.fields && options.fields instanceof Array) {\n      for (const key of Object.keys(values)) {\n        if (!options.fields.includes(key)) {\n          delete values[key];\n        }\n      }\n    } else {\n      const updatedAtAttr = this._timestampAttributes.updatedAt;\n      options.fields = _.intersection(Object.keys(values), Object.keys(this.tableAttributes));\n      if (updatedAtAttr && !options.fields.includes(updatedAtAttr)) {\n        options.fields.push(updatedAtAttr);\n      }\n    }\n\n    if (this._timestampAttributes.updatedAt && !options.silent) {\n      values[this._timestampAttributes.updatedAt] = this._getDefaultTimestamp(this._timestampAttributes.updatedAt) || Utils.now(this.sequelize.options.dialect);\n    }\n\n    options.model = this;\n\n    let valuesUse;\n    // Validate\n    if (options.validate) {\n      const build = this.build(values);\n      build.set(this._timestampAttributes.updatedAt, values[this._timestampAttributes.updatedAt], { raw: true });\n\n      if (options.sideEffects) {\n        Object.assign(values, _.pick(build.get(), build.changed()));\n        options.fields = _.union(options.fields, Object.keys(values));\n      }\n\n      // We want to skip validations for all other fields\n      options.skip = _.difference(Object.keys(this.rawAttributes), Object.keys(values));\n      const attributes = await build.validate(options);\n      options.skip = undefined;\n      if (attributes && attributes.dataValues) {\n        values = _.pick(attributes.dataValues, Object.keys(values));\n      }\n    }\n    // Run before hook\n    if (options.hooks) {\n      options.attributes = values;\n      await this.runHooks('beforeBulkUpdate', options);\n      values = options.attributes;\n      delete options.attributes;\n    }\n\n    valuesUse = values;\n\n    // Get instances and run beforeUpdate hook on each record individually\n    let instances;\n    let updateDoneRowByRow = false;\n    if (options.individualHooks) {\n      instances = await this.findAll({\n        where: options.where,\n        transaction: options.transaction,\n        logging: options.logging,\n        benchmark: options.benchmark,\n        paranoid: options.paranoid\n      });\n\n      if (instances.length) {\n        // Run beforeUpdate hooks on each record and check whether beforeUpdate hook changes values uniformly\n        // i.e. whether they change values for each record in the same way\n        let changedValues;\n        let different = false;\n\n        instances = await Promise.all(instances.map(async instance => {\n          // Record updates in instances dataValues\n          Object.assign(instance.dataValues, values);\n          // Set the changed fields on the instance\n          _.forIn(valuesUse, (newValue, attr) => {\n            if (newValue !== instance._previousDataValues[attr]) {\n              instance.setDataValue(attr, newValue);\n            }\n          });\n\n          // Run beforeUpdate hook\n          await this.runHooks('beforeUpdate', instance, options);\n          if (!different) {\n            const thisChangedValues = {};\n            _.forIn(instance.dataValues, (newValue, attr) => {\n              if (newValue !== instance._previousDataValues[attr]) {\n                thisChangedValues[attr] = newValue;\n              }\n            });\n\n            if (!changedValues) {\n              changedValues = thisChangedValues;\n            } else {\n              different = !_.isEqual(changedValues, thisChangedValues);\n            }\n          }\n\n          return instance;\n        }));\n\n        if (!different) {\n          const keys = Object.keys(changedValues);\n          // Hooks do not change values or change them uniformly\n          if (keys.length) {\n            // Hooks change values - record changes in valuesUse so they are executed\n            valuesUse = changedValues;\n            options.fields = _.union(options.fields, keys);\n          }\n        } else {\n          instances = await Promise.all(instances.map(async instance => {\n            const individualOptions = {\n              ...options,\n              hooks: false,\n              validate: false\n            };\n            delete individualOptions.individualHooks;\n\n            return instance.save(individualOptions);\n          }));\n          updateDoneRowByRow = true;\n        }\n      }\n    }\n    let result;\n    if (updateDoneRowByRow) {\n      result = [instances.length, instances];\n    } else if (_.isEmpty(valuesUse)\n       || Object.keys(valuesUse).length === 1 && valuesUse[this._timestampAttributes.updatedAt]) {\n      // only updatedAt is being passed, then skip update\n      result = [0];\n    } else {\n      valuesUse = Utils.mapValueFieldNames(valuesUse, options.fields, this);\n      options = Utils.mapOptionFieldNames(options, this);\n      options.hasTrigger = this.options ? this.options.hasTrigger : false;\n\n      const affectedRows = await this.queryInterface.bulkUpdate(this.getTableName(options), valuesUse, options.where, options, this.tableAttributes);\n      if (options.returning) {\n        result = [affectedRows.length, affectedRows];\n        instances = affectedRows;\n      } else {\n        result = [affectedRows];\n      }\n    }\n\n    if (options.individualHooks) {\n      await Promise.all(instances.map(instance => this.runHooks('afterUpdate', instance, options)));\n      result[1] = instances;\n    }\n    // Run after hook\n    if (options.hooks) {\n      options.attributes = values;\n      await this.runHooks('afterBulkUpdate', options);\n      delete options.attributes;\n    }\n    return result;\n  }\n\n  /**\n   * Run a describe query on the table.\n   *\n   * @param {string} [schema] schema name to search table in\n   * @param {object} [options] query options\n   *\n   * @returns {Promise} hash of attributes and their types\n   */\n  static async describe(schema, options) {\n    return await this.queryInterface.describeTable(this.tableName, { schema: schema || this._schema || undefined, ...options });\n  }\n\n  static _getDefaultTimestamp(attr) {\n    if (!!this.rawAttributes[attr] && !!this.rawAttributes[attr].defaultValue) {\n      return Utils.toDefaultValue(this.rawAttributes[attr].defaultValue, this.sequelize.options.dialect);\n    }\n    return undefined;\n  }\n\n  static _expandAttributes(options) {\n    if (!_.isPlainObject(options.attributes)) {\n      return;\n    }\n    let attributes = Object.keys(this.rawAttributes);\n\n    if (options.attributes.exclude) {\n      attributes = attributes.filter(elem => !options.attributes.exclude.includes(elem));\n    }\n\n    if (options.attributes.include) {\n      attributes = attributes.concat(options.attributes.include);\n    }\n\n    options.attributes = attributes;\n  }\n\n  // Inject _scope into options.\n  static _injectScope(options) {\n    const scope = Utils.cloneDeep(this._scope);\n    this._defaultsOptions(options, scope);\n  }\n\n  static [Symbol.for('nodejs.util.inspect.custom')]() {\n    return this.name;\n  }\n\n  static hasAlias(alias) {\n    return Object.prototype.hasOwnProperty.call(this.associations, alias);\n  }\n\n  /**\n   * Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a\n   * ``` SET column = column + X WHERE foo = 'bar' ``` query. To get the correct value after an increment into the Instance you should do a reload.\n   *\n   * @example <caption>increment number by 1</caption>\n   * Model.increment('number', { where: { foo: 'bar' });\n   *\n   * @example <caption>increment number and count by 2</caption>\n   * Model.increment(['number', 'count'], { by: 2, where: { foo: 'bar' } });\n   *\n   * @example <caption>increment answer by 42, and decrement tries by 1</caption>\n   * // `by` is ignored, as each column has its own value\n   * Model.increment({ answer: 42, tries: -1}, { by: 2, where: { foo: 'bar' } });\n   *\n   * @see\n   * {@link Model#reload}\n   *\n   * @param  {string|Array|object}  fields                       If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.\n   * @param  {object}               options                      increment options\n   * @param  {object}               options.where                conditions hash\n   * @param  {number}               [options.by=1]               The number to increment by\n   * @param  {boolean}              [options.silent=false]       If true, the updatedAt timestamp will not be updated.\n   * @param  {Function}             [options.logging=false]      A function that gets executed while running the query to log the sql.\n   * @param  {Transaction}          [options.transaction]        Transaction to run query under\n   * @param  {string}               [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise<Model[],?number>} returns an array of affected rows and affected count with `options.returning` true, whenever supported by dialect\n   */\n  static async increment(fields, options) {\n    options = options || {};\n    if (typeof fields === 'string') fields = [fields];\n    if (Array.isArray(fields)) {\n      fields = fields.map(f => {\n        if (this.rawAttributes[f] && this.rawAttributes[f].field && this.rawAttributes[f].field !== f) {\n          return this.rawAttributes[f].field;\n        }\n        return f;\n      });\n    } else if (fields && typeof fields === 'object') {\n      fields = Object.keys(fields).reduce((rawFields, f) => {\n        if (this.rawAttributes[f] && this.rawAttributes[f].field && this.rawAttributes[f].field !== f) {\n          rawFields[this.rawAttributes[f].field] = fields[f];\n        } else {\n          rawFields[f] = fields[f];\n        }\n        return rawFields;\n      }, {});\n    }\n\n    this._injectScope(options);\n    this._optionsMustContainWhere(options);\n\n    options = Utils.defaults({}, options, {\n      by: 1,\n      where: {},\n      increment: true\n    });\n    const isSubtraction = !options.increment;\n\n    Utils.mapOptionFieldNames(options, this);\n\n    const where = { ...options.where };\n\n    // A plain object whose keys are the fields to be incremented and whose values are\n    // the amounts to be incremented by.\n    let incrementAmountsByField = {};\n    if (Array.isArray(fields)) {\n      incrementAmountsByField = {};\n      for (const field of fields) {\n        incrementAmountsByField[field] = options.by;\n      }\n    } else {\n      // If the `fields` argument is not an array, then we assume it already has the\n      // form necessary to be placed directly in the `incrementAmountsByField` variable.\n      incrementAmountsByField = fields;\n    }\n\n    // If optimistic locking is enabled, we can take advantage that this is an\n    // increment/decrement operation and send it here as well. We put `-1` for\n    // decrementing because it will be subtracted, getting `-(-1)` which is `+1`\n    if (this._versionAttribute) {\n      incrementAmountsByField[this._versionAttribute] = isSubtraction ? -1 : 1;\n    }\n\n    const extraAttributesToBeUpdated = {};\n\n    const updatedAtAttr = this._timestampAttributes.updatedAt;\n    if (!options.silent && updatedAtAttr && !incrementAmountsByField[updatedAtAttr]) {\n      const attrName = this.rawAttributes[updatedAtAttr].field || updatedAtAttr;\n      extraAttributesToBeUpdated[attrName] = this._getDefaultTimestamp(updatedAtAttr) || Utils.now(this.sequelize.options.dialect);\n    }\n\n    const tableName = this.getTableName(options);\n    let affectedRows;\n    if (isSubtraction) {\n      affectedRows = await this.queryInterface.decrement(\n        this, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options\n      );\n    } else {\n      affectedRows = await this.queryInterface.increment(\n        this, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options\n      );\n    }\n\n    if (options.returning) {\n      return [affectedRows, affectedRows.length];\n    }\n\n    return [affectedRows];\n  }\n\n  /**\n   * Decrement the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The decrement is done using a\n   * ```sql SET column = column - X WHERE foo = 'bar'``` query. To get the correct value after a decrement into the Instance you should do a reload.\n   *\n   * @example <caption>decrement number by 1</caption>\n   * Model.decrement('number', { where: { foo: 'bar' });\n   *\n   * @example <caption>decrement number and count by 2</caption>\n   * Model.decrement(['number', 'count'], { by: 2, where: { foo: 'bar' } });\n   *\n   * @example <caption>decrement answer by 42, and decrement tries by -1</caption>\n   * // `by` is ignored, since each column has its own value\n   * Model.decrement({ answer: 42, tries: -1}, { by: 2, where: { foo: 'bar' } });\n   *\n   * @param {string|Array|object} fields If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.\n   * @param {object} options decrement options, similar to increment\n   *\n   * @see\n   * {@link Model.increment}\n   * @see\n   * {@link Model#reload}\n   * @since 4.36.0\n   *\n   * @returns {Promise<Model[],?number>} returns an array of affected rows and affected count with `options.returning` true, whenever supported by dialect\n   */\n  static async decrement(fields, options) {\n    return this.increment(fields, {\n      by: 1,\n      ...options,\n      increment: false\n    });\n  }\n\n  static _optionsMustContainWhere(options) {\n    assert(options && options.where, 'Missing where attribute in the options parameter');\n    assert(_.isPlainObject(options.where) || Array.isArray(options.where) || options.where instanceof Utils.SequelizeMethod,\n      'Expected plain object, array or sequelize method in the options.where parameter');\n  }\n\n  /**\n   * Get an object representing the query for this instance, use with `options.where`\n   *\n   * @param {boolean} [checkVersion=false] include version attribute in where hash\n   *\n   * @returns {object}\n   */\n  where(checkVersion) {\n    const where = this.constructor.primaryKeyAttributes.reduce((result, attribute) => {\n      result[attribute] = this.get(attribute, { raw: true });\n      return result;\n    }, {});\n\n    if (_.size(where) === 0) {\n      return this.constructor.options.whereCollection;\n    }\n    const versionAttr = this.constructor._versionAttribute;\n    if (checkVersion && versionAttr) {\n      where[versionAttr] = this.get(versionAttr, { raw: true });\n    }\n    return Utils.mapWhereFieldNames(where, this.constructor);\n  }\n\n  toString() {\n    return `[object SequelizeInstance:${this.constructor.name}]`;\n  }\n\n  /**\n   * Get the value of the underlying data value\n   *\n   * @param {string} key key to look in instance data store\n   *\n   * @returns {any}\n   */\n  getDataValue(key) {\n    return this.dataValues[key];\n  }\n\n  /**\n   * Update the underlying data value\n   *\n   * @param {string} key key to set in instance data store\n   * @param {any} value new value for given key\n   *\n   */\n  setDataValue(key, value) {\n    const originalValue = this._previousDataValues[key];\n\n    if (!_.isEqual(value, originalValue)) {\n      this.changed(key, true);\n    }\n\n    this.dataValues[key] = value;\n  }\n\n  /**\n   * If no key is given, returns all values of the instance, also invoking virtual getters.\n   *\n   * If key is given and a field or virtual getter is present for the key it will call that getter - else it will return the value for key.\n   *\n   * @param {string}  [key] key to get value of\n   * @param {object}  [options] get options\n   * @param {boolean} [options.plain=false] If set to true, included instances will be returned as plain objects\n   * @param {boolean} [options.raw=false] If set to true, field and virtual setters will be ignored\n   *\n   * @returns {object|any}\n   */\n  get(key, options) {\n    if (options === undefined && typeof key === 'object') {\n      options = key;\n      key = undefined;\n    }\n\n    options = options || {};\n\n    if (key) {\n      if (Object.prototype.hasOwnProperty.call(this._customGetters, key) && !options.raw) {\n        return this._customGetters[key].call(this, key, options);\n      }\n\n      if (options.plain && this._options.include && this._options.includeNames.includes(key)) {\n        if (Array.isArray(this.dataValues[key])) {\n          return this.dataValues[key].map(instance => instance.get(options));\n        }\n        if (this.dataValues[key] instanceof Model) {\n          return this.dataValues[key].get(options);\n        }\n        return this.dataValues[key];\n      }\n\n      return this.dataValues[key];\n    }\n\n    if (\n      this._hasCustomGetters\n      || options.plain && this._options.include\n      || options.clone\n    ) {\n      const values = {};\n      let _key;\n\n      if (this._hasCustomGetters) {\n        for (_key in this._customGetters) {\n          if (\n            this._options.attributes\n            && !this._options.attributes.includes(_key)\n          ) {\n            continue;\n          }\n\n          if (Object.prototype.hasOwnProperty.call(this._customGetters, _key)) {\n            values[_key] = this.get(_key, options);\n          }\n        }\n      }\n\n      for (_key in this.dataValues) {\n        if (\n          !Object.prototype.hasOwnProperty.call(values, _key)\n          && Object.prototype.hasOwnProperty.call(this.dataValues, _key)\n        ) {\n          values[_key] = this.get(_key, options);\n        }\n      }\n\n      return values;\n    }\n\n    return this.dataValues;\n  }\n\n  /**\n   * Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call `save`).\n   * In its most basic form `set` will update a value stored in the underlying `dataValues` object. However, if a custom setter function is defined for the key, that function\n   * will be called instead. To bypass the setter, you can pass `raw: true` in the options object.\n   *\n   * If set is called with an object, it will loop over the object, and call set recursively for each key, value pair. If you set raw to true, the underlying dataValues will either be\n   * set directly to the object passed, or used to extend dataValues, if dataValues already contain values.\n   *\n   * When set is called, the previous value of the field is stored and sets a changed flag(see `changed`).\n   *\n   * Set can also be used to build instances for associations, if you have values for those.\n   * When using set with associations you need to make sure the property key matches the alias of the association\n   * while also making sure that the proper include options have been set (from .build() or .findOne())\n   *\n   * If called with a dot.separated key on a JSON/JSONB attribute it will set the value nested and flag the entire object as changed.\n   *\n   * @see\n   * {@link Model.findAll} for more information about includes\n   *\n   * @param {string|object} key key to set, it can be string or object. When string it will set that key, for object it will loop over all object properties nd set them.\n   * @param {any} value value to set\n   * @param {object} [options] set options\n   * @param {boolean} [options.raw=false] If set to true, field and virtual setters will be ignored\n   * @param {boolean} [options.reset=false] Clear all previously set data values\n   *\n   * @returns {Model}\n   */\n  set(key, value, options) {\n    let values;\n    let originalValue;\n\n    if (typeof key === 'object' && key !== null) {\n      values = key;\n      options = value || {};\n\n      if (options.reset) {\n        this.dataValues = {};\n        for (const key in values) {\n          this.changed(key, false);\n        }\n      }\n\n      // If raw, and we're not dealing with includes or special attributes, just set it straight on the dataValues object\n      if (options.raw && !(this._options && this._options.include) && !(options && options.attributes) && !this.constructor._hasDateAttributes && !this.constructor._hasBooleanAttributes) {\n        if (Object.keys(this.dataValues).length) {\n          Object.assign(this.dataValues, values);\n        } else {\n          this.dataValues = values;\n        }\n        // If raw, .changed() shouldn't be true\n        this._previousDataValues = { ...this.dataValues };\n      } else {\n        // Loop and call set\n        if (options.attributes) {\n          const setKeys = data => {\n            for (const k of data) {\n              if (values[k] === undefined) {\n                continue;\n              }\n              this.set(k, values[k], options);\n            }\n          };\n          setKeys(options.attributes);\n          if (this.constructor._hasVirtualAttributes) {\n            setKeys(this.constructor._virtualAttributes);\n          }\n          if (this._options.includeNames) {\n            setKeys(this._options.includeNames);\n          }\n        } else {\n          for (const key in values) {\n            this.set(key, values[key], options);\n          }\n        }\n\n        if (options.raw) {\n          // If raw, .changed() shouldn't be true\n          this._previousDataValues = { ...this.dataValues };\n        }\n      }\n      return this;\n    }\n    if (!options)\n      options = {};\n    if (!options.raw) {\n      originalValue = this.dataValues[key];\n    }\n\n    // If not raw, and there's a custom setter\n    if (!options.raw && this._customSetters[key]) {\n      this._customSetters[key].call(this, value, key);\n      // custom setter should have changed value, get that changed value\n      // TODO: v5 make setters return new value instead of changing internal store\n      const newValue = this.dataValues[key];\n      if (!_.isEqual(newValue, originalValue)) {\n        this._previousDataValues[key] = originalValue;\n        this.changed(key, true);\n      }\n    } else {\n      // Check if we have included models, and if this key matches the include model names/aliases\n      if (this._options && this._options.include && this._options.includeNames.includes(key)) {\n        // Pass it on to the include handler\n        this._setInclude(key, value, options);\n        return this;\n      }\n      // Bunch of stuff we won't do when it's raw\n      if (!options.raw) {\n        // If attribute is not in model definition, return\n        if (!this._isAttribute(key)) {\n          if (key.includes('.') && this.constructor._jsonAttributes.has(key.split('.')[0])) {\n            const previousNestedValue = Dottie.get(this.dataValues, key);\n            if (!_.isEqual(previousNestedValue, value)) {\n              Dottie.set(this.dataValues, key, value);\n              this.changed(key.split('.')[0], true);\n            }\n          }\n          return this;\n        }\n\n        // If attempting to set primary key and primary key is already defined, return\n        if (this.constructor._hasPrimaryKeys && originalValue && this.constructor._isPrimaryKey(key)) {\n          return this;\n        }\n\n        // If attempting to set read only attributes, return\n        if (!this.isNewRecord && this.constructor._hasReadOnlyAttributes && this.constructor._readOnlyAttributes.has(key)) {\n          return this;\n        }\n      }\n\n      // If there's a data type sanitizer\n      if (\n        !(value instanceof Utils.SequelizeMethod)\n        && Object.prototype.hasOwnProperty.call(this.constructor._dataTypeSanitizers, key)\n      ) {\n        value = this.constructor._dataTypeSanitizers[key].call(this, value, options);\n      }\n\n      // Set when the value has changed and not raw\n      if (\n        !options.raw &&\n        (\n          // True when sequelize method\n          value instanceof Utils.SequelizeMethod ||\n          // Check for data type type comparators\n          !(value instanceof Utils.SequelizeMethod) && this.constructor._dataTypeChanges[key] && this.constructor._dataTypeChanges[key].call(this, value, originalValue, options) || // Check default\n          !this.constructor._dataTypeChanges[key] && !_.isEqual(value, originalValue)\n        )\n      ) {\n        this._previousDataValues[key] = originalValue;\n        this.changed(key, true);\n      }\n\n      // set data value\n      this.dataValues[key] = value;\n    }\n    return this;\n  }\n\n  setAttributes(updates) {\n    return this.set(updates);\n  }\n\n  /**\n   * If changed is called with a string it will return a boolean indicating whether the value of that key in `dataValues` is different from the value in `_previousDataValues`.\n   *\n   * If changed is called without an argument, it will return an array of keys that have changed.\n   *\n   * If changed is called without an argument and no keys have changed, it will return `false`.\n   *\n   * Please note that this function will return `false` when a property from a nested (for example JSON) property\n   * was edited manually, you must call `changed('key', true)` manually in these cases.\n   * Writing an entirely new object (eg. deep cloned) will be detected.\n   *\n   * @example\n   * ```\n   * const mdl = await MyModel.findOne();\n   * mdl.myJsonField.a = 1;\n   * console.log(mdl.changed()) => false\n   * mdl.save(); // this will not save anything\n   * mdl.changed('myJsonField', true);\n   * console.log(mdl.changed()) => ['myJsonField']\n   * mdl.save(); // will save\n   * ```\n   *\n   * @param {string} [key] key to check or change status of\n   * @param {any} [value] value to set\n   *\n   * @returns {boolean|Array}\n   */\n  changed(key, value) {\n    if (key === undefined) {\n      if (this._changed.size > 0) {\n        return Array.from(this._changed);\n      }\n      return false;\n    }\n    if (value === true) {\n      this._changed.add(key);\n      return this;\n    }\n    if (value === false) {\n      this._changed.delete(key);\n      return this;\n    }\n    return this._changed.has(key);\n  }\n\n  /**\n   * Returns the previous value for key from `_previousDataValues`.\n   *\n   * If called without a key, returns the previous values for all values which have changed\n   *\n   * @param {string} [key] key to get previous value of\n   *\n   * @returns {any|Array<any>}\n   */\n  previous(key) {\n    if (key) {\n      return this._previousDataValues[key];\n    }\n\n    return _.pickBy(this._previousDataValues, (value, key) => this.changed(key));\n  }\n\n  _setInclude(key, value, options) {\n    if (!Array.isArray(value)) value = [value];\n    if (value[0] instanceof Model) {\n      value = value.map(instance => instance.dataValues);\n    }\n\n    const include = this._options.includeMap[key];\n    const association = include.association;\n    const accessor = key;\n    const primaryKeyAttribute = include.model.primaryKeyAttribute;\n    const childOptions = {\n      isNewRecord: this.isNewRecord,\n      include: include.include,\n      includeNames: include.includeNames,\n      includeMap: include.includeMap,\n      includeValidated: true,\n      raw: options.raw,\n      attributes: include.originalAttributes\n    };\n    let isEmpty;\n\n    if (include.originalAttributes === undefined || include.originalAttributes.length) {\n      if (association.isSingleAssociation) {\n        if (Array.isArray(value)) {\n          value = value[0];\n        }\n        isEmpty = value && value[primaryKeyAttribute] === null || value === null;\n        this[accessor] = this.dataValues[accessor] = isEmpty ? null : include.model.build(value, childOptions);\n      } else {\n        isEmpty = value[0] && value[0][primaryKeyAttribute] === null;\n        this[accessor] = this.dataValues[accessor] = isEmpty ? [] : include.model.bulkBuild(value, childOptions);\n      }\n    }\n  }\n\n  /**\n   * Validates this instance, and if the validation passes, persists it to the database.\n   *\n   * Returns a Promise that resolves to the saved instance (or rejects with a `Sequelize.ValidationError`, which will have a property for each of the fields for which the validation failed, with the error message for that field).\n   *\n   * This method is optimized to perform an UPDATE only into the fields that changed. If nothing has changed, no SQL query will be performed.\n   *\n   * This method is not aware of eager loaded associations. In other words, if some other model instance (child) was eager loaded with this instance (parent), and you change something in the child, calling `save()` will simply ignore the change that happened on the child.\n   *\n   * @param {object}      [options] save options\n   * @param {string[]}    [options.fields] An optional array of strings, representing database columns. If fields is provided, only those columns will be validated and saved.\n   * @param {boolean}     [options.silent=false] If true, the updatedAt timestamp will not be updated.\n   * @param {boolean}     [options.validate=true] If false, validations won't be run.\n   * @param {boolean}     [options.hooks=true] Run before and after create / update + validate hooks\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string}      [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean}     [options.returning] Append RETURNING * to get back auto generated values (Postgres only)\n   *\n   * @returns {Promise<Model>}\n   */\n  async save(options) {\n    if (arguments.length > 1) {\n      throw new Error('The second argument was removed in favor of the options object.');\n    }\n\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, {\n      hooks: true,\n      validate: true\n    });\n\n    if (!options.fields) {\n      if (this.isNewRecord) {\n        options.fields = Object.keys(this.constructor.rawAttributes);\n      } else {\n        options.fields = _.intersection(this.changed(), Object.keys(this.constructor.rawAttributes));\n      }\n\n      options.defaultFields = options.fields;\n    }\n\n    if (options.returning === undefined) {\n      if (options.association) {\n        options.returning = false;\n      } else if (this.isNewRecord) {\n        options.returning = true;\n      }\n    }\n\n    const primaryKeyName = this.constructor.primaryKeyAttribute;\n    const primaryKeyAttribute = primaryKeyName && this.constructor.rawAttributes[primaryKeyName];\n    const createdAtAttr = this.constructor._timestampAttributes.createdAt;\n    const versionAttr = this.constructor._versionAttribute;\n    const hook = this.isNewRecord ? 'Create' : 'Update';\n    const wasNewRecord = this.isNewRecord;\n    const now = Utils.now(this.sequelize.options.dialect);\n    let updatedAtAttr = this.constructor._timestampAttributes.updatedAt;\n\n    if (updatedAtAttr && options.fields.length > 0 && !options.fields.includes(updatedAtAttr)) {\n      options.fields.push(updatedAtAttr);\n    }\n    if (versionAttr && options.fields.length > 0 && !options.fields.includes(versionAttr)) {\n      options.fields.push(versionAttr);\n    }\n\n    if (options.silent === true && !(this.isNewRecord && this.get(updatedAtAttr, { raw: true }))) {\n      // UpdateAtAttr might have been added as a result of Object.keys(Model.rawAttributes). In that case we have to remove it again\n      _.remove(options.fields, val => val === updatedAtAttr);\n      updatedAtAttr = false;\n    }\n\n    if (this.isNewRecord === true) {\n      if (createdAtAttr && !options.fields.includes(createdAtAttr)) {\n        options.fields.push(createdAtAttr);\n      }\n\n      if (primaryKeyAttribute && primaryKeyAttribute.defaultValue && !options.fields.includes(primaryKeyName)) {\n        options.fields.unshift(primaryKeyName);\n      }\n    }\n\n    if (this.isNewRecord === false) {\n      if (primaryKeyName && this.get(primaryKeyName, { raw: true }) === undefined) {\n        throw new Error('You attempted to save an instance with no primary key, this is not allowed since it would result in a global update');\n      }\n    }\n\n    if (updatedAtAttr && !options.silent && options.fields.includes(updatedAtAttr)) {\n      this.dataValues[updatedAtAttr] = this.constructor._getDefaultTimestamp(updatedAtAttr) || now;\n    }\n\n    if (this.isNewRecord && createdAtAttr && !this.dataValues[createdAtAttr]) {\n      this.dataValues[createdAtAttr] = this.constructor._getDefaultTimestamp(createdAtAttr) || now;\n    }\n    // Db2 does not allow NULL values for unique columns.\n    // Add dummy values if not provided by test case or user.\n    if (this.sequelize.options.dialect === 'db2' && this.isNewRecord) {\n      this.uniqno = this.sequelize.dialect.queryGenerator.addUniqueFields(\n        this.dataValues, this.constructor.rawAttributes, this.uniqno);\n    }\n    // Validate\n    if (options.validate) {\n      await this.validate(options);\n    }\n    // Run before hook\n    if (options.hooks) {\n      const beforeHookValues = _.pick(this.dataValues, options.fields);\n      let ignoreChanged = _.difference(this.changed(), options.fields); // In case of update where it's only supposed to update the passed values and the hook values\n      let hookChanged;\n      let afterHookValues;\n\n      if (updatedAtAttr && options.fields.includes(updatedAtAttr)) {\n        ignoreChanged = _.without(ignoreChanged, updatedAtAttr);\n      }\n\n      await this.constructor.runHooks(`before${hook}`, this, options);\n      if (options.defaultFields && !this.isNewRecord) {\n        afterHookValues = _.pick(this.dataValues, _.difference(this.changed(), ignoreChanged));\n\n        hookChanged = [];\n        for (const key of Object.keys(afterHookValues)) {\n          if (afterHookValues[key] !== beforeHookValues[key]) {\n            hookChanged.push(key);\n          }\n        }\n\n        options.fields = _.uniq(options.fields.concat(hookChanged));\n      }\n\n      if (hookChanged) {\n        if (options.validate) {\n          // Validate again\n\n          options.skip = _.difference(Object.keys(this.constructor.rawAttributes), hookChanged);\n          await this.validate(options);\n          delete options.skip;\n        }\n      }\n    }\n    if (options.fields.length && this.isNewRecord && this._options.include && this._options.include.length) {\n      await Promise.all(this._options.include.filter(include => include.association instanceof BelongsTo).map(async include => {\n        const instance = this.get(include.as);\n        if (!instance) return;\n\n        const includeOptions = _(Utils.cloneDeep(include))\n          .omit(['association'])\n          .defaults({\n            transaction: options.transaction,\n            logging: options.logging,\n            parentRecord: this\n          }).value();\n\n        await instance.save(includeOptions);\n\n        await this[include.association.accessors.set](instance, { save: false, logging: options.logging });\n      }));\n    }\n    const realFields = options.fields.filter(field => !this.constructor._virtualAttributes.has(field));\n    if (!realFields.length) return this;\n    if (!this.changed() && !this.isNewRecord) return this;\n\n    const versionFieldName = _.get(this.constructor.rawAttributes[versionAttr], 'field') || versionAttr;\n    const values = Utils.mapValueFieldNames(this.dataValues, options.fields, this.constructor);\n    let query = null;\n    let args = [];\n    let where;\n\n    if (this.isNewRecord) {\n      query = 'insert';\n      args = [this, this.constructor.getTableName(options), values, options];\n    } else {\n      where = this.where(true);\n      if (versionAttr) {\n        values[versionFieldName] = parseInt(values[versionFieldName], 10) + 1;\n      }\n      query = 'update';\n      args = [this, this.constructor.getTableName(options), values, where, options];\n    }\n\n    const [result, rowsUpdated] = await this.constructor.queryInterface[query](...args);\n    if (versionAttr) {\n      // Check to see that a row was updated, otherwise it's an optimistic locking error.\n      if (rowsUpdated < 1) {\n        throw new sequelizeErrors.OptimisticLockError({\n          modelName: this.constructor.name,\n          values,\n          where\n        });\n      } else {\n        result.dataValues[versionAttr] = values[versionFieldName];\n      }\n    }\n\n    // Transfer database generated values (defaults, autoincrement, etc)\n    for (const attr of Object.keys(this.constructor.rawAttributes)) {\n      if (this.constructor.rawAttributes[attr].field &&\n          values[this.constructor.rawAttributes[attr].field] !== undefined &&\n          this.constructor.rawAttributes[attr].field !== attr\n      ) {\n        values[attr] = values[this.constructor.rawAttributes[attr].field];\n        delete values[this.constructor.rawAttributes[attr].field];\n      }\n    }\n    Object.assign(values, result.dataValues);\n\n    Object.assign(result.dataValues, values);\n    if (wasNewRecord && this._options.include && this._options.include.length) {\n      await Promise.all(\n        this._options.include.filter(include => !(include.association instanceof BelongsTo ||\n          include.parent && include.parent.association instanceof BelongsToMany)).map(async include => {\n          let instances = this.get(include.as);\n\n          if (!instances) return;\n          if (!Array.isArray(instances)) instances = [instances];\n\n          const includeOptions = _(Utils.cloneDeep(include))\n            .omit(['association'])\n            .defaults({\n              transaction: options.transaction,\n              logging: options.logging,\n              parentRecord: this\n            }).value();\n\n          // Instances will be updated in place so we can safely treat HasOne like a HasMany\n          await Promise.all(instances.map(async instance => {\n            if (include.association instanceof BelongsToMany) {\n              await instance.save(includeOptions);\n              const values0 = {\n                [include.association.foreignKey]: this.get(this.constructor.primaryKeyAttribute, { raw: true }),\n                [include.association.otherKey]: instance.get(instance.constructor.primaryKeyAttribute, { raw: true }),\n                // Include values defined in the association\n                ...include.association.through.scope\n              };\n\n              if (instance[include.association.through.model.name]) {\n                for (const attr of Object.keys(include.association.through.model.rawAttributes)) {\n                  if (include.association.through.model.rawAttributes[attr]._autoGenerated ||\n                    attr === include.association.foreignKey ||\n                    attr === include.association.otherKey ||\n                    typeof instance[include.association.through.model.name][attr] === undefined) {\n                    continue;\n                  }\n                  values0[attr] = instance[include.association.through.model.name][attr];\n                }\n              }\n\n              await include.association.throughModel.create(values0, includeOptions);\n            } else {\n              instance.set(include.association.foreignKey, this.get(include.association.sourceKey || this.constructor.primaryKeyAttribute, { raw: true }), { raw: true });\n              Object.assign(instance, include.association.scope);\n              await instance.save(includeOptions);\n            }\n          }));\n        })\n      );\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.constructor.runHooks(`after${hook}`, result, options);\n    }\n    for (const field of options.fields) {\n      result._previousDataValues[field] = result.dataValues[field];\n      this.changed(field, false);\n    }\n    this.isNewRecord = false;\n\n    return result;\n  }\n\n  /**\n   * Refresh the current instance in-place, i.e. update the object with current data from the DB and return the same object.\n   * This is different from doing a `find(Instance.id)`, because that would create and return a new instance. With this method,\n   * all references to the Instance are updated with the new data and no new objects are created.\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {object} [options] Options that are passed on to `Model.find`\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   *\n   * @returns {Promise<Model>}\n   */\n  async reload(options) {\n    options = Utils.defaults({\n      where: this.where()\n    }, options, {\n      include: this._options.include || undefined\n    });\n\n    const reloaded = await this.constructor.findOne(options);\n    if (!reloaded) {\n      throw new sequelizeErrors.InstanceError(\n        'Instance could not be reloaded because it does not exist anymore (find call returned null)'\n      );\n    }\n    // update the internal options of the instance\n    this._options = reloaded._options;\n    // re-set instance values\n    this.set(reloaded.dataValues, {\n      raw: true,\n      reset: true && !options.attributes\n    });\n\n    return this;\n  }\n\n  /**\n  * Validate the attributes of this instance according to validation rules set in the model definition.\n  *\n  * The promise fulfills if and only if validation successful; otherwise it rejects an Error instance containing { field name : [error msgs] } entries.\n  *\n  * @param {object} [options] Options that are passed to the validator\n  * @param {Array} [options.skip] An array of strings. All properties that are in this array will not be validated\n  * @param {Array} [options.fields] An array of strings. Only the properties that are in this array will be validated\n  * @param {boolean} [options.hooks=true] Run before and after validate hooks\n  *\n  * @returns {Promise}\n  */\n  async validate(options) {\n    return new InstanceValidator(this, options).validate();\n  }\n\n  /**\n   * This is the same as calling `set` and then calling `save` but it only saves the\n   * exact values passed to it, making it more atomic and safer.\n   *\n   * @see\n   * {@link Model#set}\n   * @see\n   * {@link Model#save}\n   *\n   * @param {object} values See `set`\n   * @param {object} options See `save`\n   *\n   * @returns {Promise<Model>}\n   */\n  async update(values, options) {\n    // Clone values so it doesn't get modified for caller scope and ignore undefined values\n    values = _.omitBy(values, value => value === undefined);\n\n    const changedBefore = this.changed() || [];\n\n    options = options || {};\n    if (Array.isArray(options)) options = { fields: options };\n\n    options = Utils.cloneDeep(options);\n    const setOptions = Utils.cloneDeep(options);\n    setOptions.attributes = options.fields;\n    this.set(values, setOptions);\n\n    // Now we need to figure out which fields were actually affected by the setter.\n    const sideEffects = _.without(this.changed(), ...changedBefore);\n    const fields = _.union(Object.keys(values), sideEffects);\n\n    if (!options.fields) {\n      options.fields = _.intersection(fields, this.changed());\n      options.defaultFields = options.fields;\n    }\n\n    return await this.save(options);\n  }\n\n  /**\n   * Destroy the row corresponding to this instance. Depending on your setting for paranoid, the row will either be completely deleted, or have its deletedAt timestamp set to the current time.\n   *\n   * @param {object}      [options={}] destroy options\n   * @param {boolean}     [options.force=false] If set to true, paranoid models will actually be deleted\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string}      [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise}\n   */\n  async destroy(options) {\n    options = {\n      hooks: true,\n      force: false,\n      ...options\n    };\n\n    // Run before hook\n    if (options.hooks) {\n      await this.constructor.runHooks('beforeDestroy', this, options);\n    }\n    const where = this.where(true);\n\n    let result;\n    if (this.constructor._timestampAttributes.deletedAt && options.force === false) {\n      const attributeName = this.constructor._timestampAttributes.deletedAt;\n      const attribute = this.constructor.rawAttributes[attributeName];\n      const defaultValue = Object.prototype.hasOwnProperty.call(attribute, 'defaultValue')\n        ? attribute.defaultValue\n        : null;\n      const currentValue = this.getDataValue(attributeName);\n      const undefinedOrNull = currentValue == null && defaultValue == null;\n      if (undefinedOrNull || _.isEqual(currentValue, defaultValue)) {\n        // only update timestamp if it wasn't already set\n        this.setDataValue(attributeName, new Date());\n      }\n\n      result = await this.save({ ...options, hooks: false });\n    } else {\n      result = await this.constructor.queryInterface.delete(this, this.constructor.getTableName(options), where, { type: QueryTypes.DELETE, limit: null, ...options });\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.constructor.runHooks('afterDestroy', this, options);\n    }\n    return result;\n  }\n\n  /**\n   * Helper method to determine if a instance is \"soft deleted\".  This is\n   * particularly useful if the implementer renamed the `deletedAt` attribute\n   * to something different.  This method requires `paranoid` to be enabled.\n   *\n   * @returns {boolean}\n   */\n  isSoftDeleted() {\n    if (!this.constructor._timestampAttributes.deletedAt) {\n      throw new Error('Model is not paranoid');\n    }\n\n    const deletedAtAttribute = this.constructor.rawAttributes[this.constructor._timestampAttributes.deletedAt];\n    const defaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n    const deletedAt = this.get(this.constructor._timestampAttributes.deletedAt) || null;\n    const isSet = deletedAt !== defaultValue;\n\n    return isSet;\n  }\n\n  /**\n   * Restore the row corresponding to this instance. Only available for paranoid models.\n   *\n   * @param {object}      [options={}] restore options\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   *\n   * @returns {Promise}\n   */\n  async restore(options) {\n    if (!this.constructor._timestampAttributes.deletedAt) throw new Error('Model is not paranoid');\n\n    options = {\n      hooks: true,\n      force: false,\n      ...options\n    };\n\n    // Run before hook\n    if (options.hooks) {\n      await this.constructor.runHooks('beforeRestore', this, options);\n    }\n    const deletedAtCol = this.constructor._timestampAttributes.deletedAt;\n    const deletedAtAttribute = this.constructor.rawAttributes[deletedAtCol];\n    const deletedAtDefaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n\n    this.setDataValue(deletedAtCol, deletedAtDefaultValue);\n    const result = await this.save({ ...options, hooks: false, omitNull: false });\n    // Run after hook\n    if (options.hooks) {\n      await this.constructor.runHooks('afterRestore', this, options);\n      return result;\n    }\n    return result;\n  }\n\n  /**\n   * Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a\n   * ```sql\n   * SET column = column + X\n   * ```\n   * query. The updated instance will be returned by default in Postgres. However, in other dialects, you will need to do a reload to get the new values.\n   *\n   * @example\n   * instance.increment('number') // increment number by 1\n   *\n   * instance.increment(['number', 'count'], { by: 2 }) // increment number and count by 2\n   *\n   * // increment answer by 42, and tries by 1.\n   * // `by` is ignored, since each column has its own value\n   * instance.increment({ answer: 42, tries: 1}, { by: 2 })\n   *\n   * @see\n   * {@link Model#reload}\n   *\n   * @param {string|Array|object} fields If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.\n   * @param {object} [options] options\n   * @param {number} [options.by=1] The number to increment by\n   * @param {boolean} [options.silent=false] If true, the updatedAt timestamp will not be updated.\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string} [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean} [options.returning=true] Append RETURNING * to get back auto generated values (Postgres only)\n   *\n   * @returns {Promise<Model>}\n   * @since 4.0.0\n   */\n  async increment(fields, options) {\n    const identifier = this.where();\n\n    options = Utils.cloneDeep(options);\n    options.where = { ...options.where, ...identifier };\n    options.instance = this;\n\n    await this.constructor.increment(fields, options);\n\n    return this;\n  }\n\n  /**\n   * Decrement the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The decrement is done using a\n   * ```sql\n   * SET column = column - X\n   * ```\n   * query. The updated instance will be returned by default in Postgres. However, in other dialects, you will need to do a reload to get the new values.\n   *\n   * @example\n   * instance.decrement('number') // decrement number by 1\n   *\n   * instance.decrement(['number', 'count'], { by: 2 }) // decrement number and count by 2\n   *\n   * // decrement answer by 42, and tries by 1.\n   * // `by` is ignored, since each column has its own value\n   * instance.decrement({ answer: 42, tries: 1}, { by: 2 })\n   *\n   * @see\n   * {@link Model#reload}\n   * @param {string|Array|object} fields If a string is provided, that column is decremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is decremented by the value given\n   * @param {object}      [options] decrement options\n   * @param {number}      [options.by=1] The number to decrement by\n   * @param {boolean}     [options.silent=false] If true, the updatedAt timestamp will not be updated.\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string}      [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean}     [options.returning=true] Append RETURNING * to get back auto generated values (Postgres only)\n   *\n   * @returns {Promise}\n   */\n  async decrement(fields, options) {\n    return this.increment(fields, {\n      by: 1,\n      ...options,\n      increment: false\n    });\n  }\n\n  /**\n   * Check whether this and `other` Instance refer to the same row\n   *\n   * @param {Model} other Other instance to compare against\n   *\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (!other || !other.constructor) {\n      return false;\n    }\n\n    if (!(other instanceof this.constructor)) {\n      return false;\n    }\n\n    return this.constructor.primaryKeyAttributes.every(attribute => this.get(attribute, { raw: true }) === other.get(attribute, { raw: true }));\n  }\n\n  /**\n   * Check if this is equal to one of `others` by calling equals\n   *\n   * @param {Array<Model>} others An array of instances to check against\n   *\n   * @returns {boolean}\n   */\n  equalsOneOf(others) {\n    return others.some(other => this.equals(other));\n  }\n\n  setValidators(attribute, validators) {\n    this.validators[attribute] = validators;\n  }\n\n  /**\n   * Convert the instance to a JSON representation.\n   * Proxies to calling `get` with no keys.\n   * This means get all values gotten from the DB, and apply all custom getters.\n   *\n   * @see\n   * {@link Model#get}\n   *\n   * @returns {object}\n   */\n  toJSON() {\n    return _.cloneDeep(\n      this.get({\n        plain: true\n      })\n    );\n  }\n\n  /**\n   * Creates a 1:m association between this (the source) and the provided target.\n   * The foreign key is added on the target.\n   *\n   * @param {Model}               target Target model\n   * @param {object}              [options] hasMany association options\n   * @param {boolean}             [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {string|object}       [options.as] The alias of this model. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with `plural` and `singular` keys. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target\n   * @param {string|object}       [options.foreignKey] The name of the foreign key in the target table or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source\n   * @param {string}              [options.sourceKey] The name of the field to use as the key for the association in the source table. Defaults to the primary key of the source table\n   * @param {object}              [options.scope] A key/value set that will be used for association create and find defaults on the target. (sqlite not supported for N:M)\n   * @param {string}              [options.onDelete='SET&nbsp;NULL|CASCADE'] SET NULL if foreignKey allows nulls, CASCADE if otherwise\n   * @param {string}              [options.onUpdate='CASCADE'] Set `ON UPDATE`\n   * @param {boolean}             [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   *\n   * @returns {HasMany}\n   *\n   * @example\n   * User.hasMany(Profile) // This will add userId to the profile table\n   */\n  static hasMany(target, options) {} // eslint-disable-line\n\n  /**\n   * Create an N:M association with a join table. Defining `through` is required.\n   *\n   * @param {Model}               target Target model\n   * @param {object}              options belongsToMany association options\n   * @param {boolean}             [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {Model|string|object} options.through The name of the table that is used to join source and target in n:m associations. Can also be a sequelize model if you want to define the junction table yourself and add extra attributes to it.\n   * @param {Model}               [options.through.model] The model used to join both sides of the N:M association.\n   * @param {object}              [options.through.scope] A key/value set that will be used for association create and find defaults on the through model. (Remember to add the attributes to the through model)\n   * @param {boolean}             [options.through.unique=true] If true a unique key will be generated from the foreign keys used (might want to turn this off and create specific unique keys when using scopes)\n   * @param {string|object}       [options.as] The alias of this association. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with `plural` and `singular` keys. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target\n   * @param {string|object}       [options.foreignKey] The name of the foreign key in the join table (representing the source model) or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source\n   * @param {string|object}       [options.otherKey] The name of the foreign key in the join table (representing the target model) or an object representing the type definition for the other column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of target + primary key of target\n   * @param {object}              [options.scope] A key/value set that will be used for association create and find defaults on the target. (sqlite not supported for N:M)\n   * @param {boolean}             [options.timestamps=sequelize.options.timestamps] Should the join model have timestamps\n   * @param {string}              [options.onDelete='SET&nbsp;NULL|CASCADE'] Cascade if this is a n:m, and set null if it is a 1:m\n   * @param {string}              [options.onUpdate='CASCADE'] Sets `ON UPDATE`\n   * @param {boolean}             [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   *\n   * @returns {BelongsToMany}\n   *\n   * @example\n   * // Automagically generated join model\n   * User.belongsToMany(Project, { through: 'UserProjects' })\n   * Project.belongsToMany(User, { through: 'UserProjects' })\n   *\n   * // Join model with additional attributes\n   * const UserProjects = sequelize.define('UserProjects', {\n   *   started: Sequelize.BOOLEAN\n   * })\n   * User.belongsToMany(Project, { through: UserProjects })\n   * Project.belongsToMany(User, { through: UserProjects })\n   */\n  static belongsToMany(target, options) {} // eslint-disable-line\n\n  /**\n   * Creates an association between this (the source) and the provided target. The foreign key is added on the target.\n   *\n   * @param {Model}           target Target model\n   * @param {object}          [options] hasOne association options\n   * @param {boolean}         [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {string}          [options.as] The alias of this model, in singular form. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target\n   * @param {string|object}   [options.foreignKey] The name of the foreign key attribute in the target model or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source\n   * @param {string}          [options.sourceKey] The name of the attribute to use as the key for the association in the source table. Defaults to the primary key of the source table\n   * @param {string}          [options.onDelete='SET&nbsp;NULL|CASCADE'] SET NULL if foreignKey allows nulls, CASCADE if otherwise\n   * @param {string}          [options.onUpdate='CASCADE'] Sets 'ON UPDATE'\n   * @param {boolean}         [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   * @param {string}          [options.uniqueKey] The custom name for unique constraint.\n   *\n   * @returns {HasOne}\n   *\n   * @example\n   * User.hasOne(Profile) // This will add userId to the profile table\n   */\n  static hasOne(target, options) {} // eslint-disable-line\n\n  /**\n   * Creates an association between this (the source) and the provided target. The foreign key is added on the source.\n   *\n   * @param {Model}           target The target model\n   * @param {object}          [options] belongsTo association options\n   * @param {boolean}         [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {string}          [options.as] The alias of this model, in singular form. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target\n   * @param {string|object}   [options.foreignKey] The name of the foreign key attribute in the source table or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of target + primary key of target\n   * @param {string}          [options.targetKey] The name of the attribute to use as the key for the association in the target table. Defaults to the primary key of the target table\n   * @param {string}          [options.onDelete='SET&nbsp;NULL|NO&nbsp;ACTION'] SET NULL if foreignKey allows nulls, NO ACTION if otherwise\n   * @param {string}          [options.onUpdate='CASCADE'] Sets 'ON UPDATE'\n   * @param {boolean}         [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   *\n   * @returns {BelongsTo}\n   *\n   * @example\n   * Profile.belongsTo(User) // This will add userId to the profile table\n   */\n  static belongsTo(target, options) {} // eslint-disable-line\n}\n\nObject.assign(Model, associationsMixin);\nHooks.applyTo(Model, true);\n\nmodule.exports = Model;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/belongs-to.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,36,37,28,38,35,37,40,35,39,36,34,18,28,27,25,8,12,50,51,5,46,57,92,41,48,5,27,40,16,39,19,5,38,53,97,5,87,151,5,79,92,81,43,39,45,62,22,28,28,33,6,3,23,27,41,85,23,34,6,45,98,101,65,5,130,66,36,95,39,16,3,14,45,45,3,33,21,29,17,39,65,27,35,14,45,7,5,66,70,5,36,27,25,5,20,31,77,8,12,54,71,7,60,27,5,81,20,52,24,42,69,7,40,73,7,20,5,35,3,63,35,52,49,5,47,31,13,30,32,35,23,16,46,3,49,26,28,74,75,31,3,33,36,31,5,34,40,5,27,3,1,27,37,35,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/associations/belongs-to.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst Op = require('../operators');\n\n/**\n * One-to-one association\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.belongsTo(Project)` the getter will be `user.getProject()`.\n *\n * @see {@link Model.belongsTo}\n */\nclass BelongsTo extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    this.associationType = 'BelongsTo';\n    this.isSingleAssociation = true;\n    this.foreignKeyAttribute = {};\n\n    if (this.as) {\n      this.isAliased = true;\n      this.options.name = {\n        singular: this.as\n      };\n    } else {\n      this.as = this.target.options.name.singular;\n      this.options.name = this.target.options.name;\n    }\n\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else if (this.options.foreignKey) {\n      this.foreignKey = this.options.foreignKey;\n    }\n\n    if (!this.foreignKey) {\n      this.foreignKey = Utils.camelize(\n        [\n          this.as,\n          this.target.primaryKeyAttribute\n        ].join('_')\n      );\n    }\n\n    this.identifier = this.foreignKey;\n    if (this.source.rawAttributes[this.identifier]) {\n      this.identifierField = this.source.rawAttributes[this.identifier].field || this.identifier;\n    }\n\n    if (\n      this.options.targetKey\n      && !this.target.rawAttributes[this.options.targetKey]\n    ) {\n      throw new Error(`Unknown attribute \"${this.options.targetKey}\" passed as targetKey, define this attribute on model \"${this.target.name}\" first`);\n    }\n\n    this.targetKey = this.options.targetKey || this.target.primaryKeyAttribute;\n    this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;\n    this.targetKeyIsPrimary = this.targetKey === this.target.primaryKeyAttribute;\n    this.targetIdentifier = this.targetKey;\n\n    this.associationAccessor = this.as;\n    this.options.useHooks = options.useHooks;\n\n    // Get singular name, trying to uppercase the first letter, unless the model forbids it\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: `get${singular}`,\n      set: `set${singular}`,\n      create: `create${singular}`\n    };\n  }\n\n  // the id is in the source table\n  _injectAttributes() {\n    const newAttributes = {\n      [this.foreignKey]: {\n        type: this.options.keyType || this.target.rawAttributes[this.targetKey].type,\n        allowNull: true,\n        ...this.foreignKeyAttribute\n      }\n    };\n\n    if (this.options.constraints !== false) {\n      const source = this.source.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];\n      this.options.onDelete = this.options.onDelete || (source.allowNull ? 'SET NULL' : 'NO ACTION');\n      this.options.onUpdate = this.options.onUpdate || 'CASCADE';\n    }\n\n    Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.target, this.source, this.options, this.targetKeyField);\n    Utils.mergeDefaults(this.source.rawAttributes, newAttributes);\n\n    this.source.refreshAttributes();\n\n    this.identifierField = this.source.rawAttributes[this.foreignKey].field || this.foreignKey;\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'set', 'create'];\n\n    Helpers.mixinMethods(this, obj, methods);\n  }\n\n  /**\n   * Get the associated instance.\n   *\n   * @param {Model|Array<Model>} instances source instances\n   * @param {object}         [options] find options\n   * @param {string|boolean} [options.scope]  Apply a scope on the related model, or remove its default scope by passing false.\n   * @param {string}         [options.schema] Apply a schema on the related model\n   *\n   * @see\n   * {@link Model.findOne} for a full explanation of options\n   *\n   * @returns {Promise<Model>}\n   */\n  async get(instances, options) {\n    const where = {};\n    let Target = this.target;\n    let instance;\n\n    options = Utils.cloneDeep(options);\n\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        Target = Target.unscoped();\n      } else {\n        Target = Target.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      Target = Target.schema(options.schema, options.schemaDelimiter);\n    }\n\n    if (!Array.isArray(instances)) {\n      instance = instances;\n      instances = undefined;\n    }\n\n    if (instances) {\n      where[this.targetKey] = {\n        [Op.in]: instances.map(_instance => _instance.get(this.foreignKey))\n      };\n    } else {\n      if (this.targetKeyIsPrimary && !options.where) {\n        return Target.findByPk(instance.get(this.foreignKey), options);\n      }\n      where[this.targetKey] = instance.get(this.foreignKey);\n      options.limit = null;\n    }\n\n    options.where = options.where ?\n      { [Op.and]: [where, options.where] } :\n      where;\n\n    if (instances) {\n      const results = await Target.findAll(options);\n      const result = {};\n      for (const _instance of instances) {\n        result[_instance.get(this.foreignKey, { raw: true })] = null;\n      }\n\n      for (const _instance of results) {\n        result[_instance.get(this.targetKey, { raw: true })] = _instance;\n      }\n\n      return result;\n    }\n\n    return Target.findOne(options);\n  }\n\n  /**\n   * Set the associated model.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {?Model|string|number} [associatedInstance] An persisted instance or the primary key of an instance to associate with this. Pass `null` or `undefined` to remove the association.\n   * @param {object} [options={}] options passed to `this.save`\n   * @param {boolean} [options.save=true] Skip saving this after setting the foreign key if false.\n   *\n   *  @returns {Promise}\n   */\n  async set(sourceInstance, associatedInstance, options = {}) {\n    let value = associatedInstance;\n\n    if (associatedInstance instanceof this.target) {\n      value = associatedInstance[this.targetKey];\n    }\n\n    sourceInstance.set(this.foreignKey, value);\n\n    if (options.save === false) return;\n\n    options = {\n      fields: [this.foreignKey],\n      allowNull: [this.foreignKey],\n      association: true,\n      ...options\n    };\n\n    // passes the changed field to save, so only that field get updated.\n    return await sourceInstance.save(options);\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {object} [values={}] values to create associated model instance with\n   * @param {object} [options={}] Options passed to `target.create` and setAssociation.\n   *\n   * @see\n   * {@link Model#create}  for a full explanation of options\n   *\n   * @returns {Promise<Model>} The created target model\n   */\n  async create(sourceInstance, values, options) {\n    values = values || {};\n    options = options || {};\n\n    const newAssociatedObject = await this.target.create(values, options);\n    await sourceInstance[this.accessors.set](newAssociatedObject, options);\n\n    return newAssociatedObject;\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.singular) {\n      return this.as === alias.singular;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = BelongsTo;\nmodule.exports.BelongsTo = BelongsTo;\nmodule.exports.default = BelongsTo;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/helpers.js":{"lineLengths":[13,44,95,229,3,1,52,79,77,157,65,33,37,34,8,47,47,5,3,1,60,59,26,33,84,51,55,71,8,5,3,1,36,35,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/associations/helpers.js"],"sourcesContent":["'use strict';\n\nfunction checkNamingCollision(association) {\n  if (Object.prototype.hasOwnProperty.call(association.source.rawAttributes, association.as)) {\n    throw new Error(\n      `Naming collision between attribute '${association.as}'` +\n      ` and association '${association.as}' on model ${association.source.name}` +\n      '. To remedy this, change either foreignKey or as in your association definition'\n    );\n  }\n}\nexports.checkNamingCollision = checkNamingCollision;\n\nfunction addForeignKeyConstraints(newAttribute, source, target, options, key) {\n  // FK constraints are opt-in: users must either set `foreignKeyConstraints`\n  // on the association, or request an `onDelete` or `onUpdate` behavior\n\n  if (options.foreignKeyConstraint || options.onDelete || options.onUpdate) {\n    // Find primary keys: composite keys not supported with this approach\n    const primaryKeys = Object.keys(source.primaryKeys)\n      .map(primaryKeyAttribute => source.rawAttributes[primaryKeyAttribute].field || primaryKeyAttribute);\n\n    if (primaryKeys.length === 1 || !primaryKeys.includes(key)) {\n      newAttribute.references = {\n        model: source.getTableName(),\n        key: key || primaryKeys[0]\n      };\n\n      newAttribute.onDelete = options.onDelete;\n      newAttribute.onUpdate = options.onUpdate;\n    }\n  }\n}\nexports.addForeignKeyConstraints = addForeignKeyConstraints;\n\n/**\n * Mixin (inject) association methods to model prototype\n *\n * @private\n *\n * @param {object} association instance\n * @param {object} obj Model prototype\n * @param {Array} methods Method names to inject\n * @param {object} aliases Mapping between model and association method names\n *\n */\nfunction mixinMethods(association, obj, methods, aliases) {\n  aliases = aliases || {};\n\n  for (const method of methods) {\n    // don't override custom methods\n    if (!Object.prototype.hasOwnProperty.call(obj, association.accessors[method])) {\n      const realMethod = aliases[method] || method;\n\n      obj[association.accessors[method]] = function() {\n        return association[realMethod](this, ...Array.from(arguments));\n      };\n    }\n  }\n}\nexports.mixinMethods = mixinMethods;\n"],"mappings":";AAEA,8BAA8B,aAAa;AACzC,MAAI,OAAO,UAAU,eAAe,KAAK,YAAY,OAAO,eAAe,YAAY,KAAK;AAC1F,UAAM,IAAI,MACR,uCAAuC,YAAY,wBAC9B,YAAY,gBAAgB,YAAY,OAAO;AAAA;AAAA;AAK1E,QAAQ,uBAAuB;AAE/B,kCAAkC,cAAc,QAAQ,QAAQ,SAAS,KAAK;AAI5E,MAAI,QAAQ,wBAAwB,QAAQ,YAAY,QAAQ,UAAU;AAExE,UAAM,cAAc,OAAO,KAAK,OAAO,aACpC,IAAI,yBAAuB,OAAO,cAAc,qBAAqB,SAAS;AAEjF,QAAI,YAAY,WAAW,KAAK,CAAC,YAAY,SAAS,MAAM;AAC1D,mBAAa,aAAa;AAAA,QACxB,OAAO,OAAO;AAAA,QACd,KAAK,OAAO,YAAY;AAAA;AAG1B,mBAAa,WAAW,QAAQ;AAChC,mBAAa,WAAW,QAAQ;AAAA;AAAA;AAAA;AAItC,QAAQ,2BAA2B;AAanC,sBAAsB,aAAa,KAAK,SAAS,SAAS;AACxD,YAAU,WAAW;AAErB,aAAW,UAAU,SAAS;AAE5B,QAAI,CAAC,OAAO,UAAU,eAAe,KAAK,KAAK,YAAY,UAAU,UAAU;AAC7E,YAAM,aAAa,QAAQ,WAAW;AAEtC,UAAI,YAAY,UAAU,WAAW,WAAW;AAC9C,eAAO,YAAY,YAAY,MAAM,GAAG,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAK3D,QAAQ,eAAe;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/base.js":{"lineLengths":[13,52,19,45,25,25,27,31,57,25,30,38,151,5,3,26,32,22,5,35,41,23,29,61,68,7,3,48,19,3,1,29,32,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/associations/base.js"],"sourcesContent":["'use strict';\n\nconst { AssociationError } = require('./../errors');\n\n/**\n * Creating associations in sequelize is done by calling one of the belongsTo / hasOne / hasMany / belongsToMany functions on a model (the source), and providing another model as the first argument to the function (the target).\n *\n * * hasOne - adds a foreign key to the target and singular association mixins to the source.\n * * belongsTo - add a foreign key and singular association mixins to the source.\n * * hasMany - adds a foreign key to target and plural association mixins to the source.\n * * belongsToMany - creates an N:M association with a join table and adds plural association mixins to the source. The junction table is created with sourceId and targetId.\n *\n * Creating an association will add a foreign key constraint to the attributes. All associations use `CASCADE` on update and `SET NULL` on delete, except for n:m, which also uses `CASCADE` on delete.\n *\n * When creating associations, you can provide an alias, via the `as` option. This is useful if the same model is associated twice, or you want your association to be called something other than the name of the target model.\n *\n * As an example, consider the case where users have many pictures, one of which is their profile picture. All pictures have a `userId`, but in addition the user model also has a `profilePictureId`, to be able to easily load the user's profile picture.\n *\n * ```js\n * User.hasMany(Picture)\n * User.belongsTo(Picture, { as: 'ProfilePicture', constraints: false })\n *\n * user.getPictures() // gets you all pictures\n * user.getProfilePicture() // gets you only the profile picture\n *\n * User.findAll({\n *   where: ...,\n *   include: [\n *     { model: Picture }, // load all pictures\n *     { model: Picture, as: 'ProfilePicture' }, // load the profile picture.\n *     // Notice that the spelling must be the exact same as the one in the association\n *   ]\n * })\n * ```\n * To get full control over the foreign key column added by sequelize, you can use the `foreignKey` option. It can either be a string, that specifies the name, or and object type definition,\n * equivalent to those passed to `sequelize.define`.\n *\n * ```js\n * User.hasMany(Picture, { foreignKey: 'uid' })\n * ```\n *\n * The foreign key column in Picture will now be called `uid` instead of the default `userId`.\n *\n * ```js\n * User.hasMany(Picture, {\n *   foreignKey: {\n *     name: 'uid',\n *     allowNull: false\n *   }\n * })\n * ```\n *\n * This specifies that the `uid` column cannot be null. In most cases this will already be covered by the foreign key constraints, which sequelize creates automatically, but can be useful in case where the foreign keys are disabled, e.g. due to circular references (see `constraints: false` below).\n *\n * When fetching associated models, you can limit your query to only load some models. These queries are written in the same way as queries to `find`/`findAll`. To only get pictures in JPG, you can do:\n *\n * ```js\n * user.getPictures({\n *   where: {\n *     format: 'jpg'\n *   }\n * })\n * ```\n *\n * There are several ways to update and add new associations. Continuing with our example of users and pictures:\n * ```js\n * user.addPicture(p) // Add a single picture\n * user.setPictures([p1, p2]) // Associate user with ONLY these two picture, all other associations will be deleted\n * user.addPictures([p1, p2]) // Associate user with these two pictures, but don't touch any current associations\n * ```\n *\n * You don't have to pass in a complete object to the association functions, if your associated model has a single primary key:\n *\n * ```js\n * user.addPicture(req.query.pid) // Here pid is just an integer, representing the primary key of the picture\n * ```\n *\n * In the example above we have specified that a user belongs to his profile picture. Conceptually, this might not make sense, but since we want to add the foreign key to the user model this is the way to do it.\n *\n * Note how we also specified `constraints: false` for profile picture. This is because we add a foreign key from user to picture (profilePictureId), and from picture to user (userId). If we were to add foreign keys to both, it would create a cyclic dependency, and sequelize would not know which table to create first, since user depends on picture, and picture depends on user. These kinds of problems are detected by sequelize before the models are synced to the database, and you will get an error along the lines of `Error: Cyclic dependency found. 'users' is dependent of itself`. If you encounter this, you should either disable some constraints, or rethink your associations completely.\n */\nclass Association {\n  constructor(source, target, options = {}) {\n    /**\n     * @type {Model}\n     */\n    this.source = source;\n\n    /**\n     * @type {Model}\n     */\n    this.target = target;\n\n    this.options = options;\n    this.scope = options.scope;\n    this.isSelfAssociation = this.source === this.target;\n    this.as = options.as;\n\n    /**\n     * The type of the association. One of `HasMany`, `BelongsTo`, `HasOne`, `BelongsToMany`\n     *\n     * @type {string}\n     */\n    this.associationType = '';\n\n    if (source.hasAlias(options.as)) {\n      throw new AssociationError(`You have used the alias ${options.as} in two separate associations. ` +\n      'Aliased associations must have unique aliases.'\n      );\n    }\n  }\n\n  /**\n   * Normalize input\n   *\n   * @param {Array|string} input it may be array or single obj, instance or primary key\n   *\n   * @private\n   * @returns {Array} built objects\n   */\n  toInstanceArray(input) {\n    if (!Array.isArray(input)) {\n      input = [input];\n    }\n\n    return input.map(element => {\n      if (element instanceof this.target) return element;\n\n      const tmpInstance = {};\n      tmpInstance[this.target.primaryKeyAttribute] = element;\n\n      return this.target.build(tmpInstance, { isNewRecord: false });\n    });\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return this.as;\n  }\n}\n\nmodule.exports = Association;\n"],"mappings":";AAEA,MAAM,EAAE,qBAAqB,QAAQ;AA+ErC,kBAAkB;AAAA,EAChB,YAAY,QAAQ,QAAQ,UAAU,IAAI;AAIxC,SAAK,SAAS;AAKd,SAAK,SAAS;AAEd,SAAK,UAAU;AACf,SAAK,QAAQ,QAAQ;AACrB,SAAK,oBAAoB,KAAK,WAAW,KAAK;AAC9C,SAAK,KAAK,QAAQ;AAOlB,SAAK,kBAAkB;AAEvB,QAAI,OAAO,SAAS,QAAQ,KAAK;AAC/B,YAAM,IAAI,iBAAiB,2BAA2B,QAAQ;AAAA;AAAA;AAAA,EAclE,gBAAgB,OAAO;AACrB,QAAI,CAAC,MAAM,QAAQ,QAAQ;AACzB,cAAQ,CAAC;AAAA;AAGX,WAAO,MAAM,IAAI,aAAW;AAC1B,UAAI,mBAAmB,KAAK;AAAQ,eAAO;AAE3C,YAAM,cAAc;AACpB,kBAAY,KAAK,OAAO,uBAAuB;AAE/C,aAAO,KAAK,OAAO,MAAM,aAAa,EAAE,aAAa;AAAA;AAAA;AAAA,GAIxD,OAAO,IAAI,iCAAiC;AAC3C,WAAO,KAAK;AAAA;AAAA;AAIhB,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/belongs-to-many.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,36,37,28,38,42,38,36,63,63,35,41,40,35,108,138,5,38,30,30,8,5,43,34,38,60,35,30,45,92,5,18,28,37,36,33,14,29,26,46,10,7,12,48,51,5,159,33,36,5,55,58,15,45,15,77,34,34,7,7,79,92,33,46,94,12,35,55,94,5,38,49,58,104,40,22,74,22,12,14,70,7,5,68,19,18,18,18,16,8,22,35,34,47,57,42,7,41,55,72,49,59,51,34,9,7,33,47,7,40,55,72,49,34,9,7,29,40,7,5,23,45,5,151,39,58,62,22,26,26,34,28,34,34,40,34,29,29,6,3,32,46,57,92,12,36,67,42,22,19,5,44,53,86,12,35,36,7,34,63,96,22,19,5,3,23,38,43,76,79,71,39,16,65,9,38,7,7,64,41,47,64,41,47,94,92,42,69,47,20,88,43,14,103,7,66,5,61,59,28,8,5,59,57,28,8,5,45,36,42,27,8,117,117,36,45,36,45,36,42,27,8,115,115,36,45,36,45,5,86,84,43,102,105,124,62,5,61,128,5,68,33,7,72,33,7,70,34,32,33,7,68,31,7,72,31,7,70,32,32,33,7,53,91,40,9,93,41,41,42,9,5,39,16,3,14,127,21,23,20,25,30,6,54,3,32,45,33,19,21,21,50,5,21,17,19,21,7,6,50,24,67,26,51,7,53,24,57,10,7,46,28,40,48,23,59,27,9,5,28,65,27,33,14,43,7,5,66,68,5,34,3,34,44,39,26,104,6,37,23,25,53,38,3,49,36,30,5,44,15,18,19,35,29,7,61,44,32,7,14,34,8,7,21,17,41,21,7,6,70,140,3,60,28,37,37,39,53,40,32,12,72,5,34,49,27,49,38,26,54,160,45,112,22,48,16,66,64,35,11,102,47,88,22,60,58,15,17,11,9,7,44,93,33,56,122,32,13,7,43,70,147,56,66,34,11,104,7,35,6,9,125,51,21,44,38,18,5,3,52,22,31,42,29,44,44,46,60,52,61,34,50,88,34,49,26,37,37,39,132,35,40,16,72,102,118,42,11,9,7,43,70,87,102,65,76,63,28,11,111,7,48,70,100,69,33,9,100,54,51,15,7,35,6,9,132,67,26,21,44,36,18,5,3,57,29,28,77,19,74,120,6,100,3,49,29,28,26,33,17,23,8,5,28,47,27,79,7,5,81,102,31,3,33,36,31,5,32,38,5,27,3,1,31,45,39,43,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/associations/belongs-to-many.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst BelongsTo = require('./belongs-to');\nconst HasMany = require('./has-many');\nconst HasOne = require('./has-one');\nconst AssociationError = require('../errors').AssociationError;\nconst EmptyResultError = require('../errors').EmptyResultError;\nconst Op = require('../operators');\n\n/**\n * Many-to-many association with a join table.\n *\n * When the join table has additional attributes, these can be passed in the options object:\n *\n * ```js\n * UserProject = sequelize.define('user_project', {\n *   role: Sequelize.STRING\n * });\n * User.belongsToMany(Project, { through: UserProject });\n * Project.belongsToMany(User, { through: UserProject });\n * // through is required!\n *\n * user.addProject(project, { through: { role: 'manager' }});\n * ```\n *\n * All methods allow you to pass either a persisted instance, its primary key, or a mixture:\n *\n * ```js\n * const project = await Project.create({ id: 11 });\n * await user.addProjects([project, 12]);\n * ```\n *\n * If you want to set several target instances, but with different attributes you have to set the attributes on the instance, using a property with the name of the through model:\n *\n * ```js\n * p1.UserProjects = {\n *   started: true\n * }\n * user.setProjects([p1, p2], { through: { started: false }}) // The default value is false, but p1 overrides that.\n * ```\n *\n * Similarly, when fetching through a join table with custom attributes, these attributes will be available as an object with the name of the through model.\n * ```js\n * const projects = await user.getProjects();\n * const p1 = projects[0];\n * p1.UserProjects.started // Is this project started yet?\n * ```\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.belongsToMany(Project)` the getter will be `user.getProjects()`.\n *\n * @see {@link Model.belongsToMany}\n */\nclass BelongsToMany extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    if (this.options.through === undefined || this.options.through === true || this.options.through === null) {\n      throw new AssociationError(`${source.name}.belongsToMany(${target.name}) requires through option, pass either a string or a model`);\n    }\n\n    if (!this.options.through.model) {\n      this.options.through = {\n        model: options.through\n      };\n    }\n\n    this.associationType = 'BelongsToMany';\n    this.targetAssociation = null;\n    this.sequelize = source.sequelize;\n    this.through = { ...this.options.through };\n    this.isMultiAssociation = true;\n    this.doubleLinked = false;\n\n    if (!this.as && this.isSelfAssociation) {\n      throw new AssociationError('\\'as\\' must be defined for many-to-many self-associations');\n    }\n\n    if (this.as) {\n      this.isAliased = true;\n\n      if (_.isPlainObject(this.as)) {\n        this.options.name = this.as;\n        this.as = this.as.plural;\n      } else {\n        this.options.name = {\n          plural: this.as,\n          singular: Utils.singularize(this.as)\n        };\n      }\n    } else {\n      this.as = this.target.options.name.plural;\n      this.options.name = this.target.options.name;\n    }\n\n    this.combinedTableName = Utils.combineTableNames(\n      this.source.tableName,\n      this.isSelfAssociation ? this.as || this.target.tableName : this.target.tableName\n    );\n\n    /*\n    * If self association, this is the target association - Unless we find a pairing association\n    */\n    if (this.isSelfAssociation) {\n      this.targetAssociation = this;\n    }\n\n    /*\n    * Find paired association (if exists)\n    */\n    _.each(this.target.associations, association => {\n      if (association.associationType !== 'BelongsToMany') return;\n      if (association.target !== this.source) return;\n\n      if (this.options.through.model === association.options.through.model) {\n        this.paired = association;\n        association.paired = this;\n      }\n    });\n\n    /*\n    * Default/generated source/target keys\n    */\n    this.sourceKey = this.options.sourceKey || this.source.primaryKeyAttribute;\n    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n\n    if (this.options.targetKey) {\n      this.targetKey = this.options.targetKey;\n      this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;\n    } else {\n      this.targetKeyDefault = true;\n      this.targetKey = this.target.primaryKeyAttribute;\n      this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;\n    }\n\n    this._createForeignAndOtherKeys();\n\n    if (typeof this.through.model === 'string') {\n      if (!this.sequelize.isDefined(this.through.model)) {\n        this.through.model = this.sequelize.define(this.through.model, {}, Object.assign(this.options, {\n          tableName: this.through.model,\n          indexes: [], //we don't want indexes here (as referenced in #2416)\n          paranoid: this.through.paranoid ? this.through.paranoid : false, // Default to non-paranoid join (referenced in #11991)\n          validate: {} // Don't propagate model-level validations\n        }));\n      } else {\n        this.through.model = this.sequelize.model(this.through.model);\n      }\n    }\n\n    Object.assign(this.options, _.pick(this.through.model.options, [\n      'timestamps', 'createdAt', 'updatedAt', 'deletedAt', 'paranoid'\n    ]));\n\n    if (this.paired) {\n      let needInjectPaired = false;\n\n      if (this.targetKeyDefault) {\n        this.targetKey = this.paired.sourceKey;\n        this.targetKeyField = this.paired.sourceKeyField;\n        this._createForeignAndOtherKeys();\n      }\n      if (this.paired.targetKeyDefault) {\n        // in this case paired.otherKey depends on paired.targetKey,\n        // so cleanup previously wrong generated otherKey\n        if (this.paired.targetKey !== this.sourceKey) {\n          delete this.through.model.rawAttributes[this.paired.otherKey];\n          this.paired.targetKey = this.sourceKey;\n          this.paired.targetKeyField = this.sourceKeyField;\n          this.paired._createForeignAndOtherKeys();\n          needInjectPaired = true;\n        }\n      }\n\n      if (this.otherKeyDefault) {\n        this.otherKey = this.paired.foreignKey;\n      }\n      if (this.paired.otherKeyDefault) {\n        // If paired otherKey was inferred we should make sure to clean it up\n        // before adding a new one that matches the foreignKey\n        if (this.paired.otherKey !== this.foreignKey) {\n          delete this.through.model.rawAttributes[this.paired.otherKey];\n          this.paired.otherKey = this.foreignKey;\n          needInjectPaired = true;\n        }\n      }\n\n      if (needInjectPaired) {\n        this.paired._injectAttributes();\n      }\n    }\n\n    if (this.through) {\n      this.throughModel = this.through.model;\n    }\n\n    this.options.tableName = this.combinedName = this.through.model === Object(this.through.model) ? this.through.model.tableName : this.through.model;\n\n    this.associationAccessor = this.as;\n\n    // Get singular and plural names, trying to uppercase the first letter, unless the model forbids it\n    const plural = _.upperFirst(this.options.name.plural);\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: `get${plural}`,\n      set: `set${plural}`,\n      addMultiple: `add${plural}`,\n      add: `add${singular}`,\n      create: `create${singular}`,\n      remove: `remove${singular}`,\n      removeMultiple: `remove${plural}`,\n      hasSingle: `has${singular}`,\n      hasAll: `has${plural}`,\n      count: `count${plural}`\n    };\n  }\n\n  _createForeignAndOtherKeys() {\n    /*\n    * Default/generated foreign/other keys\n    */\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else {\n      this.foreignKeyAttribute = {};\n      this.foreignKey = this.options.foreignKey || Utils.camelize(\n        [\n          this.source.options.name.singular,\n          this.sourceKey\n        ].join('_')\n      );\n    }\n\n    if (_.isObject(this.options.otherKey)) {\n      this.otherKeyAttribute = this.options.otherKey;\n      this.otherKey = this.otherKeyAttribute.name || this.otherKeyAttribute.fieldName;\n    } else {\n      if (!this.options.otherKey) {\n        this.otherKeyDefault = true;\n      }\n\n      this.otherKeyAttribute = {};\n      this.otherKey = this.options.otherKey || Utils.camelize(\n        [\n          this.isSelfAssociation ? Utils.singularize(this.as) : this.target.options.name.singular,\n          this.targetKey\n        ].join('_')\n      );\n    }\n  }\n\n  // the id is in the target table\n  // or in an extra table which connects two tables\n  _injectAttributes() {\n    this.identifier = this.foreignKey;\n    this.foreignIdentifier = this.otherKey;\n\n    // remove any PKs previously defined by sequelize\n    // but ignore any keys that are part of this association (#5865)\n    _.each(this.through.model.rawAttributes, (attribute, attributeName) => {\n      if (attribute.primaryKey === true && attribute._autoGenerated === true) {\n        if ([this.foreignKey, this.otherKey].includes(attributeName)) {\n          // this key is still needed as it's part of the association\n          // so just set primaryKey to false\n          attribute.primaryKey = false;\n        }\n        else {\n          delete this.through.model.rawAttributes[attributeName];\n        }\n        this.primaryKeyDeleted = true;\n      }\n    });\n\n    const sourceKey = this.source.rawAttributes[this.sourceKey];\n    const sourceKeyType = sourceKey.type;\n    const sourceKeyField = this.sourceKeyField;\n    const targetKey = this.target.rawAttributes[this.targetKey];\n    const targetKeyType = targetKey.type;\n    const targetKeyField = this.targetKeyField;\n    const sourceAttribute = { type: sourceKeyType, ...this.foreignKeyAttribute };\n    const targetAttribute = { type: targetKeyType, ...this.otherKeyAttribute };\n\n    if (this.primaryKeyDeleted === true) {\n      targetAttribute.primaryKey = sourceAttribute.primaryKey = true;\n    } else if (this.through.unique !== false) {\n      let uniqueKey;\n      if (typeof this.options.uniqueKey === 'string' && this.options.uniqueKey !== '') {\n        uniqueKey = this.options.uniqueKey;\n      } else {\n        uniqueKey = [this.through.model.tableName, this.foreignKey, this.otherKey, 'unique'].join('_');\n      }\n      targetAttribute.unique = sourceAttribute.unique = uniqueKey;\n    }\n\n    if (!this.through.model.rawAttributes[this.foreignKey]) {\n      this.through.model.rawAttributes[this.foreignKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (!this.through.model.rawAttributes[this.otherKey]) {\n      this.through.model.rawAttributes[this.otherKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (this.options.constraints !== false) {\n      sourceAttribute.references = {\n        model: this.source.getTableName(),\n        key: sourceKeyField\n      };\n      // For the source attribute the passed option is the priority\n      sourceAttribute.onDelete = this.options.onDelete || this.through.model.rawAttributes[this.foreignKey].onDelete;\n      sourceAttribute.onUpdate = this.options.onUpdate || this.through.model.rawAttributes[this.foreignKey].onUpdate;\n\n      if (!sourceAttribute.onDelete) sourceAttribute.onDelete = 'CASCADE';\n      if (!sourceAttribute.onUpdate) sourceAttribute.onUpdate = 'CASCADE';\n\n      targetAttribute.references = {\n        model: this.target.getTableName(),\n        key: targetKeyField\n      };\n      // But the for target attribute the previously defined option is the priority (since it could've been set by another belongsToMany call)\n      targetAttribute.onDelete = this.through.model.rawAttributes[this.otherKey].onDelete || this.options.onDelete;\n      targetAttribute.onUpdate = this.through.model.rawAttributes[this.otherKey].onUpdate || this.options.onUpdate;\n\n      if (!targetAttribute.onDelete) targetAttribute.onDelete = 'CASCADE';\n      if (!targetAttribute.onUpdate) targetAttribute.onUpdate = 'CASCADE';\n    }\n\n    Object.assign(this.through.model.rawAttributes[this.foreignKey], sourceAttribute);\n    Object.assign(this.through.model.rawAttributes[this.otherKey], targetAttribute);\n\n    this.through.model.refreshAttributes();\n\n    this.identifierField = this.through.model.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.foreignIdentifierField = this.through.model.rawAttributes[this.otherKey].field || this.otherKey;\n\n    // For Db2 server, a reference column of a FOREIGN KEY must be unique\n    // else, server throws SQL0573N error. Hence, setting it here explicitly\n    // for non primary columns.\n    if (this.options.sequelize.options.dialect === 'db2' &&\n        this.source.rawAttributes[this.sourceKey].primaryKey !== true) {\n      this.source.rawAttributes[this.sourceKey].unique = true;\n    }\n\n    if (this.paired && !this.paired.foreignIdentifierField) {\n      this.paired.foreignIdentifierField = this.through.model.rawAttributes[this.paired.otherKey].field || this.paired.otherKey;\n    }\n\n    this.toSource = new BelongsTo(this.through.model, this.source, {\n      foreignKey: this.foreignKey\n    });\n    this.manyFromSource = new HasMany(this.source, this.through.model, {\n      foreignKey: this.foreignKey\n    });\n    this.oneFromSource = new HasOne(this.source, this.through.model, {\n      foreignKey: this.foreignKey,\n      sourceKey: this.sourceKey,\n      as: this.through.model.name\n    });\n\n    this.toTarget = new BelongsTo(this.through.model, this.target, {\n      foreignKey: this.otherKey\n    });\n    this.manyFromTarget = new HasMany(this.target, this.through.model, {\n      foreignKey: this.otherKey\n    });\n    this.oneFromTarget = new HasOne(this.target, this.through.model, {\n      foreignKey: this.otherKey,\n      sourceKey: this.targetKey,\n      as: this.through.model.name\n    });\n\n    if (this.paired && this.paired.otherKeyDefault) {\n      this.paired.toTarget = new BelongsTo(this.paired.through.model, this.paired.target, {\n        foreignKey: this.paired.otherKey\n      });\n\n      this.paired.oneFromTarget = new HasOne(this.paired.target, this.paired.through.model, {\n        foreignKey: this.paired.otherKey,\n        sourceKey: this.paired.targetKey,\n        as: this.paired.through.model.name\n      });\n    }\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'count', 'hasSingle', 'hasAll', 'set', 'add', 'addMultiple', 'remove', 'removeMultiple', 'create'];\n    const aliases = {\n      hasSingle: 'has',\n      hasAll: 'has',\n      addMultiple: 'add',\n      removeMultiple: 'remove'\n    };\n\n    Helpers.mixinMethods(this, obj, methods, aliases);\n  }\n\n  /**\n   * Get everything currently associated with this, using an optional where clause.\n   *\n   * @see\n   * {@link Model} for a full explanation of options\n   *\n   * @param {Model} instance instance\n   * @param {object} [options] find options\n   * @param {object} [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {string} [options.schema] Apply a schema on the related model\n   * @param {object} [options.through.where] An optional where clause applied to through model (join table)\n   * @param {boolean} [options.through.paranoid=true] If true, only non-deleted records will be returned from the join table. If false, both deleted and non-deleted records will be returned. Only applies if through model is paranoid\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  async get(instance, options) {\n    options = Utils.cloneDeep(options) || {};\n\n    const through = this.through;\n    let scopeWhere;\n    let throughWhere;\n\n    if (this.scope) {\n      scopeWhere = { ...this.scope };\n    }\n\n    options.where = {\n      [Op.and]: [\n        scopeWhere,\n        options.where\n      ]\n    };\n\n    if (Object(through.model) === through.model) {\n      throughWhere = {};\n      throughWhere[this.foreignKey] = instance.get(this.sourceKey);\n\n      if (through.scope) {\n        Object.assign(throughWhere, through.scope);\n      }\n\n      //If a user pass a where on the options through options, make an \"and\" with the current throughWhere\n      if (options.through && options.through.where) {\n        throughWhere = {\n          [Op.and]: [throughWhere, options.through.where]\n        };\n      }\n\n      options.include = options.include || [];\n      options.include.push({\n        association: this.oneFromTarget,\n        attributes: options.joinTableAttributes,\n        required: true,\n        paranoid: _.get(options.through, 'paranoid', true),\n        where: throughWhere\n      });\n    }\n\n    let model = this.target;\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        model = model.unscoped();\n      } else {\n        model = model.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      model = model.schema(options.schema, options.schemaDelimiter);\n    }\n\n    return model.findAll(options);\n  }\n\n  /**\n   * Count everything currently associated with this, using an optional where clause.\n   *\n   * @param {Model} instance instance\n   * @param {object} [options] find options\n   * @param {object} [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   *\n   * @returns {Promise<number>}\n   */\n  async count(instance, options) {\n    const sequelize = this.target.sequelize;\n\n    options = Utils.cloneDeep(options);\n    options.attributes = [\n      [sequelize.fn('COUNT', sequelize.col([this.target.name, this.targetKeyField].join('.'))), 'count']\n    ];\n    options.joinTableAttributes = [];\n    options.raw = true;\n    options.plain = true;\n\n    const result = await this.get(instance, options);\n\n    return parseInt(result.count, 10);\n  }\n\n  /**\n   * Check if one or more instance(s) are associated with this. If a list of instances is passed, the function returns true if _all_ instances are associated\n   *\n   * @param {Model} sourceInstance source instance to check for an association with\n   * @param {Model|Model[]|string[]|string|number[]|number} [instances] Can be an array of instances or their primary keys\n   * @param {object} [options] Options passed to getAssociations\n   *\n   * @returns {Promise<boolean>}\n   */\n  async has(sourceInstance, instances, options) {\n    if (!Array.isArray(instances)) {\n      instances = [instances];\n    }\n\n    options = {\n      raw: true,\n      ...options,\n      scope: false,\n      attributes: [this.targetKey],\n      joinTableAttributes: []\n    };\n\n    const instancePrimaryKeys = instances.map(instance => {\n      if (instance instanceof this.target) {\n        return instance.where();\n      }\n      return {\n        [this.targetKey]: instance\n      };\n    });\n\n    options.where = {\n      [Op.and]: [\n        { [Op.or]: instancePrimaryKeys },\n        options.where\n      ]\n    };\n\n    const associatedObjects = await this.get(sourceInstance, options);\n\n    return _.differenceWith(instancePrimaryKeys, associatedObjects,\n      (a, b) => _.isEqual(a[this.targetKey], b[this.targetKey])).length === 0;\n  }\n\n  /**\n   * Set the associated models by passing an array of instances or their primary keys.\n   * Everything that it not in the passed array will be un-associated.\n   *\n   * @param {Model} sourceInstance source instance to associate new instances with\n   * @param {Model|Model[]|string[]|string|number[]|number} [newAssociatedObjects] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {object} [options] Options passed to `through.findAll`, `bulkCreate`, `update` and `destroy`\n   * @param {object} [options.validate] Run validation for the join model\n   * @param {object} [options.through] Additional attributes for the join table.\n   *\n   * @returns {Promise}\n   */\n  async set(sourceInstance, newAssociatedObjects, options) {\n    options = options || {};\n\n    const sourceKey = this.sourceKey;\n    const targetKey = this.targetKey;\n    const identifier = this.identifier;\n    const foreignIdentifier = this.foreignIdentifier;\n\n    if (newAssociatedObjects === null) {\n      newAssociatedObjects = [];\n    } else {\n      newAssociatedObjects = this.toInstanceArray(newAssociatedObjects);\n    }\n    const where = {\n      [identifier]: sourceInstance.get(sourceKey),\n      ...this.through.scope\n    };\n\n    const updateAssociations = currentRows => {\n      const obsoleteAssociations = [];\n      const promises = [];\n      const defaultAttributes = options.through || {};\n\n      const unassociatedObjects = newAssociatedObjects.filter(obj =>\n        !currentRows.some(currentRow => currentRow[foreignIdentifier] === obj.get(targetKey))\n      );\n\n      for (const currentRow of currentRows) {\n        const newObj = newAssociatedObjects.find(obj => currentRow[foreignIdentifier] === obj.get(targetKey));\n\n        if (!newObj) {\n          obsoleteAssociations.push(currentRow);\n        } else {\n          let throughAttributes = newObj[this.through.model.name];\n          // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n          if (throughAttributes instanceof this.through.model) {\n            throughAttributes = {};\n          }\n\n          const attributes = { ...defaultAttributes, ...throughAttributes };\n\n          if (Object.keys(attributes).length) {\n            promises.push(\n              this.through.model.update(attributes, Object.assign(options, {\n                where: {\n                  [identifier]: sourceInstance.get(sourceKey),\n                  [foreignIdentifier]: newObj.get(targetKey)\n                }\n              }\n              ))\n            );\n          }\n        }\n      }\n\n      if (obsoleteAssociations.length > 0) {\n        promises.push(\n          this.through.model.destroy({\n            ...options,\n            where: {\n              [identifier]: sourceInstance.get(sourceKey),\n              [foreignIdentifier]: obsoleteAssociations.map(obsoleteAssociation => obsoleteAssociation[foreignIdentifier]),\n              ...this.through.scope\n            }\n          })\n        );\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          return {\n            ...defaultAttributes,\n            ...unassociatedObject[this.through.model.name],\n            [identifier]: sourceInstance.get(sourceKey),\n            [foreignIdentifier]: unassociatedObject.get(targetKey),\n            ...this.through.scope\n          };\n        });\n\n        promises.push(this.through.model.bulkCreate(bulk, { validate: true, ...options }));\n      }\n\n      return Promise.all(promises);\n    };\n\n    try {\n      const currentRows = await this.through.model.findAll({ ...options, where, raw: true });\n      return await updateAssociations(currentRows);\n    } catch (error) {\n      if (error instanceof EmptyResultError) return updateAssociations([]);\n      throw error;\n    }\n  }\n\n  /**\n   * Associate one or several rows with source instance. It will not un-associate any already associated instance\n   * that may be missing from `newInstances`.\n   *\n   * @param {Model} sourceInstance source instance to associate new instances with\n   * @param {Model|Model[]|string[]|string|number[]|number} [newInstances] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {object} [options] Options passed to `through.findAll`, `bulkCreate` and `update`\n   * @param {object} [options.validate] Run validation for the join model.\n   * @param {object} [options.through] Additional attributes for the join table.\n   *\n   * @returns {Promise}\n   */\n  async add(sourceInstance, newInstances, options) {\n    // If newInstances is null or undefined, no-op\n    if (!newInstances) return Promise.resolve();\n\n    options = { ...options };\n\n    const association = this;\n    const sourceKey = association.sourceKey;\n    const targetKey = association.targetKey;\n    const identifier = association.identifier;\n    const foreignIdentifier = association.foreignIdentifier;\n    const defaultAttributes = options.through || {};\n\n    newInstances = association.toInstanceArray(newInstances);\n\n    const where = {\n      [identifier]: sourceInstance.get(sourceKey),\n      [foreignIdentifier]: newInstances.map(newInstance => newInstance.get(targetKey)),\n      ...association.through.scope\n    };\n\n    const updateAssociations = currentRows => {\n      const promises = [];\n      const unassociatedObjects = [];\n      const changedAssociations = [];\n      for (const obj of newInstances) {\n        const existingAssociation = currentRows && currentRows.find(current => current[foreignIdentifier] === obj.get(targetKey));\n\n        if (!existingAssociation) {\n          unassociatedObjects.push(obj);\n        } else {\n          const throughAttributes = obj[association.through.model.name];\n          const attributes = { ...defaultAttributes, ...throughAttributes };\n\n          if (Object.keys(attributes).some(attribute => attributes[attribute] !== existingAssociation[attribute])) {\n            changedAssociations.push(obj);\n          }\n        }\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          const throughAttributes = unassociatedObject[association.through.model.name];\n          const attributes = { ...defaultAttributes, ...throughAttributes };\n\n          attributes[identifier] = sourceInstance.get(sourceKey);\n          attributes[foreignIdentifier] = unassociatedObject.get(targetKey);\n\n          Object.assign(attributes, association.through.scope);\n\n          return attributes;\n        });\n\n        promises.push(association.through.model.bulkCreate(bulk, { validate: true, ...options }));\n      }\n\n      for (const assoc of changedAssociations) {\n        let throughAttributes = assoc[association.through.model.name];\n        const attributes = { ...defaultAttributes, ...throughAttributes };\n        // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n        if (throughAttributes instanceof association.through.model) {\n          throughAttributes = {};\n        }\n\n        promises.push(association.through.model.update(attributes, Object.assign(options, { where: {\n          [identifier]: sourceInstance.get(sourceKey),\n          [foreignIdentifier]: assoc.get(targetKey)\n        } })));\n      }\n\n      return Promise.all(promises);\n    };\n\n    try {\n      const currentRows = await association.through.model.findAll({ ...options, where, raw: true });\n      const [associations] = await updateAssociations(currentRows);\n      return associations;\n    } catch (error) {\n      if (error instanceof EmptyResultError) return updateAssociations();\n      throw error;\n    }\n  }\n\n  /**\n   * Un-associate one or more instance(s).\n   *\n   * @param {Model} sourceInstance instance to un associate instances with\n   * @param {Model|Model[]|string|string[]|number|number[]} [oldAssociatedObjects] Can be an Instance or its primary key, or a mixed array of instances and primary keys\n   * @param {object} [options] Options passed to `through.destroy`\n   *\n   * @returns {Promise}\n   */\n  remove(sourceInstance, oldAssociatedObjects, options) {\n    const association = this;\n\n    options = options || {};\n\n    oldAssociatedObjects = association.toInstanceArray(oldAssociatedObjects);\n\n    const where = {\n      [association.identifier]: sourceInstance.get(association.sourceKey),\n      [association.foreignIdentifier]: oldAssociatedObjects.map(newInstance => newInstance.get(association.targetKey))\n    };\n\n    return association.through.model.destroy({ ...options, where });\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance source instance\n   * @param {object} [values] values for target model\n   * @param {object} [options] Options passed to create and add\n   * @param {object} [options.through] Additional attributes for the join table\n   *\n   * @returns {Promise}\n   */\n  async create(sourceInstance, values, options) {\n    const association = this;\n\n    options = options || {};\n    values = values || {};\n\n    if (Array.isArray(options)) {\n      options = {\n        fields: options\n      };\n    }\n\n    if (association.scope) {\n      Object.assign(values, association.scope);\n      if (options.fields) {\n        options.fields = options.fields.concat(Object.keys(association.scope));\n      }\n    }\n\n    // Create the related model instance\n    const newAssociatedObject = await association.target.create(values, options);\n\n    await sourceInstance[association.accessors.add](newAssociatedObject, _.omit(options, ['fields']));\n    return newAssociatedObject;\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.plural) {\n      return this.as === alias.plural;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = BelongsToMany;\nmodule.exports.BelongsToMany = BelongsToMany;\nmodule.exports.default = BelongsToMany;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/has-many.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,36,37,28,38,35,35,40,35,37,34,38,35,34,31,100,5,33,36,5,18,28,37,36,33,14,29,26,46,10,7,12,48,51,5,46,57,92,41,48,5,27,40,42,39,19,5,53,97,97,5,79,52,47,94,12,64,56,5,58,62,39,22,26,26,34,28,34,34,40,34,29,29,6,3,23,27,41,94,23,34,6,63,45,98,109,75,5,135,66,36,36,95,95,92,39,16,3,14,127,21,23,20,25,30,6,54,3,38,21,28,17,15,36,27,25,5,42,21,39,5,20,90,50,32,31,19,16,10,29,14,34,25,10,36,7,12,75,5,81,65,27,33,14,43,7,5,66,68,5,49,17,21,22,40,64,5,38,76,5,18,3,34,39,26,7,109,15,7,6,23,25,53,38,3,55,21,42,42,5,58,19,52,15,7,54,44,32,7,14,51,8,7,21,17,14,21,7,6,70,63,3,55,35,27,12,62,5,132,24,176,175,20,15,42,18,37,21,140,8,102,26,11,5,41,23,18,67,40,154,102,26,11,5,32,26,3,60,25,31,60,35,59,19,19,141,6,103,26,3,63,20,29,6,60,19,60,133,6,103,16,3,54,33,17,23,8,5,28,18,5,21,56,50,27,41,7,5,65,23,43,53,3,33,36,31,5,32,38,5,27,3,1,25,33,33,36,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/associations/has-many.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst Op = require('../operators');\n\n/**\n * One-to-many association\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.hasMany(Project)` the getter will be `user.getProjects()`.\n * If the association is aliased, use the alias instead, e.g. `User.hasMany(Project, { as: 'jobs' })` will be `user.getJobs()`.\n *\n * @see {@link Model.hasMany}\n */\nclass HasMany extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    this.associationType = 'HasMany';\n    this.targetAssociation = null;\n    this.sequelize = source.sequelize;\n    this.isMultiAssociation = true;\n    this.foreignKeyAttribute = {};\n\n    if (this.options.through) {\n      throw new Error('N:M associations are not supported with hasMany. Use belongsToMany instead');\n    }\n\n    /*\n    * If self association, this is the target association\n    */\n    if (this.isSelfAssociation) {\n      this.targetAssociation = this;\n    }\n\n    if (this.as) {\n      this.isAliased = true;\n\n      if (_.isPlainObject(this.as)) {\n        this.options.name = this.as;\n        this.as = this.as.plural;\n      } else {\n        this.options.name = {\n          plural: this.as,\n          singular: Utils.singularize(this.as)\n        };\n      }\n    } else {\n      this.as = this.target.options.name.plural;\n      this.options.name = this.target.options.name;\n    }\n\n    /*\n     * Foreign key setup\n     */\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else if (this.options.foreignKey) {\n      this.foreignKey = this.options.foreignKey;\n    }\n\n    if (!this.foreignKey) {\n      this.foreignKey = Utils.camelize(\n        [\n          this.source.options.name.singular,\n          this.source.primaryKeyAttribute\n        ].join('_')\n      );\n    }\n\n    if (this.target.rawAttributes[this.foreignKey]) {\n      this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n      this.foreignKeyField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    }\n\n    /*\n     * Source key setup\n     */\n    this.sourceKey = this.options.sourceKey || this.source.primaryKeyAttribute;\n\n    if (this.source.rawAttributes[this.sourceKey]) {\n      this.sourceKeyAttribute = this.sourceKey;\n      this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n    } else {\n      this.sourceKeyAttribute = this.source.primaryKeyAttribute;\n      this.sourceKeyField = this.source.primaryKeyField;\n    }\n\n    // Get singular and plural names\n    // try to uppercase the first letter, unless the model forbids it\n    const plural = _.upperFirst(this.options.name.plural);\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.associationAccessor = this.as;\n    this.accessors = {\n      get: `get${plural}`,\n      set: `set${plural}`,\n      addMultiple: `add${plural}`,\n      add: `add${singular}`,\n      create: `create${singular}`,\n      remove: `remove${singular}`,\n      removeMultiple: `remove${plural}`,\n      hasSingle: `has${singular}`,\n      hasAll: `has${plural}`,\n      count: `count${plural}`\n    };\n  }\n\n  // the id is in the target table\n  // or in an extra table which connects two tables\n  _injectAttributes() {\n    const newAttributes = {\n      [this.foreignKey]: {\n        type: this.options.keyType || this.source.rawAttributes[this.sourceKeyAttribute].type,\n        allowNull: true,\n        ...this.foreignKeyAttribute\n      }\n    };\n\n    // Create a new options object for use with addForeignKeyConstraints, to avoid polluting this.options in case it is later used for a n:m\n    const constraintOptions = { ...this.options };\n\n    if (this.options.constraints !== false) {\n      const target = this.target.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];\n      constraintOptions.onDelete = constraintOptions.onDelete || (target.allowNull ? 'SET NULL' : 'CASCADE');\n      constraintOptions.onUpdate = constraintOptions.onUpdate || 'CASCADE';\n    }\n\n    Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.source, this.target, constraintOptions, this.sourceKeyField);\n    Utils.mergeDefaults(this.target.rawAttributes, newAttributes);\n\n    this.target.refreshAttributes();\n    this.source.refreshAttributes();\n\n    this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.foreignKeyField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'count', 'hasSingle', 'hasAll', 'set', 'add', 'addMultiple', 'remove', 'removeMultiple', 'create'];\n    const aliases = {\n      hasSingle: 'has',\n      hasAll: 'has',\n      addMultiple: 'add',\n      removeMultiple: 'remove'\n    };\n\n    Helpers.mixinMethods(this, obj, methods, aliases);\n  }\n\n  /**\n   * Get everything currently associated with this, using an optional where clause.\n   *\n   * @param {Model|Array<Model>} instances source instances\n   * @param {object} [options] find options\n   * @param {object} [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {string} [options.schema] Apply a schema on the related model\n   *\n   * @see\n   * {@link Model.findAll}  for a full explanation of options\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  async get(instances, options = {}) {\n    const where = {};\n\n    let Model = this.target;\n    let instance;\n    let values;\n\n    if (!Array.isArray(instances)) {\n      instance = instances;\n      instances = undefined;\n    }\n\n    options = { ...options };\n\n    if (this.scope) {\n      Object.assign(where, this.scope);\n    }\n\n    if (instances) {\n      values = instances.map(_instance => _instance.get(this.sourceKey, { raw: true }));\n\n      if (options.limit && instances.length > 1) {\n        options.groupedLimit = {\n          limit: options.limit,\n          on: this, // association\n          values\n        };\n\n        delete options.limit;\n      } else {\n        where[this.foreignKey] = {\n          [Op.in]: values\n        };\n        delete options.groupedLimit;\n      }\n    } else {\n      where[this.foreignKey] = instance.get(this.sourceKey, { raw: true });\n    }\n\n    options.where = options.where ?\n      { [Op.and]: [where, options.where] } :\n      where;\n\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        Model = Model.unscoped();\n      } else {\n        Model = Model.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      Model = Model.schema(options.schema, options.schemaDelimiter);\n    }\n\n    const results = await Model.findAll(options);\n    if (instance) return results;\n\n    const result = {};\n    for (const _instance of instances) {\n      result[_instance.get(this.sourceKey, { raw: true })] = [];\n    }\n\n    for (const _instance of results) {\n      result[_instance.get(this.foreignKey, { raw: true })].push(_instance);\n    }\n\n    return result;\n  }\n\n  /**\n   * Count everything currently associated with this, using an optional where clause.\n   *\n   * @param {Model}        instance the source instance\n   * @param {object}         [options] find & count options\n   * @param {object}         [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   *\n   * @returns {Promise<number>}\n   */\n  async count(instance, options) {\n    options = Utils.cloneDeep(options);\n\n    options.attributes = [\n      [\n        this.sequelize.fn(\n          'COUNT',\n          this.sequelize.col(`${this.target.name}.${this.target.primaryKeyField}`)\n        ),\n        'count'\n      ]\n    ];\n    options.raw = true;\n    options.plain = true;\n\n    const result = await this.get(instance, options);\n\n    return parseInt(result.count, 10);\n  }\n\n  /**\n   * Check if one or more rows are associated with `this`.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {Model|Model[]|string[]|string|number[]|number} [targetInstances] Can be an array of instances or their primary keys\n   * @param {object} [options] Options passed to getAssociations\n   *\n   * @returns {Promise}\n   */\n  async has(sourceInstance, targetInstances, options) {\n    const where = {};\n\n    if (!Array.isArray(targetInstances)) {\n      targetInstances = [targetInstances];\n    }\n\n    options = {\n      ...options,\n      scope: false,\n      attributes: [this.target.primaryKeyAttribute],\n      raw: true\n    };\n\n    where[Op.or] = targetInstances.map(instance => {\n      if (instance instanceof this.target) {\n        return instance.where();\n      }\n      return {\n        [this.target.primaryKeyAttribute]: instance\n      };\n    });\n\n    options.where = {\n      [Op.and]: [\n        where,\n        options.where\n      ]\n    };\n\n    const associatedObjects = await this.get(sourceInstance, options);\n\n    return associatedObjects.length === targetInstances.length;\n  }\n\n  /**\n   * Set the associated models by passing an array of persisted instances or their primary keys. Everything that is not in the passed array will be un-associated\n   *\n   * @param {Model} sourceInstance source instance to associate new instances with\n   * @param {Model|Model[]|string[]|string|number[]|number} [targetInstances] An array of persisted instances or primary key of instances to associate with this. Pass `null` or `undefined` to remove all associations.\n   * @param {object} [options] Options passed to `target.findAll` and `update`.\n   * @param {object} [options.validate] Run validation for the join model\n   *\n   * @returns {Promise}\n   */\n  async set(sourceInstance, targetInstances, options) {\n    if (targetInstances === null) {\n      targetInstances = [];\n    } else {\n      targetInstances = this.toInstanceArray(targetInstances);\n    }\n\n    const oldAssociations = await this.get(sourceInstance, { ...options, scope: false, raw: true });\n    const promises = [];\n    const obsoleteAssociations = oldAssociations.filter(old =>\n      !targetInstances.find(obj =>\n        obj[this.target.primaryKeyAttribute] === old[this.target.primaryKeyAttribute]\n      )\n    );\n    const unassociatedObjects = targetInstances.filter(obj =>\n      !oldAssociations.find(old =>\n        obj[this.target.primaryKeyAttribute] === old[this.target.primaryKeyAttribute]\n      )\n    );\n    let updateWhere;\n    let update;\n\n    if (obsoleteAssociations.length > 0) {\n      update = {};\n      update[this.foreignKey] = null;\n\n      updateWhere = {\n        [this.target.primaryKeyAttribute]: obsoleteAssociations.map(associatedObject =>\n          associatedObject[this.target.primaryKeyAttribute]\n        )\n      };\n\n\n      promises.push(this.target.unscoped().update(\n        update,\n        {\n          ...options,\n          where: updateWhere\n        }\n      ));\n    }\n\n    if (unassociatedObjects.length > 0) {\n      updateWhere = {};\n\n      update = {};\n      update[this.foreignKey] = sourceInstance.get(this.sourceKey);\n\n      Object.assign(update, this.scope);\n      updateWhere[this.target.primaryKeyAttribute] = unassociatedObjects.map(unassociatedObject =>\n        unassociatedObject[this.target.primaryKeyAttribute]\n      );\n\n      promises.push(this.target.unscoped().update(\n        update,\n        {\n          ...options,\n          where: updateWhere\n        }\n      ));\n    }\n\n    await Promise.all(promises);\n\n    return sourceInstance;\n  }\n\n  /**\n   * Associate one or more target rows with `this`. This method accepts a Model / string / number to associate a single row,\n   * or a mixed array of Model / string / numbers to associate multiple rows.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {Model|Model[]|string[]|string|number[]|number} [targetInstances] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {object} [options] Options passed to `target.update`.\n   *\n   * @returns {Promise}\n   */\n  async add(sourceInstance, targetInstances, options = {}) {\n    if (!targetInstances) return Promise.resolve();\n\n\n    targetInstances = this.toInstanceArray(targetInstances);\n\n    const update = {\n      [this.foreignKey]: sourceInstance.get(this.sourceKey),\n      ...this.scope\n    };\n\n    const where = {\n      [this.target.primaryKeyAttribute]: targetInstances.map(unassociatedObject =>\n        unassociatedObject.get(this.target.primaryKeyAttribute)\n      )\n    };\n\n    await this.target.unscoped().update(update, { ...options, where });\n\n    return sourceInstance;\n  }\n\n  /**\n   * Un-associate one or several target rows.\n   *\n   * @param {Model} sourceInstance instance to un associate instances with\n   * @param {Model|Model[]|string|string[]|number|number[]} [targetInstances] Can be an Instance or its primary key, or a mixed array of instances and primary keys\n   * @param {object} [options] Options passed to `target.update`\n   *\n   * @returns {Promise}\n   */\n  async remove(sourceInstance, targetInstances, options = {}) {\n    const update = {\n      [this.foreignKey]: null\n    };\n\n    targetInstances = this.toInstanceArray(targetInstances);\n\n    const where = {\n      [this.foreignKey]: sourceInstance.get(this.sourceKey),\n      [this.target.primaryKeyAttribute]: targetInstances.map(targetInstance =>\n        targetInstance.get(this.target.primaryKeyAttribute)\n      )\n    };\n\n    await this.target.unscoped().update(update, { ...options, where });\n\n    return this;\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance source instance\n   * @param {object} [values] values for target model instance\n   * @param {object} [options] Options passed to `target.create`\n   *\n   * @returns {Promise}\n   */\n  async create(sourceInstance, values, options = {}) {\n    if (Array.isArray(options)) {\n      options = {\n        fields: options\n      };\n    }\n\n    if (values === undefined) {\n      values = {};\n    }\n\n    if (this.scope) {\n      for (const attribute of Object.keys(this.scope)) {\n        values[attribute] = this.scope[attribute];\n        if (options.fields) options.fields.push(attribute);\n      }\n    }\n\n    values[this.foreignKey] = sourceInstance.get(this.sourceKey);\n    if (options.fields) options.fields.push(this.foreignKey);\n    return await this.target.create(values, options);\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.plural) {\n      return this.as === alias.plural;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = HasMany;\nmodule.exports.HasMany = HasMany;\nmodule.exports.default = HasMany;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA,MAAM,QAAQ,QAAQ;AACtB,MAAM,UAAU,QAAQ;AACxB,MAAM,IAAI,QAAQ;AAClB,MAAM,cAAc,QAAQ;AAC5B,MAAM,KAAK,QAAQ;AAUnB,sBAAsB,YAAY;AAAA,EAChC,YAAY,QAAQ,QAAQ,SAAS;AACnC,UAAM,QAAQ,QAAQ;AAEtB,SAAK,kBAAkB;AACvB,SAAK,oBAAoB;AACzB,SAAK,YAAY,OAAO;AACxB,SAAK,qBAAqB;AAC1B,SAAK,sBAAsB;AAE3B,QAAI,KAAK,QAAQ,SAAS;AACxB,YAAM,IAAI,MAAM;AAAA;AAMlB,QAAI,KAAK,mBAAmB;AAC1B,WAAK,oBAAoB;AAAA;AAG3B,QAAI,KAAK,IAAI;AACX,WAAK,YAAY;AAEjB,UAAI,EAAE,cAAc,KAAK,KAAK;AAC5B,aAAK,QAAQ,OAAO,KAAK;AACzB,aAAK,KAAK,KAAK,GAAG;AAAA,aACb;AACL,aAAK,QAAQ,OAAO;AAAA,UAClB,QAAQ,KAAK;AAAA,UACb,UAAU,MAAM,YAAY,KAAK;AAAA;AAAA;AAAA,WAGhC;AACL,WAAK,KAAK,KAAK,OAAO,QAAQ,KAAK;AACnC,WAAK,QAAQ,OAAO,KAAK,OAAO,QAAQ;AAAA;AAM1C,QAAI,EAAE,SAAS,KAAK,QAAQ,aAAa;AACvC,WAAK,sBAAsB,KAAK,QAAQ;AACxC,WAAK,aAAa,KAAK,oBAAoB,QAAQ,KAAK,oBAAoB;AAAA,eACnE,KAAK,QAAQ,YAAY;AAClC,WAAK,aAAa,KAAK,QAAQ;AAAA;AAGjC,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,MAAM,SACtB;AAAA,QACE,KAAK,OAAO,QAAQ,KAAK;AAAA,QACzB,KAAK,OAAO;AAAA,QACZ,KAAK;AAAA;AAIX,QAAI,KAAK,OAAO,cAAc,KAAK,aAAa;AAC9C,WAAK,kBAAkB,KAAK,OAAO,cAAc,KAAK,YAAY,SAAS,KAAK;AAChF,WAAK,kBAAkB,KAAK,OAAO,cAAc,KAAK,YAAY,SAAS,KAAK;AAAA;AAMlF,SAAK,YAAY,KAAK,QAAQ,aAAa,KAAK,OAAO;AAEvD,QAAI,KAAK,OAAO,cAAc,KAAK,YAAY;AAC7C,WAAK,qBAAqB,KAAK;AAC/B,WAAK,iBAAiB,KAAK,OAAO,cAAc,KAAK,WAAW,SAAS,KAAK;AAAA,WACzE;AACL,WAAK,qBAAqB,KAAK,OAAO;AACtC,WAAK,iBAAiB,KAAK,OAAO;AAAA;AAKpC,UAAM,SAAS,EAAE,WAAW,KAAK,QAAQ,KAAK;AAC9C,UAAM,WAAW,EAAE,WAAW,KAAK,QAAQ,KAAK;AAEhD,SAAK,sBAAsB,KAAK;AAChC,SAAK,YAAY;AAAA,MACf,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,aAAa,MAAM;AAAA,MACnB,KAAK,MAAM;AAAA,MACX,QAAQ,SAAS;AAAA,MACjB,QAAQ,SAAS;AAAA,MACjB,gBAAgB,SAAS;AAAA,MACzB,WAAW,MAAM;AAAA,MACjB,QAAQ,MAAM;AAAA,MACd,OAAO,QAAQ;AAAA;AAAA;AAAA,EAMnB,oBAAoB;AAClB,UAAM,gBAAgB;AAAA,OACnB,KAAK,aAAa;AAAA,QACjB,MAAM,KAAK,QAAQ,WAAW,KAAK,OAAO,cAAc,KAAK,oBAAoB;AAAA,QACjF,WAAW;AAAA,SACR,KAAK;AAAA;AAKZ,UAAM,oBAAoB,mBAAK,KAAK;AAEpC,QAAI,KAAK,QAAQ,gBAAgB,OAAO;AACtC,YAAM,SAAS,KAAK,OAAO,cAAc,KAAK,eAAe,cAAc,KAAK;AAChF,wBAAkB,WAAW,kBAAkB,YAAa,QAAO,YAAY,aAAa;AAC5F,wBAAkB,WAAW,kBAAkB,YAAY;AAAA;AAG7D,YAAQ,yBAAyB,cAAc,KAAK,aAAa,KAAK,QAAQ,KAAK,QAAQ,mBAAmB,KAAK;AACnH,UAAM,cAAc,KAAK,OAAO,eAAe;AAE/C,SAAK,OAAO;AACZ,SAAK,OAAO;AAEZ,SAAK,kBAAkB,KAAK,OAAO,cAAc,KAAK,YAAY,SAAS,KAAK;AAChF,SAAK,kBAAkB,KAAK,OAAO,cAAc,KAAK,YAAY,SAAS,KAAK;AAChF,SAAK,iBAAiB,KAAK,OAAO,cAAc,KAAK,WAAW,SAAS,KAAK;AAE9E,YAAQ,qBAAqB;AAE7B,WAAO;AAAA;AAAA,EAGT,MAAM,KAAK;AACT,UAAM,UAAU,CAAC,OAAO,SAAS,aAAa,UAAU,OAAO,OAAO,eAAe,UAAU,kBAAkB;AACjH,UAAM,UAAU;AAAA,MACd,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,gBAAgB;AAAA;AAGlB,YAAQ,aAAa,MAAM,KAAK,SAAS;AAAA;AAAA,QAiBrC,IAAI,WAAW,UAAU,IAAI;AACjC,UAAM,QAAQ;AAEd,QAAI,QAAQ,KAAK;AACjB,QAAI;AACJ,QAAI;AAEJ,QAAI,CAAC,MAAM,QAAQ,YAAY;AAC7B,iBAAW;AACX,kBAAY;AAAA;AAGd,cAAU,mBAAK;AAEf,QAAI,KAAK,OAAO;AACd,aAAO,OAAO,OAAO,KAAK;AAAA;AAG5B,QAAI,WAAW;AACb,eAAS,UAAU,IAAI,eAAa,UAAU,IAAI,KAAK,WAAW,EAAE,KAAK;AAEzE,UAAI,QAAQ,SAAS,UAAU,SAAS,GAAG;AACzC,gBAAQ,eAAe;AAAA,UACrB,OAAO,QAAQ;AAAA,UACf,IAAI;AAAA,UACJ;AAAA;AAGF,eAAO,QAAQ;AAAA,aACV;AACL,cAAM,KAAK,cAAc;AAAA,WACtB,GAAG,KAAK;AAAA;AAEX,eAAO,QAAQ;AAAA;AAAA,WAEZ;AACL,YAAM,KAAK,cAAc,SAAS,IAAI,KAAK,WAAW,EAAE,KAAK;AAAA;AAG/D,YAAQ,QAAQ,QAAQ,QACtB,GAAG,GAAG,MAAM,CAAC,OAAO,QAAQ,WAC5B;AAEF,QAAI,OAAO,UAAU,eAAe,KAAK,SAAS,UAAU;AAC1D,UAAI,CAAC,QAAQ,OAAO;AAClB,gBAAQ,MAAM;AAAA,aACT;AACL,gBAAQ,MAAM,MAAM,QAAQ;AAAA;AAAA;AAIhC,QAAI,OAAO,UAAU,eAAe,KAAK,SAAS,WAAW;AAC3D,cAAQ,MAAM,OAAO,QAAQ,QAAQ,QAAQ;AAAA;AAG/C,UAAM,UAAU,MAAM,MAAM,QAAQ;AACpC,QAAI;AAAU,aAAO;AAErB,UAAM,SAAS;AACf,eAAW,aAAa,WAAW;AACjC,aAAO,UAAU,IAAI,KAAK,WAAW,EAAE,KAAK,WAAW;AAAA;AAGzD,eAAW,aAAa,SAAS;AAC/B,aAAO,UAAU,IAAI,KAAK,YAAY,EAAE,KAAK,SAAS,KAAK;AAAA;AAG7D,WAAO;AAAA;AAAA,QAaH,MAAM,UAAU,SAAS;AAC7B,cAAU,MAAM,UAAU;AAE1B,YAAQ,aAAa;AAAA,MACnB;AAAA,QACE,KAAK,UAAU,GACb,SACA,KAAK,UAAU,IAAI,GAAG,KAAK,OAAO,QAAQ,KAAK,OAAO;AAAA,QAExD;AAAA;AAAA;AAGJ,YAAQ,MAAM;AACd,YAAQ,QAAQ;AAEhB,UAAM,SAAS,MAAM,KAAK,IAAI,UAAU;AAExC,WAAO,SAAS,OAAO,OAAO;AAAA;AAAA,QAY1B,IAAI,gBAAgB,iBAAiB,SAAS;AAClD,UAAM,QAAQ;AAEd,QAAI,CAAC,MAAM,QAAQ,kBAAkB;AACnC,wBAAkB,CAAC;AAAA;AAGrB,cAAU,iCACL,UADK;AAAA,MAER,OAAO;AAAA,MACP,YAAY,CAAC,KAAK,OAAO;AAAA,MACzB,KAAK;AAAA;AAGP,UAAM,GAAG,MAAM,gBAAgB,IAAI,cAAY;AAC7C,UAAI,oBAAoB,KAAK,QAAQ;AACnC,eAAO,SAAS;AAAA;AAElB,aAAO;AAAA,SACJ,KAAK,OAAO,sBAAsB;AAAA;AAAA;AAIvC,YAAQ,QAAQ;AAAA,OACb,GAAG,MAAM;AAAA,QACR;AAAA,QACA,QAAQ;AAAA;AAAA;AAIZ,UAAM,oBAAoB,MAAM,KAAK,IAAI,gBAAgB;AAEzD,WAAO,kBAAkB,WAAW,gBAAgB;AAAA;AAAA,QAahD,IAAI,gBAAgB,iBAAiB,SAAS;AAClD,QAAI,oBAAoB,MAAM;AAC5B,wBAAkB;AAAA,WACb;AACL,wBAAkB,KAAK,gBAAgB;AAAA;AAGzC,UAAM,kBAAkB,MAAM,KAAK,IAAI,gBAAgB,iCAAK,UAAL,EAAc,OAAO,OAAO,KAAK;AACxF,UAAM,WAAW;AACjB,UAAM,uBAAuB,gBAAgB,OAAO,SAClD,CAAC,gBAAgB,KAAK,SACpB,IAAI,KAAK,OAAO,yBAAyB,IAAI,KAAK,OAAO;AAG7D,UAAM,sBAAsB,gBAAgB,OAAO,SACjD,CAAC,gBAAgB,KAAK,SACpB,IAAI,KAAK,OAAO,yBAAyB,IAAI,KAAK,OAAO;AAG7D,QAAI;AACJ,QAAI;AAEJ,QAAI,qBAAqB,SAAS,GAAG;AACnC,eAAS;AACT,aAAO,KAAK,cAAc;AAE1B,oBAAc;AAAA,SACX,KAAK,OAAO,sBAAsB,qBAAqB,IAAI,sBAC1D,iBAAiB,KAAK,OAAO;AAAA;AAKjC,eAAS,KAAK,KAAK,OAAO,WAAW,OACnC,QACA,iCACK,UADL;AAAA,QAEE,OAAO;AAAA;AAAA;AAKb,QAAI,oBAAoB,SAAS,GAAG;AAClC,oBAAc;AAEd,eAAS;AACT,aAAO,KAAK,cAAc,eAAe,IAAI,KAAK;AAElD,aAAO,OAAO,QAAQ,KAAK;AAC3B,kBAAY,KAAK,OAAO,uBAAuB,oBAAoB,IAAI,wBACrE,mBAAmB,KAAK,OAAO;AAGjC,eAAS,KAAK,KAAK,OAAO,WAAW,OACnC,QACA,iCACK,UADL;AAAA,QAEE,OAAO;AAAA;AAAA;AAKb,UAAM,QAAQ,IAAI;AAElB,WAAO;AAAA;AAAA,QAaH,IAAI,gBAAgB,iBAAiB,UAAU,IAAI;AACvD,QAAI,CAAC;AAAiB,aAAO,QAAQ;AAGrC,sBAAkB,KAAK,gBAAgB;AAEvC,UAAM,SAAS;AAAA,OACZ,KAAK,aAAa,eAAe,IAAI,KAAK;AAAA,OACxC,KAAK;AAGV,UAAM,QAAQ;AAAA,OACX,KAAK,OAAO,sBAAsB,gBAAgB,IAAI,wBACrD,mBAAmB,IAAI,KAAK,OAAO;AAAA;AAIvC,UAAM,KAAK,OAAO,WAAW,OAAO,QAAQ,iCAAK,UAAL,EAAc;AAE1D,WAAO;AAAA;AAAA,QAYH,OAAO,gBAAgB,iBAAiB,UAAU,IAAI;AAC1D,UAAM,SAAS;AAAA,OACZ,KAAK,aAAa;AAAA;AAGrB,sBAAkB,KAAK,gBAAgB;AAEvC,UAAM,QAAQ;AAAA,OACX,KAAK,aAAa,eAAe,IAAI,KAAK;AAAA,OAC1C,KAAK,OAAO,sBAAsB,gBAAgB,IAAI,oBACrD,eAAe,IAAI,KAAK,OAAO;AAAA;AAInC,UAAM,KAAK,OAAO,WAAW,OAAO,QAAQ,iCAAK,UAAL,EAAc;AAE1D,WAAO;AAAA;AAAA,QAYH,OAAO,gBAAgB,QAAQ,UAAU,IAAI;AACjD,QAAI,MAAM,QAAQ,UAAU;AAC1B,gBAAU;AAAA,QACR,QAAQ;AAAA;AAAA;AAIZ,QAAI,WAAW,QAAW;AACxB,eAAS;AAAA;AAGX,QAAI,KAAK,OAAO;AACd,iBAAW,aAAa,OAAO,KAAK,KAAK,QAAQ;AAC/C,eAAO,aAAa,KAAK,MAAM;AAC/B,YAAI,QAAQ;AAAQ,kBAAQ,OAAO,KAAK;AAAA;AAAA;AAI5C,WAAO,KAAK,cAAc,eAAe,IAAI,KAAK;AAClD,QAAI,QAAQ;AAAQ,cAAQ,OAAO,KAAK,KAAK;AAC7C,WAAO,MAAM,KAAK,OAAO,OAAO,QAAQ;AAAA;AAAA,EAG1C,uBAAuB,OAAO;AAC5B,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO,KAAK,OAAO;AAAA;AAGrB,QAAI,SAAS,MAAM,QAAQ;AACzB,aAAO,KAAK,OAAO,MAAM;AAAA;AAG3B,WAAO,CAAC,KAAK;AAAA;AAAA;AAIjB,OAAO,UAAU;AACjB,OAAO,QAAQ,UAAU;AACzB,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/has-one.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,36,37,28,38,35,34,40,35,36,36,34,18,28,27,25,8,12,50,51,5,46,57,92,41,48,5,27,40,63,39,19,5,87,151,5,105,92,81,39,45,53,97,5,62,22,28,28,33,6,3,23,27,41,85,23,34,6,45,98,99,65,5,130,66,36,95,39,16,3,14,45,45,3,33,21,29,17,39,65,27,35,14,45,7,5,66,70,5,36,27,25,5,20,32,76,8,12,60,5,21,39,5,81,20,52,24,42,68,7,40,74,7,20,5,35,3,58,75,74,265,44,42,73,34,37,25,10,5,51,57,31,74,61,28,11,7,52,91,46,5,16,3,49,26,28,21,56,50,29,41,9,7,5,74,25,43,5,53,3,33,36,31,5,34,40,5,27,3,1,24,35,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/associations/has-one.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst Op = require('../operators');\n\n/**\n * One-to-one association\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.hasOne(Project)` the getter will be `user.getProject()`.\n * This is almost the same as `belongsTo` with one exception - The foreign key will be defined on the target model.\n *\n * @see {@link Model.hasOne}\n */\nclass HasOne extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    this.associationType = 'HasOne';\n    this.isSingleAssociation = true;\n    this.foreignKeyAttribute = {};\n\n    if (this.as) {\n      this.isAliased = true;\n      this.options.name = {\n        singular: this.as\n      };\n    } else {\n      this.as = this.target.options.name.singular;\n      this.options.name = this.target.options.name;\n    }\n\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else if (this.options.foreignKey) {\n      this.foreignKey = this.options.foreignKey;\n    }\n\n    if (!this.foreignKey) {\n      this.foreignKey = Utils.camelize(\n        [\n          Utils.singularize(this.options.as || this.source.name),\n          this.source.primaryKeyAttribute\n        ].join('_')\n      );\n    }\n\n    if (\n      this.options.sourceKey\n      && !this.source.rawAttributes[this.options.sourceKey]\n    ) {\n      throw new Error(`Unknown attribute \"${this.options.sourceKey}\" passed as sourceKey, define this attribute on model \"${this.source.name}\" first`);\n    }\n\n    this.sourceKey = this.sourceKeyAttribute = this.options.sourceKey || this.source.primaryKeyAttribute;\n    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n    this.sourceKeyIsPrimary = this.sourceKey === this.source.primaryKeyAttribute;\n\n    this.associationAccessor = this.as;\n    this.options.useHooks = options.useHooks;\n\n    if (this.target.rawAttributes[this.foreignKey]) {\n      this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    }\n\n    // Get singular name, trying to uppercase the first letter, unless the model forbids it\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: `get${singular}`,\n      set: `set${singular}`,\n      create: `create${singular}`\n    };\n  }\n\n  // the id is in the target table\n  _injectAttributes() {\n    const newAttributes = {\n      [this.foreignKey]: {\n        type: this.options.keyType || this.source.rawAttributes[this.sourceKey].type,\n        allowNull: true,\n        ...this.foreignKeyAttribute\n      }\n    };\n\n    if (this.options.constraints !== false) {\n      const target = this.target.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];\n      this.options.onDelete = this.options.onDelete || (target.allowNull ? 'SET NULL' : 'CASCADE');\n      this.options.onUpdate = this.options.onUpdate || 'CASCADE';\n    }\n\n    Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.source, this.target, this.options, this.sourceKeyField);\n    Utils.mergeDefaults(this.target.rawAttributes, newAttributes);\n\n    this.target.refreshAttributes();\n\n    this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'set', 'create'];\n\n    Helpers.mixinMethods(this, obj, methods);\n  }\n\n  /**\n   * Get the associated instance.\n   *\n   * @param {Model|Array<Model>} instances source instances\n   * @param {object}         [options] find options\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {string} [options.schema] Apply a schema on the related model\n   *\n   * @see\n   * {@link Model.findOne} for a full explanation of options\n   *\n   * @returns {Promise<Model>}\n   */\n  async get(instances, options) {\n    const where = {};\n\n    let Target = this.target;\n    let instance;\n\n    options = Utils.cloneDeep(options);\n\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        Target = Target.unscoped();\n      } else {\n        Target = Target.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      Target = Target.schema(options.schema, options.schemaDelimiter);\n    }\n\n    if (!Array.isArray(instances)) {\n      instance = instances;\n      instances = undefined;\n    }\n\n    if (instances) {\n      where[this.foreignKey] = {\n        [Op.in]: instances.map(_instance => _instance.get(this.sourceKey))\n      };\n    } else {\n      where[this.foreignKey] = instance.get(this.sourceKey);\n    }\n\n    if (this.scope) {\n      Object.assign(where, this.scope);\n    }\n\n    options.where = options.where ?\n      { [Op.and]: [where, options.where] } :\n      where;\n\n    if (instances) {\n      const results = await Target.findAll(options);\n      const result = {};\n      for (const _instance of instances) {\n        result[_instance.get(this.sourceKey, { raw: true })] = null;\n      }\n\n      for (const _instance of results) {\n        result[_instance.get(this.foreignKey, { raw: true })] = _instance;\n      }\n\n      return result;\n    }\n\n    return Target.findOne(options);\n  }\n\n  /**\n   * Set the associated model.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {?Model|string|number} [associatedInstance] An persisted instance or the primary key of an instance to associate with this. Pass `null` or `undefined` to remove the association.\n   * @param {object} [options] Options passed to getAssociation and `target.save`\n   *\n   * @returns {Promise}\n   */\n  async set(sourceInstance, associatedInstance, options) {\n    options = { ...options, scope: false };\n\n    const oldInstance = await sourceInstance[this.accessors.get](options);\n    // TODO Use equals method once #5605 is resolved\n    const alreadyAssociated = oldInstance && associatedInstance && this.target.primaryKeyAttributes.every(attribute =>\n      oldInstance.get(attribute, { raw: true }) === (associatedInstance.get ? associatedInstance.get(attribute, { raw: true }) : associatedInstance)\n    );\n\n    if (oldInstance && !alreadyAssociated) {\n      oldInstance[this.foreignKey] = null;\n\n      await oldInstance.save({\n        ...options,\n        fields: [this.foreignKey],\n        allowNull: [this.foreignKey],\n        association: true\n      });\n    }\n    if (associatedInstance && !alreadyAssociated) {\n      if (!(associatedInstance instanceof this.target)) {\n        const tmpInstance = {};\n        tmpInstance[this.target.primaryKeyAttribute] = associatedInstance;\n        associatedInstance = this.target.build(tmpInstance, {\n          isNewRecord: false\n        });\n      }\n\n      Object.assign(associatedInstance, this.scope);\n      associatedInstance.set(this.foreignKey, sourceInstance.get(this.sourceKeyAttribute));\n\n      return associatedInstance.save(options);\n    }\n\n    return null;\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {object} [values={}] values to create associated model instance with\n   * @param {object} [options] Options passed to `target.create` and setAssociation.\n   *\n   * @see\n   * {@link Model#create} for a full explanation of options\n   *\n   * @returns {Promise<Model>} The created target model\n   */\n  async create(sourceInstance, values, options) {\n    values = values || {};\n    options = options || {};\n\n    if (this.scope) {\n      for (const attribute of Object.keys(this.scope)) {\n        values[attribute] = this.scope[attribute];\n        if (options.fields) {\n          options.fields.push(attribute);\n        }\n      }\n    }\n\n    values[this.foreignKey] = sourceInstance.get(this.sourceKeyAttribute);\n    if (options.fields) {\n      options.fields.push(this.foreignKey);\n    }\n\n    return await this.target.create(values, options);\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.singular) {\n      return this.as === alias.singular;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = HasOne;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/instance-validator.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,28,33,43,42,55,64,38,25,39,30,17,16,42,104,12,40,5,27,39,31,21,28,3,21,24,58,27,23,37,30,7,29,66,5,3,20,87,3,32,98,71,9,29,21,99,30,5,70,30,3,35,26,72,46,15,7,57,51,15,7,72,57,7,87,88,7,7,41,3,29,26,92,54,15,7,90,9,31,7,41,3,54,61,13,5,26,76,66,68,18,25,12,35,20,9,7,39,94,15,7,47,15,7,95,36,9,40,7,87,50,108,9,3,95,24,45,23,33,19,25,21,28,26,5,40,21,5,18,11,29,84,9,70,19,76,7,5,9,67,17,74,5,3,68,38,57,70,5,81,67,148,5,3,53,42,141,40,44,67,68,27,14,40,7,12,45,5,25,3,47,83,197,85,64,122,139,7,5,152,126,179,7,5,3,68,71,189,53,28,3,1,44,35,53,43,46,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/instance-validator.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Utils = require('./utils');\nconst sequelizeError = require('./errors');\nconst DataTypes = require('./data-types');\nconst BelongsTo = require('./associations/belongs-to');\nconst validator = require('./utils/validator-extras').validator;\nconst { promisify } = require('util');\n\n/**\n * Instance Validator.\n *\n * @param {Instance} modelInstance The model instance.\n * @param {object} options A dictionary with options.\n *\n * @private\n */\nclass InstanceValidator {\n  constructor(modelInstance, options) {\n    options = {\n      // assign defined and default options\n      hooks: true,\n      ...options\n    };\n\n    if (options.fields && !options.skip) {\n      options.skip = _.difference(Object.keys(modelInstance.constructor.rawAttributes), options.fields);\n    } else {\n      options.skip = options.skip || [];\n    }\n\n    this.options = options;\n\n    this.modelInstance = modelInstance;\n\n    /**\n     * Exposes a reference to validator.js. This allows you to add custom validations using `validator.extend`\n     *\n     * @name validator\n     * @private\n     */\n    this.validator = validator;\n\n    /**\n     *  All errors will be stored here from the validations.\n     *\n     * @type {Array} Will contain keys that correspond to attributes which will\n     *   be Arrays of Errors.\n     * @private\n     */\n    this.errors = [];\n\n    /**\n     * @type {boolean} Indicates if validations are in progress\n     * @private\n     */\n    this.inProgress = false;\n  }\n\n  /**\n   * The main entry point for the Validation module, invoke to start the dance.\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async _validate() {\n    if (this.inProgress) throw new Error('Validations already in progress.');\n\n    this.inProgress = true;\n\n    await Promise.all([\n      this._perAttributeValidators(),\n      this._customValidators()\n    ]);\n\n    if (this.errors.length) {\n      throw new sequelizeError.ValidationError(null, this.errors);\n    }\n  }\n\n  /**\n   * Invoke the Validation sequence and run validation hooks if defined\n   *   - Before Validation Model Hooks\n   *   - Validation\n   *   - On validation success: After Validation Model Hooks\n   *   - On validation failure: Validation Failed Model Hooks\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async validate() {\n    return await (this.options.hooks ? this._validateAndRunHooks() : this._validate());\n  }\n\n  /**\n   * Invoke the Validation sequence and run hooks\n   *   - Before Validation Model Hooks\n   *   - Validation\n   *   - On validation success: After Validation Model Hooks\n   *   - On validation failure: Validation Failed Model Hooks\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async _validateAndRunHooks() {\n    const runHooks = this.modelInstance.constructor.runHooks.bind(this.modelInstance.constructor);\n    await runHooks('beforeValidate', this.modelInstance, this.options);\n\n    try {\n      await this._validate();\n    } catch (error) {\n      const newError = await runHooks('validationFailed', this.modelInstance, this.options, error);\n      throw newError || error;\n    }\n\n    await runHooks('afterValidate', this.modelInstance, this.options);\n    return this.modelInstance;\n  }\n\n  /**\n   * Will run all the validators defined per attribute (built-in validators and custom validators)\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async _perAttributeValidators() {\n    // promisify all attribute invocations\n    const validators = [];\n\n    _.forIn(this.modelInstance.rawAttributes, (rawAttribute, field) => {\n      if (this.options.skip.includes(field)) {\n        return;\n      }\n\n      const value = this.modelInstance.dataValues[field];\n\n      if (value instanceof Utils.SequelizeMethod) {\n        return;\n      }\n\n      if (!rawAttribute._autoGenerated && !rawAttribute.autoIncrement) {\n        // perform validations based on schema\n        this._validateSchema(rawAttribute, field, value);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(this.modelInstance.validators, field)) {\n        validators.push(this._singleAttrValidate(value, field, rawAttribute.allowNull));\n      }\n    });\n\n    return await Promise.all(validators);\n  }\n\n  /**\n   * Will run all the custom validators defined in the model's options.\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async _customValidators() {\n    const validators = [];\n    _.each(this.modelInstance.constructor.options.validate, (validator, validatorType) => {\n      if (this.options.skip.includes(validatorType)) {\n        return;\n      }\n\n      const valprom = this._invokeCustomValidator(validator, validatorType)\n        // errors are handled in settling, stub this\n        .catch(() => {});\n\n      validators.push(valprom);\n    });\n\n    return await Promise.all(validators);\n  }\n\n  /**\n   * Validate a single attribute with all the defined built-in validators and custom validators.\n   *\n   * @private\n   *\n   * @param {*} value Anything.\n   * @param {string} field The field name.\n   * @param {boolean} allowNull Whether or not the schema allows null values\n   *\n   * @returns {Promise} A promise, will always resolve, auto populates error on this.error local object.\n   */\n  async _singleAttrValidate(value, field, allowNull) {\n    // If value is null and allowNull is false, no validators should run (see #9143)\n    if ((value === null || value === undefined) && !allowNull) {\n      // The schema validator (_validateSchema) has already generated the validation error. Nothing to do here.\n      return;\n    }\n\n    // Promisify each validator\n    const validators = [];\n    _.forIn(this.modelInstance.validators[field], (test, validatorType) => {\n\n      if (['isUrl', 'isURL', 'isEmail'].includes(validatorType)) {\n        // Preserve backwards compat. Validator.js now expects the second param to isURL and isEmail to be an object\n        if (typeof test === 'object' && test !== null && test.msg) {\n          test = {\n            msg: test.msg\n          };\n        } else if (test === true) {\n          test = {};\n        }\n      }\n\n      // Custom validators should always run, except if value is null and allowNull is false (see #9143)\n      if (typeof test === 'function') {\n        validators.push(this._invokeCustomValidator(test, validatorType, true, value, field));\n        return;\n      }\n\n      // If value is null, built-in validators should not run (only custom validators have to run) (see #9134).\n      if (value === null || value === undefined) {\n        return;\n      }\n\n      const validatorPromise = this._invokeBuiltinValidator(value, test, validatorType, field);\n      // errors are handled in settling, stub this\n      validatorPromise.catch(() => {});\n      validators.push(validatorPromise);\n    });\n\n    return Promise\n      .all(validators.map(validator => validator.catch(rejection => {\n        const isBuiltIn = !!rejection.validatorName;\n        this._pushError(isBuiltIn, field, rejection, value, rejection.validatorName, rejection.validatorArgs);\n      })));\n  }\n\n  /**\n   * Prepare and invoke a custom validator.\n   *\n   * @private\n   *\n   * @param {Function} validator The custom validator.\n   * @param {string} validatorType the custom validator type (name).\n   * @param {boolean} optAttrDefined Set to true if custom validator was defined from the attribute\n   * @param {*} optValue value for attribute\n   * @param {string} optField field for attribute\n   *\n   * @returns {Promise} A promise.\n   */\n  async _invokeCustomValidator(validator, validatorType, optAttrDefined, optValue, optField) {\n    let isAsync = false;\n\n    const validatorArity = validator.length;\n    // check if validator is async and requires a callback\n    let asyncArity = 1;\n    let errorKey = validatorType;\n    let invokeArgs;\n    if (optAttrDefined) {\n      asyncArity = 2;\n      invokeArgs = optValue;\n      errorKey = optField;\n    }\n    if (validatorArity === asyncArity) {\n      isAsync = true;\n    }\n\n    if (isAsync) {\n      try {\n        if (optAttrDefined) {\n          return await promisify(validator.bind(this.modelInstance, invokeArgs))();\n        }\n        return await promisify(validator.bind(this.modelInstance))();\n      } catch (e) {\n        return this._pushError(false, errorKey, e, optValue, validatorType);\n      }\n    }\n\n    try {\n      return await validator.call(this.modelInstance, invokeArgs);\n    } catch (e) {\n      return this._pushError(false, errorKey, e, optValue, validatorType);\n    }\n  }\n\n  /**\n   * Prepare and invoke a build-in validator.\n   *\n   * @private\n   *\n   * @param {*} value Anything.\n   * @param {*} test The test case.\n   * @param {string} validatorType One of known to Sequelize validators.\n   * @param {string} field The field that is being validated\n   *\n   * @returns {object} An object with specific keys to invoke the validator.\n   */\n  async _invokeBuiltinValidator(value, test, validatorType, field) {\n    // Cast value as string to pass new Validator.js string requirement\n    const valueString = String(value);\n    // check if Validator knows that kind of validation test\n    if (typeof validator[validatorType] !== 'function') {\n      throw new Error(`Invalid validator function: ${validatorType}`);\n    }\n\n    const validatorArgs = this._extractValidatorArgs(test, validatorType, field);\n\n    if (!validator[validatorType](valueString, ...validatorArgs)) {\n      throw Object.assign(new Error(test.msg || `Validation ${validatorType} on ${field} failed`), { validatorName: validatorType, validatorArgs });\n    }\n  }\n\n  /**\n   * Will extract arguments for the validator.\n   *\n   * @param {*} test The test case.\n   * @param {string} validatorType One of known to Sequelize validators.\n   * @param {string} field The field that is being validated.\n   *\n   * @private\n   */\n  _extractValidatorArgs(test, validatorType, field) {\n    let validatorArgs = test.args || test;\n    const isLocalizedValidator = typeof validatorArgs !== 'string' && ['isAlpha', 'isAlphanumeric', 'isMobilePhone'].includes(validatorType);\n\n    if (!Array.isArray(validatorArgs)) {\n      if (validatorType === 'isImmutable') {\n        validatorArgs = [validatorArgs, field, this.modelInstance];\n      } else if (isLocalizedValidator || validatorType === 'isIP') {\n        validatorArgs = [];\n      } else {\n        validatorArgs = [validatorArgs];\n      }\n    } else {\n      validatorArgs = validatorArgs.slice(0);\n    }\n    return validatorArgs;\n  }\n\n  /**\n   * Will validate a single field against its schema definition (isnull).\n   *\n   * @param {object} rawAttribute As defined in the Schema.\n   * @param {string} field The field name.\n   * @param {*} value anything.\n   *\n   * @private\n   */\n  _validateSchema(rawAttribute, field, value) {\n    if (rawAttribute.allowNull === false && (value === null || value === undefined)) {\n      const association = Object.values(this.modelInstance.constructor.associations).find(association => association instanceof BelongsTo && association.foreignKey === rawAttribute.fieldName);\n      if (!association || !this.modelInstance.get(association.associationAccessor)) {\n        const validators = this.modelInstance.validators[field];\n        const errMsg = _.get(validators, 'notNull.msg', `${this.modelInstance.constructor.name}.${field} cannot be null`);\n\n        this.errors.push(new sequelizeError.ValidationErrorItem(\n          errMsg,\n          'notNull Violation', // sequelizeError.ValidationErrorItem.Origins.CORE,\n          field,\n          value,\n          this.modelInstance,\n          'is_null'\n        ));\n      }\n    }\n\n    if (rawAttribute.type instanceof DataTypes.STRING || rawAttribute.type instanceof DataTypes.TEXT || rawAttribute.type instanceof DataTypes.CITEXT) {\n      if (Array.isArray(value) || _.isObject(value) && !(value instanceof Utils.SequelizeMethod) && !Buffer.isBuffer(value)) {\n        this.errors.push(new sequelizeError.ValidationErrorItem(\n          `${field} cannot be an array or an object`,\n          'string violation', // sequelizeError.ValidationErrorItem.Origins.CORE,\n          field,\n          value,\n          this.modelInstance,\n          'not_a_string'\n        ));\n      }\n    }\n  }\n\n  /**\n   * Signs all errors retaining the original.\n   *\n   * @param {boolean}       isBuiltin   - Determines if error is from builtin validator.\n   * @param {string}        errorKey    - name of invalid attribute.\n   * @param {Error|string}  rawError    - The original error.\n   * @param {string|number} value       - The data that triggered the error.\n   * @param {string}        fnName      - Name of the validator, if any\n   * @param {Array}         fnArgs      - Arguments for the validator [function], if any\n   *\n   * @private\n   */\n  _pushError(isBuiltin, errorKey, rawError, value, fnName, fnArgs) {\n    const message = rawError.message || rawError || 'Validation error';\n    const error = new sequelizeError.ValidationErrorItem(\n      message,\n      'Validation error', // sequelizeError.ValidationErrorItem.Origins.FUNCTION,\n      errorKey,\n      value,\n      this.modelInstance,\n      fnName,\n      isBuiltin ? fnName : undefined,\n      isBuiltin ? fnArgs : undefined\n    );\n\n    error[InstanceValidator.RAW_KEY_NAME] = rawError;\n\n    this.errors.push(error);\n  }\n}\n/**\n * The error key for arguments as passed by custom validators\n *\n * @type {string}\n * @private\n */\nInstanceValidator.RAW_KEY_NAME = 'original';\n\nmodule.exports = InstanceValidator;\nmodule.exports.InstanceValidator = InstanceValidator;\nmodule.exports.default = InstanceValidator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/query-types.js":{"lineLengths":[13,37,19,19,19,27,27,19,19,21,27,29,23,13,29,36,2,39,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/query-types.js"],"sourcesContent":["'use strict';\n\n/**\n * An enum of query types used by `sequelize.query`\n *\n * @see {@link Sequelize#query}\n *\n * @property SELECT\n * @property INSERT\n * @property UPDATE\n * @property BULKUPDATE\n * @property BULKDELETE\n * @property DELETE\n * @property UPSERT\n * @property VERSION\n * @property SHOWTABLES\n * @property SHOWINDEXES\n * @property DESCRIBE\n * @property RAW\n * @property FOREIGNKEYS\n * @property SHOWCONSTRAINTS\n */\nconst QueryTypes = module.exports = { // eslint-disable-line\n  SELECT: 'SELECT',\n  INSERT: 'INSERT',\n  UPDATE: 'UPDATE',\n  BULKUPDATE: 'BULKUPDATE',\n  BULKDELETE: 'BULKDELETE',\n  DELETE: 'DELETE',\n  UPSERT: 'UPSERT',\n  VERSION: 'VERSION',\n  SHOWTABLES: 'SHOWTABLES',\n  SHOWINDEXES: 'SHOWINDEXES',\n  DESCRIBE: 'DESCRIBE',\n  RAW: 'RAW',\n  FOREIGNKEYS: 'FOREIGNKEYS',\n  SHOWCONSTRAINTS: 'SHOWCONSTRAINTS'\n};\n"],"mappings":";AAsBA,MAAM,aAAa,OAAO,UAAU;AAAA,EAClC,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,UAAU;AAAA,EACV,KAAK;AAAA,EACL,aAAa;AAAA,EACb,iBAAiB;AAAA;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/hooks.js":{"lineLengths":[13,28,45,43,19,32,31,34,30,29,31,30,31,30,30,29,71,68,30,29,34,33,35,34,35,34,34,33,28,49,40,27,29,57,56,55,54,45,44,46,45,49,48,28,27,32,31,29,27,2,26,126,37,54,1,15,22,28,50,37,34,69,7,4,38,15,63,17,36,23,39,27,65,7,5,32,22,5,58,31,39,25,9,48,35,7,13,5,29,37,23,7,40,39,5,4,31,37,16,18,5,37,41,32,41,43,39,7,16,4,30,66,34,18,5,39,41,34,76,56,31,9,55,36,9,20,9,5,16,4,21,81,3,2,31,43,25,46,45,15,5,45,48,6,3,1,26,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/hooks.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst { logger } = require('./utils/logger');\nconst debug = logger.debugContext('hooks');\n\nconst hookTypes = {\n  beforeValidate: { params: 2 },\n  afterValidate: { params: 2 },\n  validationFailed: { params: 3 },\n  beforeCreate: { params: 2 },\n  afterCreate: { params: 2 },\n  beforeDestroy: { params: 2 },\n  afterDestroy: { params: 2 },\n  beforeRestore: { params: 2 },\n  afterRestore: { params: 2 },\n  beforeUpdate: { params: 2 },\n  afterUpdate: { params: 2 },\n  beforeSave: { params: 2, proxies: ['beforeUpdate', 'beforeCreate'] },\n  afterSave: { params: 2, proxies: ['afterUpdate', 'afterCreate'] },\n  beforeUpsert: { params: 2 },\n  afterUpsert: { params: 2 },\n  beforeBulkCreate: { params: 2 },\n  afterBulkCreate: { params: 2 },\n  beforeBulkDestroy: { params: 1 },\n  afterBulkDestroy: { params: 1 },\n  beforeBulkRestore: { params: 1 },\n  afterBulkRestore: { params: 1 },\n  beforeBulkUpdate: { params: 1 },\n  afterBulkUpdate: { params: 1 },\n  beforeFind: { params: 1 },\n  beforeFindAfterExpandIncludeAll: { params: 1 },\n  beforeFindAfterOptions: { params: 1 },\n  afterFind: { params: 2 },\n  beforeCount: { params: 1 },\n  beforeDefine: { params: 2, sync: true, noModel: true },\n  afterDefine: { params: 1, sync: true, noModel: true },\n  beforeInit: { params: 2, sync: true, noModel: true },\n  afterInit: { params: 1, sync: true, noModel: true },\n  beforeAssociate: { params: 2, sync: true },\n  afterAssociate: { params: 2, sync: true },\n  beforeConnect: { params: 1, noModel: true },\n  afterConnect: { params: 2, noModel: true },\n  beforeDisconnect: { params: 1, noModel: true },\n  afterDisconnect: { params: 1, noModel: true },\n  beforeSync: { params: 1 },\n  afterSync: { params: 1 },\n  beforeBulkSync: { params: 1 },\n  afterBulkSync: { params: 1 },\n  beforeQuery: { params: 2 },\n  afterQuery: { params: 2 }\n};\nexports.hooks = hookTypes;\n\n\n/**\n * get array of current hook and its proxies combined\n *\n * @param {string} hookType any hook type @see {@link hookTypes}\n *\n * @private\n */\nconst getProxiedHooks = hookType =>\n  hookTypes[hookType].proxies\n    ? hookTypes[hookType].proxies.concat(hookType)\n    : [hookType]\n;\n\nfunction getHooks(hooked, hookType) {\n  return (hooked.options.hooks || {})[hookType] || [];\n}\n\nconst Hooks = {\n  /**\n   * Process user supplied hooks definition\n   *\n   * @param {object} hooks hooks definition\n   *\n   * @private\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  _setupHooks(hooks) {\n    this.options.hooks = {};\n    _.map(hooks || {}, (hooksArray, hookName) => {\n      if (!Array.isArray(hooksArray)) hooksArray = [hooksArray];\n      hooksArray.forEach(hookFn => this.addHook(hookName, hookFn));\n    });\n  },\n\n  async runHooks(hooks, ...hookArgs) {\n    if (!hooks) throw new Error('runHooks requires at least 1 argument');\n\n    let hookType;\n\n    if (typeof hooks === 'string') {\n      hookType = hooks;\n      hooks = getHooks(this, hookType);\n\n      if (this.sequelize) {\n        hooks = hooks.concat(getHooks(this.sequelize, hookType));\n      }\n    }\n\n    if (!Array.isArray(hooks)) {\n      hooks = [hooks];\n    }\n\n    // synchronous hooks\n    if (hookTypes[hookType] && hookTypes[hookType].sync) {\n      for (let hook of hooks) {\n        if (typeof hook === 'object') {\n          hook = hook.fn;\n        }\n\n        debug(`running hook(sync) ${hookType}`);\n        hook.apply(this, hookArgs);\n      }\n      return;\n    }\n\n    // asynchronous hooks (default)\n    for (let hook of hooks) {\n      if (typeof hook === 'object') {\n        hook = hook.fn;\n      }\n\n      debug(`running hook ${hookType}`);\n      await hook.apply(this, hookArgs);\n    }\n  },\n\n  /**\n   * Add a hook to the model\n   *\n   * @param {string}          hookType hook name @see {@link hookTypes}\n   * @param {string|Function} [name] Provide a name for the hook function. It can be used to remove the hook later or to order hooks based on some sort of priority system in the future.\n   * @param {Function}        fn The hook function\n   *\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  addHook(hookType, name, fn) {\n    if (typeof name === 'function') {\n      fn = name;\n      name = null;\n    }\n\n    debug(`adding hook ${hookType}`);\n    // check for proxies, add them too\n    hookType = getProxiedHooks(hookType);\n\n    hookType.forEach(type => {\n      const hooks = getHooks(this, type);\n      hooks.push(name ? { name, fn } : fn);\n      this.options.hooks[type] = hooks;\n    });\n\n    return this;\n  },\n\n  /**\n   * Remove hook from the model\n   *\n   * @param {string} hookType @see {@link hookTypes}\n   * @param {string|Function} name name of hook or function reference which was attached\n   *\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  removeHook(hookType, name) {\n    const isReference = typeof name === 'function' ? true : false;\n\n    if (!this.hasHook(hookType)) {\n      return this;\n    }\n\n    debug(`removing hook ${hookType}`);\n\n    // check for proxies, add them too\n    hookType = getProxiedHooks(hookType);\n\n    for (const type of hookType) {\n      this.options.hooks[type] = this.options.hooks[type].filter(hook => {\n        if (isReference && typeof hook === 'function') {\n          return hook !== name; // check if same method\n        }\n        if (!isReference && typeof hook === 'object') {\n          return hook.name !== name;\n        }\n        return true;\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * Check whether the mode has any hooks of this type\n   *\n   * @param {string} hookType @see {@link hookTypes}\n   *\n   * @alias hasHooks\n   *\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  hasHook(hookType) {\n    return this.options.hooks[hookType] && !!this.options.hooks[hookType].length;\n  }\n};\nHooks.hasHooks = Hooks.hasHook;\n\n\nfunction applyTo(target, isModel = false) {\n  _.mixin(target, Hooks);\n\n  for (const hook of Object.keys(hookTypes)) {\n    if (isModel && hookTypes[hook].noModel) {\n      continue;\n    }\n    target[hook] = function(name, callback) {\n      return this.addHook(hook, name, callback);\n    };\n  }\n}\nexports.applyTo = applyTo;\n\n/**\n * A hook that is run before validation\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name beforeValidate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after validation\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name afterValidate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run when validation fails\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options, error. Error is the\n * SequelizeValidationError. If the callback throws an error, it will replace the original validation error.\n * @name validationFailed\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before creating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after creating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name afterCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before creating or updating a single instance, It proxies `beforeCreate` and `beforeUpdate`\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeSave\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before upserting\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeUpsert\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after upserting\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the result of upsert(), options\n * @name afterUpsert\n * @memberof Sequelize.Model\n */\n\n/**\n  * A hook that is run after creating or updating a single instance, It proxies `afterCreate` and `afterUpdate`\n *\n  * @param {string}   name\n  * @param {Function} fn   A callback function that is called with attributes, options\n  * @name afterSave\n  * @memberof Sequelize.Model\n  */\n\n/**\n * A hook that is run before destroying a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name beforeDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after destroying a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name afterDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before restoring a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name beforeRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after restoring a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name afterRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before updating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name beforeUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after updating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name afterUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before creating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instances, options\n * @name beforeBulkCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after creating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instances, options\n * @name afterBulkCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before destroying instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name beforeBulkDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after destroying instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name afterBulkDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before restoring instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name beforeBulkRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after restoring instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name afterBulkRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before updating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeBulkUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after updating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name afterBulkUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a find (select) query\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeFind\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a find (select) query, after any { include: {all: ...} } options are expanded\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeFindAfterExpandIncludeAll\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a find (select) query, after all option parsing is complete\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeFindAfterOptions\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after a find (select) query\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance(s), options\n * @name afterFind\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a count query\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeCount\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a define call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeDefine\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a define call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with factory\n * @name afterDefine\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before Sequelize() call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with config, options\n * @name beforeInit\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after Sequelize() call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with sequelize\n * @name afterInit\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before a connection is created\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with config passed to connection\n * @name beforeConnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a connection is created\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object and the config passed to connection\n * @name afterConnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before a connection is disconnected\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object\n * @name beforeDisconnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a connection is disconnected\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object\n * @name afterDisconnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before Model.sync call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options passed to Model.sync\n * @name beforeSync\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after Model.sync call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options passed to Model.sync\n * @name afterSync\n * @memberof Sequelize\n */\n\n/**\n  * A hook that is run before sequelize.sync call\n *\n  * @param {string}   name\n  * @param {Function} fn   A callback function that is called with options passed to sequelize.sync\n  * @name beforeBulkSync\n  * @memberof Sequelize\n  */\n\n/**\n  * A hook that is run after sequelize.sync call\n *\n  * @param {string}   name\n  * @param {Function} fn   A callback function that is called with options passed to sequelize.sync\n  * @name afterBulkSync\n  * @memberof Sequelize\n  */\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/mixin.js":{"lineLengths":[13,28,36,38,51,42,36,90,1,15,33,43,109,5,24,78,37,62,27,83,5,61,71,36,40,27,95,5,23,4,39,43,115,5,24,78,37,112,102,27,89,5,67,71,36,40,27,101,5,23,4,27,109,4,41,113,3,2,29,41,24,45,130,5,78,37,27,82,5,89,71,36,40,27,94,5,23,4,1,36,42,23,29,31,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/associations/mixin.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst HasOne = require('./has-one');\nconst HasMany = require('./has-many');\nconst BelongsToMany = require('./belongs-to-many');\nconst BelongsTo = require('./belongs-to');\n\nfunction isModel(model, sequelize) {\n  return model\n    && model.prototype\n    && model.prototype instanceof sequelize.Sequelize.Model;\n}\n\nconst Mixin = {\n  hasMany(target, options = {}) {\n    if (!isModel(target, this.sequelize)) {\n      throw new Error(`${this.name}.hasMany called with something that's not a subclass of Sequelize.Model`);\n    }\n\n    const source = this;\n\n    // Since this is a mixin, we'll need a unique letiable name for hooks (since Model will override our hooks option)\n    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);\n    options.useHooks = options.hooks;\n\n    Object.assign(options, _.omit(source.options, ['hooks']));\n\n    if (options.useHooks) {\n      this.runHooks('beforeAssociate', { source, target, type: HasMany }, options);\n    }\n\n    // the id is in the foreign table or in a connecting table\n    const association = new HasMany(source, target, options);\n    source.associations[association.associationAccessor] = association;\n\n    association._injectAttributes();\n    association.mixin(source.prototype);\n\n    if (options.useHooks) {\n      this.runHooks('afterAssociate', { source, target, type: HasMany, association }, options);\n    }\n\n    return association;\n  },\n\n  belongsToMany(target, options = {}) {\n    if (!isModel(target, this.sequelize)) {\n      throw new Error(`${this.name}.belongsToMany called with something that's not a subclass of Sequelize.Model`);\n    }\n\n    const source = this;\n\n    // Since this is a mixin, we'll need a unique letiable name for hooks (since Model will override our hooks option)\n    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);\n    options.useHooks = options.hooks;\n    options.timestamps = options.timestamps === undefined ? this.sequelize.options.timestamps : options.timestamps;\n    Object.assign(options, _.omit(source.options, ['hooks', 'timestamps', 'scopes', 'defaultScope']));\n\n    if (options.useHooks) {\n      this.runHooks('beforeAssociate', { source, target, type: BelongsToMany }, options);\n    }\n    // the id is in the foreign table or in a connecting table\n    const association = new BelongsToMany(source, target, options);\n    source.associations[association.associationAccessor] = association;\n\n    association._injectAttributes();\n    association.mixin(source.prototype);\n\n    if (options.useHooks) {\n      this.runHooks('afterAssociate', { source, target, type: BelongsToMany, association }, options);\n    }\n\n    return association;\n  },\n\n  getAssociations(target) {\n    return Object.values(this.associations).filter(association => association.target.name === target.name);\n  },\n\n  getAssociationForAlias(target, alias) {\n    // Two associations cannot have the same alias, so we can use find instead of filter\n    return this.getAssociations(target).find(association => association.verifyAssociationAlias(alias)) || null;\n  }\n};\n\n// The logic for hasOne and belongsTo is exactly the same\nfunction singleLinked(Type) {\n  return function(target, options = {}) {\n    // eslint-disable-next-line no-invalid-this\n    const source = this;\n    if (!isModel(target, source.sequelize)) {\n      throw new Error(`${source.name}.${_.lowerFirst(Type.name)} called with something that's not a subclass of Sequelize.Model`);\n    }\n\n\n    // Since this is a mixin, we'll need a unique letiable name for hooks (since Model will override our hooks option)\n    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);\n    options.useHooks = options.hooks;\n\n    if (options.useHooks) {\n      source.runHooks('beforeAssociate', { source, target, type: Type }, options);\n    }\n    // the id is in the foreign table\n    const association = new Type(source, target, Object.assign(options, source.options));\n    source.associations[association.associationAccessor] = association;\n\n    association._injectAttributes();\n    association.mixin(source.prototype);\n\n    if (options.useHooks) {\n      source.runHooks('afterAssociate', { source, target, type: Type, association }, options);\n    }\n\n    return association;\n  };\n}\n\nMixin.hasOne = singleLinked(HasOne);\nMixin.belongsTo = singleLinked(BelongsTo);\n\nmodule.exports = Mixin;\nmodule.exports.Mixin = Mixin;\nmodule.exports.default = Mixin;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/utils/deprecations.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,53,49,41,45,37,44,3,46,20,2,138,153,246,186,171,238,40,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/utils/deprecations.ts"],"sourcesContent":["import { deprecate } from 'util';\n\nconst noop = () => { /* noop */ };\n\nexport const noRawAttributes = deprecate(noop, 'Use sequelize.fn / sequelize.literal to construct attributes', 'SEQUELIZE0001');\nexport const noTrueLogging = deprecate(noop, 'The logging-option should be either a function or false. Default: console.log', 'SEQUELIZE0002');\nexport const noStringOperators = deprecate(noop, 'String based operators are deprecated. Please use Symbol based operators for better security, read more at https://sequelize.org/master/manual/querying.html#operators', 'SEQUELIZE0003');\nexport const noBoolOperatorAliases = deprecate(noop, 'A boolean value was passed to options.operatorsAliases. This is a no-op with v5 and should be removed.', 'SEQUELIZE0004');\nexport const noDoubleNestedGroup = deprecate(noop, 'Passing a double nested nested array to `group` is unsupported and will be removed in v6.', 'SEQUELIZE0005');\nexport const unsupportedEngine = deprecate(noop, 'This database engine version is not supported, please update your database server. More information https://github.com/sequelize/sequelize/blob/main/ENGINE.md', 'SEQUELIZE0006');\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAE1B,MAAM,OAAO,MAAM;AAAA;AAEZ,MAAM,kBAAkB,2BAAU,MAAM,gEAAgE;AACxG,MAAM,gBAAgB,2BAAU,MAAM,iFAAiF;AACvH,MAAM,oBAAoB,2BAAU,MAAM,0KAA0K;AACpN,MAAM,wBAAwB,2BAAU,MAAM,0GAA0G;AACxJ,MAAM,sBAAsB,2BAAU,MAAM,6FAA6F;AACzI,MAAM,oBAAoB,2BAAU,MAAM,kKAAkK;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/deferrable.js":{"lineLengths":[13,48,16,28,40,3,21,31,3,11,52,3,1,43,11,43,3,1,44,11,44,3,1,28,11,28,3,1,37,28,12,35,3,25,61,3,1,38,28,12,35,3,25,62,3,1,20,59,61,29,47,48,2,28,38,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/deferrable.js"],"sourcesContent":["'use strict';\n\nconst { classToInvokable } = require('./utils');\n\nclass ABSTRACT {\n  static toString(...args) {\n    return new this().toString(...args);\n  }\n\n  toString(...args) {\n    return this.toSql(...args);\n  }\n\n  toSql() {\n    throw new Error('toSql implementation missing');\n  }\n}\n\nclass INITIALLY_DEFERRED extends ABSTRACT {\n  toSql() {\n    return 'DEFERRABLE INITIALLY DEFERRED';\n  }\n}\n\nclass INITIALLY_IMMEDIATE extends ABSTRACT {\n  toSql() {\n    return 'DEFERRABLE INITIALLY IMMEDIATE';\n  }\n}\n\nclass NOT extends ABSTRACT {\n  toSql() {\n    return 'NOT DEFERRABLE';\n  }\n}\n\nclass SET_DEFERRED extends ABSTRACT {\n  constructor(constraints) {\n    super();\n    this.constraints = constraints;\n  }\n\n  toSql(queryGenerator) {\n    return queryGenerator.setDeferredQuery(this.constraints);\n  }\n}\n\nclass SET_IMMEDIATE extends ABSTRACT {\n  constructor(constraints) {\n    super();\n    this.constraints = constraints;\n  }\n\n  toSql(queryGenerator) {\n    return queryGenerator.setImmediateQuery(this.constraints);\n  }\n}\n\n/**\n * A collection of properties related to deferrable constraints. It can be used to\n * make foreign key constraints deferrable and to set the constraints within a\n * transaction. This is only supported in PostgreSQL.\n *\n * The foreign keys can be configured like this. It will create a foreign key\n * that will check the constraints immediately when the data was inserted.\n *\n * ```js\n * sequelize.define('Model', {\n *   foreign_id: {\n *     type: Sequelize.INTEGER,\n *     references: {\n *       model: OtherModel,\n *       key: 'id',\n *       deferrable: Sequelize.Deferrable.INITIALLY_IMMEDIATE\n *     }\n *   }\n * });\n * ```\n *\n * The constraints can be configured in a transaction like this. It will\n * trigger a query once the transaction has been started and set the constraints\n * to be checked at the very end of the transaction.\n *\n * ```js\n * sequelize.transaction({\n *   deferrable: Sequelize.Deferrable.SET_DEFERRED\n * });\n * ```\n *\n * @property INITIALLY_DEFERRED    Use when declaring a constraint. Allow and enable by default this constraint's checks to be deferred at the end of transactions.\n * @property INITIALLY_IMMEDIATE   Use when declaring a constraint. Allow the constraint's checks to be deferred at the end of transactions.\n * @property NOT                   Use when declaring a constraint. Set the constraint to not deferred. This is the default in PostgreSQL and makes it impossible to dynamically defer the constraints within a transaction.\n * @property SET_DEFERRED          Use when declaring a transaction. Defer the deferrable checks involved in this transaction at commit.\n * @property SET_IMMEDIATE         Use when declaring a transaction. Execute the deferrable checks involved in this transaction immediately.\n */\n\nconst Deferrable = {\n  INITIALLY_DEFERRED: classToInvokable(INITIALLY_DEFERRED),\n  INITIALLY_IMMEDIATE: classToInvokable(INITIALLY_IMMEDIATE),\n  NOT: classToInvokable(NOT),\n  SET_DEFERRED: classToInvokable(SET_DEFERRED),\n  SET_IMMEDIATE: classToInvokable(SET_IMMEDIATE)\n};\n\nmodule.exports = Deferrable;\n"],"mappings":";AAEA,MAAM,EAAE,qBAAqB,QAAQ;AAErC,eAAe;AAAA,SACN,YAAY,MAAM;AACvB,WAAO,IAAI,OAAO,SAAS,GAAG;AAAA;AAAA,EAGhC,YAAY,MAAM;AAChB,WAAO,KAAK,MAAM,GAAG;AAAA;AAAA,EAGvB,QAAQ;AACN,UAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,iCAAiC,SAAS;AAAA,EACxC,QAAQ;AACN,WAAO;AAAA;AAAA;AAIX,kCAAkC,SAAS;AAAA,EACzC,QAAQ;AACN,WAAO;AAAA;AAAA;AAIX,kBAAkB,SAAS;AAAA,EACzB,QAAQ;AACN,WAAO;AAAA;AAAA;AAIX,2BAA2B,SAAS;AAAA,EAClC,YAAY,aAAa;AACvB;AACA,SAAK,cAAc;AAAA;AAAA,EAGrB,MAAM,gBAAgB;AACpB,WAAO,eAAe,iBAAiB,KAAK;AAAA;AAAA;AAIhD,4BAA4B,SAAS;AAAA,EACnC,YAAY,aAAa;AACvB;AACA,SAAK,cAAc;AAAA;AAAA,EAGrB,MAAM,gBAAgB;AACpB,WAAO,eAAe,kBAAkB,KAAK;AAAA;AAAA;AA0CjD,MAAM,aAAa;AAAA,EACjB,oBAAoB,iBAAiB;AAAA,EACrC,qBAAqB,iBAAiB;AAAA,EACtC,KAAK,iBAAiB;AAAA,EACtB,cAAc,iBAAiB;AAAA,EAC/B,eAAe,iBAAiB;AAAA;AAGlC,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/model-manager.js":{"lineLengths":[13,43,28,20,26,21,31,3,19,28,46,17,3,30,83,53,3,30,41,23,7,77,3,13,23,3,35,22,34,15,12,41,19,7,38,20,43,34,65,7,32,51,82,58,37,45,34,53,13,27,11,9,7,55,34,5,27,26,32,5,32,35,5,3,1,30,43,38,41,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/model-manager.js"],"sourcesContent":["'use strict';\n\nconst Toposort = require('toposort-class');\nconst _ = require('lodash');\n\nclass ModelManager {\n  constructor(sequelize) {\n    this.models = [];\n    this.sequelize = sequelize;\n  }\n\n  addModel(model) {\n    this.models.push(model);\n    this.sequelize.models[model.name] = model;\n\n    return model;\n  }\n\n  removeModel(modelToRemove) {\n    this.models = this.models.filter(model => model.name !== modelToRemove.name);\n\n    delete this.sequelize.models[modelToRemove.name];\n  }\n\n  getModel(against, options) {\n    options = _.defaults(options || {}, {\n      attribute: 'name'\n    });\n\n    return this.models.find(model => model[options.attribute] === against);\n  }\n\n  get all() {\n    return this.models;\n  }\n\n  /**\n   * Iterate over Models in an order suitable for e.g. creating tables.\n   * Will take foreign key constraints into account so that dependencies are visited before dependents.\n   *\n   * @param {Function} iterator method to execute on each model\n   * @param {object} [options] iterator options\n   * @private\n   */\n  forEachModel(iterator, options) {\n    const models = {};\n    const sorter = new Toposort();\n    let sorted;\n    let dep;\n\n    options = _.defaults(options || {}, {\n      reverse: true\n    });\n\n    for (const model of this.models) {\n      let deps = [];\n      let tableName = model.getTableName();\n\n      if (_.isObject(tableName)) {\n        tableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      models[tableName] = model;\n\n      for (const attrName in model.rawAttributes) {\n        if (Object.prototype.hasOwnProperty.call(model.rawAttributes, attrName)) {\n          const attribute = model.rawAttributes[attrName];\n\n          if (attribute.references) {\n            dep = attribute.references.model;\n\n            if (_.isObject(dep)) {\n              dep = `${dep.schema}.${dep.tableName}`;\n            }\n\n            deps.push(dep);\n          }\n        }\n      }\n\n      deps = deps.filter(dep => tableName !== dep);\n\n      sorter.add(tableName, deps);\n    }\n\n    sorted = sorter.sort();\n    if (options.reverse) {\n      sorted = sorted.reverse();\n    }\n    for (const name of sorted) {\n      iterator(models[name], name);\n    }\n  }\n}\n\nmodule.exports = ModelManager;\nmodule.exports.ModelManager = ModelManager;\nmodule.exports.default = ModelManager;\n"],"mappings":";AAEA,MAAM,WAAW,QAAQ;AACzB,MAAM,IAAI,QAAQ;AAElB,mBAAmB;AAAA,EACjB,YAAY,WAAW;AACrB,SAAK,SAAS;AACd,SAAK,YAAY;AAAA;AAAA,EAGnB,SAAS,OAAO;AACd,SAAK,OAAO,KAAK;AACjB,SAAK,UAAU,OAAO,MAAM,QAAQ;AAEpC,WAAO;AAAA;AAAA,EAGT,YAAY,eAAe;AACzB,SAAK,SAAS,KAAK,OAAO,OAAO,WAAS,MAAM,SAAS,cAAc;AAEvE,WAAO,KAAK,UAAU,OAAO,cAAc;AAAA;AAAA,EAG7C,SAAS,SAAS,SAAS;AACzB,cAAU,EAAE,SAAS,WAAW,IAAI;AAAA,MAClC,WAAW;AAAA;AAGb,WAAO,KAAK,OAAO,KAAK,WAAS,MAAM,QAAQ,eAAe;AAAA;AAAA,MAG5D,MAAM;AACR,WAAO,KAAK;AAAA;AAAA,EAWd,aAAa,UAAU,SAAS;AAC9B,UAAM,SAAS;AACf,UAAM,SAAS,IAAI;AACnB,QAAI;AACJ,QAAI;AAEJ,cAAU,EAAE,SAAS,WAAW,IAAI;AAAA,MAClC,SAAS;AAAA;AAGX,eAAW,SAAS,KAAK,QAAQ;AAC/B,UAAI,OAAO;AACX,UAAI,YAAY,MAAM;AAEtB,UAAI,EAAE,SAAS,YAAY;AACzB,oBAAY,GAAG,UAAU,UAAU,UAAU;AAAA;AAG/C,aAAO,aAAa;AAEpB,iBAAW,YAAY,MAAM,eAAe;AAC1C,YAAI,OAAO,UAAU,eAAe,KAAK,MAAM,eAAe,WAAW;AACvE,gBAAM,YAAY,MAAM,cAAc;AAEtC,cAAI,UAAU,YAAY;AACxB,kBAAM,UAAU,WAAW;AAE3B,gBAAI,EAAE,SAAS,MAAM;AACnB,oBAAM,GAAG,IAAI,UAAU,IAAI;AAAA;AAG7B,iBAAK,KAAK;AAAA;AAAA;AAAA;AAKhB,aAAO,KAAK,OAAO,UAAO,cAAc;AAExC,aAAO,IAAI,WAAW;AAAA;AAGxB,aAAS,OAAO;AAChB,QAAI,QAAQ,SAAS;AACnB,eAAS,OAAO;AAAA;AAElB,eAAW,QAAQ,QAAQ;AACzB,eAAS,OAAO,OAAO;AAAA;AAAA;AAAA;AAK7B,OAAO,UAAU;AACjB,OAAO,QAAQ,eAAe;AAC9B,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/transaction.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,19,35,31,25,32,94,35,46,55,21,16,43,22,31,40,67,12,52,5,36,3,18,24,115,5,9,92,15,31,21,50,39,7,5,3,20,24,117,5,27,84,5,9,94,15,21,5,3,36,26,28,20,5,22,66,12,47,34,39,7,89,5,15,47,33,35,9,25,42,24,11,39,17,23,7,5,52,63,5,18,3,25,34,91,5,3,17,62,81,64,95,5,92,63,3,13,55,13,21,84,34,15,3,15,48,14,44,37,7,5,3,19,42,49,5,36,3,22,12,27,29,28,6,3,33,12,43,39,41,34,6,3,21,12,23,21,29,36,6,3,14,28,3,1,29,41,37,39,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/transaction.js"],"sourcesContent":["'use strict';\n\n/**\n * The transaction object is used to identify a running transaction.\n * It is created by calling `Sequelize.transaction()`.\n * To run a query under a transaction, you should pass the transaction in the options object.\n *\n * @class Transaction\n * @see {@link Sequelize.transaction}\n */\nclass Transaction {\n  /**\n   * Creates a new transaction instance\n   *\n   * @param {Sequelize} sequelize A configured sequelize Instance\n   * @param {object} options An object with options\n   * @param {string} [options.type] Sets the type of the transaction. Sqlite only\n   * @param {string} [options.isolationLevel] Sets the isolation level of the transaction.\n   * @param {string} [options.deferrable] Sets the constraints to be deferred or immediately checked. PostgreSQL only\n   */\n  constructor(sequelize, options) {\n    this.sequelize = sequelize;\n    this.savepoints = [];\n    this._afterCommitHooks = [];\n\n    // get dialect specific transaction options\n    const generateTransactionId = this.sequelize.dialect.queryGenerator.generateTransactionId;\n\n    this.options = {\n      type: sequelize.options.transactionType,\n      isolationLevel: sequelize.options.isolationLevel,\n      readOnly: false,\n      ...options\n    };\n\n    this.parent = this.options.transaction;\n\n    if (this.parent) {\n      this.id = this.parent.id;\n      this.parent.savepoints.push(this);\n      this.name = `${this.id}-sp-${this.parent.savepoints.length}`;\n    } else {\n      this.id = this.name = generateTransactionId();\n    }\n\n    delete this.options.transaction;\n  }\n\n  /**\n   * Commit the transaction\n   *\n   * @returns {Promise}\n   */\n  async commit() {\n    if (this.finished) {\n      throw new Error(`Transaction cannot be committed because it has been finished with state: ${this.finished}`);\n    }\n\n    try {\n      return await this.sequelize.getQueryInterface().commitTransaction(this, this.options);\n    } finally {\n      this.finished = 'commit';\n      this.cleanup();\n      for (const hook of this._afterCommitHooks) {\n        await hook.apply(this, [this]);\n      }\n    }\n  }\n\n  /**\n   * Rollback (abort) the transaction\n   *\n   * @returns {Promise}\n   */\n  async rollback() {\n    if (this.finished) {\n      throw new Error(`Transaction cannot be rolled back because it has been finished with state: ${this.finished}`);\n    }\n\n    if (!this.connection) {\n      throw new Error('Transaction cannot be rolled back because it never started');\n    }\n\n    try {\n      return await this\n        .sequelize\n        .getQueryInterface()\n        .rollbackTransaction(this, this.options);\n    } finally {\n      this.cleanup();\n    }\n  }\n\n  /**\n   * Called to acquire a connection to use and set the correct options on the connection.\n   * We should ensure all of the environment that's set up is cleaned up in `cleanup()` below.\n   *\n   * @param {boolean} useCLS Defaults to true: Use CLS (Continuation Local Storage) with Sequelize. With CLS, all queries within the transaction callback will automatically receive the transaction object.\n   * @returns {Promise}\n   */\n  async prepareEnvironment(useCLS) {\n    let connectionPromise;\n\n    if (useCLS === undefined) {\n      useCLS = true;\n    }\n\n    if (this.parent) {\n      connectionPromise = Promise.resolve(this.parent.connection);\n    } else {\n      const acquireOptions = { uuid: this.id };\n      if (this.options.readOnly) {\n        acquireOptions.type = 'SELECT';\n      }\n      connectionPromise = this.sequelize.connectionManager.getConnection(acquireOptions);\n    }\n\n    let result;\n    const connection = await connectionPromise;\n    this.connection = connection;\n    this.connection.uuid = this.id;\n\n    try {\n      await this.begin();\n      result = await this.setDeferrable();\n    } catch (setupErr) {\n      try {\n        result = await this.rollback();\n      } finally {\n        throw setupErr; // eslint-disable-line no-unsafe-finally\n      }\n    }\n\n    if (useCLS && this.sequelize.constructor._cls) {\n      this.sequelize.constructor._cls.set('transaction', this);\n    }\n\n    return result;\n  }\n\n  async setDeferrable() {\n    if (this.options.deferrable) {\n      return await this\n        .sequelize\n        .getQueryInterface()\n        .deferConstraints(this, this.options);\n    }\n  }\n\n  async begin() {\n    const queryInterface = this.sequelize.getQueryInterface();\n\n    if ( this.sequelize.dialect.supports.settingIsolationLevelDuringTransaction ) {\n      await queryInterface.startTransaction(this, this.options);\n      return queryInterface.setIsolationLevel(this, this.options.isolationLevel, this.options);\n    }\n\n    await queryInterface.setIsolationLevel(this, this.options.isolationLevel, this.options);\n\n    return queryInterface.startTransaction(this, this.options);\n  }\n\n  cleanup() {\n    // Don't release the connection if there's a parent transaction or\n    // if we've already cleaned up\n    if (this.parent || this.connection.uuid === undefined) return;\n\n    this._clearCls();\n    const res = this.sequelize.connectionManager.releaseConnection(this.connection);\n    this.connection.uuid = undefined;\n    return res;\n  }\n\n  _clearCls() {\n    const cls = this.sequelize.constructor._cls;\n\n    if (cls) {\n      if (cls.get('transaction') === this) {\n        cls.set('transaction', null);\n      }\n    }\n  }\n\n  /**\n   * A hook that is run after a transaction is committed\n   *\n   * @param {Function} fn   A callback function that is called with the committed transaction\n   * @name afterCommit\n   * @memberof Sequelize.Transaction\n   */\n  afterCommit(fn) {\n    if (!fn || typeof fn !== 'function') {\n      throw new Error('\"fn\" must be a function');\n    }\n    this._afterCommitHooks.push(fn);\n  }\n\n  /**\n   * Types can be set per-transaction by passing `options.type` to `sequelize.transaction`.\n   * Default to `DEFERRED` but you can override the default type by passing `options.transactionType` in `new Sequelize`.\n   * Sqlite only.\n   *\n   * Pass in the desired level as the first argument:\n   *\n   * @example\n   * try {\n   *   await sequelize.transaction({ type: Sequelize.Transaction.TYPES.EXCLUSIVE }, transaction => {\n   *      // your transactions\n   *   });\n   *   // transaction has been committed. Do something after the commit if required.\n   * } catch(err) {\n   *   // do something with the err.\n   * }\n   *\n   * @property DEFERRED\n   * @property IMMEDIATE\n   * @property EXCLUSIVE\n   */\n  static get TYPES() {\n    return {\n      DEFERRED: 'DEFERRED',\n      IMMEDIATE: 'IMMEDIATE',\n      EXCLUSIVE: 'EXCLUSIVE'\n    };\n  }\n\n  /**\n   * Isolation levels can be set per-transaction by passing `options.isolationLevel` to `sequelize.transaction`.\n   * Sequelize uses the default isolation level of the database, you can override this by passing `options.isolationLevel` in Sequelize constructor options.\n   *\n   * Pass in the desired level as the first argument:\n   *\n   * @example\n   * try {\n   *   const result = await sequelize.transaction({isolationLevel: Sequelize.Transaction.ISOLATION_LEVELS.SERIALIZABLE}, transaction => {\n   *     // your transactions\n   *   });\n   *   // transaction has been committed. Do something after the commit if required.\n   * } catch(err) {\n   *   // do something with the err.\n   * }\n   *\n   * @property READ_UNCOMMITTED\n   * @property READ_COMMITTED\n   * @property REPEATABLE_READ\n   * @property SERIALIZABLE\n   */\n  static get ISOLATION_LEVELS() {\n    return {\n      READ_UNCOMMITTED: 'READ UNCOMMITTED',\n      READ_COMMITTED: 'READ COMMITTED',\n      REPEATABLE_READ: 'REPEATABLE READ',\n      SERIALIZABLE: 'SERIALIZABLE'\n    };\n  }\n\n\n  /**\n   * Possible options for row locking. Used in conjunction with `find` calls:\n   *\n   * @example\n   * // t1 is a transaction\n   * Model.findAll({\n   *   where: ...,\n   *   transaction: t1,\n   *   lock: t1.LOCK...\n   * });\n   *\n   * @example <caption>Postgres also supports specific locks while eager loading by using OF:</caption>\n   * UserModel.findAll({\n   *   where: ...,\n   *   include: [TaskModel, ...],\n   *   transaction: t1,\n   *   lock: {\n   *     level: t1.LOCK...,\n   *     of: UserModel\n   *   }\n   * });\n   *\n   * # UserModel will be locked but TaskModel won't!\n   *\n   * @example <caption>You can also skip locked rows:</caption>\n   * // t1 is a transaction\n   * Model.findAll({\n   *   where: ...,\n   *   transaction: t1,\n   *   lock: true,\n   *   skipLocked: true\n   * });\n   * # The query will now return any rows that aren't locked by another transaction\n   *\n   * @returns {object}\n   * @property UPDATE\n   * @property SHARE\n   * @property KEY_SHARE Postgres 9.3+ only\n   * @property NO_KEY_UPDATE Postgres 9.3+ only\n   */\n  static get LOCK() {\n    return {\n      UPDATE: 'UPDATE',\n      SHARE: 'SHARE',\n      KEY_SHARE: 'KEY SHARE',\n      NO_KEY_UPDATE: 'NO KEY UPDATE'\n    };\n  }\n\n  /**\n   * Please see {@link Transaction.LOCK}\n   */\n  get LOCK() {\n    return Transaction.LOCK;\n  }\n}\n\nmodule.exports = Transaction;\nmodule.exports.Transaction = Transaction;\nmodule.exports.default = Transaction;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/table-hints.js":{"lineLengths":[13,37,19,37,21,35,31,33,21,23,21,21,19,23,17,23,22,2,39,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/table-hints.js"],"sourcesContent":["'use strict';\n\n/**\n * An enum of table hints to be used in mssql for querying with table hints\n *\n * @property NOLOCK\n * @property READUNCOMMITTED\n * @property UPDLOCK\n * @property REPEATABLEREAD\n * @property SERIALIZABLE\n * @property READCOMMITTED\n * @property TABLOCK\n * @property TABLOCKX\n * @property PAGLOCK\n * @property ROWLOCK\n * @property NOWAIT\n * @property READPAST\n * @property XLOCK\n * @property SNAPSHOT\n * @property NOEXPAND\n */\nconst TableHints = module.exports = { // eslint-disable-line\n  NOLOCK: 'NOLOCK',\n  READUNCOMMITTED: 'READUNCOMMITTED',\n  UPDLOCK: 'UPDLOCK',\n  REPEATABLEREAD: 'REPEATABLEREAD',\n  SERIALIZABLE: 'SERIALIZABLE',\n  READCOMMITTED: 'READCOMMITTED',\n  TABLOCK: 'TABLOCK',\n  TABLOCKX: 'TABLOCKX',\n  PAGLOCK: 'PAGLOCK',\n  ROWLOCK: 'ROWLOCK',\n  NOWAIT: 'NOWAIT',\n  READPAST: 'READPAST',\n  XLOCK: 'XLOCK',\n  SNAPSHOT: 'SNAPSHOT',\n  NOEXPAND: 'NOEXPAND'\n};\n"],"mappings":";AAqBA,MAAM,aAAa,OAAO,UAAU;AAAA,EAClC,QAAQ;AAAA,EACR,iBAAiB;AAAA,EACjB,SAAS;AAAA,EACT,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAe;AAAA,EACf,SAAS;AAAA,EACT,UAAU;AAAA,EACV,SAAS;AAAA,EACT,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AAAA,EACV,UAAU;AAAA;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/index-hints.js":{"lineLengths":[13,37,13,17,18,2,39,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/index-hints.js"],"sourcesContent":["'use strict';\n\n/**\n * An enum of index hints to be used in mysql for querying with index hints\n *\n * @property USE\n * @property FORCE\n * @property IGNORE\n */\nconst IndexHints = module.exports = { // eslint-disable-line\n  USE: 'USE',\n  FORCE: 'FORCE',\n  IGNORE: 'IGNORE'\n};\n"],"mappings":";AASA,MAAM,aAAa,OAAO,UAAU;AAAA,EAClC,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/associations/index.js":{"lineLengths":[13,38,48,42,44,57,29,37,41,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/associations/index.js"],"sourcesContent":["'use strict';\n\nconst Association = require('./base');\n\nAssociation.BelongsTo = require('./belongs-to');\nAssociation.HasOne = require('./has-one');\nAssociation.HasMany = require('./has-many');\nAssociation.BelongsToMany = require('./belongs-to-many');\n\nmodule.exports = Association;\nmodule.exports.default = Association;\nmodule.exports.Association = Association;\n"],"mappings":";AAEA,MAAM,cAAc,QAAQ;AAE5B,YAAY,YAAY,QAAQ;AAChC,YAAY,SAAS,QAAQ;AAC7B,YAAY,UAAU,QAAQ;AAC9B,YAAY,gBAAgB,QAAQ;AAEpC,OAAO,UAAU;AACjB,OAAO,QAAQ,UAAU;AACzB,OAAO,QAAQ,cAAc;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query-interface.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,28,37,46,49,48,22,42,31,41,3,43,28,75,52,3,41,28,64,52,3,39,28,57,52,3,37,28,55,52,3,33,28,57,42,5,55,90,3,33,58,16,44,7,73,76,96,3,34,148,3,60,17,42,40,51,47,39,9,9,5,16,66,5,102,66,76,49,18,59,9,5,111,79,52,3,39,42,64,71,45,3,51,41,61,103,7,5,3,32,28,36,57,80,41,42,34,75,7,66,99,7,5,57,3,45,28,68,52,3,32,58,16,33,7,94,74,33,3,43,22,31,38,23,65,38,56,5,62,32,38,5,91,88,9,60,28,144,7,18,17,65,144,7,14,5,3,51,39,108,5,28,61,106,3,57,106,3,41,18,63,63,12,36,5,56,3,39,67,3,33,61,3,76,28,55,65,8,30,22,7,72,46,3,62,69,34,25,5,80,3,73,28,103,24,31,31,22,32,37,6,56,50,5,128,52,3,64,37,29,27,34,5,24,31,5,39,32,84,118,3,39,73,121,3,54,34,16,5,91,184,22,42,34,65,7,140,63,7,18,3,61,69,34,7,101,53,3,64,28,96,52,3,43,26,73,5,24,80,5,39,75,52,3,60,84,125,3,62,111,3,54,39,77,124,37,32,61,17,37,19,3,71,42,32,37,58,54,42,85,113,122,54,78,24,41,16,9,76,23,40,16,9,7,109,41,7,54,5,103,52,3,61,42,37,134,22,3,67,42,77,125,37,32,52,3,73,39,40,49,101,68,93,41,26,52,3,59,24,98,42,72,66,33,22,40,65,167,51,9,7,5,37,55,21,17,36,32,40,41,5,32,52,3,54,39,51,36,103,5,39,37,114,3,46,102,107,3,106,39,137,37,26,52,3,106,39,137,37,26,52,3,65,39,35,16,18,29,7,75,39,60,5,58,25,18,5,57,40,20,5,38,87,28,34,7,5,88,28,36,7,5,45,57,32,7,5,18,3,125,143,28,14,54,5,3,54,72,28,14,54,5,3,75,93,28,14,54,5,3,97,124,28,14,54,5,3,53,71,28,14,54,5,3,75,93,28,14,54,5,3,17,3,56,64,101,5,39,13,5,109,67,32,7,13,13,52,3,48,64,83,5,109,78,71,52,3,48,109,67,14,54,5,3,49,64,84,5,29,13,5,58,53,32,32,7,72,55,36,25,3,51,64,86,5,58,53,32,32,7,78,74,55,38,25,3,1,40,43,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/abstract/query-interface.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\nconst Utils = require('../../utils');\nconst DataTypes = require('../../data-types');\nconst Transaction = require('../../transaction');\nconst QueryTypes = require('../../query-types');\n\n/**\n * The interface that Sequelize uses to talk to all databases\n */\nclass QueryInterface {\n  constructor(sequelize, queryGenerator) {\n    this.sequelize = sequelize;\n    this.queryGenerator = queryGenerator;\n  }\n\n  /**\n   * Create a database\n   *\n   * @param {string} database  Database name to create\n   * @param {object} [options] Query options\n   * @param {string} [options.charset] Database default character set, MYSQL only\n   * @param {string} [options.collate] Database default collation\n   * @param {string} [options.encoding] Database default character set, PostgreSQL only\n   * @param {string} [options.ctype] Database character classification, PostgreSQL only\n   * @param {string} [options.template] The name of the template from which to create the new database, PostgreSQL only\n   *\n   * @returns {Promise}\n   */\n  async createDatabase(database, options) {\n    options = options || {};\n    const sql = this.queryGenerator.createDatabaseQuery(database, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop a database\n   *\n   * @param {string} database  Database name to drop\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async dropDatabase(database, options) {\n    options = options || {};\n    const sql = this.queryGenerator.dropDatabaseQuery(database);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Create a schema\n   *\n   * @param {string} schema    Schema name to create\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async createSchema(schema, options) {\n    options = options || {};\n    const sql = this.queryGenerator.createSchema(schema);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop a schema\n   *\n   * @param {string} schema    Schema name to drop\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async dropSchema(schema, options) {\n    options = options || {};\n    const sql = this.queryGenerator.dropSchema(schema);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop all schemas\n   *\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async dropAllSchemas(options) {\n    options = options || {};\n\n    if (!this.queryGenerator._dialect.supports.schemas) {\n      return this.sequelize.drop(options);\n    }\n    const schemas = await this.showAllSchemas(options);\n    return Promise.all(schemas.map(schemaName => this.dropSchema(schemaName, options)));\n  }\n\n  /**\n   * Show all schemas\n   *\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise<Array>}\n   */\n  async showAllSchemas(options) {\n    options = {\n      ...options,\n      raw: true,\n      type: this.sequelize.QueryTypes.SELECT\n    };\n\n    const showSchemasSql = this.queryGenerator.showSchemasQuery(options);\n\n    const schemaNames = await this.sequelize.query(showSchemasSql, options);\n\n    return _.flatten(schemaNames.map(value => value.schema_name ? value.schema_name : value));\n  }\n\n  /**\n   * Return database version\n   *\n   * @param {object}    [options]      Query options\n   * @param {QueryType} [options.type] Query type\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async databaseVersion(options) {\n    return await this.sequelize.query(\n      this.queryGenerator.versionQuery(),\n      { ...options, type: QueryTypes.VERSION }\n    );\n  }\n\n  /**\n   * Create a table with given set of attributes\n   *\n   * ```js\n   * queryInterface.createTable(\n   *   'nameOfTheNewTable',\n   *   {\n   *     id: {\n   *       type: Sequelize.INTEGER,\n   *       primaryKey: true,\n   *       autoIncrement: true\n   *     },\n   *     createdAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     updatedAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     attr1: Sequelize.STRING,\n   *     attr2: Sequelize.INTEGER,\n   *     attr3: {\n   *       type: Sequelize.BOOLEAN,\n   *       defaultValue: false,\n   *       allowNull: false\n   *     },\n   *     //foreign key usage\n   *     attr4: {\n   *       type: Sequelize.INTEGER,\n   *       references: {\n   *         model: 'another_table_name',\n   *         key: 'id'\n   *       },\n   *       onUpdate: 'cascade',\n   *       onDelete: 'cascade'\n   *     }\n   *   },\n   *   {\n   *     engine: 'MYISAM',    // default: 'InnoDB'\n   *     charset: 'latin1',   // default: null\n   *     schema: 'public',    // default: public, PostgreSQL only.\n   *     comment: 'my table', // comment for table\n   *     collate: 'latin1_danish_ci' // collation, MYSQL only\n   *   }\n   * )\n   * ```\n   *\n   * @param {string} tableName  Name of table to create\n   * @param {object} attributes Object representing a list of table attributes to create\n   * @param {object} [options] create table and query options\n   * @param {Model}  [model] model class\n   *\n   * @returns {Promise}\n   */\n  async createTable(tableName, attributes, options, model) {\n    let sql = '';\n\n    options = { ...options };\n\n    if (options && options.uniqueKeys) {\n      _.forOwn(options.uniqueKeys, uniqueKey => {\n        if (uniqueKey.customIndex === undefined) {\n          uniqueKey.customIndex = true;\n        }\n      });\n    }\n\n    if (model) {\n      options.uniqueKeys = options.uniqueKeys || model.uniqueKeys;\n    }\n\n    attributes = _.mapValues(\n      attributes,\n      attribute => this.sequelize.normalizeAttribute(attribute)\n    );\n\n    // Postgres requires special SQL commands for ENUM/ENUM[]\n    await this.ensureEnums(tableName, attributes, options, model);\n\n    if (\n      !tableName.schema &&\n      (options.schema || !!model && model._schema)\n    ) {\n      tableName = this.queryGenerator.addSchema({\n        tableName,\n        _schema: !!model && model._schema || options.schema\n      });\n    }\n\n    attributes = this.queryGenerator.attributesToSQL(attributes, { table: tableName, context: 'createTable' });\n    sql = this.queryGenerator.createTableQuery(tableName, attributes, options);\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop a table from database\n   *\n   * @param {string} tableName Table name to drop\n   * @param {object} options   Query options\n   *\n   * @returns {Promise}\n   */\n  async dropTable(tableName, options) {\n    // if we're forcing we should be cascading unless explicitly stated otherwise\n    options = { ...options };\n    options.cascade = options.cascade || options.force || false;\n\n    const sql = this.queryGenerator.dropTableQuery(tableName, options);\n\n    await this.sequelize.query(sql, options);\n  }\n\n  async _dropAllTables(tableNames, skip, options) {\n    for (const tableName of tableNames) {\n      // if tableName is not in the Array of tables names then don't drop it\n      if (!skip.includes(tableName.tableName || tableName)) {\n        await this.dropTable(tableName, { ...options, cascade: true } );\n      }\n    }\n  }\n\n  /**\n   * Drop all tables from database\n   *\n   * @param {object} [options] query options\n   * @param {Array}  [options.skip] List of table to skip\n   *\n   * @returns {Promise}\n   */\n  async dropAllTables(options) {\n    options = options || {};\n    const skip = options.skip || [];\n\n    const tableNames = await this.showAllTables(options);\n    const foreignKeys = await this.getForeignKeysForTables(tableNames, options);\n\n    for (const tableName of tableNames) {\n      let normalizedTableName = tableName;\n      if (_.isObject(tableName)) {\n        normalizedTableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      for (const foreignKey of foreignKeys[normalizedTableName]) {\n        await this.sequelize.query(this.queryGenerator.dropForeignKeyQuery(tableName, foreignKey));\n      }\n    }\n    await this._dropAllTables(tableNames, skip, options);\n  }\n\n  /**\n   * Rename a table\n   *\n   * @param {string} before    Current name of table\n   * @param {string} after     New name from table\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async renameTable(before, after, options) {\n    options = options || {};\n    const sql = this.queryGenerator.renameTableQuery(before, after);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Get all tables in current database\n   *\n   * @param {object}    [options] Query options\n   * @param {boolean}   [options.raw=true] Run query in raw mode\n   * @param {QueryType} [options.type=QueryType.SHOWTABLE] query type\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async showAllTables(options) {\n    options = {\n      ...options,\n      raw: true,\n      type: QueryTypes.SHOWTABLES\n    };\n\n    const showTablesSql = this.queryGenerator.showTablesQuery(this.sequelize.config.database);\n    const tableNames = await this.sequelize.query(showTablesSql, options);\n    return _.flatten(tableNames);\n  }\n\n  /**\n   * Describe a table structure\n   *\n   * This method returns an array of hashes containing information about all attributes in the table.\n   *\n   * ```js\n   * {\n   *    name: {\n   *      type:         'VARCHAR(255)', // this will be 'CHARACTER VARYING' for pg!\n   *      allowNull:    true,\n   *      defaultValue: null\n   *    },\n   *    isBetaMember: {\n   *      type:         'TINYINT(1)', // this will be 'BOOLEAN' for pg!\n   *      allowNull:    false,\n   *      defaultValue: false\n   *    }\n   * }\n   * ```\n   *\n   * @param {string} tableName table name\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise<object>}\n   */\n  async describeTable(tableName, options) {\n    let schema = null;\n    let schemaDelimiter = null;\n\n    if (typeof options === 'string') {\n      schema = options;\n    } else if (typeof options === 'object' && options !== null) {\n      schema = options.schema || null;\n      schemaDelimiter = options.schemaDelimiter || null;\n    }\n\n    if (typeof tableName === 'object' && tableName !== null) {\n      schema = tableName.schema;\n      tableName = tableName.tableName;\n    }\n\n    const sql = this.queryGenerator.describeTableQuery(tableName, schema, schemaDelimiter);\n    options = { ...options, type: QueryTypes.DESCRIBE };\n\n    try {\n      const data = await this.sequelize.query(sql, options);\n      /*\n       * If no data is returned from the query, then the table name may be wrong.\n       * Query generators that use information_schema for retrieving table info will just return an empty result set,\n       * it will not throw an error like built-ins do (e.g. DESCRIBE on MySql).\n       */\n      if (_.isEmpty(data)) {\n        throw new Error(`No description found for \"${tableName}\" table. Check the table name and schema; remember, they _are_ case sensitive.`);\n      }\n\n      return data;\n    } catch (e) {\n      if (e.original && e.original.code === 'ER_NO_SUCH_TABLE') {\n        throw new Error(`No description found for \"${tableName}\" table. Check the table name and schema; remember, they _are_ case sensitive.`);\n      }\n\n      throw e;\n    }\n  }\n\n  /**\n   * Add a new column to a table\n   *\n   * ```js\n   * queryInterface.addColumn('tableA', 'columnC', Sequelize.STRING, {\n   *    after: 'columnB' // after option is only supported by MySQL\n   * });\n   * ```\n   *\n   * @param {string} table     Table to add column to\n   * @param {string} key       Column name\n   * @param {object} attribute Attribute definition\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async addColumn(table, key, attribute, options) {\n    if (!table || !key || !attribute) {\n      throw new Error('addColumn takes at least 3 arguments (table, attribute name, attribute definition)');\n    }\n\n    options = options || {};\n    attribute = this.sequelize.normalizeAttribute(attribute);\n    return await this.sequelize.query(this.queryGenerator.addColumnQuery(table, key, attribute), options);\n  }\n\n  /**\n   * Remove a column from a table\n   *\n   * @param {string} tableName      Table to remove column from\n   * @param {string} attributeName  Column name to remove\n   * @param {object} [options]      Query options\n   */\n  async removeColumn(tableName, attributeName, options) {\n    return this.sequelize.query(this.queryGenerator.removeColumnQuery(tableName, attributeName), options);\n  }\n\n  normalizeAttribute(dataTypeOrOptions) {\n    let attribute;\n    if (Object.values(DataTypes).includes(dataTypeOrOptions)) {\n      attribute = { type: dataTypeOrOptions, allowNull: true };\n    } else {\n      attribute = dataTypeOrOptions;\n    }\n\n    return this.sequelize.normalizeAttribute(attribute);\n  }\n\n  /**\n   * Split a list of identifiers by \".\" and quote each part\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    return this.queryGenerator.quoteIdentifier(identifier, force);\n  }\n\n  /**\n   * Split a list of identifiers by \".\" and quote each part.\n   *\n   * @param {string} identifiers \n   * \n   * @returns {string}\n   */\n  quoteIdentifiers(identifiers) {\n    return this.queryGenerator.quoteIdentifiers(identifiers);\n  }\n\n  /**\n   * Change a column definition\n   *\n   * @param {string} tableName          Table name to change from\n   * @param {string} attributeName      Column name\n   * @param {object} dataTypeOrOptions  Attribute definition for new column\n   * @param {object} [options]          Query options\n   */\n  async changeColumn(tableName, attributeName, dataTypeOrOptions, options) {\n    options = options || {};\n\n    const query = this.queryGenerator.attributesToSQL({\n      [attributeName]: this.normalizeAttribute(dataTypeOrOptions)\n    }, {\n      context: 'changeColumn',\n      table: tableName\n    });\n    const sql = this.queryGenerator.changeColumnQuery(tableName, query);\n\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Rejects if the table doesn't have the specified column, otherwise returns the column description.\n   *\n   * @param {string} tableName\n   * @param {string} columnName\n   * @param {object} options\n   * @private\n   */\n  async assertTableHasColumn(tableName, columnName, options) {\n    const description = await this.describeTable(tableName, options);\n    if (description[columnName]) {\n      return description;\n    }\n    throw new Error(`Table ${tableName} doesn't have the column ${columnName}`);\n  }\n\n  /**\n   * Rename a column\n   *\n   * @param {string} tableName        Table name whose column to rename\n   * @param {string} attrNameBefore   Current column name\n   * @param {string} attrNameAfter    New column name\n   * @param {object} [options]        Query option\n   *\n   * @returns {Promise}\n   */\n  async renameColumn(tableName, attrNameBefore, attrNameAfter, options) {\n    options = options || {};\n    const data = (await this.assertTableHasColumn(tableName, attrNameBefore, options))[attrNameBefore];\n\n    const _options = {};\n\n    _options[attrNameAfter] = {\n      attribute: attrNameAfter,\n      type: data.type,\n      allowNull: data.allowNull,\n      defaultValue: data.defaultValue\n    };\n\n    // fix: a not-null column cannot have null as default value\n    if (data.defaultValue === null && !data.allowNull) {\n      delete _options[attrNameAfter].defaultValue;\n    }\n\n    const sql = this.queryGenerator.renameColumnQuery(\n      tableName,\n      attrNameBefore,\n      this.queryGenerator.attributesToSQL(_options)\n    );\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Add an index to a column\n   *\n   * @param {string|object}  tableName Table name to add index on, can be a object with schema\n   * @param {Array}   [attributes]     Use options.fields instead, List of attributes to add index on\n   * @param {object}  options          indexes options\n   * @param {Array}   options.fields   List of attributes to add index on\n   * @param {boolean} [options.concurrently] Pass CONCURRENT so other operations run while the index is created\n   * @param {boolean} [options.unique] Create a unique index\n   * @param {string}  [options.using]  Useful for GIN indexes\n   * @param {string}  [options.operator] Index operator\n   * @param {string}  [options.type]   Type of index, available options are UNIQUE|FULLTEXT|SPATIAL\n   * @param {string}  [options.name]   Name of the index. Default is <table>_<attr1>_<attr2>\n   * @param {object}  [options.where]  Where condition on index, for partial indexes\n   * @param {string}  [rawTablename]   table name, this is just for backward compatibiity\n   *\n   * @returns {Promise}\n   */\n  async addIndex(tableName, attributes, options, rawTablename) {\n    // Support for passing tableName, attributes, options or tableName, options (with a fields param which is the attributes)\n    if (!Array.isArray(attributes)) {\n      rawTablename = options;\n      options = attributes;\n      attributes = options.fields;\n    }\n\n    if (!rawTablename) {\n      // Map for backwards compat\n      rawTablename = tableName;\n    }\n\n    options = Utils.cloneDeep(options);\n    options.fields = attributes;\n    const sql = this.queryGenerator.addIndexQuery(tableName, options, rawTablename);\n    return await this.sequelize.query(sql, { ...options, supportsSearchPath: false });\n  }\n\n  /**\n   * Show indexes on a table\n   *\n   * @param {string} tableName table name\n   * @param {object} [options]   Query options\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async showIndex(tableName, options) {\n    const sql = this.queryGenerator.showIndexesQuery(tableName, options);\n    return await this.sequelize.query(sql, { ...options, type: QueryTypes.SHOWINDEXES });\n  }\n\n\n  /**\n   * Returns all foreign key constraints of requested tables\n   *\n   * @param {string[]} tableNames table names\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async getForeignKeysForTables(tableNames, options) {\n    if (tableNames.length === 0) {\n      return {};\n    }\n\n    options = { ...options, type: QueryTypes.FOREIGNKEYS };\n\n    const results = await Promise.all(tableNames.map(tableName =>\n      this.sequelize.query(this.queryGenerator.getForeignKeysQuery(tableName, this.sequelize.config.database), options)));\n\n    const result = {};\n\n    tableNames.forEach((tableName, i) => {\n      if (_.isObject(tableName)) {\n        tableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      result[tableName] = Array.isArray(results[i])\n        ? results[i].map(r => r.constraint_name)\n        : [results[i] && results[i].constraint_name];\n\n      result[tableName] = result[tableName].filter(_.identity);\n    });\n\n    return result;\n  }\n\n  /**\n   * Get foreign key references details for the table\n   *\n   * Those details contains constraintSchema, constraintName, constraintCatalog\n   * tableCatalog, tableSchema, tableName, columnName,\n   * referencedTableCatalog, referencedTableCatalog, referencedTableSchema, referencedTableName, referencedColumnName.\n   * Remind: constraint informations won't return if it's sqlite.\n   *\n   * @param {string} tableName table name\n   * @param {object} [options]  Query options\n   */\n  async getForeignKeyReferencesForTable(tableName, options) {\n    const queryOptions = {\n      ...options,\n      type: QueryTypes.FOREIGNKEYS\n    };\n    const query = this.queryGenerator.getForeignKeysQuery(tableName, this.sequelize.config.database);\n    return this.sequelize.query(query, queryOptions);\n  }\n\n  /**\n   * Remove an already existing index from a table\n   *\n   * @param {string} tableName                    Table name to drop index from\n   * @param {string|string[]} indexNameOrAttributes  Index name or list of attributes that in the index\n   * @param {object} [options]                    Query options\n   * @param {boolean} [options.concurrently]      Pass CONCURRENTLY so other operations run while the index is created\n   *\n   * @returns {Promise}\n   */\n  async removeIndex(tableName, indexNameOrAttributes, options) {\n    options = options || {};\n    const sql = this.queryGenerator.removeIndexQuery(tableName, indexNameOrAttributes, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Add a constraint to a table\n   *\n   * Available constraints:\n   * - UNIQUE\n   * - DEFAULT (MSSQL only)\n   * - CHECK (MySQL - Ignored by the database engine )\n   * - FOREIGN KEY\n   * - PRIMARY KEY\n   *\n   * @example <caption>UNIQUE</caption>\n   * queryInterface.addConstraint('Users', {\n   *   fields: ['email'],\n   *   type: 'unique',\n   *   name: 'custom_unique_constraint_name'\n   * });\n   *\n   * @example <caption>CHECK</caption>\n   * queryInterface.addConstraint('Users', {\n   *   fields: ['roles'],\n   *   type: 'check',\n   *   where: {\n   *      roles: ['user', 'admin', 'moderator', 'guest']\n   *   }\n   * });\n   *\n   * @example <caption>Default - MSSQL only</caption>\n   * queryInterface.addConstraint('Users', {\n   *    fields: ['roles'],\n   *    type: 'default',\n   *    defaultValue: 'guest'\n   * });\n   *\n   * @example <caption>Primary Key</caption>\n   * queryInterface.addConstraint('Users', {\n   *    fields: ['username'],\n   *    type: 'primary key',\n   *    name: 'custom_primary_constraint_name'\n   * });\n   *\n   * @example <caption>Foreign Key</caption>\n   * queryInterface.addConstraint('Posts', {\n   *   fields: ['username'],\n   *   type: 'foreign key',\n   *   name: 'custom_fkey_constraint_name',\n   *   references: { //Required field\n   *     table: 'target_table_name',\n   *     field: 'target_column_name'\n   *   },\n   *   onDelete: 'cascade',\n   *   onUpdate: 'cascade'\n   * });\n   *\n   * @example <caption>Composite Foreign Key</caption>\n   * queryInterface.addConstraint('TableName', {\n   *   fields: ['source_column_name', 'other_source_column_name'],\n   *   type: 'foreign key',\n   *   name: 'custom_fkey_constraint_name',\n   *   references: { //Required field\n   *     table: 'target_table_name',\n   *     fields: ['target_column_name', 'other_target_column_name']\n   *   },\n   *   onDelete: 'cascade',\n   *   onUpdate: 'cascade'\n   * });\n   *\n   * @param {string} tableName                   Table name where you want to add a constraint\n   * @param {object} options                     An object to define the constraint name, type etc\n   * @param {string} options.type                Type of constraint. One of the values in available constraints(case insensitive)\n   * @param {Array}  options.fields              Array of column names to apply the constraint over\n   * @param {string} [options.name]              Name of the constraint. If not specified, sequelize automatically creates a named constraint based on constraint type, table & column names\n   * @param {string} [options.defaultValue]      The value for the default constraint\n   * @param {object} [options.where]             Where clause/expression for the CHECK constraint\n   * @param {object} [options.references]        Object specifying target table, column name to create foreign key constraint\n   * @param {string} [options.references.table]  Target table name\n   * @param {string} [options.references.field]  Target column name\n   * @param {string} [options.references.fields] Target column names for a composite primary key. Must match the order of fields in options.fields.\n   * @param {string} [options.deferrable]        Sets the constraint to be deferred or immediately checked. See Sequelize.Deferrable. PostgreSQL Only\n   *\n   * @returns {Promise}\n   */\n  async addConstraint(tableName, options) {\n    if (!options.fields) {\n      throw new Error('Fields must be specified through options.fields');\n    }\n\n    if (!options.type) {\n      throw new Error('Constraint type must be specified through options.type');\n    }\n\n    options = Utils.cloneDeep(options);\n\n    const sql = this.queryGenerator.addConstraintQuery(tableName, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  async showConstraint(tableName, constraintName, options) {\n    const sql = this.queryGenerator.showConstraintsQuery(tableName, constraintName);\n    return await this.sequelize.query(sql, { ...options, type: QueryTypes.SHOWCONSTRAINTS });\n  }\n\n  /**\n   * Remove a constraint from a table\n   *\n   * @param {string} tableName       Table name to drop constraint from\n   * @param {string} constraintName  Constraint name\n   * @param {object} options         Query options\n   */\n  async removeConstraint(tableName, constraintName, options) {\n    return this.sequelize.query(this.queryGenerator.removeConstraintQuery(tableName, constraintName), options);\n  }\n\n  async insert(instance, tableName, values, options) {\n    options = Utils.cloneDeep(options);\n    options.hasTrigger = instance && instance.constructor.options.hasTrigger;\n    const sql = this.queryGenerator.insertQuery(tableName, values, instance && instance.constructor.rawAttributes, options);\n\n    options.type = QueryTypes.INSERT;\n    options.instance = instance;\n\n    const results = await this.sequelize.query(sql, options);\n    if (instance) results[0].isNewRecord = false;\n\n    return results;\n  }\n\n  /**\n   * Upsert\n   *\n   * @param {string} tableName    table to upsert on\n   * @param {object} insertValues values to be inserted, mapped to field name\n   * @param {object} updateValues values to be updated, mapped to field name\n   * @param {object} where        where conditions, which can be used for UPDATE part when INSERT fails\n   * @param {object} options      query options\n   *\n   * @returns {Promise<boolean,?number>} Resolves an array with <created, primaryKey>\n   */\n  async upsert(tableName, insertValues, updateValues, where, options) {\n    options = { ...options };\n\n    const model = options.model;\n\n    options.type = QueryTypes.UPSERT;\n    options.updateOnDuplicate = Object.keys(updateValues);\n    options.upsertKeys = options.conflictFields || [];\n\n    if (options.upsertKeys.length === 0) {\n      const primaryKeys = Object.values(model.primaryKeys).map(item => item.field);\n      const uniqueKeys = Object.values(model.uniqueKeys).filter(c => c.fields.length > 0).map(c => c.fields);\n      const indexKeys = Object.values(model._indexes).filter(c => c.unique && c.fields.length > 0).map(c => c.fields);\n      // For fields in updateValues, try to find a constraint or unique index\n      // that includes given field. Only first matching upsert key is used.\n      for (const field of options.updateOnDuplicate) {\n        const uniqueKey = uniqueKeys.find(fields => fields.includes(field));\n        if (uniqueKey) {\n          options.upsertKeys = uniqueKey;\n          break;\n        }\n\n        const indexKey = indexKeys.find(fields => fields.includes(field));\n        if (indexKey) {\n          options.upsertKeys = indexKey;\n          break;\n        }\n      }\n\n      // Always use PK, if no constraint available OR update data contains PK\n      if (\n        options.upsertKeys.length === 0\n        || _.intersection(options.updateOnDuplicate, primaryKeys).length\n      ) {\n        options.upsertKeys = primaryKeys;\n      }\n\n      options.upsertKeys = _.uniq(options.upsertKeys);\n    }\n\n    const sql = this.queryGenerator.insertQuery(tableName, insertValues, model.rawAttributes, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Insert multiple records into a table\n   *\n   * @example\n   * queryInterface.bulkInsert('roles', [{\n   *    label: 'user',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }, {\n   *    label: 'admin',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }]);\n   *\n   * @param {string} tableName   Table name to insert record to\n   * @param {Array}  records     List of records to insert\n   * @param {object} options     Various options, please see Model.bulkCreate options\n   * @param {object} attributes  Various attributes mapped by field name\n   *\n   * @returns {Promise}\n   */\n  async bulkInsert(tableName, records, options, attributes) {\n    options = { ...options };\n    options.type = QueryTypes.INSERT;\n\n    const results = await this.sequelize.query(\n      this.queryGenerator.bulkInsertQuery(tableName, records, options, attributes),\n      options\n    );\n\n    return results[0];\n  }\n\n  async update(instance, tableName, values, identifier, options) {\n    options = { ...options };\n    options.hasTrigger = instance && instance.constructor.options.hasTrigger;\n\n    const sql = this.queryGenerator.updateQuery(tableName, values, identifier, options, instance.constructor.rawAttributes);\n\n    options.type = QueryTypes.UPDATE;\n\n    options.instance = instance;\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Update multiple records of a table\n   *\n   * @example\n   * queryInterface.bulkUpdate('roles', {\n   *     label: 'admin',\n   *   }, {\n   *     userType: 3,\n   *   },\n   * );\n   *\n   * @param {string} tableName     Table name to update\n   * @param {object} values        Values to be inserted, mapped to field name\n   * @param {object} identifier    A hash with conditions OR an ID as integer OR a string with conditions\n   * @param {object} [options]     Various options, please see Model.bulkCreate options\n   * @param {object} [attributes]  Attributes on return objects if supported by SQL dialect\n   *\n   * @returns {Promise}\n   */\n  async bulkUpdate(tableName, values, identifier, options, attributes) {\n    options = Utils.cloneDeep(options);\n    if (typeof identifier === 'object') identifier = Utils.cloneDeep(identifier);\n\n    const sql = this.queryGenerator.updateQuery(tableName, values, identifier, options, attributes);\n    const table = _.isObject(tableName) ? tableName : { tableName };\n    const model = _.find(this.sequelize.modelManager.models, { tableName: table.tableName });\n\n    options.type = QueryTypes.BULKUPDATE;\n    options.model = model;\n    return await this.sequelize.query(sql, options);\n  }\n\n  async delete(instance, tableName, identifier, options) {\n    const cascades = [];\n    const sql = this.queryGenerator.deleteQuery(tableName, identifier, {}, instance.constructor);\n\n    options = { ...options };\n\n    // Check for a restrict field\n    if (!!instance.constructor && !!instance.constructor.associations) {\n      const keys = Object.keys(instance.constructor.associations);\n      const length = keys.length;\n      let association;\n\n      for (let i = 0; i < length; i++) {\n        association = instance.constructor.associations[keys[i]];\n        if (association.options && association.options.onDelete &&\n          association.options.onDelete.toLowerCase() === 'cascade' &&\n          association.options.useHooks === true) {\n          cascades.push(association.accessors.get);\n        }\n      }\n    }\n\n    for (const cascade of cascades) {\n      let instances = await instance[cascade](options);\n      // Check for hasOne relationship with non-existing associate (\"has zero\")\n      if (!instances) continue;\n      if (!Array.isArray(instances)) instances = [instances];\n      for (const _instance of instances) await _instance.destroy(options);\n    }\n    options.instance = instance;\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Delete multiple records from a table\n   *\n   * @param {string}  tableName            table name from where to delete records\n   * @param {object}  where                where conditions to find records to delete\n   * @param {object}  [options]            options\n   * @param {boolean} [options.truncate]   Use truncate table command\n   * @param {boolean} [options.cascade=false]         Only used in conjunction with TRUNCATE. Truncates  all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.\n   * @param {boolean} [options.restartIdentity=false] Only used in conjunction with TRUNCATE. Automatically restart sequences owned by columns of the truncated table.\n   * @param {Model}   [model]              Model\n   *\n   * @returns {Promise}\n   */\n  async bulkDelete(tableName, where, options, model) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, { limit: null });\n\n    if (options.truncate === true) {\n      return this.sequelize.query(\n        this.queryGenerator.truncateTableQuery(tableName, options),\n        options\n      );\n    }\n\n    if (typeof identifier === 'object') where = Utils.cloneDeep(where);\n\n    return await this.sequelize.query(\n      this.queryGenerator.deleteQuery(tableName, where, options, model),\n      options\n    );\n  }\n\n  async select(model, tableName, optionsArg) {\n    const options = { ...optionsArg, type: QueryTypes.SELECT, model };\n\n    return await this.sequelize.query(\n      this.queryGenerator.selectQuery(tableName, options, model),\n      options\n    );\n  }\n\n  async increment(model, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.queryGenerator.arithmeticQuery('+', tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async decrement(model, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.queryGenerator.arithmeticQuery('-', tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async rawSelect(tableName, options, attributeSelector, Model) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, {\n      raw: true,\n      plain: true,\n      type: QueryTypes.SELECT\n    });\n\n    const sql = this.queryGenerator.selectQuery(tableName, options, Model);\n\n    if (attributeSelector === undefined) {\n      throw new Error('Please pass an attribute selector!');\n    }\n\n    const data = await this.sequelize.query(sql, options);\n    if (!options.plain) {\n      return data;\n    }\n\n    const result = data ? data[attributeSelector] : null;\n\n    if (!options || !options.dataType) {\n      return result;\n    }\n\n    const dataType = options.dataType;\n\n    if (dataType instanceof DataTypes.DECIMAL || dataType instanceof DataTypes.FLOAT) {\n      if (result !== null) {\n        return parseFloat(result);\n      }\n    }\n    if (dataType instanceof DataTypes.INTEGER || dataType instanceof DataTypes.BIGINT) {\n      if (result !== null) {\n        return parseInt(result, 10);\n      }\n    }\n    if (dataType instanceof DataTypes.DATE) {\n      if (result !== null && !(result instanceof Date)) {\n        return new Date(result);\n      }\n    }\n    return result;\n  }\n\n  async createTrigger(\n    tableName,\n    triggerName,\n    timingType,\n    fireOnArray,\n    functionName,\n    functionParams,\n    optionsArray,\n    options\n  ) {\n    const sql = this.queryGenerator.createTrigger(tableName, triggerName, timingType, fireOnArray, functionName, functionParams, optionsArray);\n    options = options || {};\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  async dropTrigger(tableName, triggerName, options) {\n    const sql = this.queryGenerator.dropTrigger(tableName, triggerName);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  async renameTrigger(tableName, oldTriggerName, newTriggerName, options) {\n    const sql = this.queryGenerator.renameTrigger(tableName, oldTriggerName, newTriggerName);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Create an SQL function\n   *\n   * @example\n   * queryInterface.createFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'integer', name: 'param', direction: 'IN'}\n   *   ],\n   *   'integer',\n   *   'plpgsql',\n   *   'RETURN param + 1;',\n   *   [\n   *     'IMMUTABLE',\n   *     'LEAKPROOF'\n   *   ],\n   *   {\n   *    variables:\n   *      [\n   *        {type: 'integer', name: 'myVar', default: 100}\n   *      ],\n   *      force: true\n   *   };\n   * );\n   *\n   * @param {string}  functionName  Name of SQL function to create\n   * @param {Array}   params        List of parameters declared for SQL function\n   * @param {string}  returnType    SQL type of function returned value\n   * @param {string}  language      The name of the language that the function is implemented in\n   * @param {string}  body          Source code of function\n   * @param {Array}   optionsArray  Extra-options for creation\n   * @param {object}  [options]     query options\n   * @param {boolean} options.force If force is true, any existing functions with the same parameters will be replaced. For postgres, this means using `CREATE OR REPLACE FUNCTION` instead of `CREATE FUNCTION`. Default is false\n   * @param {Array<object>}   options.variables List of declared variables. Each variable should be an object with string fields `type` and `name`, and optionally having a `default` field as well.\n   *\n   * @returns {Promise}\n   */\n  async createFunction(functionName, params, returnType, language, body, optionsArray, options) {\n    const sql = this.queryGenerator.createFunction(functionName, params, returnType, language, body, optionsArray, options);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Drop an SQL function\n   *\n   * @example\n   * queryInterface.dropFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ]\n   * );\n   *\n   * @param {string} functionName Name of SQL function to drop\n   * @param {Array}  params       List of parameters declared for SQL function\n   * @param {object} [options]    query options\n   *\n   * @returns {Promise}\n   */\n  async dropFunction(functionName, params, options) {\n    const sql = this.queryGenerator.dropFunction(functionName, params);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Rename an SQL function\n   *\n   * @example\n   * queryInterface.renameFunction(\n   *   'fooFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ],\n   *   'barFunction'\n   * );\n   *\n   * @param {string} oldFunctionName  Current name of function\n   * @param {Array}  params           List of parameters declared for SQL function\n   * @param {string} newFunctionName  New name of function\n   * @param {object} [options]        query options\n   *\n   * @returns {Promise}\n   */\n  async renameFunction(oldFunctionName, params, newFunctionName, options) {\n    const sql = this.queryGenerator.renameFunction(oldFunctionName, params, newFunctionName);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  // Helper methods useful for querying\n\n  /**\n   * @private\n   */\n  ensureEnums() {\n    // noop by default\n  }\n\n  async setIsolationLevel(transaction, value, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to set isolation level for a transaction without transaction object!');\n    }\n\n    if (transaction.parent || !value) {\n      // Not possible to set a separate isolation level for savepoints\n      return;\n    }\n\n    options = { ...options, transaction: transaction.parent || transaction };\n\n    const sql = this.queryGenerator.setIsolationLevelQuery(value, {\n      parent: transaction.parent\n    });\n\n    if (!sql) return;\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async startTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to start a transaction without transaction object!');\n    }\n\n    options = { ...options, transaction: transaction.parent || transaction };\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.queryGenerator.startTransactionQuery(transaction);\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async deferConstraints(transaction, options) {\n    options = { ...options, transaction: transaction.parent || transaction };\n\n    const sql = this.queryGenerator.deferConstraintsQuery(options);\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  async commitTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to commit a transaction without transaction object!');\n    }\n    if (transaction.parent) {\n      // Savepoints cannot be committed\n      return;\n    }\n\n    options = {\n      ...options,\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false,\n      completesTransaction: true\n    };\n\n    const sql = this.queryGenerator.commitTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'commit';\n\n    return await promise;\n  }\n\n  async rollbackTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to rollback a transaction without transaction object!');\n    }\n\n    options = {\n      ...options,\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false,\n      completesTransaction: true\n    };\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.queryGenerator.rollbackTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'rollback';\n\n    return await promise;\n  }\n}\n\nexports.QueryInterface = QueryInterface;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/index.js":{"lineLengths":[13,28,47,58,33,52,53,62,45,26,12,31,68,46,21,15,7,83,3,1,93,17,25,21,22,12,35,52,24,4,10,17,16,23,4,23,14,4,16,25,25,4,22,12,3,49,38,46,40,40,75,76,31,45,39,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/sqlite/index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').sqlite;\nconst { SQLiteQueryInterface } = require('./query-interface');\n\nclass SqliteDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n\n    this.queryInterface = new SQLiteQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n}\n\nSqliteDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    DEFAULT: false,\n    'DEFAULT VALUES': true,\n    'UNION ALL': false,\n    'RIGHT JOIN': false,\n    inserts: {\n      ignoreDuplicates: ' OR IGNORE',\n      updateOnDuplicate: ' ON CONFLICT DO UPDATE SET',\n      conflictFields: true\n    },\n    index: {\n      using: false,\n      where: true,\n      functionBased: true\n    },\n    transactionOptions: {\n      type: true\n    },\n    constraints: {\n      addConstraint: false,\n      dropConstraint: false\n    },\n    groupedLimit: false,\n    JSON: true\n  }\n);\n\nSqliteDialect.prototype.defaultVersion = '3.8.0'; // minimum supported version\nSqliteDialect.prototype.Query = Query;\nSqliteDialect.prototype.DataTypes = DataTypes;\nSqliteDialect.prototype.name = 'sqlite';\nSqliteDialect.prototype.TICK_CHAR = '`';\nSqliteDialect.prototype.TICK_CHAR_LEFT = SqliteDialect.prototype.TICK_CHAR;\nSqliteDialect.prototype.TICK_CHAR_RIGHT = SqliteDialect.prototype.TICK_CHAR;\n\nmodule.exports = SqliteDialect;\nmodule.exports.SqliteDialect = SqliteDialect;\nmodule.exports.default = SqliteDialect;\n"],"mappings":";AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,kBAAkB,QAAQ;AAChC,MAAM,oBAAoB,QAAQ;AAClC,MAAM,QAAQ,QAAQ;AACtB,MAAM,iBAAiB,QAAQ;AAC/B,MAAM,YAAY,QAAQ,oBAAoB;AAC9C,MAAM,EAAE,yBAAyB,QAAQ;AAEzC,4BAA4B,gBAAgB;AAAA,EAC1C,YAAY,WAAW;AACrB;AACA,SAAK,YAAY;AACjB,SAAK,oBAAoB,IAAI,kBAAkB,MAAM;AACrD,SAAK,iBAAiB,IAAI,eAAe;AAAA,MACvC,UAAU;AAAA,MACV;AAAA;AAGF,SAAK,iBAAiB,IAAI,qBACxB,WACA,KAAK;AAAA;AAAA;AAKX,cAAc,UAAU,WAAW,EAAE,MACnC,EAAE,UAAU,gBAAgB,UAAU,WACtC;AAAA,EACE,SAAS;AAAA,EACT,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,cAAc;AAAA,EACd,SAAS;AAAA,IACP,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,gBAAgB;AAAA;AAAA,EAElB,OAAO;AAAA,IACL,OAAO;AAAA,IACP,OAAO;AAAA,IACP,eAAe;AAAA;AAAA,EAEjB,oBAAoB;AAAA,IAClB,MAAM;AAAA;AAAA,EAER,aAAa;AAAA,IACX,eAAe;AAAA,IACf,gBAAgB;AAAA;AAAA,EAElB,cAAc;AAAA,EACd,MAAM;AAAA;AAIV,cAAc,UAAU,iBAAiB;AACzC,cAAc,UAAU,QAAQ;AAChC,cAAc,UAAU,YAAY;AACpC,cAAc,UAAU,OAAO;AAC/B,cAAc,UAAU,YAAY;AACpC,cAAc,UAAU,iBAAiB,cAAc,UAAU;AACjE,cAAc,UAAU,kBAAkB,cAAc,UAAU;AAElE,OAAO,UAAU;AACjB,OAAO,QAAQ,gBAAgB;AAC/B,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/index.js":{"lineLengths":[13,23,1,38,18,26,21,27,27,23,16,20,21,22,18,26,23,16,4,21,17,21,47,23,15,4,19,16,12,25,29,28,25,4,16,19,24,25,17,19,16,21,20,4,10,18,18,18,24,16,16,25,19,4,21,23,14,30,2,33,49,41,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/abstract/index.js"],"sourcesContent":["'use strict';\n\nclass AbstractDialect {}\n\nAbstractDialect.prototype.supports = {\n  'DEFAULT': true,\n  'DEFAULT VALUES': false,\n  'VALUES ()': false,\n  'LIMIT ON UPDATE': false,\n  'ON DUPLICATE KEY': true,\n  'ORDER NULLS': false,\n  'UNION': true,\n  'UNION ALL': true,\n  'RIGHT JOIN': true,\n\n  /* does the dialect support returning values for inserted/updated fields */\n  returnValues: false,\n\n  /* features specific to autoIncrement values */\n  autoIncrement: {\n    /* does the dialect require modification of insert queries when inserting auto increment fields */\n    identityInsert: false,\n\n    /* does the dialect support inserting default/null values for autoincrement fields */\n    defaultValue: true,\n\n    /* does the dialect support updating autoincrement fields */\n    update: true\n  },\n  /* Do we need to say DEFAULT for bulk insert */\n  bulkDefault: false,\n  schemas: false,\n  transactions: true,\n  settingIsolationLevelDuringTransaction: true,\n  transactionOptions: {\n    type: false\n  },\n  migrations: true,\n  upserts: true,\n  inserts: {\n    ignoreDuplicates: '', /* dialect specific words for INSERT IGNORE or DO NOTHING */\n    updateOnDuplicate: false, /* whether dialect supports ON DUPLICATE KEY UPDATE */\n    onConflictDoNothing: '', /* dialect specific words for ON CONFLICT DO NOTHING */\n    conflictFields: false /* whether the dialect supports specifying conflict fields or not */\n  },\n  constraints: {\n    restrict: true,\n    addConstraint: true,\n    dropConstraint: true,\n    unique: true,\n    default: false,\n    check: true,\n    foreignKey: true,\n    primaryKey: true\n  },\n  index: {\n    collate: true,\n    length: false,\n    parser: false,\n    concurrently: false,\n    type: false,\n    using: true,\n    functionBased: false,\n    operator: false\n  },\n  groupedLimit: true,\n  indexViaAlter: false,\n  JSON: false,\n  deferrableConstraints: false\n};\n\nmodule.exports = AbstractDialect;\nmodule.exports.AbstractDialect = AbstractDialect;\nmodule.exports.default = AbstractDialect;\n"],"mappings":";AAEA,sBAAsB;AAAA;AAEtB,gBAAgB,UAAU,WAAW;AAAA,EACnC,WAAW;AAAA,EACX,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,eAAe;AAAA,EACf,SAAS;AAAA,EACT,aAAa;AAAA,EACb,cAAc;AAAA,EAGd,cAAc;AAAA,EAGd,eAAe;AAAA,IAEb,gBAAgB;AAAA,IAGhB,cAAc;AAAA,IAGd,QAAQ;AAAA;AAAA,EAGV,aAAa;AAAA,EACb,SAAS;AAAA,EACT,cAAc;AAAA,EACd,wCAAwC;AAAA,EACxC,oBAAoB;AAAA,IAClB,MAAM;AAAA;AAAA,EAER,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,SAAS;AAAA,IACP,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,qBAAqB;AAAA,IACrB,gBAAgB;AAAA;AAAA,EAElB,aAAa;AAAA,IACX,UAAU;AAAA,IACV,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,YAAY;AAAA;AAAA,EAEd,OAAO;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,UAAU;AAAA;AAAA,EAEZ,cAAc;AAAA,EACd,eAAe;AAAA,EACf,MAAM;AAAA,EACN,uBAAuB;AAAA;AAGzB,OAAO,UAAU;AACjB,OAAO,QAAQ,kBAAkB;AACjC,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/connection-manager.js":{"lineLengths":[13,25,29,76,49,55,53,48,56,38,59,35,30,54,41,5,26,50,38,3,26,161,43,3,32,34,3,22,24,3,32,28,45,97,55,12,66,5,62,65,80,90,61,64,5,84,71,5,63,131,16,66,53,68,9,7,41,92,5,55,47,5,22,3,40,61,13,26,25,54,47,5,3,1,35,53,43,46,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/sqlite/connection-manager.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst AbstractConnectionManager = require('../abstract/connection-manager');\nconst { logger } = require('../../utils/logger');\nconst debug = logger.debugContext('connection:sqlite');\nconst dataTypes = require('../../data-types').sqlite;\nconst sequelizeErrors = require('../../errors');\nconst parserStore = require('../parserStore')('sqlite');\nconst { promisify } = require('util');\n\nclass ConnectionManager extends AbstractConnectionManager {\n  constructor(dialect, sequelize) {\n    super(dialect, sequelize);\n\n    // We attempt to parse file location from a connection uri\n    // but we shouldn't match sequelize default host.\n    if (this.sequelize.options.host === 'localhost') {\n      delete this.sequelize.options.host;\n    }\n\n    this.connections = {};\n    this.lib = this._loadDialectModule('sqlite3');\n    this.refreshTypeParser(dataTypes);\n  }\n\n  async _onProcessExit() {\n    await Promise.all(\n      Object.getOwnPropertyNames(this.connections)\n        .map(connection => promisify(callback => this.connections[connection].close(callback))())\n    );\n    return super._onProcessExit.call(this);\n  }\n\n  // Expose this as a method so that the parsing may be updated when the user has added additional, custom types\n  _refreshTypeParser(dataType) {\n    parserStore.refresh(dataType);\n  }\n\n  _clearTypeParser() {\n    parserStore.clear();\n  }\n\n  async getConnection(options) {\n    options = options || {};\n    options.uuid = options.uuid || 'default';\n\n    if (!!this.sequelize.options.storage !== null && this.sequelize.options.storage !== undefined) {\n      // Check explicitely for the storage option to not be set since an empty string signals\n      // SQLite will create a temporary disk-based database in that case.\n      options.storage = this.sequelize.options.storage;\n    } else {\n      options.storage = this.sequelize.options.host || ':memory:';\n    }\n\n    options.inMemory = options.storage === ':memory:' ? 1 : 0;\n\n    const dialectOptions = this.sequelize.options.dialectOptions;\n    const defaultReadWriteMode = this.lib.OPEN_READWRITE | this.lib.OPEN_CREATE;\n\n    options.readWriteMode = dialectOptions && dialectOptions.mode || defaultReadWriteMode;\n\n    if (this.connections[options.inMemory || options.uuid]) {\n      return this.connections[options.inMemory || options.uuid];\n    }\n\n    if (!options.inMemory && (options.readWriteMode & this.lib.OPEN_CREATE) !== 0) {\n      // automatic path provision for `options.storage`\n      fs.mkdirSync(path.dirname(options.storage), { recursive: true });\n    }\n\n    const connection = await new Promise((resolve, reject) => {\n      this.connections[options.inMemory || options.uuid] = new this.lib.Database(\n        options.storage,\n        options.readWriteMode,\n        err => {\n          if (err) return reject(new sequelizeErrors.ConnectionError(err));\n          debug(`connection acquired ${options.uuid}`);\n          resolve(this.connections[options.inMemory || options.uuid]);\n        }\n      );\n    });\n\n    if (this.sequelize.config.password) {\n      // Make it possible to define and use password for sqlite encryption plugin like sqlcipher\n      connection.run(`PRAGMA KEY=${this.sequelize.escape(this.sequelize.config.password)}`);\n    }\n    if (this.sequelize.options.foreignKeys !== false) {\n      // Make it possible to define and use foreign key constraints unless\n      // explicitly disallowed. It's still opt-in per relation\n      connection.run('PRAGMA FOREIGN_KEYS=ON');\n    }\n\n    return connection;\n  }\n\n  releaseConnection(connection, force) {\n    if (connection.filename === ':memory:' && force !== true) return;\n\n    if (connection.uuid) {\n      connection.close();\n      debug(`connection released ${connection.uuid}`);\n      delete this.connections[connection.uuid];\n    }\n  }\n}\n\nmodule.exports = ConnectionManager;\nmodule.exports.ConnectionManager = ConnectionManager;\nmodule.exports.default = ConnectionManager;\n"],"mappings":";AAEA,MAAM,KAAK,QAAQ;AACnB,MAAM,OAAO,QAAQ;AACrB,MAAM,4BAA4B,QAAQ;AAC1C,MAAM,EAAE,WAAW,QAAQ;AAC3B,MAAM,QAAQ,OAAO,aAAa;AAClC,MAAM,YAAY,QAAQ,oBAAoB;AAC9C,MAAM,kBAAkB,QAAQ;AAChC,MAAM,cAAc,QAAQ,kBAAkB;AAC9C,MAAM,EAAE,cAAc,QAAQ;AAE9B,gCAAgC,0BAA0B;AAAA,EACxD,YAAY,SAAS,WAAW;AAC9B,UAAM,SAAS;AAIf,QAAI,KAAK,UAAU,QAAQ,SAAS,aAAa;AAC/C,aAAO,KAAK,UAAU,QAAQ;AAAA;AAGhC,SAAK,cAAc;AACnB,SAAK,MAAM,KAAK,mBAAmB;AACnC,SAAK,kBAAkB;AAAA;AAAA,QAGnB,iBAAiB;AACrB,UAAM,QAAQ,IACZ,OAAO,oBAAoB,KAAK,aAC7B,IAAI,gBAAc,UAAU,cAAY,KAAK,YAAY,YAAY,MAAM;AAEhF,WAAO,MAAM,eAAe,KAAK;AAAA;AAAA,EAInC,mBAAmB,UAAU;AAC3B,gBAAY,QAAQ;AAAA;AAAA,EAGtB,mBAAmB;AACjB,gBAAY;AAAA;AAAA,QAGR,cAAc,SAAS;AAC3B,cAAU,WAAW;AACrB,YAAQ,OAAO,QAAQ,QAAQ;AAE/B,QAAI,CAAC,CAAC,KAAK,UAAU,QAAQ,YAAY,QAAQ,KAAK,UAAU,QAAQ,YAAY,QAAW;AAG7F,cAAQ,UAAU,KAAK,UAAU,QAAQ;AAAA,WACpC;AACL,cAAQ,UAAU,KAAK,UAAU,QAAQ,QAAQ;AAAA;AAGnD,YAAQ,WAAW,QAAQ,YAAY,aAAa,IAAI;AAExD,UAAM,iBAAiB,KAAK,UAAU,QAAQ;AAC9C,UAAM,uBAAuB,KAAK,IAAI,iBAAiB,KAAK,IAAI;AAEhE,YAAQ,gBAAgB,kBAAkB,eAAe,QAAQ;AAEjE,QAAI,KAAK,YAAY,QAAQ,YAAY,QAAQ,OAAO;AACtD,aAAO,KAAK,YAAY,QAAQ,YAAY,QAAQ;AAAA;AAGtD,QAAI,CAAC,QAAQ,YAAa,SAAQ,gBAAgB,KAAK,IAAI,iBAAiB,GAAG;AAE7E,SAAG,UAAU,KAAK,QAAQ,QAAQ,UAAU,EAAE,WAAW;AAAA;AAG3D,UAAM,aAAa,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACxD,WAAK,YAAY,QAAQ,YAAY,QAAQ,QAAQ,IAAI,KAAK,IAAI,SAChE,QAAQ,SACR,QAAQ,eACR,SAAO;AACL,YAAI;AAAK,iBAAO,OAAO,IAAI,gBAAgB,gBAAgB;AAC3D,cAAM,uBAAuB,QAAQ;AACrC,gBAAQ,KAAK,YAAY,QAAQ,YAAY,QAAQ;AAAA;AAAA;AAK3D,QAAI,KAAK,UAAU,OAAO,UAAU;AAElC,iBAAW,IAAI,cAAc,KAAK,UAAU,OAAO,KAAK,UAAU,OAAO;AAAA;AAE3E,QAAI,KAAK,UAAU,QAAQ,gBAAgB,OAAO;AAGhD,iBAAW,IAAI;AAAA;AAGjB,WAAO;AAAA;AAAA,EAGT,kBAAkB,YAAY,OAAO;AACnC,QAAI,WAAW,aAAa,cAAc,UAAU;AAAM;AAE1D,QAAI,WAAW,MAAM;AACnB,iBAAW;AACX,YAAM,uBAAuB,WAAW;AACxC,aAAO,KAAK,YAAY,WAAW;AAAA;AAAA;AAAA;AAKzC,OAAO,UAAU;AACjB,OAAO,QAAQ,oBAAoB;AACnC,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/connection-manager.js":{"lineLengths":[13,57,28,33,39,49,57,42,25,35,49,31,25,27,31,54,32,68,5,49,13,13,16,19,17,41,7,21,3,32,37,68,47,44,16,114,9,7,7,3,34,9,52,64,7,48,51,7,33,19,44,54,98,9,73,7,16,5,3,26,21,13,5,28,50,43,3,17,57,109,6,39,3,15,31,30,28,26,44,40,60,38,24,10,39,29,29,50,44,46,36,9,96,13,5,50,58,5,99,134,18,17,28,42,41,16,42,9,8,42,61,51,42,9,41,8,32,60,36,8,34,27,41,41,11,43,8,38,32,30,9,22,31,29,68,84,40,28,10,62,39,29,29,50,44,46,36,9,23,32,29,75,41,28,10,62,39,29,29,50,44,46,36,8,6,96,3,32,28,55,33,44,15,97,32,50,38,14,52,63,77,88,129,13,97,47,101,13,39,54,25,39,22,11,13,7,32,5,15,9,72,21,40,62,18,5,33,18,3,39,34,33,3,26,59,76,70,22,3,33,66,64,66,3,25,51,18,5,63,3,1,35,53,43,46,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/abstract/connection-manager.js"],"sourcesContent":["'use strict';\n\nconst { Pool, TimeoutError } = require('sequelize-pool');\nconst _ = require('lodash');\nconst semver = require('semver');\nconst errors = require('../../errors');\nconst { logger } = require('../../utils/logger');\nconst deprecations = require('../../utils/deprecations');\nconst debug = logger.debugContext('pool');\n\n/**\n * Abstract Connection Manager\n *\n * Connection manager which handles pooling & replication.\n * Uses sequelize-pool for pooling\n *\n * @private\n */\nclass ConnectionManager {\n  constructor(dialect, sequelize) {\n    const config = _.cloneDeep(sequelize.config);\n\n    this.sequelize = sequelize;\n    this.config = config;\n    this.dialect = dialect;\n    this.versionPromise = null;\n    this.dialectName = this.sequelize.options.dialect;\n\n    if (config.pool === false) {\n      throw new Error('Support for pool:false was removed in v4.0');\n    }\n\n    config.pool = _.defaults(config.pool || {}, {\n      max: 5,\n      min: 0,\n      idle: 10000,\n      acquire: 60000,\n      evict: 1000,\n      validate: this._validate.bind(this)\n    });\n\n    this.initPools();\n  }\n\n  refreshTypeParser(dataTypes) {\n    _.each(dataTypes, dataType => {\n      if (Object.prototype.hasOwnProperty.call(dataType, 'parse')) {\n        if (dataType.types[this.dialectName]) {\n          this._refreshTypeParser(dataType);\n        } else {\n          throw new Error(`Parse function not supported for type ${dataType.key} in dialect ${this.dialectName}`);\n        }\n      }\n    });\n  }\n\n  /**\n   * Try to load dialect module from various configured options.\n   * Priority goes like dialectModulePath > dialectModule > require(default)\n   *\n   * @param {string} moduleName Name of dialect module to lookup\n   *\n   * @private\n   * @returns {object}\n   */\n  _loadDialectModule(moduleName) {\n    try {\n      if (this.sequelize.config.dialectModulePath) {\n        return require(this.sequelize.config.dialectModulePath);\n      }\n      if (this.sequelize.config.dialectModule) {\n        return this.sequelize.config.dialectModule;\n      }\n      return require(moduleName);\n\n    } catch (err) {\n      if (err.code === 'MODULE_NOT_FOUND') {\n        if (this.sequelize.config.dialectModulePath) {\n          throw new Error(`Unable to find dialect at ${this.sequelize.config.dialectModulePath}`);\n        }\n        throw new Error(`Please install ${moduleName} package manually`);\n      }\n\n      throw err;\n    }\n  }\n\n  /**\n   * Handler which executes on process exit or connection manager shutdown\n   *\n   * @private\n   * @returns {Promise}\n   */\n  async _onProcessExit() {\n    if (!this.pool) {\n      return;\n    }\n\n    await this.pool.drain();\n    debug('connection drain due to process exit');\n\n    return await this.pool.destroyAllNow();\n  }\n\n  /**\n   * Drain the pool and close it permanently\n   *\n   * @returns {Promise}\n   */\n  async close() {\n    // Mark close of pool\n    this.getConnection = async function getConnection() {\n      throw new Error('ConnectionManager.getConnection was called after the connection manager was closed!');\n    };\n\n    return await this._onProcessExit();\n  }\n\n  /**\n   * Initialize connection pool. By default pool autostart is set to false, so no connection will be\n   * be created unless `pool.acquire` is called.\n   */\n  initPools() {\n    const config = this.config;\n\n    if (!config.replication) {\n      this.pool = new Pool({\n        name: 'sequelize',\n        create: () => this._connect(config),\n        destroy: async connection => {\n          const result = await this._disconnect(connection);\n          debug('connection destroy');\n          return result;\n        },\n        validate: config.pool.validate,\n        max: config.pool.max,\n        min: config.pool.min,\n        acquireTimeoutMillis: config.pool.acquire,\n        idleTimeoutMillis: config.pool.idle,\n        reapIntervalMillis: config.pool.evict,\n        maxUses: config.pool.maxUses\n      });\n\n      debug(`pool created with max/min: ${config.pool.max}/${config.pool.min}, no replication`);\n\n      return;\n    }\n\n    if (!Array.isArray(config.replication.read)) {\n      config.replication.read = [config.replication.read];\n    }\n\n    // Map main connection config\n    config.replication.write = _.defaults(config.replication.write, _.omit(config, 'replication'));\n\n    // Apply defaults to each read config\n    config.replication.read = config.replication.read.map(readConfig =>\n      _.defaults(readConfig, _.omit(this.config, 'replication'))\n    );\n\n    // custom pooling for replication (original author @janmeier)\n    let reads = 0;\n    this.pool = {\n      release: client => {\n        if (client.queryType === 'read') {\n          this.pool.read.release(client);\n        } else {\n          this.pool.write.release(client);\n        }\n      },\n      acquire: (queryType, useMaster) => {\n        useMaster = useMaster === undefined ? false : useMaster;\n        if (queryType === 'SELECT' && !useMaster) {\n          return this.pool.read.acquire();\n        }\n        return this.pool.write.acquire();\n      },\n      destroy: connection => {\n        this.pool[connection.queryType].destroy(connection);\n        debug('connection destroy');\n      },\n      destroyAllNow: async () => {\n        await Promise.all([\n          this.pool.read.destroyAllNow(),\n          this.pool.write.destroyAllNow()\n        ]);\n\n        debug('all connections destroyed');\n      },\n      drain: async () => Promise.all([\n        this.pool.write.drain(),\n        this.pool.read.drain()\n      ]),\n      read: new Pool({\n        name: 'sequelize:read',\n        create: async () => {\n          // round robin config\n          const nextRead = reads++ % config.replication.read.length;\n          const connection = await this._connect(config.replication.read[nextRead]);\n          connection.queryType = 'read';\n          return connection;\n        },\n        destroy: connection => this._disconnect(connection),\n        validate: config.pool.validate,\n        max: config.pool.max,\n        min: config.pool.min,\n        acquireTimeoutMillis: config.pool.acquire,\n        idleTimeoutMillis: config.pool.idle,\n        reapIntervalMillis: config.pool.evict,\n        maxUses: config.pool.maxUses\n      }),\n      write: new Pool({\n        name: 'sequelize:write',\n        create: async () => {\n          const connection = await this._connect(config.replication.write);\n          connection.queryType = 'write';\n          return connection;\n        },\n        destroy: connection => this._disconnect(connection),\n        validate: config.pool.validate,\n        max: config.pool.max,\n        min: config.pool.min,\n        acquireTimeoutMillis: config.pool.acquire,\n        idleTimeoutMillis: config.pool.idle,\n        reapIntervalMillis: config.pool.evict,\n        maxUses: config.pool.maxUses\n      })\n    };\n\n    debug(`pool created with max/min: ${config.pool.max}/${config.pool.min}, with replication`);\n  }\n\n  /**\n   * Get connection from pool. It sets database version if it's not already set.\n   * Call pool.acquire to get a connection\n   *\n   * @param {object}   [options]                 Pool options\n   * @param {string}   [options.type]            Set which replica to use. Available options are `read` and `write`\n   * @param {boolean}  [options.useMaster=false] Force master or write replica to get connection from\n   *\n   * @returns {Promise<Connection>}\n   */\n  async getConnection(options) {\n    options = options || {};\n\n    if (this.sequelize.options.databaseVersion === 0) {\n      if (!this.versionPromise) {\n        this.versionPromise = (async () => {\n          try {\n            const connection = await this._connect(this.config.replication.write || this.config);\n            const _options = {};\n\n            _options.transaction = { connection }; // Cheat .query to use our private connection\n            _options.logging = () => {};\n            _options.logging.__testLoggingFn = true;\n\n            //connection might have set databaseVersion value at initialization,\n            //avoiding a useless round trip\n            if (this.sequelize.options.databaseVersion === 0) {\n              const version = await this.sequelize.databaseVersion(_options);\n              const parsedVersion = _.get(semver.coerce(version), 'version') || version;\n              this.sequelize.options.databaseVersion = semver.valid(parsedVersion)\n                ? parsedVersion\n                : this.dialect.defaultVersion;\n            }\n\n            if (semver.lt(this.sequelize.options.databaseVersion, this.dialect.defaultVersion)) {\n              deprecations.unsupportedEngine();\n              debug(`Unsupported database engine version ${this.sequelize.options.databaseVersion}`);\n            }\n\n            this.versionPromise = null;\n            return await this._disconnect(connection);\n          } catch (err) {\n            this.versionPromise = null;\n            throw err;\n          }\n        })();\n      }\n      await this.versionPromise;\n    }\n\n    let result;\n\n    try {\n      result = await this.pool.acquire(options.type, options.useMaster);\n    } catch (error) {\n      if (error instanceof TimeoutError) throw new errors.ConnectionAcquireTimeoutError(error);\n      throw error;\n    }\n\n    debug('connection acquired');\n\n    return result;\n  }\n\n  /**\n   * Release a pooled connection so it can be utilized by other connection requests\n   *\n   * @param {Connection} connection\n   *\n   * @returns {Promise}\n   */\n  async releaseConnection(connection) {\n    this.pool.release(connection);\n    debug('connection released');\n  }\n\n  /**\n   * Call dialect library to get connection\n   *\n   * @param {*} config Connection config\n   * @private\n   * @returns {Promise<Connection>}\n   */\n  async _connect(config) {\n    await this.sequelize.runHooks('beforeConnect', config);\n    const connection = await this.dialect.connectionManager.connect(config);\n    await this.sequelize.runHooks('afterConnect', connection, config);\n    return connection;\n  }\n\n  /**\n   * Call dialect library to disconnect a connection\n   *\n   * @param {Connection} connection\n   * @private\n   * @returns {Promise}\n   */\n  async _disconnect(connection) {\n    await this.sequelize.runHooks('beforeDisconnect', connection);\n    await this.dialect.connectionManager.disconnect(connection);\n    return this.sequelize.runHooks('afterDisconnect', connection);\n  }\n\n  /**\n   * Determine if a connection is still valid or not\n   *\n   * @param {Connection} connection\n   *\n   * @returns {boolean}\n   */\n  _validate(connection) {\n    if (!this.dialect.connectionManager.validate) {\n      return true;\n    }\n\n    return this.dialect.connectionManager.validate(connection);\n  }\n}\n\nmodule.exports = ConnectionManager;\nmodule.exports.ConnectionManager = ConnectionManager;\nmodule.exports.default = ConnectionManager;\n"],"mappings":";AAEA,MAAM,EAAE,MAAM,iBAAiB,QAAQ;AACvC,MAAM,IAAI,QAAQ;AAClB,MAAM,SAAS,QAAQ;AACvB,MAAM,SAAS,QAAQ;AACvB,MAAM,EAAE,WAAW,QAAQ;AAC3B,MAAM,eAAe,QAAQ;AAC7B,MAAM,QAAQ,OAAO,aAAa;AAUlC,wBAAwB;AAAA,EACtB,YAAY,SAAS,WAAW;AAC9B,UAAM,SAAS,EAAE,UAAU,UAAU;AAErC,SAAK,YAAY;AACjB,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,iBAAiB;AACtB,SAAK,cAAc,KAAK,UAAU,QAAQ;AAE1C,QAAI,OAAO,SAAS,OAAO;AACzB,YAAM,IAAI,MAAM;AAAA;AAGlB,WAAO,OAAO,EAAE,SAAS,OAAO,QAAQ,IAAI;AAAA,MAC1C,KAAK;AAAA,MACL,KAAK;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,MACP,UAAU,KAAK,UAAU,KAAK;AAAA;AAGhC,SAAK;AAAA;AAAA,EAGP,kBAAkB,WAAW;AAC3B,MAAE,KAAK,WAAW,cAAY;AAC5B,UAAI,OAAO,UAAU,eAAe,KAAK,UAAU,UAAU;AAC3D,YAAI,SAAS,MAAM,KAAK,cAAc;AACpC,eAAK,mBAAmB;AAAA,eACnB;AACL,gBAAM,IAAI,MAAM,yCAAyC,SAAS,kBAAkB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAejG,mBAAmB,YAAY;AAC7B,QAAI;AACF,UAAI,KAAK,UAAU,OAAO,mBAAmB;AAC3C,eAAO,QAAQ,KAAK,UAAU,OAAO;AAAA;AAEvC,UAAI,KAAK,UAAU,OAAO,eAAe;AACvC,eAAO,KAAK,UAAU,OAAO;AAAA;AAE/B,aAAO,QAAQ;AAAA,aAER,KAAP;AACA,UAAI,IAAI,SAAS,oBAAoB;AACnC,YAAI,KAAK,UAAU,OAAO,mBAAmB;AAC3C,gBAAM,IAAI,MAAM,6BAA6B,KAAK,UAAU,OAAO;AAAA;AAErE,cAAM,IAAI,MAAM,kBAAkB;AAAA;AAGpC,YAAM;AAAA;AAAA;AAAA,QAUJ,iBAAiB;AACrB,QAAI,CAAC,KAAK,MAAM;AACd;AAAA;AAGF,UAAM,KAAK,KAAK;AAChB,UAAM;AAEN,WAAO,MAAM,KAAK,KAAK;AAAA;AAAA,QAQnB,QAAQ;AAEZ,SAAK,gBAAgB,+BAA+B;AAClD,YAAM,IAAI,MAAM;AAAA;AAGlB,WAAO,MAAM,KAAK;AAAA;AAAA,EAOpB,YAAY;AACV,UAAM,SAAS,KAAK;AAEpB,QAAI,CAAC,OAAO,aAAa;AACvB,WAAK,OAAO,IAAI,KAAK;AAAA,QACnB,MAAM;AAAA,QACN,QAAQ,MAAM,KAAK,SAAS;AAAA,QAC5B,SAAS,OAAM,eAAc;AAC3B,gBAAM,SAAS,MAAM,KAAK,YAAY;AACtC,gBAAM;AACN,iBAAO;AAAA;AAAA,QAET,UAAU,OAAO,KAAK;AAAA,QACtB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,sBAAsB,OAAO,KAAK;AAAA,QAClC,mBAAmB,OAAO,KAAK;AAAA,QAC/B,oBAAoB,OAAO,KAAK;AAAA,QAChC,SAAS,OAAO,KAAK;AAAA;AAGvB,YAAM,8BAA8B,OAAO,KAAK,OAAO,OAAO,KAAK;AAEnE;AAAA;AAGF,QAAI,CAAC,MAAM,QAAQ,OAAO,YAAY,OAAO;AAC3C,aAAO,YAAY,OAAO,CAAC,OAAO,YAAY;AAAA;AAIhD,WAAO,YAAY,QAAQ,EAAE,SAAS,OAAO,YAAY,OAAO,EAAE,KAAK,QAAQ;AAG/E,WAAO,YAAY,OAAO,OAAO,YAAY,KAAK,IAAI,gBACpD,EAAE,SAAS,YAAY,EAAE,KAAK,KAAK,QAAQ;AAI7C,QAAI,QAAQ;AACZ,SAAK,OAAO;AAAA,MACV,SAAS,YAAU;AACjB,YAAI,OAAO,cAAc,QAAQ;AAC/B,eAAK,KAAK,KAAK,QAAQ;AAAA,eAClB;AACL,eAAK,KAAK,MAAM,QAAQ;AAAA;AAAA;AAAA,MAG5B,SAAS,CAAC,WAAW,cAAc;AACjC,oBAAY,cAAc,SAAY,QAAQ;AAC9C,YAAI,cAAc,YAAY,CAAC,WAAW;AACxC,iBAAO,KAAK,KAAK,KAAK;AAAA;AAExB,eAAO,KAAK,KAAK,MAAM;AAAA;AAAA,MAEzB,SAAS,gBAAc;AACrB,aAAK,KAAK,WAAW,WAAW,QAAQ;AACxC,cAAM;AAAA;AAAA,MAER,eAAe,YAAY;AACzB,cAAM,QAAQ,IAAI;AAAA,UAChB,KAAK,KAAK,KAAK;AAAA,UACf,KAAK,KAAK,MAAM;AAAA;AAGlB,cAAM;AAAA;AAAA,MAER,OAAO,YAAY,QAAQ,IAAI;AAAA,QAC7B,KAAK,KAAK,MAAM;AAAA,QAChB,KAAK,KAAK,KAAK;AAAA;AAAA,MAEjB,MAAM,IAAI,KAAK;AAAA,QACb,MAAM;AAAA,QACN,QAAQ,YAAY;AAElB,gBAAM,WAAW,UAAU,OAAO,YAAY,KAAK;AACnD,gBAAM,aAAa,MAAM,KAAK,SAAS,OAAO,YAAY,KAAK;AAC/D,qBAAW,YAAY;AACvB,iBAAO;AAAA;AAAA,QAET,SAAS,gBAAc,KAAK,YAAY;AAAA,QACxC,UAAU,OAAO,KAAK;AAAA,QACtB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,sBAAsB,OAAO,KAAK;AAAA,QAClC,mBAAmB,OAAO,KAAK;AAAA,QAC/B,oBAAoB,OAAO,KAAK;AAAA,QAChC,SAAS,OAAO,KAAK;AAAA;AAAA,MAEvB,OAAO,IAAI,KAAK;AAAA,QACd,MAAM;AAAA,QACN,QAAQ,YAAY;AAClB,gBAAM,aAAa,MAAM,KAAK,SAAS,OAAO,YAAY;AAC1D,qBAAW,YAAY;AACvB,iBAAO;AAAA;AAAA,QAET,SAAS,gBAAc,KAAK,YAAY;AAAA,QACxC,UAAU,OAAO,KAAK;AAAA,QACtB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,sBAAsB,OAAO,KAAK;AAAA,QAClC,mBAAmB,OAAO,KAAK;AAAA,QAC/B,oBAAoB,OAAO,KAAK;AAAA,QAChC,SAAS,OAAO,KAAK;AAAA;AAAA;AAIzB,UAAM,8BAA8B,OAAO,KAAK,OAAO,OAAO,KAAK;AAAA;AAAA,QAa/D,cAAc,SAAS;AAC3B,cAAU,WAAW;AAErB,QAAI,KAAK,UAAU,QAAQ,oBAAoB,GAAG;AAChD,UAAI,CAAC,KAAK,gBAAgB;AACxB,aAAK,iBAAkB,aAAY;AACjC,cAAI;AACF,kBAAM,aAAa,MAAM,KAAK,SAAS,KAAK,OAAO,YAAY,SAAS,KAAK;AAC7E,kBAAM,WAAW;AAEjB,qBAAS,cAAc,EAAE;AACzB,qBAAS,UAAU,MAAM;AAAA;AACzB,qBAAS,QAAQ,kBAAkB;AAInC,gBAAI,KAAK,UAAU,QAAQ,oBAAoB,GAAG;AAChD,oBAAM,UAAU,MAAM,KAAK,UAAU,gBAAgB;AACrD,oBAAM,gBAAgB,EAAE,IAAI,OAAO,OAAO,UAAU,cAAc;AAClE,mBAAK,UAAU,QAAQ,kBAAkB,OAAO,MAAM,iBAClD,gBACA,KAAK,QAAQ;AAAA;AAGnB,gBAAI,OAAO,GAAG,KAAK,UAAU,QAAQ,iBAAiB,KAAK,QAAQ,iBAAiB;AAClF,2BAAa;AACb,oBAAM,uCAAuC,KAAK,UAAU,QAAQ;AAAA;AAGtE,iBAAK,iBAAiB;AACtB,mBAAO,MAAM,KAAK,YAAY;AAAA,mBACvB,KAAP;AACA,iBAAK,iBAAiB;AACtB,kBAAM;AAAA;AAAA;AAAA;AAIZ,YAAM,KAAK;AAAA;AAGb,QAAI;AAEJ,QAAI;AACF,eAAS,MAAM,KAAK,KAAK,QAAQ,QAAQ,MAAM,QAAQ;AAAA,aAChD,OAAP;AACA,UAAI,iBAAiB;AAAc,cAAM,IAAI,OAAO,8BAA8B;AAClF,YAAM;AAAA;AAGR,UAAM;AAEN,WAAO;AAAA;AAAA,QAUH,kBAAkB,YAAY;AAClC,SAAK,KAAK,QAAQ;AAClB,UAAM;AAAA;AAAA,QAUF,SAAS,QAAQ;AACrB,UAAM,KAAK,UAAU,SAAS,iBAAiB;AAC/C,UAAM,aAAa,MAAM,KAAK,QAAQ,kBAAkB,QAAQ;AAChE,UAAM,KAAK,UAAU,SAAS,gBAAgB,YAAY;AAC1D,WAAO;AAAA;AAAA,QAUH,YAAY,YAAY;AAC5B,UAAM,KAAK,UAAU,SAAS,oBAAoB;AAClD,UAAM,KAAK,QAAQ,kBAAkB,WAAW;AAChD,WAAO,KAAK,UAAU,SAAS,mBAAmB;AAAA;AAAA,EAUpD,UAAU,YAAY;AACpB,QAAI,CAAC,KAAK,QAAQ,kBAAkB,UAAU;AAC5C,aAAO;AAAA;AAGT,WAAO,KAAK,QAAQ,kBAAkB,SAAS;AAAA;AAAA;AAInD,OAAO,UAAU;AACjB,OAAO,QAAQ,oBAAoB;AACnC,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/index.js":{"lineLengths":[13,62,70,47,127,51,133,31,103,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/src/index.ts"],"names":[],"mappings":";;;AAAA,+CAA8C;AAArC,4GAAA,YAAY,OAAA;AACrB,mDAAkD;AAAzC,gHAAA,cAAc,OAAA;AACvB,+BAA8C;AAArC,4FAAA,IAAI,OAAA"},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/TimeoutError.js":{"lineLengths":[13,62,30,34,1,36,40],"data":{"version":3,"file":"TimeoutError.js","sourceRoot":"","sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/src/TimeoutError.ts"],"names":[],"mappings":";;;AAGA,MAAa,YAAa,SAAQ,KAAK;CAAG;AAA1C,oCAA0C"},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/AggregateError.js":{"lineLengths":[13,62,32,36,25,16,29,37,5,16,58,42,41,45,71,68,28,23,5,1,40,42],"data":{"version":3,"file":"AggregateError.js","sourceRoot":"","sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/src/AggregateError.ts"],"names":[],"mappings":";;;AAGA,MAAa,cAAe,SAAQ,KAAK;IAGvC,YAAY,MAAe;QACzB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,MAAM,OAAO,GAAG,uBAAuB,IAAI,CAAC,MAAM;aAC/C,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CACb,KAAK,KAAK,IAAI;YACZ,CAAC,CAAC,2BAA2B;YAC7B,CAAC,CAAC,KAAK,YAAY,cAAc;gBACjC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;gBACvD,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CACtD;aACA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAClB,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AArBD,wCAqBC"},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/Pool.js":{"lineLengths":[13,62,22,41,53,12,26,25,30,59,9,31,60,9,32,61,9,46,30,54,59,9,46,31,54,58,9,40,55,9,44,75,63,9,68,74,69,62,40,32,24,31,35,32,36,42,5,16,27,5,16,34,5,21,45,5,17,41,5,19,44,5,19,33,5,19,33,5,26,45,37,9,28,87,9,5,19,28,31,14,54,54,20,42,75,56,33,105,66,13,9,45,50,28,79,39,9,14,69,9,5,27,41,45,54,35,40,9,5,17,35,58,107,31,19,9,51,61,88,68,55,25,13,41,96,59,62,9,39,35,9,5,23,25,125,21,21,33,59,27,61,43,13,18,65,13,10,31,59,29,32,32,27,39,13,36,33,15,11,5,56,33,31,31,57,10,53,25,35,5,52,33,31,31,10,49,5,22,20,58,44,40,39,13,9,5,15,29,88,9,51,67,100,11,45,25,34,5,23,110,99,19,9,111,24,95,19,9,58,38,66,62,42,40,52,51,29,9,14,48,100,9,5,29,56,48,105,97,58,50,34,19,9,25,28,28,13,50,9,17,34,34,40,37,19,13,9,5,13,38,30,37,51,33,34,36,24,23,13,64,34,36,24,23,13,23,10,56,5,27,58,42,44,86,26,43,17,45,13,24,77,32,13,9,32,62,9,5,1,20,32],"data":{"version":3,"file":"Pool.js","sourceRoot":"","sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/src/Pool.ts"],"names":[],"mappings":"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"},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/lib/Deferred.js":{"lineLengths":[13,62,26,49,16,19,58,34,36,11,5,48,26,19,42,23,78,28,5,21,27,19,36,5,20,29,29,5,19,29,28,5,15,29,5,1,28,36],"data":{"version":3,"file":"Deferred.js","sourceRoot":"","sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize-pool/src/Deferred.ts"],"names":[],"mappings":";;;AAAA,iDAA8C;AAO9C,MAAa,QAAQ;IAMnB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,eAAuB,EAAE,QAAkB;QACzD,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO;QAE1B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,GAAG,EAAE;YAC9B,QAAQ,EAAE,CAAC;YACX,IAAI,CAAC,MAAM,CAAC,IAAI,2BAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACrD,CAAC,EAAE,eAAe,CAAC,CAAC;IACtB,CAAC;IAES,aAAa;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAO;QAC3B,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAED,OAAO,CAAC,KAAQ;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CACF;AAxCD,4BAwCC"},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/parserStore.js":{"lineLengths":[13,41,31,29,51,3,10,13,34,6,23,51,54,7,6,15,43,5,4,2,39,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/parserStore.js"],"sourcesContent":["'use strict';\n\nconst stores = new Map();\n\nmodule.exports = dialect => {\n  if (!stores.has(dialect)) {\n    stores.set(dialect, new Map());\n  }\n\n  return {\n    clear() {\n      stores.get(dialect).clear();\n    },\n    refresh(dataType) {\n      for (const type of dataType.types[dialect]) {\n        stores.get(dialect).set(type, dataType.parse);\n      }\n    },\n    get(type) {\n      return stores.get(dialect).get(type);\n    }\n  };\n};\n"],"mappings":";AAEA,MAAM,SAAS,oBAAI;AAEnB,OAAO,UAAU,aAAW;AAC1B,MAAI,CAAC,OAAO,IAAI,UAAU;AACxB,WAAO,IAAI,SAAS,oBAAI;AAAA;AAG1B,SAAO;AAAA,IACL,QAAQ;AACN,aAAO,IAAI,SAAS;AAAA;AAAA,IAEtB,QAAQ,UAAU;AAChB,iBAAW,QAAQ,SAAS,MAAM,UAAU;AAC1C,eAAO,IAAI,SAAS,IAAI,MAAM,SAAS;AAAA;AAAA;AAAA,IAG3C,IAAI,MAAM;AACR,aAAO,OAAO,IAAI,SAAS,IAAI;AAAA;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/query.js":{"lineLengths":[13,28,37,51,48,48,56,49,48,35,22,20,3,53,18,32,21,32,35,9,100,12,21,39,46,41,9,7,100,5,28,3,35,19,18,39,16,22,28,16,43,9,34,31,67,9,7,5,15,3,71,14,25,44,5,31,72,48,27,239,83,22,70,97,11,16,53,9,7,5,35,44,5,40,23,52,62,7,20,5,31,29,47,7,65,42,54,20,35,50,54,44,18,39,11,78,58,52,63,52,39,29,15,15,11,125,11,9,45,5,39,21,5,49,50,5,49,21,5,49,18,23,38,42,32,51,30,16,44,9,32,29,43,23,38,10,57,107,9,68,98,9,7,20,5,52,24,5,51,21,5,55,21,5,85,30,5,51,32,5,47,33,5,31,28,5,55,40,5,18,3,30,33,19,44,60,72,29,38,32,36,27,9,27,56,15,23,111,19,27,26,11,9,24,26,52,20,8,47,28,54,47,52,61,9,116,33,30,9,83,50,38,77,23,45,66,15,13,23,13,13,7,26,8,3,32,47,75,29,54,49,109,109,27,41,9,27,41,9,89,87,71,49,68,84,7,103,58,50,59,32,7,14,57,38,21,21,36,28,27,26,8,7,23,3,29,29,47,5,64,37,40,34,73,5,17,3,30,23,38,42,39,42,33,68,64,24,27,13,9,24,59,50,40,16,70,52,98,11,9,26,41,37,203,9,25,59,75,39,27,13,13,9,116,7,25,74,14,75,5,3,38,59,23,27,34,38,76,37,37,33,25,23,10,7,18,8,3,23,229,19,5,17,3,1,23,29,31,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/sqlite/query.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Utils = require('../../utils');\nconst AbstractQuery = require('../abstract/query');\nconst QueryTypes = require('../../query-types');\nconst sequelizeErrors = require('../../errors');\nconst parserStore = require('../parserStore')('sqlite');\nconst { logger } = require('../../utils/logger');\n\nconst debug = logger.debugContext('sql:sqlite');\n\n\nclass Query extends AbstractQuery {\n  getInsertIdField() {\n    return 'lastID';\n  }\n\n  /**\n   * rewrite query with parameters.\n   *\n   * @param {string} sql\n   * @param {Array|object} values\n   * @param {string} dialect\n   * @private\n   */\n  static formatBindParameters(sql, values, dialect) {\n    let bindParam;\n    if (Array.isArray(values)) {\n      bindParam = {};\n      values.forEach((v, i) => {\n        bindParam[`$${i + 1}`] = v;\n      });\n      sql = AbstractQuery.formatBindParameters(sql, values, dialect, { skipValueReplace: true })[0];\n    } else {\n      bindParam = {};\n      if (typeof values === 'object') {\n        for (const k of Object.keys(values)) {\n          bindParam[`$${k}`] = values[k];\n        }\n      }\n      sql = AbstractQuery.formatBindParameters(sql, values, dialect, { skipValueReplace: true })[0];\n    }\n    return [sql, bindParam];\n  }\n\n  _collectModels(include, prefix) {\n    const ret = {};\n\n    if (include) {\n      for (const _include of include) {\n        let key;\n        if (!prefix) {\n          key = _include.as;\n        } else {\n          key = `${prefix}.${_include.as}`;\n        }\n        ret[key] = _include.model;\n\n        if (_include.include) {\n          _.merge(ret, this._collectModels(_include.include, key));\n        }\n      }\n    }\n\n    return ret;\n  }\n\n  _handleQueryResponse(metaData, columnTypes, err, results, errStack) {\n    if (err) {\n      err.sql = this.sql;\n      throw this.formatError(err, errStack);\n    }\n    let result = this.instance;\n\n    // add the inserted row id to the instance\n    if (this.isInsertQuery(results, metaData) || this.isUpsertQuery()) {\n      this.handleInsertQuery(results, metaData);\n      if (!this.instance) {\n        // handle bulkCreate AI primary key\n        if (\n          metaData.constructor.name === 'Statement'\n          && this.model\n          && this.model.autoIncrementAttribute\n          && this.model.autoIncrementAttribute === this.model.primaryKeyAttribute\n          && this.model.rawAttributes[this.model.primaryKeyAttribute]\n        ) {\n          const startId = metaData[this.getInsertIdField()] - metaData.changes + 1;\n          result = [];\n          for (let i = startId; i < startId + metaData.changes; i++) {\n            result.push({ [this.model.rawAttributes[this.model.primaryKeyAttribute].field]: i });\n          }\n        } else {\n          result = metaData[this.getInsertIdField()];\n        }\n      }\n    }\n\n    if (this.isShowTablesQuery()) {\n      return results.map(row => row.name);\n    }\n    if (this.isShowConstraintsQuery()) {\n      result = results;\n      if (results && results[0] && results[0].sql) {\n        result = this.parseConstraintsFromSql(results[0].sql);\n      }\n      return result;\n    }\n    if (this.isSelectQuery()) {\n      if (this.options.raw) {\n        return this.handleSelectQuery(results);\n      }\n      // This is a map of prefix strings to models, e.g. user.projects -> Project model\n      const prefixes = this._collectModels(this.options.include);\n\n      results = results.map(result => {\n        return _.mapValues(result, (value, name) => {\n          let model;\n          if (name.includes('.')) {\n            const lastind = name.lastIndexOf('.');\n\n            model = prefixes[name.substr(0, lastind)];\n\n            name = name.substr(lastind + 1);\n          } else {\n            model = this.options.model;\n          }\n\n          const tableName = model.getTableName().toString().replace(/`/g, '');\n          const tableTypes = columnTypes[tableName] || {};\n\n          if (tableTypes && !(name in tableTypes)) {\n            // The column is aliased\n            _.forOwn(model.rawAttributes, (attribute, key) => {\n              if (name === key && attribute.field) {\n                name = attribute.field;\n                return false;\n              }\n            });\n          }\n\n          return Object.prototype.hasOwnProperty.call(tableTypes, name)\n            ? this.applyParsers(tableTypes[name], value)\n            : value;\n        });\n      });\n\n      return this.handleSelectQuery(results);\n    }\n    if (this.isShowOrDescribeQuery()) {\n      return results;\n    }\n    if (this.sql.includes('PRAGMA INDEX_LIST')) {\n      return this.handleShowIndexesQuery(results);\n    }\n    if (this.sql.includes('PRAGMA INDEX_INFO')) {\n      return results;\n    }\n    if (this.sql.includes('PRAGMA TABLE_INFO')) {\n      // this is the sqlite way of getting the metadata of a table\n      result = {};\n\n      let defaultValue;\n      for (const _result of results) {\n        if (_result.dflt_value === null) {\n          // Column schema omits any \"DEFAULT ...\"\n          defaultValue = undefined;\n        } else if (_result.dflt_value === 'NULL') {\n          // Column schema is a \"DEFAULT NULL\"\n          defaultValue = null;\n        } else {\n          defaultValue = _result.dflt_value;\n        }\n\n        result[_result.name] = {\n          type: _result.type,\n          allowNull: _result.notnull === 0,\n          defaultValue,\n          primaryKey: _result.pk !== 0\n        };\n\n        if (result[_result.name].type === 'TINYINT(1)') {\n          result[_result.name].defaultValue = { '0': false, '1': true }[result[_result.name].defaultValue];\n        }\n\n        if (typeof result[_result.name].defaultValue === 'string') {\n          result[_result.name].defaultValue = result[_result.name].defaultValue.replace(/'/g, '');\n        }\n      }\n      return result;\n    }\n    if (this.sql.includes('PRAGMA foreign_keys;')) {\n      return results[0];\n    }\n    if (this.sql.includes('PRAGMA foreign_keys')) {\n      return results;\n    }\n    if (this.sql.includes('PRAGMA foreign_key_list')) {\n      return results;\n    }\n    if ([QueryTypes.BULKUPDATE, QueryTypes.BULKDELETE].includes(this.options.type)) {\n      return metaData.changes;\n    }\n    if (this.options.type === QueryTypes.VERSION) {\n      return results[0].version;\n    }\n    if (this.options.type === QueryTypes.RAW) {\n      return [results, metaData];\n    }\n    if (this.isUpsertQuery()) {\n      return [result, null];\n    }\n    if (this.isUpdateQuery() || this.isInsertQuery()) {\n      return [result, metaData.changes];\n    }\n    return result;\n  }\n\n  async run(sql, parameters) {\n    const conn = this.connection;\n    this.sql = sql;\n    const method = this.getDatabaseMethod();\n    const complete = this._logQuery(sql, debug, parameters);\n\n    return new Promise((resolve, reject) => conn.serialize(async () => {\n      const columnTypes = {};\n      const errForStack = new Error();\n      const executeSql = () => {\n        if (sql.startsWith('-- ')) {\n          return resolve();\n        }\n        const query = this;\n        // cannot use arrow function here because the function is bound to the statement\n        function afterExecute(executionError, results) {\n          try {\n            complete();\n            // `this` is passed from sqlite, we have no control over this.\n            // eslint-disable-next-line no-invalid-this\n            resolve(query._handleQueryResponse(this, columnTypes, executionError, results, errForStack.stack));\n            return;\n          } catch (error) {\n            reject(error);\n          }\n        }\n\n        if (!parameters) parameters = [];\n        conn[method](sql, parameters, afterExecute);\n\n        return null;\n      };\n\n      if (this.getDatabaseMethod() === 'all') {\n        let tableNames = [];\n        if (this.options && this.options.tableNames) {\n          tableNames = this.options.tableNames;\n        } else if (/FROM `(.*?)`/i.exec(this.sql)) {\n          tableNames.push(/FROM `(.*?)`/i.exec(this.sql)[1]);\n        }\n\n        // If we already have the metadata for the table, there's no need to ask for it again\n        tableNames = tableNames.filter(tableName => !(tableName in columnTypes) && tableName !== 'sqlite_master');\n\n        if (!tableNames.length) {\n          return executeSql();\n        }\n        await Promise.all(tableNames.map(tableName =>\n          new Promise(resolve => {\n            tableName = tableName.replace(/`/g, '');\n            columnTypes[tableName] = {};\n\n            conn.all(`PRAGMA table_info(\\`${tableName}\\`)`, (err, results) => {\n              if (!err) {\n                for (const result of results) {\n                  columnTypes[tableName][result.name] = result.type;\n                }\n              }\n              resolve();\n            });\n          })));\n      }\n      return executeSql();\n    }));\n  }\n\n  parseConstraintsFromSql(sql) {\n    let constraints = sql.split('CONSTRAINT ');\n    let referenceTableName, referenceTableKeys, updateAction, deleteAction;\n    constraints.splice(0, 1);\n    constraints = constraints.map(constraintSql => {\n      //Parse foreign key snippets\n      if (constraintSql.includes('REFERENCES')) {\n        //Parse out the constraint condition form sql string\n        updateAction = constraintSql.match(/ON UPDATE (CASCADE|SET NULL|RESTRICT|NO ACTION|SET DEFAULT){1}/);\n        deleteAction = constraintSql.match(/ON DELETE (CASCADE|SET NULL|RESTRICT|NO ACTION|SET DEFAULT){1}/);\n\n        if (updateAction) {\n          updateAction = updateAction[1];\n        }\n\n        if (deleteAction) {\n          deleteAction = deleteAction[1];\n        }\n\n        const referencesRegex = /REFERENCES.+\\((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*\\)/;\n        const referenceConditions = constraintSql.match(referencesRegex)[0].split(' ');\n        referenceTableName = Utils.removeTicks(referenceConditions[1]);\n        let columnNames = referenceConditions[2];\n        columnNames = columnNames.replace(/\\(|\\)/g, '').split(', ');\n        referenceTableKeys = columnNames.map(column => Utils.removeTicks(column));\n      }\n\n      const constraintCondition = constraintSql.match(/\\((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*\\)/)[0];\n      constraintSql = constraintSql.replace(/\\(.+\\)/, '');\n      const constraint = constraintSql.split(' ');\n\n      if (['PRIMARY', 'FOREIGN'].includes(constraint[1])) {\n        constraint[1] += ' KEY';\n      }\n\n      return {\n        constraintName: Utils.removeTicks(constraint[0]),\n        constraintType: constraint[1],\n        updateAction,\n        deleteAction,\n        sql: sql.replace(/\"/g, '`'), //Sqlite returns double quotes for table name\n        constraintCondition,\n        referenceTableName,\n        referenceTableKeys\n      };\n    });\n\n    return constraints;\n  }\n\n  applyParsers(type, value) {\n    if (type.includes('(')) {\n      // Remove the length part\n      type = type.substr(0, type.indexOf('('));\n    }\n    type = type.replace('UNSIGNED', '').replace('ZEROFILL', '');\n    type = type.trim().toUpperCase();\n    const parse = parserStore.get(type);\n\n    if (value !== null && parse) {\n      return parse(value, { timezone: this.sequelize.options.timezone });\n    }\n    return value;\n  }\n\n  formatError(err, errStack) {\n\n    switch (err.code) {\n      case 'SQLITE_CONSTRAINT_UNIQUE':\n      case 'SQLITE_CONSTRAINT_PRIMARYKEY':\n      case 'SQLITE_CONSTRAINT_TRIGGER':\n      case 'SQLITE_CONSTRAINT_FOREIGNKEY':\n      case 'SQLITE_CONSTRAINT': {\n        if (err.message.includes('FOREIGN KEY constraint failed')) {\n          return new sequelizeErrors.ForeignKeyConstraintError({\n            parent: err,\n            stack: errStack\n          });\n        }\n\n        let fields = [];\n\n        // Sqlite pre 2.2 behavior - Error: SQLITE_CONSTRAINT: columns x, y are not unique\n        let match = err.message.match(/columns (.*?) are/);\n        if (match !== null && match.length >= 2) {\n          fields = match[1].split(', ');\n        } else {\n\n          // Sqlite post 2.2 behavior - Error: SQLITE_CONSTRAINT: UNIQUE constraint failed: table.x, table.y\n          match = err.message.match(/UNIQUE constraint failed: (.*)/);\n          if (match !== null && match.length >= 2) {\n            fields = match[1].split(', ').map(columnWithTable => columnWithTable.split('.')[1]);\n          }\n        }\n\n        const errors = [];\n        let message = 'Validation error';\n\n        for (const field of fields) {\n          errors.push(new sequelizeErrors.ValidationErrorItem(\n            this.getUniqueConstraintErrorMessage(field),\n            'unique violation', // sequelizeErrors.ValidationErrorItem.Origins.DB,\n            field,\n            this.instance && this.instance[field],\n            this.instance,\n            'not_unique'\n          ));\n        }\n\n        if (this.model) {\n          _.forOwn(this.model.uniqueKeys, constraint => {\n            if (_.isEqual(constraint.fields, fields) && !!constraint.msg) {\n              message = constraint.msg;\n              return false;\n            }\n          });\n        }\n\n        return new sequelizeErrors.UniqueConstraintError({ message, errors, parent: err, fields, stack: errStack });\n      }\n      case 'SQLITE_BUSY':\n        return new sequelizeErrors.TimeoutError(err, { stack: errStack });\n\n      default:\n        return new sequelizeErrors.DatabaseError(err, { stack: errStack });\n    }\n  }\n\n  async handleShowIndexesQuery(data) {\n    // Sqlite returns indexes so the one that was defined last is returned first. Lets reverse that!\n    return Promise.all(data.reverse().map(async item => {\n      item.fields = [];\n      item.primary = false;\n      item.unique = !!item.unique;\n      item.constraintName = item.name;\n      const columns = await this.run(`PRAGMA INDEX_INFO(\\`${item.name}\\`)`);\n      for (const column of columns) {\n        item.fields[column.seqno] = {\n          attribute: column.name,\n          length: undefined,\n          order: undefined\n        };\n      }\n\n      return item;\n    }));\n  }\n\n  getDatabaseMethod() {\n    if (this.isInsertQuery() || this.isUpdateQuery() || this.isUpsertQuery() || this.isBulkUpdateQuery() || this.sql.toLowerCase().includes('CREATE TEMPORARY TABLE'.toLowerCase()) || this.options.type === QueryTypes.BULKDELETE) {\n      return 'run';\n    }\n    return 'all';\n  }\n}\n\nmodule.exports = Query;\nmodule.exports.Query = Query;\nmodule.exports.default = Query;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,28,46,48,30,57,32,56,21,47,23,33,37,31,31,35,19,17,26,16,30,28,61,5,3,79,18,23,5,28,48,38,31,5,27,37,52,40,25,11,24,10,14,73,40,71,11,24,10,7,42,50,81,97,23,9,22,8,5,26,39,56,24,50,7,18,17,38,24,84,9,39,82,7,31,93,7,21,7,21,3,32,27,17,3,9,58,3,24,40,35,41,5,3,22,22,3,42,71,30,61,82,47,53,11,9,7,5,19,3,16,48,3,20,52,3,19,51,3,36,22,50,18,5,72,108,110,18,3,40,24,71,20,61,63,49,5,3,23,55,3,34,75,3,24,56,3,28,60,3,21,53,3,19,51,3,23,55,3,23,55,3,24,56,3,19,51,3,30,22,32,45,87,58,41,32,9,23,19,5,27,41,19,36,67,34,11,9,32,31,9,17,9,47,55,26,44,47,10,55,9,46,27,38,48,44,31,79,17,9,12,46,27,18,78,9,5,29,54,5,18,3,27,23,65,69,18,3,17,53,3,44,41,76,103,33,26,43,53,19,38,74,14,49,7,48,5,75,35,22,21,54,5,18,41,29,22,70,7,6,3,56,23,16,5,10,15,11,16,14,12,35,13,12,13,18,16,15,18,18,48,17,19,16,63,25,26,19,25,29,23,23,17,16,22,40,77,64,28,54,16,32,9,45,7,6,35,45,62,59,7,24,6,35,39,77,44,78,7,39,6,29,33,71,72,81,84,9,58,7,33,6,33,37,75,40,39,71,7,37,6,47,59,183,34,6,81,29,28,15,50,24,24,32,32,7,26,26,67,21,28,81,33,44,85,11,65,77,63,52,11,9,7,30,30,48,25,69,36,84,35,62,18,38,35,48,11,9,73,30,43,27,30,25,44,89,85,54,34,36,85,41,52,88,19,77,89,71,76,19,17,34,39,17,49,33,37,40,17,15,20,33,13,39,41,45,22,33,15,46,46,54,72,30,73,17,22,47,47,17,75,15,13,24,18,33,39,25,44,39,56,17,57,15,13,11,9,48,22,36,48,7,26,39,23,26,21,40,85,81,50,30,32,81,37,48,84,15,73,85,67,72,15,13,30,35,13,45,29,33,36,13,11,16,29,9,35,37,41,18,29,11,42,42,50,68,26,69,13,18,43,43,13,71,11,9,25,34,9,14,35,7,5,19,3,1,31,45,39,33,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/abstract/query.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst SqlString = require('../../sql-string');\nconst QueryTypes = require('../../query-types');\nconst Dot = require('dottie');\nconst deprecations = require('../../utils/deprecations');\nconst uuid = require('uuid').v4;\nconst { safeStringifyJson } = require('../../utils.js');\n\nclass AbstractQuery {\n\n  constructor(connection, sequelize, options) {\n    this.uuid = uuid();\n    this.connection = connection;\n    this.instance = options.instance;\n    this.model = options.model;\n    this.sequelize = sequelize;\n    this.options = {\n      plain: false,\n      raw: false,\n      // eslint-disable-next-line no-console\n      logging: console.log,\n      ...options\n    };\n    this.checkLoggingOption();\n\n    if (options.rawErrors) {\n      // The default implementation in AbstractQuery just returns the same\n      // error object. By overidding this.formatError, this saves every dialect\n      // having to check for options.rawErrors in their own formatError\n      // implementations.\n      this.formatError = AbstractQuery.prototype.formatError;\n    }\n  }\n\n  /**\n   * rewrite query with parameters\n   *\n   * Examples:\n   *\n   *   query.formatBindParameters('select $1 as foo', ['fooval']);\n   *\n   *   query.formatBindParameters('select $foo as foo', { foo: 'fooval' });\n   *\n   * Options\n   *   skipUnescape: bool, skip unescaping $$\n   *   skipValueReplace: bool, do not replace (but do unescape $$). Check correct syntax and if all values are available\n   *\n   * @param {string} sql\n   * @param {object|Array} values\n   * @param {string} dialect\n   * @param {Function} [replacementFunc]\n   * @param {object} [options]\n   * @private\n   */\n  static formatBindParameters(sql, values, dialect, replacementFunc, options) {\n    if (!values) {\n      return [sql, []];\n    }\n\n    options = options || {};\n    if (typeof replacementFunc !== 'function') {\n      options = replacementFunc || {};\n      replacementFunc = undefined;\n    }\n\n    if (!replacementFunc) {\n      if (options.skipValueReplace) {\n        replacementFunc = (match, key, values) => {\n          if (values[key] !== undefined) {\n            return match;\n          }\n          return undefined;\n        };\n      } else {\n        replacementFunc = (match, key, values, timeZone, dialect) => {\n          if (values[key] !== undefined) {\n            return SqlString.escape(values[key], timeZone, dialect);\n          }\n          return undefined;\n        };\n      }\n    } else if (options.skipValueReplace) {\n      const origReplacementFunc = replacementFunc;\n      replacementFunc = (match, key, values, timeZone, dialect, options) => {\n        if (origReplacementFunc(match, key, values, timeZone, dialect, options) !== undefined) {\n          return match;\n        }\n        return undefined;\n      };\n    }\n\n    const timeZone = null;\n    const list = Array.isArray(values);\n    sql = sql.replace(/\\B\\$(\\$|\\w+)/g, (match, key) => {\n      if ('$' === key) {\n        return options.skipUnescape ? match : key;\n      }\n\n      let replVal;\n      if (list) {\n        if (key.match(/^[1-9]\\d*$/)) {\n          key = key - 1;\n          replVal = replacementFunc(match, key, values, timeZone, dialect, options);\n        }\n      } else if (!key.match(/^\\d*$/)) {\n        replVal = replacementFunc(match, key, values, timeZone, dialect, options);\n      }\n      if (replVal === undefined) {\n        throw new Error(`Named bind parameter \"${match}\" has no value in the given object.`);\n      }\n      return replVal;\n    });\n    return [sql, []];\n  }\n\n  /**\n   * Formats a raw database error from the database library into a common Sequelize exception.\n   *\n   * @param {Error} error The exception object.\n   * @param {object} errStack The stack trace that started the database query.\n   * @returns {BaseError} the new formatted error object.\n   */\n  formatError(error, errStack) {\n    // Default implementation, no formatting.\n    // Each dialect overrides this method to parse errors from their respective the database engines.\n    error.stack = errStack;\n\n    return error;\n  }\n\n  /**\n   * Execute the passed sql query.\n   *\n   * Examples:\n   *\n   *     query.run('SELECT 1')\n   *\n   * @private\n   */\n  run() {\n    throw new Error('The run method wasn\\'t overwritten!');\n  }\n\n  /**\n   * Check the logging option of the instance and print deprecation warnings.\n   *\n   * @private\n   */\n  checkLoggingOption() {\n    if (this.options.logging === true) {\n      deprecations.noTrueLogging();\n      // eslint-disable-next-line no-console\n      this.options.logging = console.log;\n    }\n  }\n\n  /**\n   * Get the attributes of an insert query, which contains the just inserted id.\n   *\n   * @returns {string} The field name.\n   * @private\n   */\n  getInsertIdField() {\n    return 'insertId';\n  }\n\n  getUniqueConstraintErrorMessage(field) {\n    let message = field ? `${field} must be unique` : 'Must be unique';\n\n    if (field && this.model) {\n      for (const key of Object.keys(this.model.uniqueKeys)) {\n        if (this.model.uniqueKeys[key].fields.includes(field.replace(/\"/g, ''))) {\n          if (this.model.uniqueKeys[key].msg) {\n            message = this.model.uniqueKeys[key].msg;\n          }\n        }\n      }\n    }\n    return message;\n  }\n\n  isRawQuery() {\n    return this.options.type === QueryTypes.RAW;\n  }\n\n  isVersionQuery() {\n    return this.options.type === QueryTypes.VERSION;\n  }\n\n  isUpsertQuery() {\n    return this.options.type === QueryTypes.UPSERT;\n  }\n\n  isInsertQuery(results, metaData) {\n    let result = true;\n\n    if (this.options.type === QueryTypes.INSERT) {\n      return true;\n    }\n\n    // is insert query if sql contains insert into\n    result = result && this.sql.toLowerCase().startsWith('insert into');\n\n    // is insert query if no results are passed or if the result has the inserted id\n    result = result && (!results || Object.prototype.hasOwnProperty.call(results, this.getInsertIdField()));\n\n    // is insert query if no metadata are passed or if the metadata has the inserted id\n    result = result && (!metaData || Object.prototype.hasOwnProperty.call(metaData, this.getInsertIdField()));\n\n    return result;\n  }\n\n  handleInsertQuery(results, metaData) {\n    if (this.instance) {\n      // add the inserted row id to the instance\n      const autoIncrementAttribute = this.model.autoIncrementAttribute;\n      let id = null;\n\n      id = id || results && results[this.getInsertIdField()];\n      id = id || metaData && metaData[this.getInsertIdField()];\n\n      this.instance[autoIncrementAttribute] = id;\n    }\n  }\n\n  isShowTablesQuery() {\n    return this.options.type === QueryTypes.SHOWTABLES;\n  }\n\n  handleShowTablesQuery(results) {\n    return _.flatten(results.map(resultSet => Object.values(resultSet)));\n  }\n\n  isShowIndexesQuery() {\n    return this.options.type === QueryTypes.SHOWINDEXES;\n  }\n\n  isShowConstraintsQuery() {\n    return this.options.type === QueryTypes.SHOWCONSTRAINTS;\n  }\n\n  isDescribeQuery() {\n    return this.options.type === QueryTypes.DESCRIBE;\n  }\n\n  isSelectQuery() {\n    return this.options.type === QueryTypes.SELECT;\n  }\n\n  isBulkUpdateQuery() {\n    return this.options.type === QueryTypes.BULKUPDATE;\n  }\n\n  isBulkDeleteQuery() {\n    return this.options.type === QueryTypes.BULKDELETE;\n  }\n\n  isForeignKeysQuery() {\n    return this.options.type === QueryTypes.FOREIGNKEYS;\n  }\n\n  isUpdateQuery() {\n    return this.options.type === QueryTypes.UPDATE;\n  }\n\n  handleSelectQuery(results) {\n    let result = null;\n\n    // Map raw fields to names if a mapping is provided\n    if (this.options.fieldMap) {\n      const fieldMap = this.options.fieldMap;\n      results = results.map(result => _.reduce(fieldMap, (result, name, field) => {\n        if (result[field] !== undefined && name !== field) {\n          result[name] = result[field];\n          delete result[field];\n        }\n        return result;\n      }, result));\n    }\n\n    // Raw queries\n    if (this.options.raw) {\n      result = results.map(result => {\n        let o = {};\n\n        for (const key in result) {\n          if (Object.prototype.hasOwnProperty.call(result, key)) {\n            o[key] = result[key];\n          }\n        }\n\n        if (this.options.nest) {\n          o = Dot.transform(o);\n        }\n\n        return o;\n      });\n    // Queries with include\n    } else if (this.options.hasJoin === true) {\n      results = AbstractQuery._groupJoinData(results, {\n        model: this.model,\n        includeMap: this.options.includeMap,\n        includeNames: this.options.includeNames\n      }, {\n        checkExisting: this.options.hasMultiAssociation\n      });\n\n      result = this.model.bulkBuild(results, {\n        isNewRecord: false,\n        include: this.options.include,\n        includeNames: this.options.includeNames,\n        includeMap: this.options.includeMap,\n        includeValidated: true,\n        attributes: this.options.originalAttributes || this.options.attributes,\n        raw: true\n      });\n    // Regular queries\n    } else {\n      result = this.model.bulkBuild(results, {\n        isNewRecord: false,\n        raw: true,\n        attributes: this.options.originalAttributes || this.options.attributes\n      });\n    }\n\n    // return the first real model instance if options.plain is set (e.g. Model.find)\n    if (this.options.plain) {\n      result = result.length === 0 ? null : result[0];\n    }\n    return result;\n  }\n\n  isShowOrDescribeQuery() {\n    let result = false;\n\n    result = result || this.sql.toLowerCase().startsWith('show');\n    result = result || this.sql.toLowerCase().startsWith('describe');\n\n    return result;\n  }\n\n  isCallQuery() {\n    return this.sql.toLowerCase().startsWith('call');\n  }\n\n  /**\n   * @param {string} sql\n   * @param {Function} debugContext\n   * @param {Array|object} parameters\n   * @protected\n   * @returns {Function} A function to call after the query was completed.\n   */\n  _logQuery(sql, debugContext, parameters) {\n    const { connection, options } = this;\n    const benchmark = this.sequelize.options.benchmark || options.benchmark;\n    const logQueryParameters = this.sequelize.options.logQueryParameters || options.logQueryParameters;\n    const startTime = Date.now();\n    let logParameter = '';\n\n    if (logQueryParameters && parameters) {\n      const delimiter = sql.endsWith(';') ? '' : ';';\n      let paramStr;\n      if (Array.isArray(parameters)) {\n        paramStr = parameters.map(p=>safeStringifyJson(p)).join(', ');\n      } else {\n        paramStr = safeStringifyJson(parameters);\n      }\n      logParameter = `${delimiter} ${paramStr}`;\n    }\n    const fmt = `(${connection.uuid || 'default'}): ${sql}${logParameter}`;\n    const msg = `Executing ${fmt}`;\n    debugContext(msg);\n    if (!benchmark) {\n      this.sequelize.log(`Executing ${fmt}`, options);\n    }\n    return () => {\n      const afterMsg = `Executed ${fmt}`;\n      debugContext(afterMsg);\n      if (benchmark) {\n        this.sequelize.log(afterMsg, Date.now() - startTime, options);\n      }\n    };\n  }\n\n  /**\n   * The function takes the result of the query execution and groups\n   * the associated data by the callee.\n   *\n   * Example:\n   *   groupJoinData([\n   *     {\n   *       some: 'data',\n   *       id: 1,\n   *       association: { foo: 'bar', id: 1 }\n   *     }, {\n   *       some: 'data',\n   *       id: 1,\n   *       association: { foo: 'bar', id: 2 }\n   *     }, {\n   *       some: 'data',\n   *       id: 1,\n   *       association: { foo: 'bar', id: 3 }\n   *     }\n   *   ])\n   *\n   * Result:\n   *   Something like this:\n   *\n   *   [\n   *     {\n   *       some: 'data',\n   *       id: 1,\n   *       association: [\n   *         { foo: 'bar', id: 1 },\n   *         { foo: 'bar', id: 2 },\n   *         { foo: 'bar', id: 3 }\n   *       ]\n   *     }\n   *   ]\n   *\n   * @param {Array} rows\n   * @param {object} includeOptions\n   * @param {object} options\n   * @private\n   */\n  static _groupJoinData(rows, includeOptions, options) {\n\n    /*\n     * Assumptions\n     * ID is not necessarily the first field\n     * All fields for a level is grouped in the same set (i.e. Panel.id, Task.id, Panel.title is not possible)\n     * Parent keys will be seen before any include/child keys\n     * Previous set won't necessarily be parent set (one parent could have two children, one child would then be previous set for the other)\n     */\n\n    /*\n     * Author (MH) comment: This code is an unreadable mess, but it's performant.\n     * groupJoinData is a performance critical function so we prioritize perf over readability.\n     */\n    if (!rows.length) {\n      return [];\n    }\n\n    // Generic looping\n    let i;\n    let length;\n    let $i;\n    let $length;\n    // Row specific looping\n    let rowsI;\n    let row;\n    const rowsLength = rows.length;\n    // Key specific looping\n    let keys;\n    let key;\n    let keyI;\n    let keyLength;\n    let prevKey;\n    let values;\n    let topValues;\n    let topExists;\n    const checkExisting = options.checkExisting;\n    // If we don't have to deduplicate we can pre-allocate the resulting array\n    let itemHash;\n    let parentHash;\n    let topHash;\n    const results = checkExisting ? [] : new Array(rowsLength);\n    const resultMap = {};\n    const includeMap = {};\n    // Result variables for the respective functions\n    let $keyPrefix;\n    let $keyPrefixString;\n    let $prevKeyPrefixString; // eslint-disable-line\n    let $prevKeyPrefix;\n    let $lastKeyPrefix;\n    let $current;\n    let $parent;\n    // Map each key to an include option\n    let previousPiece;\n    const buildIncludeMap = piece => {\n      if (Object.prototype.hasOwnProperty.call($current.includeMap, piece)) {\n        includeMap[key] = $current = $current.includeMap[piece];\n        if (previousPiece) {\n          previousPiece = `${previousPiece}.${piece}`;\n        } else {\n          previousPiece = piece;\n        }\n        includeMap[previousPiece] = $current;\n      }\n    };\n    // Calculate the string prefix of a key ('User.Results' for 'User.Results.id')\n    const keyPrefixStringMemo = {};\n    const keyPrefixString = (key, memo) => {\n      if (!Object.prototype.hasOwnProperty.call(memo, key)) {\n        memo[key] = key.substr(0, key.lastIndexOf('.'));\n      }\n      return memo[key];\n    };\n    // Removes the prefix from a key ('id' for 'User.Results.id')\n    const removeKeyPrefixMemo = {};\n    const removeKeyPrefix = key => {\n      if (!Object.prototype.hasOwnProperty.call(removeKeyPrefixMemo, key)) {\n        const index = key.lastIndexOf('.');\n        removeKeyPrefixMemo[key] = key.substr(index === -1 ? 0 : index + 1);\n      }\n      return removeKeyPrefixMemo[key];\n    };\n    // Calculates the array prefix of a key (['User', 'Results'] for 'User.Results.id')\n    const keyPrefixMemo = {};\n    const keyPrefix = key => {\n      // We use a double memo and keyPrefixString so that different keys with the same prefix will receive the same array instead of differnet arrays with equal values\n      if (!Object.prototype.hasOwnProperty.call(keyPrefixMemo, key)) {\n        const prefixString = keyPrefixString(key, keyPrefixStringMemo);\n        if (!Object.prototype.hasOwnProperty.call(keyPrefixMemo, prefixString)) {\n          keyPrefixMemo[prefixString] = prefixString ? prefixString.split('.') : [];\n        }\n        keyPrefixMemo[key] = keyPrefixMemo[prefixString];\n      }\n      return keyPrefixMemo[key];\n    };\n    // Calcuate the last item in the array prefix ('Results' for 'User.Results.id')\n    const lastKeyPrefixMemo = {};\n    const lastKeyPrefix = key => {\n      if (!Object.prototype.hasOwnProperty.call(lastKeyPrefixMemo, key)) {\n        const prefix = keyPrefix(key);\n        const length = prefix.length;\n\n        lastKeyPrefixMemo[key] = !length ? '' : prefix[length - 1];\n      }\n      return lastKeyPrefixMemo[key];\n    };\n    const getUniqueKeyAttributes = model => {\n      let uniqueKeyAttributes = _.chain(model.uniqueKeys);\n      uniqueKeyAttributes = uniqueKeyAttributes\n        .result(`${uniqueKeyAttributes.findKey()}.fields`)\n        .map(field => _.findKey(model.attributes, chr => chr.field === field))\n        .value();\n\n      return uniqueKeyAttributes;\n    };\n    const stringify = obj => obj instanceof Buffer ? obj.toString('hex') : obj;\n    let primaryKeyAttributes;\n    let uniqueKeyAttributes;\n    let prefix;\n\n    for (rowsI = 0; rowsI < rowsLength; rowsI++) {\n      row = rows[rowsI];\n\n      // Keys are the same for all rows, so only need to compute them on the first row\n      if (rowsI === 0) {\n        keys = Object.keys(row);\n        keyLength = keys.length;\n      }\n\n      if (checkExisting) {\n        topExists = false;\n\n        // Compute top level hash key (this is usually just the primary key values)\n        $length = includeOptions.model.primaryKeyAttributes.length;\n        topHash = '';\n        if ($length === 1) {\n          topHash = stringify(row[includeOptions.model.primaryKeyAttributes[0]]);\n        }\n        else if ($length > 1) {\n          for ($i = 0; $i < $length; $i++) {\n            topHash += stringify(row[includeOptions.model.primaryKeyAttributes[$i]]);\n          }\n        }\n        else if (!_.isEmpty(includeOptions.model.uniqueKeys)) {\n          uniqueKeyAttributes = getUniqueKeyAttributes(includeOptions.model);\n          for ($i = 0; $i < uniqueKeyAttributes.length; $i++) {\n            topHash += row[uniqueKeyAttributes[$i]];\n          }\n        }\n      }\n\n      topValues = values = {};\n      $prevKeyPrefix = undefined;\n      for (keyI = 0; keyI < keyLength; keyI++) {\n        key = keys[keyI];\n\n        // The string prefix isn't actualy needed\n        // We use it so keyPrefix for different keys will resolve to the same array if they have the same prefix\n        // TODO: Find a better way?\n        $keyPrefixString = keyPrefixString(key, keyPrefixStringMemo);\n        $keyPrefix = keyPrefix(key);\n\n        // On the first row we compute the includeMap\n        if (rowsI === 0 && !Object.prototype.hasOwnProperty.call(includeMap, key)) {\n          if (!$keyPrefix.length) {\n            includeMap[key] = includeMap[''] = includeOptions;\n          } else {\n            $current = includeOptions;\n            previousPiece = undefined;\n            $keyPrefix.forEach(buildIncludeMap);\n          }\n        }\n        // End of key set\n        if ($prevKeyPrefix !== undefined && $prevKeyPrefix !== $keyPrefix) {\n          if (checkExisting) {\n            // Compute hash key for this set instance\n            // TODO: Optimize\n            length = $prevKeyPrefix.length;\n            $parent = null;\n            parentHash = null;\n\n            if (length) {\n              for (i = 0; i < length; i++) {\n                prefix = $parent ? `${$parent}.${$prevKeyPrefix[i]}` : $prevKeyPrefix[i];\n                primaryKeyAttributes = includeMap[prefix].model.primaryKeyAttributes;\n                $length = primaryKeyAttributes.length;\n                itemHash = prefix;\n                if ($length === 1) {\n                  itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[0]}`]);\n                }\n                else if ($length > 1) {\n                  for ($i = 0; $i < $length; $i++) {\n                    itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[$i]}`]);\n                  }\n                }\n                else if (!_.isEmpty(includeMap[prefix].model.uniqueKeys)) {\n                  uniqueKeyAttributes = getUniqueKeyAttributes(includeMap[prefix].model);\n                  for ($i = 0; $i < uniqueKeyAttributes.length; $i++) {\n                    itemHash += row[`${prefix}.${uniqueKeyAttributes[$i]}`];\n                  }\n                }\n                if (!parentHash) {\n                  parentHash = topHash;\n                }\n\n                itemHash = parentHash + itemHash;\n                $parent = prefix;\n                if (i < length - 1) {\n                  parentHash = itemHash;\n                }\n              }\n            } else {\n              itemHash = topHash;\n            }\n\n            if (itemHash === topHash) {\n              if (!resultMap[itemHash]) {\n                resultMap[itemHash] = values;\n              } else {\n                topExists = true;\n              }\n            } else if (!resultMap[itemHash]) {\n              $parent = resultMap[parentHash];\n              $lastKeyPrefix = lastKeyPrefix(prevKey);\n\n              if (includeMap[prevKey].association.isSingleAssociation) {\n                if ($parent) {\n                  $parent[$lastKeyPrefix] = resultMap[itemHash] = values;\n                }\n              } else {\n                if (!$parent[$lastKeyPrefix]) {\n                  $parent[$lastKeyPrefix] = [];\n                }\n                $parent[$lastKeyPrefix].push(resultMap[itemHash] = values);\n              }\n            }\n\n            // Reset values\n            values = {};\n          } else {\n            // If checkExisting is false it's because there's only 1:1 associations in this query\n            // However we still need to map onto the appropriate parent\n            // For 1:1 we map forward, initializing the value object on the parent to be filled in the next iterations of the loop\n            $current = topValues;\n            length = $keyPrefix.length;\n            if (length) {\n              for (i = 0; i < length; i++) {\n                if (i === length - 1) {\n                  values = $current[$keyPrefix[i]] = {};\n                }\n                $current = $current[$keyPrefix[i]] || {};\n              }\n            }\n          }\n        }\n\n        // End of iteration, set value and set prev values (for next iteration)\n        values[removeKeyPrefix(key)] = row[key];\n        prevKey = key;\n        $prevKeyPrefix = $keyPrefix;\n        $prevKeyPrefixString = $keyPrefixString;\n      }\n\n      if (checkExisting) {\n        length = $prevKeyPrefix.length;\n        $parent = null;\n        parentHash = null;\n\n        if (length) {\n          for (i = 0; i < length; i++) {\n            prefix = $parent ? `${$parent}.${$prevKeyPrefix[i]}` : $prevKeyPrefix[i];\n            primaryKeyAttributes = includeMap[prefix].model.primaryKeyAttributes;\n            $length = primaryKeyAttributes.length;\n            itemHash = prefix;\n            if ($length === 1) {\n              itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[0]}`]);\n            }\n            else if ($length > 0) {\n              for ($i = 0; $i < $length; $i++) {\n                itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[$i]}`]);\n              }\n            }\n            else if (!_.isEmpty(includeMap[prefix].model.uniqueKeys)) {\n              uniqueKeyAttributes = getUniqueKeyAttributes(includeMap[prefix].model);\n              for ($i = 0; $i < uniqueKeyAttributes.length; $i++) {\n                itemHash += row[`${prefix}.${uniqueKeyAttributes[$i]}`];\n              }\n            }\n            if (!parentHash) {\n              parentHash = topHash;\n            }\n\n            itemHash = parentHash + itemHash;\n            $parent = prefix;\n            if (i < length - 1) {\n              parentHash = itemHash;\n            }\n          }\n        } else {\n          itemHash = topHash;\n        }\n\n        if (itemHash === topHash) {\n          if (!resultMap[itemHash]) {\n            resultMap[itemHash] = values;\n          } else {\n            topExists = true;\n          }\n        } else if (!resultMap[itemHash]) {\n          $parent = resultMap[parentHash];\n          $lastKeyPrefix = lastKeyPrefix(prevKey);\n\n          if (includeMap[prevKey].association.isSingleAssociation) {\n            if ($parent) {\n              $parent[$lastKeyPrefix] = resultMap[itemHash] = values;\n            }\n          } else {\n            if (!$parent[$lastKeyPrefix]) {\n              $parent[$lastKeyPrefix] = [];\n            }\n            $parent[$lastKeyPrefix].push(resultMap[itemHash] = values);\n          }\n        }\n        if (!topExists) {\n          results.push(topValues);\n        }\n      } else {\n        results[rowsI] = topValues;\n      }\n    }\n\n    return results;\n  }\n}\n\nmodule.exports = AbstractQuery;\nmodule.exports.AbstractQuery = AbstractQuery;\nmodule.exports.default = AbstractQuery;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/query-generator.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,37,49,28,64,70,56,18,94,3,22,94,3,18,50,3,52,28,27,133,25,36,67,42,73,38,47,41,113,51,81,13,11,41,35,48,68,20,75,13,11,9,74,7,5,45,39,82,29,47,34,107,9,9,5,30,47,5,68,44,3,23,25,3,34,35,19,5,69,91,25,28,28,32,32,40,47,61,28,56,31,17,7,58,25,46,36,28,43,28,43,33,16,9,47,17,7,12,5,59,45,57,5,27,3,23,32,33,5,59,51,5,17,3,69,37,85,5,37,41,31,7,5,121,3,40,26,31,78,68,74,44,3,21,94,3,69,28,38,93,33,22,20,64,21,46,43,30,57,9,9,5,38,39,82,152,14,163,7,5,14,83,24,218,12,117,5,27,3,47,12,50,206,15,3,54,38,75,22,43,5,24,138,5,70,3,31,22,36,40,47,33,43,97,29,9,65,76,9,39,27,9,34,32,39,36,11,9,34,77,28,40,74,18,55,11,69,34,67,11,34,67,11,9,32,14,37,7,5,18,3,31,62,3,51,76,25,51,5,21,3,54,42,40,86,5,69,3,58,19,22,40,15,6,75,3,39,74,3,44,50,24,40,25,51,32,8,12,46,5,55,67,104,352,3,64,24,50,40,25,51,32,8,12,46,5,55,67,104,400,3,75,24,50,40,25,51,32,8,12,46,5,55,67,212,110,364,3,38,29,68,5,60,3,33,20,56,86,57,47,55,48,53,85,14,61,5,3,31,100,3,34,84,3,38,67,3,1,38,43,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/sqlite/query-generator.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('../../utils');\nconst Transaction = require('../../transaction');\nconst _ = require('lodash');\nconst MySqlQueryGenerator = require('../mysql/query-generator');\nconst AbstractQueryGenerator = require('../abstract/query-generator');\n\nclass SQLiteQueryGenerator extends MySqlQueryGenerator {\n  createSchema() {\n    return \"SELECT name FROM `sqlite_master` WHERE type='table' and name!='sqlite_sequence';\";\n  }\n\n  showSchemasQuery() {\n    return \"SELECT name FROM `sqlite_master` WHERE type='table' and name!='sqlite_sequence';\";\n  }\n\n  versionQuery() {\n    return 'SELECT sqlite_version() as `version`';\n  }\n\n  createTableQuery(tableName, attributes, options) {\n    options = options || {};\n\n    const primaryKeys = [];\n    const needsMultiplePrimaryKeys = Object.values(attributes).filter(definition => definition.includes('PRIMARY KEY')).length > 1;\n    const attrArray = [];\n\n    for (const attr in attributes) {\n      if (Object.prototype.hasOwnProperty.call(attributes, attr)) {\n        const dataType = attributes[attr];\n        const containsAutoIncrement = dataType.includes('AUTOINCREMENT');\n\n        let dataTypeString = dataType;\n        if (dataType.includes('PRIMARY KEY')) {\n          if (dataType.includes('INT')) {\n            // Only INTEGER is allowed for primary key, see https://github.com/sequelize/sequelize/issues/969 (no lenght, unsigned etc)\n            dataTypeString = containsAutoIncrement ? 'INTEGER PRIMARY KEY AUTOINCREMENT' : 'INTEGER PRIMARY KEY';\n\n            if (dataType.includes(' REFERENCES')) {\n              dataTypeString += dataType.substr(dataType.indexOf(' REFERENCES'));\n            }\n          }\n\n          if (needsMultiplePrimaryKeys) {\n            primaryKeys.push(attr);\n            if (dataType.includes('NOT NULL')) {\n              dataTypeString = dataType.replace(' PRIMARY KEY', '');\n            } else {\n              dataTypeString = dataType.replace('PRIMARY KEY', 'NOT NULL');\n            }\n          }\n        }\n        attrArray.push(`${this.quoteIdentifier(attr)} ${dataTypeString}`);\n      }\n    }\n\n    const table = this.quoteTable(tableName);\n    let attrStr = attrArray.join(', ');\n    const pkString = primaryKeys.map(pk => this.quoteIdentifier(pk)).join(', ');\n\n    if (options.uniqueKeys) {\n      _.each(options.uniqueKeys, columns => {\n        if (columns.customIndex) {\n          attrStr += `, UNIQUE (${columns.fields.map(field => this.quoteIdentifier(field)).join(', ')})`;\n        }\n      });\n    }\n\n    if (pkString.length > 0) {\n      attrStr += `, PRIMARY KEY (${pkString})`;\n    }\n\n    const sql = `CREATE TABLE IF NOT EXISTS ${table} (${attrStr});`;\n    return this.replaceBooleanDefaults(sql);\n  }\n\n  booleanValue(value) {\n    return value ? 1 : 0;\n  }\n\n  /**\n   * Check whether the statmement is json function or simple path\n   *\n   * @param   {string}  stmt  The statement to validate\n   * @returns {boolean}       true if the given statement is json function\n   * @throws  {Error}         throw if the statement looks like json function but has invalid token\n   */\n  _checkValidJsonStatement(stmt) {\n    if (typeof stmt !== 'string') {\n      return false;\n    }\n\n    // https://sqlite.org/json1.html\n    const jsonFunctionRegex = /^\\s*(json(?:_[a-z]+){0,2})\\([^)]*\\)/i;\n    const tokenCaptureRegex = /^\\s*((?:([`\"'])(?:(?!\\2).|\\2{2})*\\2)|[\\w\\d\\s]+|[().,;+-])/i;\n\n    let currentIndex = 0;\n    let openingBrackets = 0;\n    let closingBrackets = 0;\n    let hasJsonFunction = false;\n    let hasInvalidToken = false;\n\n    while (currentIndex < stmt.length) {\n      const string = stmt.substr(currentIndex);\n      const functionMatches = jsonFunctionRegex.exec(string);\n      if (functionMatches) {\n        currentIndex += functionMatches[0].indexOf('(');\n        hasJsonFunction = true;\n        continue;\n      }\n\n      const tokenMatches = tokenCaptureRegex.exec(string);\n      if (tokenMatches) {\n        const capturedToken = tokenMatches[1];\n        if (capturedToken === '(') {\n          openingBrackets++;\n        } else if (capturedToken === ')') {\n          closingBrackets++;\n        } else if (capturedToken === ';') {\n          hasInvalidToken = true;\n          break;\n        }\n        currentIndex += tokenMatches[0].length;\n        continue;\n      }\n\n      break;\n    }\n\n    // Check invalid json statement\n    hasInvalidToken |= openingBrackets !== closingBrackets;\n    if (hasJsonFunction && hasInvalidToken) {\n      throw new Error(`Invalid json statement: ${stmt}`);\n    }\n\n    // return true if the statement has valid json function\n    return hasJsonFunction;\n  }\n\n  //sqlite can't cast to datetime so we need to convert date values to their ISO strings\n  _toJSONValue(value) {\n    if (value instanceof Date) {\n      return value.toISOString();\n    }\n    if (Array.isArray(value) && value[0] instanceof Date) {\n      return value.map(val => val.toISOString());\n    }\n    return value;\n  }\n\n\n  handleSequelizeMethod(smth, tableName, factory, options, prepend) {\n    if (smth instanceof Utils.Json) {\n      return super.handleSequelizeMethod(smth, tableName, factory, options, prepend);\n    }\n\n    if (smth instanceof Utils.Cast) {\n      if (/timestamp/i.test(smth.type)) {\n        smth.type = 'datetime';\n      }\n    }\n\n    return AbstractQueryGenerator.prototype.handleSequelizeMethod.call(this, smth, tableName, factory, options, prepend);\n  }\n\n  addColumnQuery(table, key, dataType) {\n    const attributes = {};\n    attributes[key] = dataType;\n    const fields = this.attributesToSQL(attributes, { context: 'addColumn' });\n    const attribute = `${this.quoteIdentifier(key)} ${fields[key]}`;\n\n    const sql = `ALTER TABLE ${this.quoteTable(table)} ADD ${attribute};`;\n\n    return this.replaceBooleanDefaults(sql);\n  }\n\n  showTablesQuery() {\n    return 'SELECT name FROM `sqlite_master` WHERE type=\\'table\\' and name!=\\'sqlite_sequence\\';';\n  }\n\n  updateQuery(tableName, attrValueHash, where, options, attributes) {\n    options = options || {};\n    _.defaults(options, this.options);\n\n    attrValueHash = Utils.removeNullValuesFromHash(attrValueHash, options.omitNull, options);\n\n    const modelAttributeMap = {};\n    const values = [];\n    const bind = [];\n    const bindParam = options.bindParam || this.bindParam(bind);\n\n    if (attributes) {\n      _.each(attributes, (attribute, key) => {\n        modelAttributeMap[key] = attribute;\n        if (attribute.field) {\n          modelAttributeMap[attribute.field] = attribute;\n        }\n      });\n    }\n\n    for (const key in attrValueHash) {\n      const value = attrValueHash[key];\n\n      if (value instanceof Utils.SequelizeMethod || options.bindParam === false) {\n        values.push(`${this.quoteIdentifier(key)}=${this.escape(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'UPDATE' })}`);\n      } else {\n        values.push(`${this.quoteIdentifier(key)}=${this.format(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'UPDATE' }, bindParam)}`);\n      }\n    }\n\n    let query;\n    const whereOptions = { ...options, bindParam };\n\n    if (options.limit) {\n      query = `UPDATE ${this.quoteTable(tableName)} SET ${values.join(',')} WHERE rowid IN (SELECT rowid FROM ${this.quoteTable(tableName)} ${this.whereQuery(where, whereOptions)} LIMIT ${this.escape(options.limit)})`;\n    } else {\n      query = `UPDATE ${this.quoteTable(tableName)} SET ${values.join(',')} ${this.whereQuery(where, whereOptions)}`;\n    }\n\n    return { query, bind };\n  }\n\n  truncateTableQuery(tableName, options = {}) {\n    return [\n      `DELETE FROM ${this.quoteTable(tableName)}`,\n      options.restartIdentity ? `; DELETE FROM ${this.quoteTable('sqlite_sequence')} WHERE ${this.quoteIdentifier('name')} = ${Utils.addTicks(Utils.removeTicks(this.quoteTable(tableName), '`'), \"'\")};` : ''\n    ].join('');\n  }\n\n  deleteQuery(tableName, where, options = {}, model) {\n    _.defaults(options, this.options);\n\n    let whereClause = this.getWhereConditions(where, null, model, options);\n\n    if (whereClause) {\n      whereClause = `WHERE ${whereClause}`;\n    }\n\n    if (options.limit) {\n      whereClause = `WHERE rowid IN (SELECT rowid FROM ${this.quoteTable(tableName)} ${whereClause} LIMIT ${this.escape(options.limit)})`;\n    }\n\n    return `DELETE FROM ${this.quoteTable(tableName)} ${whereClause}`;\n  }\n\n  attributesToSQL(attributes) {\n    const result = {};\n    for (const name in attributes) {\n      const dataType = attributes[name];\n      const fieldName = dataType.field || name;\n\n      if (_.isObject(dataType)) {\n        let sql = dataType.type.toString();\n\n        if (Object.prototype.hasOwnProperty.call(dataType, 'allowNull') && !dataType.allowNull) {\n          sql += ' NOT NULL';\n        }\n\n        if (Utils.defaultValueSchemable(dataType.defaultValue)) {\n          // TODO thoroughly check that DataTypes.NOW will properly\n          // get populated on all databases as DEFAULT value\n          // i.e. mysql requires: DEFAULT CURRENT_TIMESTAMP\n          sql += ` DEFAULT ${this.escape(dataType.defaultValue, dataType)}`;\n        }\n\n        if (dataType.unique === true) {\n          sql += ' UNIQUE';\n        }\n\n        if (dataType.primaryKey) {\n          sql += ' PRIMARY KEY';\n\n          if (dataType.autoIncrement) {\n            sql += ' AUTOINCREMENT';\n          }\n        }\n\n        if (dataType.references) {\n          const referencesTable = this.quoteTable(dataType.references.model);\n\n          let referencesKey;\n          if (dataType.references.key) {\n            referencesKey = this.quoteIdentifier(dataType.references.key);\n          } else {\n            referencesKey = this.quoteIdentifier('id');\n          }\n\n          sql += ` REFERENCES ${referencesTable} (${referencesKey})`;\n\n          if (dataType.onDelete) {\n            sql += ` ON DELETE ${dataType.onDelete.toUpperCase()}`;\n          }\n\n          if (dataType.onUpdate) {\n            sql += ` ON UPDATE ${dataType.onUpdate.toUpperCase()}`;\n          }\n\n        }\n\n        result[fieldName] = sql;\n      } else {\n        result[fieldName] = dataType;\n      }\n    }\n\n    return result;\n  }\n\n  showIndexesQuery(tableName) {\n    return `PRAGMA INDEX_LIST(${this.quoteTable(tableName)})`;\n  }\n\n  showConstraintsQuery(tableName, constraintName) {\n    let sql = `SELECT sql FROM sqlite_master WHERE tbl_name='${tableName}'`;\n\n    if (constraintName) {\n      sql += ` AND sql LIKE '%${constraintName}%'`;\n    }\n\n    return `${sql};`;\n  }\n\n  removeIndexQuery(tableName, indexNameOrAttributes) {\n    let indexName = indexNameOrAttributes;\n\n    if (typeof indexName !== 'string') {\n      indexName = Utils.underscore(`${tableName}_${indexNameOrAttributes.join('_')}`);\n    }\n\n    return `DROP INDEX IF EXISTS ${this.quoteIdentifier(indexName)}`;\n  }\n\n  describeTableQuery(tableName, schema, schemaDelimiter) {\n    const table = {\n      _schema: schema,\n      _schemaDelimiter: schemaDelimiter,\n      tableName\n    };\n    return `PRAGMA TABLE_INFO(${this.quoteTable(this.addSchema(table))});`;\n  }\n\n  describeCreateTableQuery(tableName) {\n    return `SELECT sql FROM sqlite_master WHERE tbl_name='${tableName}';`;\n  }\n\n  removeColumnQuery(tableName, attributes) {\n\n    attributes = this.attributesToSQL(attributes);\n\n    let backupTableName;\n    if (typeof tableName === 'object') {\n      backupTableName = {\n        tableName: `${tableName.tableName}_backup`,\n        schema: tableName.schema\n      };\n    } else {\n      backupTableName = `${tableName}_backup`;\n    }\n\n    const quotedTableName = this.quoteTable(tableName);\n    const quotedBackupTableName = this.quoteTable(backupTableName);\n    const attributeNames = Object.keys(attributes).map(attr => this.quoteIdentifier(attr)).join(', ');\n\n    // Temporary table cannot work for foreign keys.\n    return `${this.createTableQuery(backupTableName, attributes)\n    }INSERT INTO ${quotedBackupTableName} SELECT ${attributeNames} FROM ${quotedTableName};`\n      + `DROP TABLE ${quotedTableName};${\n        this.createTableQuery(tableName, attributes)\n      }INSERT INTO ${quotedTableName} SELECT ${attributeNames} FROM ${quotedBackupTableName};`\n      + `DROP TABLE ${quotedBackupTableName};`;\n  }\n\n  _alterConstraintQuery(tableName, attributes, createTableSql) {\n    let backupTableName;\n\n    attributes = this.attributesToSQL(attributes);\n\n    if (typeof tableName === 'object') {\n      backupTableName = {\n        tableName: `${tableName.tableName}_backup`,\n        schema: tableName.schema\n      };\n    } else {\n      backupTableName = `${tableName}_backup`;\n    }\n    const quotedTableName = this.quoteTable(tableName);\n    const quotedBackupTableName = this.quoteTable(backupTableName);\n    const attributeNames = Object.keys(attributes).map(attr => this.quoteIdentifier(attr)).join(', ');\n\n    return `${createTableSql\n      .replace(`CREATE TABLE ${quotedTableName}`, `CREATE TABLE ${quotedBackupTableName}`)\n      .replace(`CREATE TABLE ${quotedTableName.replace(/`/g, '\"')}`, `CREATE TABLE ${quotedBackupTableName}`)\n    }INSERT INTO ${quotedBackupTableName} SELECT ${attributeNames} FROM ${quotedTableName};`\n      + `DROP TABLE ${quotedTableName};`\n      + `ALTER TABLE ${quotedBackupTableName} RENAME TO ${quotedTableName};`;\n  }\n\n  renameColumnQuery(tableName, attrNameBefore, attrNameAfter, attributes) {\n\n    let backupTableName;\n\n    attributes = this.attributesToSQL(attributes);\n\n    if (typeof tableName === 'object') {\n      backupTableName = {\n        tableName: `${tableName.tableName}_backup`,\n        schema: tableName.schema\n      };\n    } else {\n      backupTableName = `${tableName}_backup`;\n    }\n\n    const quotedTableName = this.quoteTable(tableName);\n    const quotedBackupTableName = this.quoteTable(backupTableName);\n    const attributeNamesImport = Object.keys(attributes).map(attr =>\n      attrNameAfter === attr ? `${this.quoteIdentifier(attrNameBefore)} AS ${this.quoteIdentifier(attr)}` : this.quoteIdentifier(attr)\n    ).join(', ');\n    const attributeNamesExport = Object.keys(attributes).map(attr => this.quoteIdentifier(attr)).join(', ');\n\n    // Temporary tables don't support foreign keys, so creating a temporary table will not allow foreign keys to be preserved\n    return `${this.createTableQuery(backupTableName, attributes)\n    }INSERT INTO ${quotedBackupTableName} SELECT ${attributeNamesImport} FROM ${quotedTableName};`\n      + `DROP TABLE ${quotedTableName};${\n        this.createTableQuery(tableName, attributes)\n      }INSERT INTO ${quotedTableName} SELECT ${attributeNamesExport} FROM ${quotedBackupTableName};`\n      + `DROP TABLE ${quotedBackupTableName};`;\n  }\n\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name)};`;\n    }\n\n    return `BEGIN ${transaction.options.type} TRANSACTION;`;\n  }\n\n  setIsolationLevelQuery(value) {\n    switch (value) {\n      case Transaction.ISOLATION_LEVELS.REPEATABLE_READ:\n        return '-- SQLite is not able to choose the isolation level REPEATABLE READ.';\n      case Transaction.ISOLATION_LEVELS.READ_UNCOMMITTED:\n        return 'PRAGMA read_uncommitted = ON;';\n      case Transaction.ISOLATION_LEVELS.READ_COMMITTED:\n        return 'PRAGMA read_uncommitted = OFF;';\n      case Transaction.ISOLATION_LEVELS.SERIALIZABLE:\n        return '-- SQLite\\'s default isolation level is SERIALIZABLE. Nothing to do.';\n      default:\n        throw new Error(`Unknown isolation level: ${value}`);\n    }\n  }\n\n  replaceBooleanDefaults(sql) {\n    return sql.replace(/DEFAULT '?false'?/g, 'DEFAULT 0').replace(/DEFAULT '?true'?/g, 'DEFAULT 1');\n  }\n\n  /**\n   * Generates an SQL query that returns all foreign keys of a table.\n   *\n   * @param  {string} tableName  The name of the table.\n   * @returns {string}            The generated sql query.\n   * @private\n   */\n  getForeignKeysQuery(tableName) {\n    return `PRAGMA foreign_key_list(${this.quoteTable(this.addSchema(tableName))})`;\n  }\n\n  /**\n   * Quote identifier in sql clause\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    return Utils.addTicks(Utils.removeTicks(identifier, '`'), '`');\n  }\n\n}\n\nmodule.exports = SQLiteQueryGenerator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/mysql/query-generator.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,28,37,70,29,38,85,65,89,28,39,38,42,43,28,32,33,30,53,54,49,50,12,89,58,24,19,76,28,34,7,3,46,30,20,19,16,35,38,41,81,75,9,7,3,35,76,3,18,25,3,22,25,3,18,43,3,52,30,23,20,21,16,27,27,23,36,66,17,40,16,45,31,46,58,95,39,16,95,9,51,56,66,37,14,66,7,5,45,46,82,29,58,34,46,72,11,151,9,9,5,30,56,5,37,68,97,7,5,35,35,12,30,33,106,62,54,87,61,9,7,3,58,50,16,22,39,8,46,3,29,99,19,62,12,103,5,23,3,40,35,20,29,12,32,37,29,25,23,9,9,7,3,47,35,20,33,13,42,9,7,3,44,26,32,45,49,46,61,65,73,14,83,7,5,35,20,33,61,70,9,7,3,56,26,40,46,73,5,35,20,33,15,28,9,7,3,69,37,28,190,40,7,22,16,55,26,16,44,39,60,9,25,63,9,19,7,44,41,31,59,27,115,30,43,27,7,5,83,3,23,37,30,5,25,20,5,17,3,33,52,3,54,19,60,24,53,5,65,16,33,5,25,3,40,35,54,67,7,3,47,47,36,35,56,43,47,43,33,36,50,40,68,57,9,7,3,54,42,40,86,5,35,19,38,11,32,7,3,38,38,19,23,8,5,88,35,40,30,5,34,36,5,141,68,5,36,28,5,31,33,5,28,63,5,26,27,5,26,68,5,31,77,66,92,75,7,79,37,75,14,55,7,31,69,7,31,69,7,5,20,3,40,22,35,40,79,5,18,3,34,35,19,5,25,28,28,32,32,40,47,63,28,56,31,17,7,63,28,50,31,17,7,60,25,46,36,28,43,28,43,33,16,9,47,17,7,12,5,86,57,5,27,3,42,47,35,15,25,83,77,46,9,7,3,41,79,70,57,35,15,25,49,16,7,53,76,58,8,15,7,42,65,48,47,8,9,7,3,46,35,20,33,25,39,9,7,3,38,67,3,1,38,41,1,37,43,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/mysql/query-generator.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Utils = require('../../utils');\nconst AbstractQueryGenerator = require('../abstract/query-generator');\nconst util = require('util');\nconst Op = require('../../operators');\n\n\nconst JSON_FUNCTION_REGEX = /^\\s*((?:[a-z]+_){0,2}jsonb?(?:_[a-z]+){0,2})\\([^)]*\\)/i;\nconst JSON_OPERATOR_REGEX = /^\\s*(->>?|@>|<@|\\?[|&]?|\\|{2}|#-)/i;\nconst TOKEN_CAPTURE_REGEX = /^\\s*((?:([`\"'])(?:(?!\\2).|\\2{2})*\\2)|[\\w\\d\\s]+|[().,;+-])/i;\nconst FOREIGN_KEY_FIELDS = [\n  'CONSTRAINT_NAME as constraint_name',\n  'CONSTRAINT_NAME as constraintName',\n  'CONSTRAINT_SCHEMA as constraintSchema',\n  'CONSTRAINT_SCHEMA as constraintCatalog',\n  'TABLE_NAME as tableName',\n  'TABLE_SCHEMA as tableSchema',\n  'TABLE_SCHEMA as tableCatalog',\n  'COLUMN_NAME as columnName',\n  'REFERENCED_TABLE_SCHEMA as referencedTableSchema',\n  'REFERENCED_TABLE_SCHEMA as referencedTableCatalog',\n  'REFERENCED_TABLE_NAME as referencedTableName',\n  'REFERENCED_COLUMN_NAME as referencedColumnName'\n].join(',');\n\nconst typeWithoutDefault = new Set(['BLOB', 'TEXT', 'GEOMETRY', 'JSON']);\n\nclass MySQLQueryGenerator extends AbstractQueryGenerator {\n  constructor(options) {\n    super(options);\n\n    this.OperatorMap = {\n      ...this.OperatorMap,\n      [Op.regexp]: 'REGEXP',\n      [Op.notRegexp]: 'NOT REGEXP'\n    };\n  }\n\n  createDatabaseQuery(databaseName, options) {\n    options = {\n      charset: null,\n      collate: null,\n      ...options\n    };\n\n    return Utils.joinSQLFragments([\n      'CREATE DATABASE IF NOT EXISTS',\n      this.quoteIdentifier(databaseName),\n      options.charset && `DEFAULT CHARACTER SET ${this.escape(options.charset)}`,\n      options.collate && `DEFAULT COLLATE ${this.escape(options.collate)}`,\n      ';'\n    ]);\n  }\n\n  dropDatabaseQuery(databaseName) {\n    return `DROP DATABASE IF EXISTS ${this.quoteIdentifier(databaseName)};`;\n  }\n\n  createSchema() {\n    return 'SHOW TABLES';\n  }\n\n  showSchemasQuery() {\n    return 'SHOW TABLES';\n  }\n\n  versionQuery() {\n    return 'SELECT VERSION() as `version`';\n  }\n\n  createTableQuery(tableName, attributes, options) {\n    options = {\n      engine: 'InnoDB',\n      charset: null,\n      rowFormat: null,\n      ...options\n    };\n\n    const primaryKeys = [];\n    const foreignKeys = {};\n    const attrStr = [];\n\n    for (const attr in attributes) {\n      if (!Object.prototype.hasOwnProperty.call(attributes, attr)) continue;\n      const dataType = attributes[attr];\n      let match;\n\n      if (dataType.includes('PRIMARY KEY')) {\n        primaryKeys.push(attr);\n\n        if (dataType.includes('REFERENCES')) {\n          // MySQL doesn't support inline REFERENCES declarations: move to the end\n          match = dataType.match(/^(.+) (REFERENCES.*)$/);\n          attrStr.push(`${this.quoteIdentifier(attr)} ${match[1].replace('PRIMARY KEY', '')}`);\n          foreignKeys[attr] = match[2];\n        } else {\n          attrStr.push(`${this.quoteIdentifier(attr)} ${dataType.replace('PRIMARY KEY', '')}`);\n        }\n      } else if (dataType.includes('REFERENCES')) {\n        // MySQL doesn't support inline REFERENCES declarations: move to the end\n        match = dataType.match(/^(.+) (REFERENCES.*)$/);\n        attrStr.push(`${this.quoteIdentifier(attr)} ${match[1]}`);\n        foreignKeys[attr] = match[2];\n      } else {\n        attrStr.push(`${this.quoteIdentifier(attr)} ${dataType}`);\n      }\n    }\n\n    const table = this.quoteTable(tableName);\n    let attributesClause = attrStr.join(', ');\n    const pkString = primaryKeys.map(pk => this.quoteIdentifier(pk)).join(', ');\n\n    if (options.uniqueKeys) {\n      _.each(options.uniqueKeys, (columns, indexName) => {\n        if (columns.customIndex) {\n          if (typeof indexName !== 'string') {\n            indexName = `uniq_${tableName}_${columns.fields.join('_')}`;\n          }\n          attributesClause += `, UNIQUE ${this.quoteIdentifier(indexName)} (${columns.fields.map(field => this.quoteIdentifier(field)).join(', ')})`;\n        }\n      });\n    }\n\n    if (pkString.length > 0) {\n      attributesClause += `, PRIMARY KEY (${pkString})`;\n    }\n\n    for (const fkey in foreignKeys) {\n      if (Object.prototype.hasOwnProperty.call(foreignKeys, fkey)) {\n        attributesClause += `, FOREIGN KEY (${this.quoteIdentifier(fkey)}) ${foreignKeys[fkey]}`;\n      }\n    }\n\n    return Utils.joinSQLFragments([\n      'CREATE TABLE IF NOT EXISTS',\n      table,\n      `(${attributesClause})`,\n      `ENGINE=${options.engine}`,\n      options.comment && typeof options.comment === 'string' && `COMMENT ${this.escape(options.comment)}`,\n      options.charset && `DEFAULT CHARSET=${options.charset}`,\n      options.collate && `COLLATE ${options.collate}`,\n      options.initialAutoIncrement && `AUTO_INCREMENT=${options.initialAutoIncrement}`,\n      options.rowFormat && `ROW_FORMAT=${options.rowFormat}`,\n      ';'\n    ]);\n  }\n\n  describeTableQuery(tableName, schema, schemaDelimiter) {\n    const table = this.quoteTable(\n      this.addSchema({\n        tableName,\n        _schema: schema,\n        _schemaDelimiter: schemaDelimiter\n      })\n    );\n\n    return `SHOW FULL COLUMNS FROM ${table};`;\n  }\n\n  showTablesQuery(database) {\n    let query = 'SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = \\'BASE TABLE\\'';\n    if (database) {\n      query += ` AND TABLE_SCHEMA = ${this.escape(database)}`;\n    } else {\n      query += ' AND TABLE_SCHEMA NOT IN (\\'MYSQL\\', \\'INFORMATION_SCHEMA\\', \\'PERFORMANCE_SCHEMA\\', \\'SYS\\')';\n    }\n    return `${query};`;\n  }\n\n  addColumnQuery(table, key, dataType) {\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(table),\n      'ADD',\n      this.quoteIdentifier(key),\n      this.attributeToSQL(dataType, {\n        context: 'addColumn',\n        tableName: table,\n        foreignKey: key\n      }),\n      ';'\n    ]);\n  }\n\n  removeColumnQuery(tableName, attributeName) {\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(tableName),\n      'DROP',\n      this.quoteIdentifier(attributeName),\n      ';'\n    ]);\n  }\n\n  changeColumnQuery(tableName, attributes) {\n    const attrString = [];\n    const constraintString = [];\n\n    for (const attributeName in attributes) {\n      let definition = attributes[attributeName];\n      if (definition.includes('REFERENCES')) {\n        const attrName = this.quoteIdentifier(attributeName);\n        definition = definition.replace(/.+?(?=REFERENCES)/, '');\n        constraintString.push(`FOREIGN KEY (${attrName}) ${definition}`);\n      } else {\n        attrString.push(`\\`${attributeName}\\` \\`${attributeName}\\` ${definition}`);\n      }\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(tableName),\n      attrString.length && `CHANGE ${attrString.join(', ')}`,\n      constraintString.length && `ADD ${constraintString.join(', ')}`,\n      ';'\n    ]);\n  }\n\n  renameColumnQuery(tableName, attrBefore, attributes) {\n    const attrString = [];\n\n    for (const attrName in attributes) {\n      const definition = attributes[attrName];\n      attrString.push(`\\`${attrBefore}\\` \\`${attrName}\\` ${definition}`);\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(tableName),\n      'CHANGE',\n      attrString.join(', '),\n      ';'\n    ]);\n  }\n\n  handleSequelizeMethod(smth, tableName, factory, options, prepend) {\n    if (smth instanceof Utils.Json) {\n      // Parse nested object\n      if (smth.conditions) {\n        const conditions = this.parseConditionObject(smth.conditions).map(condition =>\n          `${this.jsonPathExtractionQuery(condition.path[0], _.tail(condition.path))} = '${condition.value}'`\n        );\n\n        return conditions.join(' AND ');\n      }\n      if (smth.path) {\n        let str;\n\n        // Allow specifying conditions using the sqlite json functions\n        if (this._checkValidJsonStatement(smth.path)) {\n          str = smth.path;\n        } else {\n          // Also support json property accessors\n          const paths = _.toPath(smth.path);\n          const column = paths.shift();\n          str = this.jsonPathExtractionQuery(column, paths);\n        }\n\n        if (smth.value) {\n          str += util.format(' = %s', this.escape(smth.value));\n        }\n\n        return str;\n      }\n    } else if (smth instanceof Utils.Cast) {\n      if (/timestamp/i.test(smth.type)) {\n        smth.type = 'datetime';\n      } else if (smth.json && /boolean/i.test(smth.type)) {\n        // true or false cannot be casted as booleans within a JSON structure\n        smth.type = 'char';\n      } else if (/double precision/i.test(smth.type) || /boolean/i.test(smth.type) || /integer/i.test(smth.type)) {\n        smth.type = 'decimal';\n      } else if (/text/i.test(smth.type)) {\n        smth.type = 'char';\n      }\n    }\n\n    return super.handleSequelizeMethod(smth, tableName, factory, options, prepend);\n  }\n\n  _toJSONValue(value) {\n    // true/false are stored as strings in mysql\n    if (typeof value === 'boolean') {\n      return value.toString();\n    }\n    // null is stored as a string in mysql\n    if (value === null) {\n      return 'null';\n    }\n    return value;\n  }\n\n  truncateTableQuery(tableName) {\n    return `TRUNCATE ${this.quoteTable(tableName)}`;\n  }\n\n  deleteQuery(tableName, where, options = {}, model) {\n    let limit = '';\n    let query = `DELETE FROM ${this.quoteTable(tableName)}`;\n\n    if (options.limit) {\n      limit = ` LIMIT ${this.escape(options.limit)}`;\n    }\n\n    where = this.getWhereConditions(where, null, model, options);\n\n    if (where) {\n      query += ` WHERE ${where}`;\n    }\n\n    return query + limit;\n  }\n\n  showIndexesQuery(tableName, options) {\n    return Utils.joinSQLFragments([\n      `SHOW INDEX FROM ${this.quoteTable(tableName)}`,\n      options && options.database && `FROM \\`${options.database}\\``\n    ]);\n  }\n\n  showConstraintsQuery(table, constraintName) {\n    const tableName = table.tableName || table;\n    const schemaName = table.schema;\n\n    return Utils.joinSQLFragments([\n      'SELECT CONSTRAINT_CATALOG AS constraintCatalog,',\n      'CONSTRAINT_NAME AS constraintName,',\n      'CONSTRAINT_SCHEMA AS constraintSchema,',\n      'CONSTRAINT_TYPE AS constraintType,',\n      'TABLE_NAME AS tableName,',\n      'TABLE_SCHEMA AS tableSchema',\n      'from INFORMATION_SCHEMA.TABLE_CONSTRAINTS',\n      `WHERE table_name='${tableName}'`,\n      constraintName && `AND constraint_name = '${constraintName}'`,\n      schemaName && `AND TABLE_SCHEMA = '${schemaName}'`,\n      ';'\n    ]);\n  }\n\n  removeIndexQuery(tableName, indexNameOrAttributes) {\n    let indexName = indexNameOrAttributes;\n\n    if (typeof indexName !== 'string') {\n      indexName = Utils.underscore(`${tableName}_${indexNameOrAttributes.join('_')}`);\n    }\n\n    return Utils.joinSQLFragments([\n      'DROP INDEX',\n      this.quoteIdentifier(indexName),\n      'ON',\n      this.quoteTable(tableName)\n    ]);\n  }\n\n  attributeToSQL(attribute, options) {\n    if (!_.isPlainObject(attribute)) {\n      attribute = {\n        type: attribute\n      };\n    }\n\n    const attributeString = attribute.type.toString({ escape: this.escape.bind(this) });\n    let template = attributeString;\n\n    if (attribute.allowNull === false) {\n      template += ' NOT NULL';\n    }\n\n    if (attribute.autoIncrement) {\n      template += ' auto_increment';\n    }\n\n    // BLOB/TEXT/GEOMETRY/JSON cannot have a default value\n    if (!typeWithoutDefault.has(attributeString)\n      && attribute.type._binary !== true\n      && Utils.defaultValueSchemable(attribute.defaultValue)) {\n      template += ` DEFAULT ${this.escape(attribute.defaultValue)}`;\n    }\n\n    if (attribute.unique === true) {\n      template += ' UNIQUE';\n    }\n\n    if (attribute.primaryKey) {\n      template += ' PRIMARY KEY';\n    }\n\n    if (attribute.comment) {\n      template += ` COMMENT ${this.escape(attribute.comment)}`;\n    }\n\n    if (attribute.first) {\n      template += ' FIRST';\n    }\n    if (attribute.after) {\n      template += ` AFTER ${this.quoteIdentifier(attribute.after)}`;\n    }\n\n    if (attribute.references) {\n      if (options && options.context === 'addColumn' && options.foreignKey) {\n        const attrName = this.quoteIdentifier(options.foreignKey);\n        const fkName = this.quoteIdentifier(`${options.tableName}_${attrName}_foreign_idx`);\n\n        template += `, ADD CONSTRAINT ${fkName} FOREIGN KEY (${attrName})`;\n      }\n\n      template += ` REFERENCES ${this.quoteTable(attribute.references.model)}`;\n\n      if (attribute.references.key) {\n        template += ` (${this.quoteIdentifier(attribute.references.key)})`;\n      } else {\n        template += ` (${this.quoteIdentifier('id')})`;\n      }\n\n      if (attribute.onDelete) {\n        template += ` ON DELETE ${attribute.onDelete.toUpperCase()}`;\n      }\n\n      if (attribute.onUpdate) {\n        template += ` ON UPDATE ${attribute.onUpdate.toUpperCase()}`;\n      }\n    }\n\n    return template;\n  }\n\n  attributesToSQL(attributes, options) {\n    const result = {};\n\n    for (const key in attributes) {\n      const attribute = attributes[key];\n      result[attribute.field || key] = this.attributeToSQL(attribute, options);\n    }\n\n    return result;\n  }\n\n  /**\n   * Check whether the statmement is json function or simple path\n   *\n   * @param   {string}  stmt  The statement to validate\n   * @returns {boolean}       true if the given statement is json function\n   * @throws  {Error}         throw if the statement looks like json function but has invalid token\n   * @private\n   */\n  _checkValidJsonStatement(stmt) {\n    if (typeof stmt !== 'string') {\n      return false;\n    }\n\n    let currentIndex = 0;\n    let openingBrackets = 0;\n    let closingBrackets = 0;\n    let hasJsonFunction = false;\n    let hasInvalidToken = false;\n\n    while (currentIndex < stmt.length) {\n      const string = stmt.substr(currentIndex);\n      const functionMatches = JSON_FUNCTION_REGEX.exec(string);\n      if (functionMatches) {\n        currentIndex += functionMatches[0].indexOf('(');\n        hasJsonFunction = true;\n        continue;\n      }\n\n      const operatorMatches = JSON_OPERATOR_REGEX.exec(string);\n      if (operatorMatches) {\n        currentIndex += operatorMatches[0].length;\n        hasJsonFunction = true;\n        continue;\n      }\n\n      const tokenMatches = TOKEN_CAPTURE_REGEX.exec(string);\n      if (tokenMatches) {\n        const capturedToken = tokenMatches[1];\n        if (capturedToken === '(') {\n          openingBrackets++;\n        } else if (capturedToken === ')') {\n          closingBrackets++;\n        } else if (capturedToken === ';') {\n          hasInvalidToken = true;\n          break;\n        }\n        currentIndex += tokenMatches[0].length;\n        continue;\n      }\n\n      break;\n    }\n\n    // Check invalid json statement\n    if (hasJsonFunction && (hasInvalidToken || openingBrackets !== closingBrackets)) {\n      throw new Error(`Invalid json statement: ${stmt}`);\n    }\n\n    // return true if the statement has valid json function\n    return hasJsonFunction;\n  }\n\n  /**\n   * Generates an SQL query that returns all foreign keys of a table.\n   *\n   * @param  {object} table  The table.\n   * @param  {string} schemaName The name of the schema.\n   * @returns {string}            The generated sql query.\n   * @private\n   */\n  getForeignKeysQuery(table, schemaName) {\n    const tableName = table.tableName || table;\n    return Utils.joinSQLFragments([\n      'SELECT',\n      FOREIGN_KEY_FIELDS,\n      `FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = '${tableName}'`,\n      `AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='${schemaName}'`,\n      'AND REFERENCED_TABLE_NAME IS NOT NULL',\n      ';'\n    ]);\n  }\n\n  /**\n   * Generates an SQL query that returns the foreign key constraint of a given column.\n   *\n   * @param  {object} table  The table.\n   * @param  {string} columnName The name of the column.\n   * @returns {string}            The generated sql query.\n   * @private\n   */\n  getForeignKeyQuery(table, columnName) {\n    const quotedSchemaName = table.schema ? wrapSingleQuote(table.schema) : '';\n    const quotedTableName = wrapSingleQuote(table.tableName || table);\n    const quotedColumnName = wrapSingleQuote(columnName);\n\n    return Utils.joinSQLFragments([\n      'SELECT',\n      FOREIGN_KEY_FIELDS,\n      'FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE',\n      'WHERE (',\n      [\n        `REFERENCED_TABLE_NAME = ${quotedTableName}`,\n        table.schema && `AND REFERENCED_TABLE_SCHEMA = ${quotedSchemaName}`,\n        `AND REFERENCED_COLUMN_NAME = ${quotedColumnName}`\n      ],\n      ') OR (',\n      [\n        `TABLE_NAME = ${quotedTableName}`,\n        table.schema && `AND TABLE_SCHEMA = ${quotedSchemaName}`,\n        `AND COLUMN_NAME = ${quotedColumnName}`,\n        'AND REFERENCED_TABLE_NAME IS NOT NULL'\n      ],\n      ')'\n    ]);\n  }\n\n  /**\n   * Generates an SQL query that removes a foreign key from a table.\n   *\n   * @param  {string} tableName  The name of the table.\n   * @param  {string} foreignKey The name of the foreign key constraint.\n   * @returns {string}            The generated sql query.\n   * @private\n   */\n  dropForeignKeyQuery(tableName, foreignKey) {\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(tableName),\n      'DROP FOREIGN KEY',\n      this.quoteIdentifier(foreignKey),\n      ';'\n    ]);\n  }\n\n  /**\n   * Quote identifier in sql clause\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    return Utils.addTicks(Utils.removeTicks(identifier, '`'), '`');\n  }\n}\n\n// private methods\nfunction wrapSingleQuote(identifier) {\n  return Utils.addTicks(identifier, '\\'');\n}\n\nmodule.exports = MySQLQueryGenerator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query-generator.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,29,28,34,37,57,46,46,37,55,59,68,55,38,47,48,22,24,27,78,26,77,39,45,41,37,32,3,43,28,32,12,61,78,64,6,3,20,23,38,22,12,42,38,32,28,47,18,37,7,6,3,34,51,3,58,50,16,22,39,8,32,3,29,65,3,35,89,3,59,28,38,33,20,22,40,22,47,94,14,24,24,28,31,40,22,26,51,43,30,57,9,9,5,51,38,53,33,5,67,79,66,57,45,57,5,109,32,5,64,32,5,81,34,65,37,47,124,67,33,54,35,18,43,11,16,109,43,11,86,122,18,133,11,9,7,5,34,88,93,90,139,74,114,14,137,57,125,9,35,144,9,109,7,5,26,104,110,35,29,31,14,6,243,182,64,72,50,43,7,63,176,129,306,12,38,38,5,75,44,104,5,89,104,5,29,38,25,5,18,3,80,28,56,22,23,29,34,52,48,43,34,9,94,30,9,9,5,52,49,74,79,9,99,9,43,5,88,93,90,139,112,14,137,108,7,5,109,89,115,23,67,85,50,5,35,15,23,13,33,24,15,23,27,26,16,9,7,3,69,28,38,93,22,20,33,28,22,20,109,32,5,94,69,63,57,7,5,67,74,47,45,57,77,34,7,5,21,46,43,30,57,9,9,5,38,153,17,7,39,82,152,14,163,7,5,83,30,16,5,165,29,38,25,5,18,3,109,28,45,115,28,31,67,68,51,57,5,37,50,61,54,57,94,5,53,57,54,49,67,5,35,15,33,12,38,21,29,23,7,3,63,28,37,27,26,12,34,5,65,63,58,60,5,53,51,49,7,38,17,21,10,7,22,28,37,7,24,89,7,49,66,68,7,50,60,23,35,9,7,64,38,7,24,36,7,20,7,24,57,5,43,45,26,5,24,53,5,40,51,12,45,5,117,12,47,13,22,18,21,13,8,12,23,5,631,36,3,42,40,51,12,45,5,35,20,16,12,58,9,7,3,44,42,53,38,43,7,51,49,7,28,37,7,24,75,7,46,7,55,48,41,20,100,93,14,19,60,100,84,14,21,46,84,9,45,87,9,100,126,14,25,100,98,14,25,46,91,86,9,120,181,95,60,102,31,78,9,31,78,9,14,14,55,5,110,69,5,29,3,52,40,51,12,45,5,35,20,16,24,43,7,3,40,31,12,13,23,24,24,25,20,18,6,33,41,47,5,36,44,47,32,26,45,33,65,41,42,9,72,20,17,80,26,103,32,26,11,22,169,61,30,17,20,70,27,80,15,13,50,109,13,11,9,40,76,47,80,81,93,56,156,63,87,49,93,133,48,71,54,15,13,11,9,34,15,49,28,15,16,50,29,104,16,49,34,9,7,19,18,70,63,55,7,55,61,15,17,5,37,103,5,54,52,5,56,109,5,94,3,26,49,56,29,26,54,6,3,38,88,3,33,36,43,75,55,75,5,45,3,36,52,45,5,44,3,28,19,25,46,5,28,43,27,60,9,55,14,27,59,9,33,44,7,12,42,5,16,52,5,17,3,33,28,45,51,49,7,32,45,35,105,142,44,25,11,9,7,5,72,3,19,23,23,31,6,3,44,28,45,51,96,7,32,45,35,150,9,7,5,28,3,35,62,11,53,37,47,11,16,46,9,23,62,164,9,20,7,5,3,34,75,3,49,31,16,97,27,19,21,20,39,42,79,13,9,122,40,60,9,72,22,43,54,52,14,75,5,3,42,28,32,30,29,107,24,61,20,6,23,22,23,15,11,6,26,23,14,14,6,29,28,14,64,57,34,57,5,26,59,67,64,5,116,87,18,38,66,107,141,9,7,5,84,91,43,44,70,5,26,46,31,19,9,128,69,72,53,88,9,57,100,9,7,5,19,138,50,12,33,28,46,9,56,82,58,45,64,61,9,63,71,71,23,66,33,29,37,38,84,15,17,13,33,45,97,101,48,45,49,41,33,15,48,54,64,52,44,22,41,15,15,46,11,16,44,31,39,9,73,41,33,44,35,49,49,16,18,15,46,81,57,148,25,25,26,31,14,11,24,26,69,14,11,130,100,14,137,7,52,5,90,104,26,23,56,16,57,50,45,149,13,13,9,7,5,24,208,38,57,33,58,7,5,66,97,27,23,58,16,59,9,7,5,24,67,41,77,7,40,75,7,5,72,46,21,39,14,40,7,5,19,106,158,12,38,5,54,30,45,34,7,92,32,36,55,14,31,7,107,64,7,68,32,7,5,23,3,51,56,85,3,54,51,26,50,48,7,32,32,157,9,28,55,56,27,70,50,16,41,9,28,41,70,9,67,14,133,7,100,40,7,18,7,3,59,25,20,18,6,33,32,33,23,29,28,6,24,15,18,6,18,44,121,76,75,5,65,47,53,66,26,29,55,159,28,11,121,27,25,9,44,26,9,69,227,9,19,32,24,42,99,49,114,16,97,9,56,41,92,9,39,17,15,43,11,9,54,47,41,9,14,47,37,9,7,5,26,105,12,69,59,5,47,74,5,51,86,5,26,51,60,19,9,93,75,34,9,61,59,9,41,61,9,58,85,9,62,97,9,7,5,52,60,132,14,100,42,63,9,7,61,12,61,134,14,101,43,65,9,7,59,5,12,48,46,16,6,3,48,57,60,5,46,19,5,60,53,67,25,3,48,37,59,62,7,5,16,3,39,44,34,129,16,18,36,140,172,15,32,44,173,29,92,19,44,14,28,7,5,16,46,8,40,81,34,132,24,74,135,36,81,131,9,14,71,118,7,5,88,21,49,70,28,9,5,24,55,70,28,9,22,25,39,16,40,9,7,5,60,67,62,5,12,141,49,24,19,17,36,7,6,3,50,28,27,28,31,22,43,90,33,46,61,67,43,9,9,5,34,29,5,56,65,60,95,73,96,68,39,51,7,5,73,3,74,36,54,63,70,64,81,39,79,7,37,107,13,35,9,7,44,117,40,52,45,59,50,150,17,22,24,15,18,6,43,21,21,21,20,65,45,35,7,5,33,46,5,140,46,5,96,149,62,12,112,97,5,94,97,94,24,132,5,164,23,41,5,20,33,49,26,166,26,49,9,7,5,67,12,21,21,31,16,6,3,61,60,13,5,38,38,5,25,24,67,14,36,46,15,7,34,15,7,111,21,5,41,40,50,36,94,73,63,50,42,21,49,27,36,39,12,19,40,16,21,36,114,126,27,36,11,10,17,38,35,12,73,138,139,20,86,103,20,65,34,69,32,16,21,29,55,11,10,17,31,38,27,5,46,46,5,86,10,30,10,19,17,3,32,93,41,107,5,16,3,44,30,29,39,40,36,26,9,370,61,9,23,114,34,63,127,11,9,60,7,64,57,21,32,7,31,12,94,5,45,3,55,30,13,62,87,99,69,3,76,98,68,22,39,5,66,46,36,136,9,7,5,20,3,30,22,58,72,39,35,96,14,59,7,5,20,3,69,15,82,58,5,38,29,14,60,92,14,136,7,60,85,31,40,35,11,41,39,11,9,57,7,35,59,24,11,7,102,72,46,41,14,35,7,29,38,33,9,39,37,9,7,55,5,40,22,5,37,54,92,45,48,14,39,7,61,5,35,51,51,87,9,35,43,9,84,23,5,36,48,98,7,37,19,7,43,5,40,3,30,55,32,30,5,14,3,44,82,16,5,36,78,5,21,31,27,31,33,53,33,61,9,12,62,5,91,3,44,27,80,5,72,38,128,23,64,45,113,7,5,48,58,49,59,71,24,42,5,67,25,38,21,7,52,79,7,5,25,78,88,5,17,125,88,5,99,47,5,36,44,21,14,100,7,5,60,55,5,23,82,5,24,84,5,58,125,88,5,89,50,5,48,76,5,18,82,5,24,43,105,7,100,5,33,125,106,5,122,85,3,28,24,27,5,91,46,5,107,54,5,3,40,87,54,31,35,86,128,39,9,25,47,50,12,60,5,54,21,5,56,3,44,33,57,33,67,9,12,75,5,56,62,3,35,21,44,25,52,77,14,66,7,5,47,21,23,8,111,7,37,61,7,56,53,3,51,13,47,52,20,37,5,62,32,48,50,27,62,15,34,26,23,11,9,70,94,9,43,85,9,13,5,35,91,3,23,17,3,36,78,15,111,5,34,3,23,36,32,5,32,27,5,37,23,5,11,3,49,15,19,5,32,63,5,40,48,3,28,47,44,70,5,33,53,27,15,38,29,10,7,81,5,62,3,27,17,44,67,7,54,5,15,3,66,26,33,24,71,21,7,5,71,19,17,20,45,80,9,27,134,9,53,79,9,18,18,18,64,31,152,9,101,22,25,138,18,111,18,45,33,31,19,42,35,12,9,138,25,23,24,47,45,28,9,34,33,32,34,33,89,5,27,67,6,33,26,101,7,26,36,157,7,26,36,157,7,5,67,120,5,67,121,5,105,3,66,21,35,31,37,33,7,5,28,29,21,5,56,84,5,32,41,23,37,26,9,5,35,72,35,37,14,27,7,32,42,23,36,9,5,35,41,23,36,9,5,32,31,5,30,71,21,43,41,84,7,98,5,24,41,23,36,9,5,17,3,42,22,57,30,81,7,53,20,11,3,23,17,3,1,80,82,32,43,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/abstract/query-generator.js"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst _ = require('lodash');\nconst uuidv4 = require('uuid').v4;\n\nconst Utils = require('../../utils');\nconst deprecations = require('../../utils/deprecations');\nconst SqlString = require('../../sql-string');\nconst DataTypes = require('../../data-types');\nconst Model = require('../../model');\nconst Association = require('../../associations/base');\nconst BelongsTo = require('../../associations/belongs-to');\nconst BelongsToMany = require('../../associations/belongs-to-many');\nconst HasMany = require('../../associations/has-many');\nconst Op = require('../../operators');\nconst sequelizeError = require('../../errors');\nconst IndexHints = require('../../index-hints');\n\n\n/**\n * Abstract Query Generator\n *\n * @private\n */\nclass QueryGenerator {\n  constructor(options) {\n    if (!options.sequelize) throw new Error('QueryGenerator initialized without options.sequelize');\n    if (!options._dialect) throw new Error('QueryGenerator initialized without options._dialect');\n\n    this.sequelize = options.sequelize;\n    this.options = options.sequelize.options;\n\n    // dialect name\n    this.dialect = options._dialect.name;\n    this._dialect = options._dialect;\n\n    // wrap quoteIdentifier with common logic\n    this._initQuoteIdentifier();\n  }\n\n  extractTableDetails(tableName, options) {\n    options = options || {};\n    tableName = tableName || {};\n    return {\n      schema: tableName.schema || options.schema || 'public',\n      tableName: _.isPlainObject(tableName) ? tableName.tableName : tableName,\n      delimiter: tableName.delimiter || options.delimiter || '.'\n    };\n  }\n\n  addSchema(param) {\n    if (!param._schema) return param.tableName || param;\n    const self = this;\n    return {\n      tableName: param.tableName || param,\n      table: param.tableName || param,\n      name: param.name || param,\n      schema: param._schema,\n      delimiter: param._schemaDelimiter || '.',\n      toString() {\n        return self.quoteTable(this);\n      }\n    };\n  }\n\n  dropSchema(tableName, options) {\n    return this.dropTableQuery(tableName, options);\n  }\n\n  describeTableQuery(tableName, schema, schemaDelimiter) {\n    const table = this.quoteTable(\n      this.addSchema({\n        tableName,\n        _schema: schema,\n        _schemaDelimiter: schemaDelimiter\n      })\n    );\n\n    return `DESCRIBE ${table};`;\n  }\n\n  dropTableQuery(tableName) {\n    return `DROP TABLE IF EXISTS ${this.quoteTable(tableName)};`;\n  }\n\n  renameTableQuery(before, after) {\n    return `ALTER TABLE ${this.quoteTable(before)} RENAME TO ${this.quoteTable(after)};`;\n  }\n\n  /**\n   * Returns an insert into command\n   *\n   * @param {string} table\n   * @param {object} valueHash       attribute value pairs\n   * @param {object} modelAttributes\n   * @param {object} [options]\n   *\n   * @private\n   */\n  insertQuery(table, valueHash, modelAttributes, options) {\n    options = options || {};\n    _.defaults(options, this.options);\n\n    const modelAttributeMap = {};\n    const bind = [];\n    const fields = [];\n    const returningModelAttributes = [];\n    const values = [];\n    const quotedTable = this.quoteTable(table);\n    const bindParam = options.bindParam === undefined ? this.bindParam(bind) : options.bindParam;\n    let query;\n    let valueQuery = '';\n    let emptyQuery = '';\n    let outputFragment = '';\n    let returningFragment = '';\n    let identityWrapperRequired = false;\n    let tmpTable = ''; //tmpTable declaration for trigger\n\n    if (modelAttributes) {\n      _.each(modelAttributes, (attribute, key) => {\n        modelAttributeMap[key] = attribute;\n        if (attribute.field) {\n          modelAttributeMap[attribute.field] = attribute;\n        }\n      });\n    }\n\n    if (this._dialect.supports['DEFAULT VALUES']) {\n      emptyQuery += ' DEFAULT VALUES';\n    } else if (this._dialect.supports['VALUES ()']) {\n      emptyQuery += ' VALUES ()';\n    }\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(modelAttributes, options);\n\n      returningModelAttributes.push(...returnValues.returnFields);\n      returningFragment = returnValues.returningFragment;\n      tmpTable = returnValues.tmpTable || '';\n      outputFragment = returnValues.outputFragment || '';\n    }\n\n    if (_.get(this, ['sequelize', 'options', 'dialectOptions', 'prependSearchPath']) || options.searchPath) {\n      // Not currently supported with search path (requires output of multiple queries)\n      options.bindParam = false;\n    }\n\n    if (this._dialect.supports.EXCEPTION && options.exception) {\n      // Not currently supported with bind parameters (requires output of multiple queries)\n      options.bindParam = false;\n    }\n\n    valueHash = Utils.removeNullValuesFromHash(valueHash, this.options.omitNull);\n    for (const key in valueHash) {\n      if (Object.prototype.hasOwnProperty.call(valueHash, key)) {\n        const value = valueHash[key];\n        fields.push(this.quoteIdentifier(key));\n\n        // SERIALS' can't be NULL in postgresql, use DEFAULT where supported\n        if (modelAttributeMap && modelAttributeMap[key] && modelAttributeMap[key].autoIncrement === true && value == null) {\n          if (!this._dialect.supports.autoIncrement.defaultValue) {\n            fields.splice(-1, 1);\n          } else if (this._dialect.supports.DEFAULT) {\n            values.push('DEFAULT');\n          } else {\n            values.push(this.escape(null));\n          }\n        } else {\n          if (modelAttributeMap && modelAttributeMap[key] && modelAttributeMap[key].autoIncrement === true) {\n            identityWrapperRequired = true;\n          }\n\n          if (value instanceof Utils.SequelizeMethod || options.bindParam === false) {\n            values.push(this.escape(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'INSERT' }));\n          } else {\n            values.push(this.format(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'INSERT' }, bindParam));\n          }\n        }\n      }\n    }\n\n    let onDuplicateKeyUpdate = '';\n\n    // `options.updateOnDuplicate` is the list of field names to update if a duplicate key is hit during the insert.  It\n    // contains just the field names.  This option is _usually_ explicitly set by the corresponding query-interface\n    // upsert function.\n    if (this._dialect.supports.inserts.updateOnDuplicate && options.updateOnDuplicate) {\n      if (this._dialect.supports.inserts.updateOnDuplicate == ' ON CONFLICT DO UPDATE SET') { // postgres / sqlite\n        // If no conflict target columns were specified, use the primary key names from options.upsertKeys\n        const conflictKeys = options.upsertKeys.map(attr => this.quoteIdentifier(attr));\n        const updateKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=EXCLUDED.${this.quoteIdentifier(attr)}`);\n        onDuplicateKeyUpdate = ` ON CONFLICT (${conflictKeys.join(',')})`;\n        // if update keys are provided, then apply them here.  if there are no updateKeys provided, then do not try to\n        // do an update.  Instead, fall back to DO NOTHING.\n        onDuplicateKeyUpdate += _.isEmpty(updateKeys) ? ' DO NOTHING ' : ` DO UPDATE SET ${updateKeys.join(',')}`;\n      } else {\n        const valueKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=VALUES(${this.quoteIdentifier(attr)})`);\n        // the rough equivalent to ON CONFLICT DO NOTHING in mysql, etc is ON DUPLICATE KEY UPDATE id = id\n        // So, if no update values were provided, fall back to the identifier columns provided in the upsertKeys array.\n        // This will be the primary key in most cases, but it could be some other constraint.\n        if (_.isEmpty(valueKeys) && options.upsertKeys) {\n          valueKeys.push(...options.upsertKeys.map(attr => `${this.quoteIdentifier(attr)}=${this.quoteIdentifier(attr)}`));\n        }\n\n        // edge case... but if for some reason there were no valueKeys, and there were also no upsertKeys... then we\n        // can no longer build the requested query without a syntax error.  Let's throw something more graceful here\n        // so the devs know what the problem is.\n        if (_.isEmpty(valueKeys)) {\n          throw new Error('No update values found for ON DUPLICATE KEY UPDATE clause, and no identifier fields could be found to use instead.');\n        }\n        onDuplicateKeyUpdate += `${this._dialect.supports.inserts.updateOnDuplicate} ${valueKeys.join(',')}`;\n      }\n    }\n\n    const replacements = {\n      ignoreDuplicates: options.ignoreDuplicates ? this._dialect.supports.inserts.ignoreDuplicates : '',\n      onConflictDoNothing: options.ignoreDuplicates ? this._dialect.supports.inserts.onConflictDoNothing : '',\n      attributes: fields.join(','),\n      output: outputFragment,\n      values: values.join(','),\n      tmpTable\n    };\n\n    valueQuery = `${tmpTable}INSERT${replacements.ignoreDuplicates} INTO ${quotedTable} (${replacements.attributes})${replacements.output} VALUES (${replacements.values})${onDuplicateKeyUpdate}${replacements.onConflictDoNothing}${valueQuery}`;\n    emptyQuery = `${tmpTable}INSERT${replacements.ignoreDuplicates} INTO ${quotedTable}${replacements.output}${onDuplicateKeyUpdate}${replacements.onConflictDoNothing}${emptyQuery}`;\n\n    // Mostly for internal use, so we expect the user to know what he's doing!\n    // pg_temp functions are private per connection, so we never risk this function interfering with another one.\n    if (this._dialect.supports.EXCEPTION && options.exception) {\n      const dropFunction = 'DROP FUNCTION IF EXISTS pg_temp.testfunc()';\n\n      if (returningModelAttributes.length === 0) {\n        returningModelAttributes.push('*');\n      }\n\n      const delimiter = `$func_${uuidv4().replace(/-/g, '')}$`;\n      const selectQuery = `SELECT (testfunc.response).${returningModelAttributes.join(', (testfunc.response).')}, testfunc.sequelize_caught_exception FROM pg_temp.testfunc();`;\n\n      options.exception = 'WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL;';\n      valueQuery = `CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response ${quotedTable}, OUT sequelize_caught_exception text) RETURNS RECORD AS ${delimiter} BEGIN ${valueQuery} RETURNING * INTO response; EXCEPTION ${options.exception} END ${delimiter} LANGUAGE plpgsql; ${selectQuery} ${dropFunction}`;\n    } else {\n      valueQuery += returningFragment;\n      emptyQuery += returningFragment;\n    }\n\n    query = `${replacements.attributes.length ? valueQuery : emptyQuery};`;\n    if (this._dialect.supports.finalTable) {\n      query = `SELECT * FROM FINAL TABLE(${ replacements.attributes.length ? valueQuery : emptyQuery });`;\n    }\n    if (identityWrapperRequired && this._dialect.supports.autoIncrement.identityInsert) {\n      query = `SET IDENTITY_INSERT ${quotedTable} ON; ${query} SET IDENTITY_INSERT ${quotedTable} OFF;`;\n    }\n\n    // Used by Postgres upsertQuery and calls to here with options.exception set to true\n    const result = { query };\n    if (options.bindParam !== false) {\n      result.bind = bind;\n    }\n\n    return result;\n  }\n\n  /**\n   * Returns an insert into command for multiple values.\n   *\n   * @param {string} tableName\n   * @param {object} fieldValueHashes\n   * @param {object} options\n   * @param {object} fieldMappedAttributes\n   *\n   * @private\n   */\n  bulkInsertQuery(tableName, fieldValueHashes, options, fieldMappedAttributes) {\n    options = options || {};\n    fieldMappedAttributes = fieldMappedAttributes || {};\n\n    const tuples = [];\n    const serials = {};\n    const allAttributes = [];\n    let onDuplicateKeyUpdate = '';\n\n    for (const fieldValueHash of fieldValueHashes) {\n      _.forOwn(fieldValueHash, (value, key) => {\n        if (!allAttributes.includes(key)) {\n          allAttributes.push(key);\n        }\n        if (\n          fieldMappedAttributes[key]\n          && fieldMappedAttributes[key].autoIncrement === true\n        ) {\n          serials[key] = true;\n        }\n      });\n    }\n\n    for (const fieldValueHash of fieldValueHashes) {\n      const values = allAttributes.map(key => {\n        if (\n          this._dialect.supports.bulkDefault\n          && serials[key] === true\n        ) {\n          // fieldValueHashes[key] ?? 'DEFAULT'\n          return fieldValueHash[key] != null ? fieldValueHash[key] : 'DEFAULT';\n        }\n\n        return this.escape(fieldValueHash[key], fieldMappedAttributes[key], { context: 'INSERT' });\n      });\n\n      tuples.push(`(${values.join(',')})`);\n    }\n\n    // `options.updateOnDuplicate` is the list of field names to update if a duplicate key is hit during the insert.  It\n    // contains just the field names.  This option is _usually_ explicitly set by the corresponding query-interface\n    // upsert function.\n    if (this._dialect.supports.inserts.updateOnDuplicate && options.updateOnDuplicate) {\n      if (this._dialect.supports.inserts.updateOnDuplicate == ' ON CONFLICT DO UPDATE SET') { // postgres / sqlite\n        // If no conflict target columns were specified, use the primary key names from options.upsertKeys\n        const conflictKeys = options.upsertKeys.map(attr => this.quoteIdentifier(attr));\n        const updateKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=EXCLUDED.${this.quoteIdentifier(attr)}`);\n        onDuplicateKeyUpdate = ` ON CONFLICT (${conflictKeys.join(',')}) DO UPDATE SET ${updateKeys.join(',')}`;\n      } else { // mysql / maria\n        const valueKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=VALUES(${this.quoteIdentifier(attr)})`);\n        onDuplicateKeyUpdate = `${this._dialect.supports.inserts.updateOnDuplicate} ${valueKeys.join(',')}`;\n      }\n    }\n\n    const ignoreDuplicates = options.ignoreDuplicates ? this._dialect.supports.inserts.ignoreDuplicates : '';\n    const attributes = allAttributes.map(attr => this.quoteIdentifier(attr)).join(',');\n    const onConflictDoNothing = options.ignoreDuplicates ? this._dialect.supports.inserts.onConflictDoNothing : '';\n    let returning = '';\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(fieldMappedAttributes, options);\n\n      returning += returnValues.returningFragment;\n    }\n\n    return Utils.joinSQLFragments([\n      'INSERT',\n      ignoreDuplicates,\n      'INTO',\n      this.quoteTable(tableName),\n      `(${attributes})`,\n      'VALUES',\n      tuples.join(','),\n      onDuplicateKeyUpdate,\n      onConflictDoNothing,\n      returning,\n      ';'\n    ]);\n  }\n\n  /**\n   * Returns an update query\n   *\n   * @param {string} tableName\n   * @param {object} attrValueHash\n   * @param {object} where A hash with conditions (e.g. {name: 'foo'}) OR an ID as integer\n   * @param {object} options\n   * @param {object} attributes\n   *\n   * @private\n   */\n  updateQuery(tableName, attrValueHash, where, options, attributes) {\n    options = options || {};\n    _.defaults(options, this.options);\n\n    attrValueHash = Utils.removeNullValuesFromHash(attrValueHash, options.omitNull, options);\n\n    const values = [];\n    const bind = [];\n    const modelAttributeMap = {};\n    let outputFragment = '';\n    let tmpTable = ''; // tmpTable declaration for trigger\n    let suffix = '';\n\n    if (_.get(this, ['sequelize', 'options', 'dialectOptions', 'prependSearchPath']) || options.searchPath) {\n      // Not currently supported with search path (requires output of multiple queries)\n      options.bindParam = false;\n    }\n\n    const bindParam = options.bindParam === undefined ? this.bindParam(bind) : options.bindParam;\n\n    if (this._dialect.supports['LIMIT ON UPDATE'] && options.limit) {\n      if (this.dialect !== 'mssql' && this.dialect !== 'db2') {\n        suffix = ` LIMIT ${this.escape(options.limit)} `;\n      }\n    }\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(attributes, options);\n\n      suffix += returnValues.returningFragment;\n      tmpTable = returnValues.tmpTable || '';\n      outputFragment = returnValues.outputFragment || '';\n\n      // ensure that the return output is properly mapped to model fields.\n      if (!this._dialect.supports.returnValues.output && options.returning) {\n        options.mapToModel = true;\n      }\n    }\n\n    if (attributes) {\n      _.each(attributes, (attribute, key) => {\n        modelAttributeMap[key] = attribute;\n        if (attribute.field) {\n          modelAttributeMap[attribute.field] = attribute;\n        }\n      });\n    }\n\n    for (const key in attrValueHash) {\n      if (modelAttributeMap && modelAttributeMap[key] &&\n        modelAttributeMap[key].autoIncrement === true &&\n        !this._dialect.supports.autoIncrement.update) {\n        // not allowed to update identity column\n        continue;\n      }\n\n      const value = attrValueHash[key];\n\n      if (value instanceof Utils.SequelizeMethod || options.bindParam === false) {\n        values.push(`${this.quoteIdentifier(key)}=${this.escape(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'UPDATE' })}`);\n      } else {\n        values.push(`${this.quoteIdentifier(key)}=${this.format(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'UPDATE' }, bindParam)}`);\n      }\n    }\n\n    const whereOptions = { ...options, bindParam };\n\n    if (values.length === 0) {\n      return '';\n    }\n\n    const query = `${tmpTable}UPDATE ${this.quoteTable(tableName)} SET ${values.join(',')}${outputFragment} ${this.whereQuery(where, whereOptions)}${suffix}`.trim();\n    // Used by Postgres upsertQuery and calls to here with options.exception set to true\n    const result = { query };\n    if (options.bindParam !== false) {\n      result.bind = bind;\n    }\n    return result;\n  }\n\n  /**\n   * Returns an update query using arithmetic operator\n   *\n   * @param {string} operator                    String with the arithmetic operator (e.g. '+' or '-')\n   * @param {string} tableName                   Name of the table\n   * @param {object} where                       A plain-object with conditions (e.g. {name: 'foo'}) OR an ID as integer\n   * @param {object} incrementAmountsByField     A plain-object with attribute-value-pairs\n   * @param {object} extraAttributesToBeUpdated  A plain-object with attribute-value-pairs\n   * @param {object} options\n   *\n   * @private\n   */\n  arithmeticQuery(operator, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options) {\n    options = options || {};\n    _.defaults(options, { returning: true });\n\n    extraAttributesToBeUpdated = Utils.removeNullValuesFromHash(extraAttributesToBeUpdated, this.options.omitNull);\n\n    let outputFragment = '';\n    let returningFragment = '';\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(null, options);\n\n      outputFragment = returnValues.outputFragment;\n      returningFragment = returnValues.returningFragment;\n    }\n\n    const updateSetSqlFragments = [];\n    for (const field in incrementAmountsByField) {\n      const incrementAmount = incrementAmountsByField[field];\n      const quotedField = this.quoteIdentifier(field);\n      const escapedAmount = this.escape(incrementAmount);\n      updateSetSqlFragments.push(`${quotedField}=${quotedField}${operator} ${escapedAmount}`);\n    }\n    for (const field in extraAttributesToBeUpdated) {\n      const newValue = extraAttributesToBeUpdated[field];\n      const quotedField = this.quoteIdentifier(field);\n      const escapedValue = this.escape(newValue);\n      updateSetSqlFragments.push(`${quotedField}=${escapedValue}`);\n    }\n\n    return Utils.joinSQLFragments([\n      'UPDATE',\n      this.quoteTable(tableName),\n      'SET',\n      updateSetSqlFragments.join(','),\n      outputFragment,\n      this.whereQuery(where),\n      returningFragment\n    ]);\n  }\n\n  /*\n    Returns an add index query.\n    Parameters:\n      - tableName -> Name of an existing table, possibly with schema.\n      - options:\n        - type: UNIQUE|FULLTEXT|SPATIAL\n        - name: The name of the index. Default is <table>_<attr1>_<attr2>\n        - fields: An array of attributes as string or as hash.\n                  If the attribute is a hash, it must have the following content:\n                  - name: The name of the attribute/column\n                  - length: An integer. Optional\n                  - order: 'ASC' or 'DESC'. Optional\n        - parser\n        - using\n        - operator\n        - concurrently: Pass CONCURRENT so other operations run while the index is created\n      - rawTablename, the name of the table, without schema. Used to create the name of the index\n   @private\n  */\n  addIndexQuery(tableName, attributes, options, rawTablename) {\n    options = options || {};\n\n    if (!Array.isArray(attributes)) {\n      options = attributes;\n      attributes = undefined;\n    } else {\n      options.fields = attributes;\n    }\n\n    options.prefix = options.prefix || rawTablename || tableName;\n    if (options.prefix && typeof options.prefix === 'string') {\n      options.prefix = options.prefix.replace(/\\./g, '_');\n      options.prefix = options.prefix.replace(/(\"|')/g, '');\n    }\n\n    const fieldsSql = options.fields.map(field => {\n      if (field instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(field);\n      }\n      if (typeof field === 'string') {\n        field = {\n          name: field\n        };\n      }\n      let result = '';\n\n      if (field.attribute) {\n        field.name = field.attribute;\n      }\n\n      if (!field.name) {\n        throw new Error(`The following index field has no name: ${util.inspect(field)}`);\n      }\n\n      result += this.quoteIdentifier(field.name);\n\n      if (this._dialect.supports.index.collate && field.collate) {\n        result += ` COLLATE ${this.quoteIdentifier(field.collate)}`;\n      }\n\n      if (this._dialect.supports.index.operator) {\n        const operator = field.operator || options.operator;\n        if (operator) {\n          result += ` ${operator}`;\n        }\n      }\n\n      if (this._dialect.supports.index.length && field.length) {\n        result += `(${field.length})`;\n      }\n\n      if (field.order) {\n        result += ` ${field.order}`;\n      }\n\n      return result;\n    });\n\n    if (!options.name) {\n      // Mostly for cases where addIndex is called directly by the user without an options object (for example in migrations)\n      // All calls that go through sequelize should already have a name\n      options = Utils.nameIndex(options, options.prefix);\n    }\n\n    options = Model._conformIndex(options);\n\n    if (!this._dialect.supports.index.type) {\n      delete options.type;\n    }\n\n    if (options.where) {\n      options.where = this.whereQuery(options.where);\n    }\n\n    if (typeof tableName === 'string') {\n      tableName = this.quoteIdentifiers(tableName);\n    } else {\n      tableName = this.quoteTable(tableName);\n    }\n\n    const concurrently = this._dialect.supports.index.concurrently && options.concurrently ? 'CONCURRENTLY' : undefined;\n    let ind;\n    if (this._dialect.supports.indexViaAlter) {\n      ind = [\n        'ALTER TABLE',\n        tableName,\n        concurrently,\n        'ADD'\n      ];\n    } else {\n      ind = ['CREATE'];\n    }\n\n    ind = ind.concat(\n      options.unique ? 'UNIQUE' : '',\n      options.type, 'INDEX',\n      !this._dialect.supports.indexViaAlter ? concurrently : undefined,\n      this.quoteIdentifiers(options.name),\n      this._dialect.supports.index.using === 1 && options.using ? `USING ${options.using}` : '',\n      !this._dialect.supports.indexViaAlter ? `ON ${tableName}` : undefined,\n      this._dialect.supports.index.using === 2 && options.using ? `USING ${options.using}` : '',\n      `(${fieldsSql.join(', ')})`,\n      this._dialect.supports.index.parser && options.parser ? `WITH PARSER ${options.parser}` : undefined,\n      this._dialect.supports.index.where && options.where ? options.where : undefined\n    );\n\n    return _.compact(ind).join(' ');\n  }\n\n  addConstraintQuery(tableName, options) {\n    if (typeof tableName === 'string') {\n      tableName = this.quoteIdentifiers(tableName);\n    } else {\n      tableName = this.quoteTable(tableName);\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      tableName,\n      'ADD',\n      this.getConstraintSnippet(tableName, options || {}),\n      ';'\n    ]);\n  }\n\n  getConstraintSnippet(tableName, options) {\n    let constraintSnippet, constraintName;\n\n    const fieldsSql = options.fields.map(field => {\n      if (typeof field === 'string') {\n        return this.quoteIdentifier(field);\n      }\n      if (field instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(field);\n      }\n      if (field.attribute) {\n        field.name = field.attribute;\n      }\n\n      if (!field.name) {\n        throw new Error(`The following index field has no name: ${field}`);\n      }\n\n      return this.quoteIdentifier(field.name);\n    });\n\n    const fieldsSqlQuotedString = fieldsSql.join(', ');\n    const fieldsSqlString = fieldsSql.join('_');\n\n    switch (options.type.toUpperCase()) {\n      case 'UNIQUE':\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_uk`);\n        constraintSnippet = `CONSTRAINT ${constraintName} UNIQUE (${fieldsSqlQuotedString})`;\n        break;\n      case 'CHECK':\n        options.where = this.whereItemsQuery(options.where);\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_ck`);\n        constraintSnippet = `CONSTRAINT ${constraintName} CHECK (${options.where})`;\n        break;\n      case 'DEFAULT':\n        if (options.defaultValue === undefined) {\n          throw new Error('Default value must be specified for DEFAULT CONSTRAINT');\n        }\n\n        if (this._dialect.name !== 'mssql') {\n          throw new Error('Default constraints are supported only for MSSQL dialect.');\n        }\n\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_df`);\n        constraintSnippet = `CONSTRAINT ${constraintName} DEFAULT (${this.escape(options.defaultValue)}) FOR ${fieldsSql[0]}`;\n        break;\n      case 'PRIMARY KEY':\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_pk`);\n        constraintSnippet = `CONSTRAINT ${constraintName} PRIMARY KEY (${fieldsSqlQuotedString})`;\n        break;\n      case 'FOREIGN KEY':\n        const references = options.references;\n        if (!references || !references.table || !(references.field || references.fields)) {\n          throw new Error('references object with table and field must be specified');\n        }\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_${references.table}_fk`);\n        const quotedReferences =\n          typeof references.field !== 'undefined'\n            ? this.quoteIdentifier(references.field)\n            : references.fields.map(f => this.quoteIdentifier(f)).join(', ');\n        const referencesSnippet = `${this.quoteTable(references.table)} (${quotedReferences})`;\n        constraintSnippet = `CONSTRAINT ${constraintName} `;\n        constraintSnippet += `FOREIGN KEY (${fieldsSqlQuotedString}) REFERENCES ${referencesSnippet}`;\n        if (options.onUpdate) {\n          constraintSnippet += ` ON UPDATE ${options.onUpdate.toUpperCase()}`;\n        }\n        if (options.onDelete) {\n          constraintSnippet += ` ON DELETE ${options.onDelete.toUpperCase()}`;\n        }\n        break;\n      default: throw new Error(`${options.type} is invalid.`);\n    }\n\n    if (options.deferrable && ['UNIQUE', 'PRIMARY KEY', 'FOREIGN KEY'].includes(options.type.toUpperCase())) {\n      constraintSnippet += ` ${this.deferConstraintsQuery(options)}`;\n    }\n\n    return constraintSnippet;\n  }\n\n  removeConstraintQuery(tableName, constraintName) {\n    if (typeof tableName === 'string') {\n      tableName = this.quoteIdentifiers(tableName);\n    } else {\n      tableName = this.quoteTable(tableName);\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      tableName,\n      'DROP CONSTRAINT',\n      this.quoteIdentifiers(constraintName)\n    ]);\n  }\n\n  /*\n    Quote an object based on its type. This is a more general version of quoteIdentifiers\n    Strings: should proxy to quoteIdentifiers\n    Arrays:\n      * Expects array in the form: [<model> (optional), <model> (optional),... String, String (optional)]\n        Each <model> can be a model, or an object {model: Model, as: String}, matching include, or an\n        association object, or the name of an association.\n      * Zero or more models can be included in the array and are used to trace a path through the tree of\n        included nested associations. This produces the correct table name for the ORDER BY/GROUP BY SQL\n        and quotes it.\n      * If a single string is appended to end of array, it is quoted.\n        If two strings appended, the 1st string is quoted, the 2nd string unquoted.\n    Objects:\n      * If raw is set, that value should be returned verbatim, without quoting\n      * If fn is set, the string should start with the value of fn, starting paren, followed by\n        the values of cols (which is assumed to be an array), quoted and joined with ', ',\n        unless they are themselves objects\n      * If direction is set, should be prepended\n\n    Currently this function is only used for ordering / grouping columns and Sequelize.col(), but it could\n    potentially also be used for other places where we want to be able to call SQL functions (e.g. as default values)\n   @private\n  */\n  quote(collection, parent, connector) {\n    // init\n    const validOrderOptions = [\n      'ASC',\n      'DESC',\n      'ASC NULLS LAST',\n      'DESC NULLS LAST',\n      'ASC NULLS FIRST',\n      'DESC NULLS FIRST',\n      'NULLS FIRST',\n      'NULLS LAST'\n    ];\n\n    // default\n    connector = connector || '.';\n\n    // just quote as identifiers if string\n    if (typeof collection === 'string') {\n      return this.quoteIdentifiers(collection);\n    }\n    if (Array.isArray(collection)) {\n      // iterate through the collection and mutate objects into associations\n      collection.forEach((item, index) => {\n        const previous = collection[index - 1];\n        let previousAssociation;\n        let previousModel;\n\n        // set the previous as the parent when previous is undefined or the target of the association\n        if (!previous && parent !== undefined) {\n          previousModel = parent;\n        } else if (previous && previous instanceof Association) {\n          previousAssociation = previous;\n          previousModel = previous.target;\n        }\n\n        // if the previous item is a model, then attempt getting an association\n        if (previousModel && previousModel.prototype instanceof Model) {\n          let model;\n          let as;\n\n          if (typeof item === 'function' && item.prototype instanceof Model) {\n            // set\n            model = item;\n          } else if (_.isPlainObject(item) && item.model && item.model.prototype instanceof Model) {\n            // set\n            model = item.model;\n            as = item.as;\n          }\n\n          if (model) {\n            // set the as to either the through name or the model name\n            if (!as && previousAssociation && previousAssociation instanceof Association && previousAssociation.through && previousAssociation.through.model === model) {\n              // get from previous association\n              item = new Association(previousModel, model, {\n                as: model.name\n              });\n            } else {\n              // get association from previous model\n              item = previousModel.getAssociationForAlias(model, as);\n\n              // attempt to use the model name if the item is still null\n              if (!item) {\n                item = previousModel.getAssociationForAlias(model, model.name);\n              }\n            }\n\n            // make sure we have an association\n            if (!(item instanceof Association)) {\n              throw new Error(util.format('Unable to find a valid association for model, \\'%s\\'', model.name));\n            }\n          }\n        }\n\n        if (typeof item === 'string') {\n          // get order index\n          const orderIndex = validOrderOptions.indexOf(item.toUpperCase());\n\n          // see if this is an order\n          if (index > 0 && orderIndex !== -1) {\n            item = this.sequelize.literal(` ${validOrderOptions[orderIndex]}`);\n          } else if (previousModel && previousModel.prototype instanceof Model) {\n            // only go down this path if we have preivous model and check only once\n            if (previousModel.associations !== undefined && previousModel.associations[item]) {\n              // convert the item to an association\n              item = previousModel.associations[item];\n            } else if (previousModel.rawAttributes !== undefined && previousModel.rawAttributes[item] && item !== previousModel.rawAttributes[item].field) {\n              // convert the item attribute from its alias\n              item = previousModel.rawAttributes[item].field;\n            } else if (\n              item.includes('.')\n              && previousModel.rawAttributes !== undefined\n            ) {\n              const itemSplit = item.split('.');\n\n              if (previousModel.rawAttributes[itemSplit[0]].type instanceof DataTypes.JSON) {\n                // just quote identifiers for now\n                const identifier = this.quoteIdentifiers(`${previousModel.name}.${previousModel.rawAttributes[itemSplit[0]].field}`);\n\n                // get path\n                const path = itemSplit.slice(1);\n\n                // extract path\n                item = this.jsonPathExtractionQuery(identifier, path);\n\n                // literal because we don't want to append the model name when string\n                item = this.sequelize.literal(item);\n              }\n            }\n          }\n        }\n\n        collection[index] = item;\n      }, this);\n\n      // loop through array, adding table names of models to quoted\n      const collectionLength = collection.length;\n      const tableNames = [];\n      let item;\n      let i = 0;\n\n      for (i = 0; i < collectionLength - 1; i++) {\n        item = collection[i];\n        if (typeof item === 'string' || item._modelAttribute || item instanceof Utils.SequelizeMethod) {\n          break;\n        } else if (item instanceof Association) {\n          tableNames[i] = item.as;\n        }\n      }\n\n      // start building sql\n      let sql = '';\n\n      if (i > 0) {\n        sql += `${this.quoteIdentifier(tableNames.join(connector))}.`;\n      } else if (typeof collection[0] === 'string' && parent) {\n        sql += `${this.quoteIdentifier(parent.name)}.`;\n      }\n\n      // loop through everything past i and append to the sql\n      collection.slice(i).forEach(collectionItem => {\n        sql += this.quote(collectionItem, parent, connector);\n      }, this);\n\n      return sql;\n    }\n    if (collection._modelAttribute) {\n      return `${this.quoteTable(collection.Model.name)}.${this.quoteIdentifier(collection.fieldName)}`;\n    }\n    if (collection instanceof Utils.SequelizeMethod) {\n      return this.handleSequelizeMethod(collection);\n    }\n    if (_.isPlainObject(collection) && collection.raw) {\n      // simple objects with raw is no longer supported\n      throw new Error('The `{raw: \"...\"}` syntax is no longer supported.  Use `sequelize.literal` instead.');\n    }\n    throw new Error(`Unknown structure passed to order / group: ${util.inspect(collection)}`);\n  }\n\n  _initQuoteIdentifier() {\n    this._quoteIdentifier = this.quoteIdentifier;\n    this.quoteIdentifier = function(identifier, force) {\n      if (identifier === '*') return identifier;\n      return this._quoteIdentifier(identifier, force);\n    };\n  }\n\n  /**\n   * Adds quotes to identifier\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    throw new Error(`quoteIdentifier for Dialect \"${this.dialect}\" is not implemented`);\n  }\n\n  /**\n   * Split a list of identifiers by \".\" and quote each part.\n   *\n   * @param {string} identifiers \n   * \n   * @returns {string}\n   */\n  quoteIdentifiers(identifiers) {\n    if (identifiers.includes('.')) {\n      identifiers = identifiers.split('.');\n\n      const head = identifiers.slice(0, identifiers.length - 1).join('->');\n      const tail = identifiers[identifiers.length - 1];\n\n      return `${this.quoteIdentifier(head)}.${this.quoteIdentifier(tail)}`;\n    }\n\n    return this.quoteIdentifier(identifiers);\n  }\n\n  quoteAttribute(attribute, model) {\n    if (model && attribute in model.rawAttributes) {\n      return this.quoteIdentifier(attribute);\n    }\n    return this.quoteIdentifiers(attribute);\n  }\n\n  /**\n   * Quote table name with optional alias and schema attribution\n   *\n   * @param {string|object}  param table string or object\n   * @param {string|boolean} alias alias name\n   *\n   * @returns {string}\n   */\n  quoteTable(param, alias) {\n    let table = '';\n\n    if (alias === true) {\n      alias = param.as || param.name || param;\n    }\n\n    if (_.isObject(param)) {\n      if (this._dialect.supports.schemas) {\n        if (param.schema) {\n          table += `${this.quoteIdentifier(param.schema)}.`;\n        }\n\n        table += this.quoteIdentifier(param.tableName);\n      } else {\n        if (param.schema) {\n          table += param.schema + (param.delimiter || '.');\n        }\n\n        table += param.tableName;\n        table = this.quoteIdentifier(table);\n      }\n    } else {\n      table = this.quoteIdentifier(param);\n    }\n\n    if (alias) {\n      table += ` AS ${this.quoteIdentifier(alias)}`;\n    }\n\n    return table;\n  }\n\n  /*\n    Escape a value (e.g. a string, number or date)\n    @private\n  */\n  escape(value, field, options) {\n    options = options || {};\n\n    if (value !== null && value !== undefined) {\n      if (value instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(value);\n      }\n      if (field && field.type) {\n        this.validate(value, field, options);\n\n        if (field.type.stringify) {\n          // Users shouldn't have to worry about these args - just give them a function that takes a single arg\n          const simpleEscape = escVal => SqlString.escape(escVal, this.options.timezone, this.dialect);\n\n          value = field.type.stringify(value, { escape: simpleEscape, field, timezone: this.options.timezone, operation: options.operation });\n\n          if (field.type.escape === false) {\n            // The data-type already did the required escaping\n            return value;\n          }\n        }\n      }\n    }\n    return SqlString.escape(value, this.options.timezone, this.dialect);\n  }\n\n  bindParam(bind) {\n    return value => {\n      bind.push(value);\n      return `$${bind.length}`;\n    };\n  }\n\n  /*\n    Returns a bind parameter representation of a value (e.g. a string, number or date)\n    @private\n  */\n  format(value, field, options, bindParam) {\n    options = options || {};\n\n    if (value !== null && value !== undefined) {\n      if (value instanceof Utils.SequelizeMethod) {\n        throw new Error('Cannot pass SequelizeMethod as a bind parameter - use escape instead');\n      }\n      if (field && field.type) {\n        this.validate(value, field, options);\n\n        if (field.type.bindParam) {\n          return field.type.bindParam(value, { escape: _.identity, field, timezone: this.options.timezone, operation: options.operation, bindParam });\n        }\n      }\n    }\n\n    return bindParam(value);\n  }\n\n  /*\n    Validate a value against a field specification\n    @private\n  */\n  validate(value, field, options) {\n    if (this.typeValidation && field.type.validate && value) {\n      try {\n        if (options.isList && Array.isArray(value)) {\n          for (const item of value) {\n            field.type.validate(item, options);\n          }\n        } else {\n          field.type.validate(value, options);\n        }\n      } catch (error) {\n        if (error instanceof sequelizeError.ValidationError) {\n          error.errors.push(new sequelizeError.ValidationErrorItem(\n            error.message,\n            'Validation error',\n            field.fieldName,\n            value,\n            null,\n            `${field.type.key} validator`\n          ));\n        }\n\n        throw error;\n      }\n    }\n  }\n\n  isIdentifierQuoted(identifier) {\n    return /^\\s*(?:([`\"'])(?:(?!\\1).|\\1{2})*\\1\\.?)+\\s*$/i.test(identifier);\n  }\n\n  /**\n   * Generates an SQL query that extract JSON property of given path.\n   *\n   * @param   {string}               column   The JSON column\n   * @param   {string|Array<string>} [path]   The path to extract (optional)\n   * @param   {boolean}              [isJson] The value is JSON use alt symbols (optional)\n   * @returns {string}                        The generated sql query\n   * @private\n   */\n  jsonPathExtractionQuery(column, path, isJson) {\n    let paths = _.toPath(path);\n    let pathStr;\n    const quotedColumn = this.isIdentifierQuoted(column)\n      ? column\n      : this.quoteIdentifier(column);\n\n    switch (this.dialect) {\n      case 'mysql':\n      case 'mariadb':\n      case 'sqlite':\n        /**\n         * Non digit sub paths need to be quoted as ECMAScript identifiers\n         * https://bugs.mysql.com/bug.php?id=81896\n         */\n        if (this.dialect === 'mysql') {\n          paths = paths.map(subPath => {\n            return /\\D/.test(subPath)\n              ? Utils.addTicks(subPath, '\"')\n              : subPath;\n          });\n        }\n\n        pathStr = this.escape(['$']\n          .concat(paths)\n          .join('.')\n          .replace(/\\.(\\d+)(?:(?=\\.)|$)/g, (__, digit) => `[${digit}]`));\n\n        if (this.dialect === 'sqlite') {\n          return `json_extract(${quotedColumn},${pathStr})`;\n        }\n\n        return `json_unquote(json_extract(${quotedColumn},${pathStr}))`;\n\n      case 'postgres':\n        const join = isJson ? '#>' : '#>>';\n        pathStr = this.escape(`{${paths.join(',')}}`);\n        return `(${quotedColumn}${join}${pathStr})`;\n\n      default:\n        throw new Error(`Unsupported ${this.dialect} for JSON operations`);\n    }\n  }\n\n  /*\n    Returns a query for selecting elements in the table <tableName>.\n    Options:\n      - attributes -> An array of attributes (e.g. ['name', 'birthday']). Default: *\n      - where -> A hash with conditions (e.g. {name: 'foo'})\n                 OR an ID as integer\n      - order -> e.g. 'id DESC'\n      - group\n      - limit -> The maximum count you want to get.\n      - offset -> An offset value to start from. Only useable with limit!\n   @private\n  */\n  selectQuery(tableName, options, model) {\n    options = options || {};\n    const limit = options.limit;\n    const mainQueryItems = [];\n    const subQueryItems = [];\n    const subQuery = options.subQuery === undefined ? limit && options.hasMultiAssociation : options.subQuery;\n    const attributes = {\n      main: options.attributes && options.attributes.slice(),\n      subQuery: null\n    };\n    const mainTable = {\n      name: tableName,\n      quotedName: null,\n      as: null,\n      model\n    };\n    const topLevelInfo = {\n      names: mainTable,\n      options,\n      subQuery\n    };\n    let mainJoinQueries = [];\n    let subJoinQueries = [];\n    let query;\n\n    // Aliases can be passed through subqueries and we don't want to reset them\n    if (this.options.minifyAliases && !options.aliasesMapping) {\n      options.aliasesMapping = new Map();\n      options.aliasesByTable = {};\n      options.includeAliases = new Map();\n    }\n\n    // resolve table name options\n    if (options.tableAs) {\n      mainTable.as = this.quoteIdentifier(options.tableAs);\n    } else if (!Array.isArray(mainTable.name) && mainTable.model) {\n      mainTable.as = this.quoteIdentifier(mainTable.model.name);\n    }\n\n    mainTable.quotedName = !Array.isArray(mainTable.name) ? this.quoteTable(mainTable.name) : tableName.map(t => {\n      return Array.isArray(t) ? this.quoteTable(t[0], t[1]) : this.quoteTable(t, true);\n    }).join(', ');\n\n    if (subQuery && attributes.main) {\n      for (const keyAtt of mainTable.model.primaryKeyAttributes) {\n        // Check if mainAttributes contain the primary key of the model either as a field or an aliased field\n        if (!attributes.main.some(attr => keyAtt === attr || keyAtt === attr[0] || keyAtt === attr[1])) {\n          attributes.main.push(mainTable.model.rawAttributes[keyAtt].field ? [keyAtt, mainTable.model.rawAttributes[keyAtt].field] : keyAtt);\n        }\n      }\n    }\n\n    attributes.main = this.escapeAttributes(attributes.main, options, mainTable.as);\n    attributes.main = attributes.main || (options.include ? [`${mainTable.as}.*`] : ['*']);\n\n    // If subquery, we add the mainAttributes to the subQuery and set the mainAttributes to select * from subquery\n    if (subQuery || options.groupedLimit) {\n      // We need primary keys\n      attributes.subQuery = attributes.main;\n      attributes.main = [`${mainTable.as || mainTable.quotedName}.*`];\n    }\n\n    if (options.include) {\n      for (const include of options.include) {\n        if (include.separate) {\n          continue;\n        }\n        const joinQueries = this.generateInclude(include, { externalAs: mainTable.as, internalAs: mainTable.as }, topLevelInfo);\n\n        subJoinQueries = subJoinQueries.concat(joinQueries.subQuery);\n        mainJoinQueries = mainJoinQueries.concat(joinQueries.mainQuery);\n\n        if (joinQueries.attributes.main.length > 0) {\n          attributes.main = _.uniq(attributes.main.concat(joinQueries.attributes.main));\n        }\n        if (joinQueries.attributes.subQuery.length > 0) {\n          attributes.subQuery = _.uniq(attributes.subQuery.concat(joinQueries.attributes.subQuery));\n        }\n      }\n    }\n\n    if (subQuery) {\n      subQueryItems.push(this.selectFromTableFragment(options, mainTable.model, attributes.subQuery, mainTable.quotedName, mainTable.as));\n      subQueryItems.push(subJoinQueries.join(''));\n    } else {\n      if (options.groupedLimit) {\n        if (!mainTable.as) {\n          mainTable.as = mainTable.quotedName;\n        }\n        const where = { ...options.where };\n        let groupedLimitOrder,\n          whereKey,\n          include,\n          groupedTableName = mainTable.as;\n\n        if (typeof options.groupedLimit.on === 'string') {\n          whereKey = options.groupedLimit.on;\n        } else if (options.groupedLimit.on instanceof HasMany) {\n          whereKey = options.groupedLimit.on.foreignKeyField;\n        }\n\n        if (options.groupedLimit.on instanceof BelongsToMany) {\n          // BTM includes needs to join the through table on to check ID\n          groupedTableName = options.groupedLimit.on.manyFromSource.as;\n          const groupedLimitOptions = Model._validateIncludedElements({\n            include: [{\n              association: options.groupedLimit.on.manyFromSource,\n              duplicating: false, // The UNION'ed query may contain duplicates, but each sub-query cannot\n              required: true,\n              where: {\n                [Op.placeholder]: true,\n                ...options.groupedLimit.through && options.groupedLimit.through.where\n              }\n            }],\n            model\n          });\n\n          // Make sure attributes from the join table are mapped back to models\n          options.hasJoin = true;\n          options.hasMultiAssociation = true;\n          options.includeMap = Object.assign(groupedLimitOptions.includeMap, options.includeMap);\n          options.includeNames = groupedLimitOptions.includeNames.concat(options.includeNames || []);\n          include = groupedLimitOptions.include;\n\n          if (Array.isArray(options.order)) {\n            // We need to make sure the order by attributes are available to the parent query\n            options.order.forEach((order, i) => {\n              if (Array.isArray(order)) {\n                order = order[0];\n              }\n\n              let alias = `subquery_order_${i}`;\n              options.attributes.push([order, alias]);\n\n              // We don't want to prepend model name when we alias the attributes, so quote them here\n              alias = this.sequelize.literal(this.quote(alias));\n\n              if (Array.isArray(options.order[i])) {\n                options.order[i][0] = alias;\n              } else {\n                options.order[i] = alias;\n              }\n            });\n            groupedLimitOrder = options.order;\n          }\n        } else {\n          // Ordering is handled by the subqueries, so ordering the UNION'ed result is not needed\n          groupedLimitOrder = options.order;\n          delete options.order;\n          where[Op.placeholder] = true;\n        }\n\n        // Caching the base query and splicing the where part into it is consistently > twice\n        // as fast than generating from scratch each time for values.length >= 5\n        const baseQuery = `SELECT * FROM (${this.selectQuery(\n          tableName,\n          {\n            attributes: options.attributes,\n            offset: options.offset,\n            limit: options.groupedLimit.limit,\n            order: groupedLimitOrder,\n            aliasesMapping: options.aliasesMapping,\n            aliasesByTable: options.aliasesByTable,\n            where,\n            include,\n            model\n          },\n          model\n        ).replace(/;$/, '')}) AS sub`; // Every derived table must have its own alias\n        const placeHolder = this.whereItemQuery(Op.placeholder, true, { model });\n        const splicePos = baseQuery.indexOf(placeHolder);\n\n        mainQueryItems.push(this.selectFromTableFragment(options, mainTable.model, attributes.main, `(${\n          options.groupedLimit.values.map(value => {\n            let groupWhere;\n            if (whereKey) {\n              groupWhere = {\n                [whereKey]: value\n              };\n            }\n            if (include) {\n              groupWhere = {\n                [options.groupedLimit.on.foreignIdentifierField]: value\n              };\n            }\n\n            return Utils.spliceStr(baseQuery, splicePos, placeHolder.length, this.getWhereConditions(groupWhere, groupedTableName));\n          }).join(\n            this._dialect.supports['UNION ALL'] ? ' UNION ALL ' : ' UNION '\n          )\n        })`, mainTable.as));\n      } else {\n        mainQueryItems.push(this.selectFromTableFragment(options, mainTable.model, attributes.main, mainTable.quotedName, mainTable.as));\n      }\n\n      mainQueryItems.push(mainJoinQueries.join(''));\n    }\n\n    // Add WHERE to sub or main query\n    if (Object.prototype.hasOwnProperty.call(options, 'where') && !options.groupedLimit) {\n      options.where = this.getWhereConditions(options.where, mainTable.as || tableName, model, options);\n      if (options.where) {\n        if (subQuery) {\n          subQueryItems.push(` WHERE ${options.where}`);\n        } else {\n          mainQueryItems.push(` WHERE ${options.where}`);\n          // Walk the main query to update all selects\n          mainQueryItems.forEach((value, key) => {\n            if (value.startsWith('SELECT')) {\n              mainQueryItems[key] = this.selectFromTableFragment(options, model, attributes.main, mainTable.quotedName, mainTable.as, options.where);\n            }\n          });\n        }\n      }\n    }\n\n    // Add GROUP BY to sub or main query\n    if (options.group) {\n      options.group = Array.isArray(options.group) ? options.group.map(t => this.aliasGrouping(t, model, mainTable.as, options)).join(', ') : this.aliasGrouping(options.group, model, mainTable.as, options);\n\n      if (subQuery && options.group) {\n        subQueryItems.push(` GROUP BY ${options.group}`);\n      } else if (options.group) {\n        mainQueryItems.push(` GROUP BY ${options.group}`);\n      }\n    }\n\n    // Add HAVING to sub or main query\n    if (Object.prototype.hasOwnProperty.call(options, 'having')) {\n      options.having = this.getWhereConditions(options.having, tableName, model, options, false);\n      if (options.having) {\n        if (subQuery) {\n          subQueryItems.push(` HAVING ${options.having}`);\n        } else {\n          mainQueryItems.push(` HAVING ${options.having}`);\n        }\n      }\n    }\n\n    // Add ORDER to sub or main query\n    if (options.order) {\n      const orders = this.getQueryOrders(options, model, subQuery);\n      if (orders.mainQueryOrder.length) {\n        mainQueryItems.push(` ORDER BY ${orders.mainQueryOrder.join(', ')}`);\n      }\n      if (orders.subQueryOrder.length) {\n        subQueryItems.push(` ORDER BY ${orders.subQueryOrder.join(', ')}`);\n      }\n    }\n\n    // Add LIMIT, OFFSET to sub or main query\n    const limitOrder = this.addLimitAndOffset(options, mainTable.model);\n    if (limitOrder && !options.groupedLimit) {\n      if (subQuery) {\n        subQueryItems.push(limitOrder);\n      } else {\n        mainQueryItems.push(limitOrder);\n      }\n    }\n\n    if (subQuery) {\n      this._throwOnEmptyAttributes(attributes.main, { modelName: model && model.name, as: mainTable.as });\n      query = `SELECT ${attributes.main.join(', ')} FROM (${subQueryItems.join('')}) AS ${mainTable.as}${mainJoinQueries.join('')}${mainQueryItems.join('')}`;\n    } else {\n      query = mainQueryItems.join('');\n    }\n\n    if (options.lock && this._dialect.supports.lock) {\n      let lock = options.lock;\n      if (typeof options.lock === 'object') {\n        lock = options.lock.level;\n      }\n      if (this._dialect.supports.lockKey && ['KEY SHARE', 'NO KEY UPDATE'].includes(lock)) {\n        query += ` FOR ${lock}`;\n      } else if (lock === 'SHARE') {\n        query += ` ${this._dialect.supports.forShare}`;\n      } else {\n        query += ' FOR UPDATE';\n      }\n      if (this._dialect.supports.lockOf && options.lock.of && options.lock.of.prototype instanceof Model) {\n        query += ` OF ${this.quoteTable(options.lock.of.name)}`;\n      }\n      if (this._dialect.supports.skipLocked && options.skipLocked) {\n        query += ' SKIP LOCKED';\n      }\n    }\n\n    return `${query};`;\n  }\n\n  aliasGrouping(field, model, tableName, options) {\n    const src = Array.isArray(field) ? field[0] : field;\n\n    return this.quote(this._getAliasForField(tableName, src, options) || src, model);\n  }\n\n  escapeAttributes(attributes, options, mainTableAs) {\n    return attributes && attributes.map(attr => {\n      let addTable = true;\n\n      if (attr instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(attr);\n      }\n      if (Array.isArray(attr)) {\n        if (attr.length !== 2) {\n          throw new Error(`${JSON.stringify(attr)} is not a valid attribute definition. Please use the following format: ['attribute definition', 'alias']`);\n        }\n        attr = attr.slice();\n\n        if (attr[0] instanceof Utils.SequelizeMethod) {\n          attr[0] = this.handleSequelizeMethod(attr[0]);\n          addTable = false;\n        } else if (!attr[0].includes('(') && !attr[0].includes(')')) {\n          attr[0] = this.quoteIdentifier(attr[0]);\n        } else {\n          deprecations.noRawAttributes();\n        }\n        let alias = attr[1];\n\n        if (this.options.minifyAliases) {\n          alias = this._getMinifiedAlias(alias, mainTableAs, options);\n        }\n\n        attr = [attr[0], this.quoteIdentifier(alias)].join(' AS ');\n      } else {\n        attr = !attr.includes(Utils.TICK_CHAR) && !attr.includes('\"')\n          ? this.quoteAttribute(attr, options.model)\n          : this.escape(attr);\n      }\n      if (!_.isEmpty(options.include) && (!attr.includes('.') || options.dotNotation) && addTable) {\n        attr = `${mainTableAs}.${attr}`;\n      }\n\n      return attr;\n    });\n  }\n\n  generateInclude(include, parentTableName, topLevelInfo) {\n    const joinQueries = {\n      mainQuery: [],\n      subQuery: []\n    };\n    const mainChildIncludes = [];\n    const subChildIncludes = [];\n    let requiredMismatch = false;\n    const includeAs = {\n      internalAs: include.as,\n      externalAs: include.as\n    };\n    const attributes = {\n      main: [],\n      subQuery: []\n    };\n    let joinQuery;\n\n    topLevelInfo.options.keysEscaped = true;\n\n    if (topLevelInfo.names.name !== parentTableName.externalAs && topLevelInfo.names.as !== parentTableName.externalAs) {\n      includeAs.internalAs = `${parentTableName.internalAs}->${include.as}`;\n      includeAs.externalAs = `${parentTableName.externalAs}.${include.as}`;\n    }\n\n    // includeIgnoreAttributes is used by aggregate functions\n    if (topLevelInfo.options.includeIgnoreAttributes !== false) {\n      include.model._expandAttributes(include);\n      Utils.mapFinderOptions(include, include.model);\n\n      const includeAttributes = include.attributes.map(attr => {\n        let attrAs = attr;\n        let verbatim = false;\n\n        if (Array.isArray(attr) && attr.length === 2) {\n          if (attr[0] instanceof Utils.SequelizeMethod && (\n            attr[0] instanceof Utils.Literal ||\n            attr[0] instanceof Utils.Cast ||\n            attr[0] instanceof Utils.Fn\n          )) {\n            verbatim = true;\n          }\n\n          attr = attr.map(attr => attr instanceof Utils.SequelizeMethod ? this.handleSequelizeMethod(attr) : attr);\n\n          attrAs = attr[1];\n          attr = attr[0];\n        }\n        if (attr instanceof Utils.Literal) {\n          return attr.val; // We trust the user to rename the field correctly\n        }\n        if (attr instanceof Utils.Cast || attr instanceof Utils.Fn) {\n          throw new Error(\n            'Tried to select attributes using Sequelize.cast or Sequelize.fn without specifying an alias for the result, during eager loading. ' +\n            'This means the attribute will not be added to the returned instance'\n          );\n        }\n\n        let prefix;\n        if (verbatim === true) {\n          prefix = attr;\n        } else if (/#>>|->>/.test(attr)) {\n          prefix = `(${this.quoteIdentifier(includeAs.internalAs)}.${attr.replace(/\\(|\\)/g, '')})`;\n        } else if (/json_extract\\(/.test(attr)) {\n          prefix = attr.replace(/json_extract\\(/i, `json_extract(${this.quoteIdentifier(includeAs.internalAs)}.`);\n        } else {\n          prefix = `${this.quoteIdentifier(includeAs.internalAs)}.${this.quoteIdentifier(attr)}`;\n        }\n        let alias = `${includeAs.externalAs}.${attrAs}`;\n\n        if (this.options.minifyAliases) {\n          alias = this._getMinifiedAlias(alias, includeAs.internalAs, topLevelInfo.options);\n        }\n\n        return Utils.joinSQLFragments([\n          prefix,\n          'AS',\n          this.quoteIdentifier(alias, true)\n        ]);\n      });\n      if (include.subQuery && topLevelInfo.subQuery) {\n        for (const attr of includeAttributes) {\n          attributes.subQuery.push(attr);\n        }\n      } else {\n        for (const attr of includeAttributes) {\n          attributes.main.push(attr);\n        }\n      }\n    }\n\n    //through\n    if (include.through) {\n      joinQuery = this.generateThroughJoin(include, includeAs, parentTableName.internalAs, topLevelInfo);\n    } else {\n      this._generateSubQueryFilter(include, includeAs, topLevelInfo);\n      joinQuery = this.generateJoin(include, topLevelInfo);\n    }\n\n    // handle possible new attributes created in join\n    if (joinQuery.attributes.main.length > 0) {\n      attributes.main = attributes.main.concat(joinQuery.attributes.main);\n    }\n\n    if (joinQuery.attributes.subQuery.length > 0) {\n      attributes.subQuery = attributes.subQuery.concat(joinQuery.attributes.subQuery);\n    }\n\n    if (include.include) {\n      for (const childInclude of include.include) {\n        if (childInclude.separate || childInclude._pseudo) {\n          continue;\n        }\n\n        const childJoinQueries = this.generateInclude(childInclude, includeAs, topLevelInfo);\n\n        if (include.required === false && childInclude.required === true) {\n          requiredMismatch = true;\n        }\n        // if the child is a sub query we just give it to the\n        if (childInclude.subQuery && topLevelInfo.subQuery) {\n          subChildIncludes.push(childJoinQueries.subQuery);\n        }\n        if (childJoinQueries.mainQuery) {\n          mainChildIncludes.push(childJoinQueries.mainQuery);\n        }\n        if (childJoinQueries.attributes.main.length > 0) {\n          attributes.main = attributes.main.concat(childJoinQueries.attributes.main);\n        }\n        if (childJoinQueries.attributes.subQuery.length > 0) {\n          attributes.subQuery = attributes.subQuery.concat(childJoinQueries.attributes.subQuery);\n        }\n      }\n    }\n\n    if (include.subQuery && topLevelInfo.subQuery) {\n      if (requiredMismatch && subChildIncludes.length > 0) {\n        joinQueries.subQuery.push(` ${joinQuery.join} ( ${joinQuery.body}${subChildIncludes.join('')} ) ON ${joinQuery.condition}`);\n      } else {\n        joinQueries.subQuery.push(` ${joinQuery.join} ${joinQuery.body} ON ${joinQuery.condition}`);\n        if (subChildIncludes.length > 0) {\n          joinQueries.subQuery.push(subChildIncludes.join(''));\n        }\n      }\n      joinQueries.mainQuery.push(mainChildIncludes.join(''));\n    } else {\n      if (requiredMismatch && mainChildIncludes.length > 0) {\n        joinQueries.mainQuery.push(` ${joinQuery.join} ( ${joinQuery.body}${mainChildIncludes.join('')} ) ON ${joinQuery.condition}`);\n      } else {\n        joinQueries.mainQuery.push(` ${joinQuery.join} ${joinQuery.body} ON ${joinQuery.condition}`);\n        if (mainChildIncludes.length > 0) {\n          joinQueries.mainQuery.push(mainChildIncludes.join(''));\n        }\n      }\n      joinQueries.subQuery.push(subChildIncludes.join(''));\n    }\n\n    return {\n      mainQuery: joinQueries.mainQuery.join(''),\n      subQuery: joinQueries.subQuery.join(''),\n      attributes\n    };\n  }\n\n  _getMinifiedAlias(alias, tableName, options) {\n    // We do not want to re-alias in case of a subquery\n    if (options.aliasesByTable[`${tableName}${alias}`]) {\n      return options.aliasesByTable[`${tableName}${alias}`];\n    }\n\n    // Do not alias custom suquery_orders\n    if (alias.match(/subquery_order_[0-9]/)) {\n      return alias;\n    }\n\n    const minifiedAlias = `_${options.aliasesMapping.size}`;\n\n    options.aliasesMapping.set(minifiedAlias, alias);\n    options.aliasesByTable[`${tableName}${alias}`] = minifiedAlias;\n\n    return minifiedAlias;\n  }\n\n  _getAliasForField(tableName, field, options) {\n    if (this.options.minifyAliases) {\n      if (options.aliasesByTable[`${tableName}${field}`]) {\n        return options.aliasesByTable[`${tableName}${field}`];\n      }\n    }\n    return null;\n  }\n\n  generateJoin(include, topLevelInfo) {\n    const association = include.association;\n    const parent = include.parent;\n    const parentIsTop = !!parent && !include.parent.association && include.parent.model.name === topLevelInfo.options.model.name;\n    let $parent;\n    let joinWhere;\n    /* Attributes for the left side */\n    const left = association.source;\n    const attrLeft = association instanceof BelongsTo ?\n      association.identifier :\n      association.sourceKeyAttribute || left.primaryKeyAttribute;\n    const fieldLeft = association instanceof BelongsTo ?\n      association.identifierField :\n      left.rawAttributes[association.sourceKeyAttribute || left.primaryKeyAttribute].field;\n    let asLeft;\n    /* Attributes for the right side */\n    const right = include.model;\n    const tableRight = right.getTableName();\n    const fieldRight = association instanceof BelongsTo ?\n      right.rawAttributes[association.targetIdentifier || right.primaryKeyAttribute].field :\n      association.identifierField;\n    let asRight = include.as;\n\n    while (($parent = $parent && $parent.parent || include.parent) && $parent.association) {\n      if (asLeft) {\n        asLeft = `${$parent.as}->${asLeft}`;\n      } else {\n        asLeft = $parent.as;\n      }\n    }\n\n    if (!asLeft) asLeft = parent.as || parent.model.name;\n    else asRight = `${asLeft}->${asRight}`;\n\n    let joinOn = `${this.quoteTable(asLeft)}.${this.quoteIdentifier(fieldLeft)}`;\n    const subqueryAttributes = [];\n\n    if (topLevelInfo.options.groupedLimit && parentIsTop || topLevelInfo.subQuery && include.parent.subQuery && !include.subQuery) {\n      if (parentIsTop) {\n        // The main model attributes is not aliased to a prefix\n        const tableName = this.quoteTable(parent.as || parent.model.name);\n\n        // Check for potential aliased JOIN condition\n        joinOn = this._getAliasForField(tableName, attrLeft, topLevelInfo.options) || `${tableName}.${this.quoteIdentifier(attrLeft)}`;\n\n        if (topLevelInfo.subQuery) {\n          const dbIdentifier = `${tableName}.${this.quoteIdentifier(fieldLeft)}`;\n          subqueryAttributes.push(dbIdentifier !== joinOn ? `${dbIdentifier} AS ${this.quoteIdentifier(attrLeft)}` : dbIdentifier);\n        }\n      } else {\n        const joinSource = `${asLeft.replace(/->/g, '.')}.${attrLeft}`;\n\n        // Check for potential aliased JOIN condition\n        joinOn = this._getAliasForField(asLeft, joinSource, topLevelInfo.options) || this.quoteIdentifier(joinSource);\n      }\n    }\n\n    joinOn += ` = ${this.quoteIdentifier(asRight)}.${this.quoteIdentifier(fieldRight)}`;\n\n    if (include.on) {\n      joinOn = this.whereItemsQuery(include.on, {\n        prefix: this.sequelize.literal(this.quoteIdentifier(asRight)),\n        model: include.model\n      });\n    }\n\n    if (include.where) {\n      joinWhere = this.whereItemsQuery(include.where, {\n        prefix: this.sequelize.literal(this.quoteIdentifier(asRight)),\n        model: include.model\n      });\n      if (joinWhere) {\n        if (include.or) {\n          joinOn += ` OR ${joinWhere}`;\n        } else {\n          joinOn += ` AND ${joinWhere}`;\n        }\n      }\n    }\n\n    if (this.options.minifyAliases && asRight.length > 63) {\n      const alias = `%${topLevelInfo.options.includeAliases.size}`;\n\n      topLevelInfo.options.includeAliases.set(alias, asRight);\n    }\n\n    return {\n      join: include.required ? 'INNER JOIN' : include.right && this._dialect.supports['RIGHT JOIN'] ? 'RIGHT OUTER JOIN' : 'LEFT OUTER JOIN',\n      body: this.quoteTable(tableRight, asRight),\n      condition: joinOn,\n      attributes: {\n        main: [],\n        subQuery: subqueryAttributes\n      }\n    };\n  }\n\n  /**\n   * Returns the SQL fragments to handle returning the attributes from an insert/update query.\n   *\n   * @param  {object} modelAttributes An object with the model attributes.\n   * @param  {object} options         An object with options.\n   *\n   * @private\n   */\n  generateReturnValues(modelAttributes, options) {\n    const returnFields = [];\n    const returnTypes = [];\n    let outputFragment = '';\n    let returningFragment = '';\n    let tmpTable = '';\n\n    if (Array.isArray(options.returning)) {\n      returnFields.push(...options.returning.map(field => this.quoteIdentifier(field)));\n    } else if (modelAttributes) {\n      _.each(modelAttributes, attribute => {\n        if (!(attribute.type instanceof DataTypes.VIRTUAL)) {\n          returnFields.push(this.quoteIdentifier(attribute.field));\n          returnTypes.push(attribute.type);\n        }\n      });\n    }\n\n    if (_.isEmpty(returnFields)) {\n      returnFields.push('*');\n    }\n\n    if (this._dialect.supports.returnValues.returning) {\n      returningFragment = ` RETURNING ${returnFields.join(',')}`;\n    } else if (this._dialect.supports.returnValues.output) {\n      outputFragment = ` OUTPUT ${returnFields.map(field => `INSERTED.${field}`).join(',')}`;\n\n      //To capture output rows when there is a trigger on MSSQL DB\n      if (options.hasTrigger && this._dialect.supports.tmpTableTrigger) {\n        const tmpColumns = returnFields.map((field, i) => `${field} ${returnTypes[i].toSql()}`);\n\n        tmpTable = `DECLARE @tmp TABLE (${tmpColumns.join(',')}); `;\n        outputFragment += ' INTO @tmp';\n        returningFragment = '; SELECT * FROM @tmp';\n      }\n    }\n\n    return { outputFragment, returnFields, returningFragment, tmpTable };\n  }\n\n  generateThroughJoin(include, includeAs, parentTableName, topLevelInfo) {\n    const through = include.through;\n    const throughTable = through.model.getTableName();\n    const throughAs = `${includeAs.internalAs}->${through.as}`;\n    const externalThroughAs = `${includeAs.externalAs}.${through.as}`;\n    const throughAttributes = through.attributes.map(attr => {\n      let alias = `${externalThroughAs}.${Array.isArray(attr) ? attr[1] : attr}`;\n\n      if (this.options.minifyAliases) {\n        alias = this._getMinifiedAlias(alias, throughAs, topLevelInfo.options);\n      }\n\n      return Utils.joinSQLFragments([\n        `${this.quoteIdentifier(throughAs)}.${this.quoteIdentifier(Array.isArray(attr) ? attr[0] : attr)}`,\n        'AS',\n        this.quoteIdentifier(alias)\n      ]);\n    });\n    const association = include.association;\n    const parentIsTop = !include.parent.association && include.parent.model.name === topLevelInfo.options.model.name;\n    const tableSource = parentTableName;\n    const identSource = association.identifierField;\n    const tableTarget = includeAs.internalAs;\n    const identTarget = association.foreignIdentifierField;\n    const attrTarget = association.targetKeyField;\n\n    const joinType = include.required ? 'INNER JOIN' : include.right && this._dialect.supports['RIGHT JOIN'] ? 'RIGHT OUTER JOIN' : 'LEFT OUTER JOIN';\n    let joinBody;\n    let joinCondition;\n    const attributes = {\n      main: [],\n      subQuery: []\n    };\n    let attrSource = association.sourceKey;\n    let sourceJoinOn;\n    let targetJoinOn;\n    let throughWhere;\n    let targetWhere;\n\n    if (topLevelInfo.options.includeIgnoreAttributes !== false) {\n      // Through includes are always hasMany, so we need to add the attributes to the mainAttributes no matter what (Real join will never be executed in subquery)\n      for (const attr of throughAttributes) {\n        attributes.main.push(attr);\n      }\n    }\n\n    // Figure out if we need to use field or attribute\n    if (!topLevelInfo.subQuery) {\n      attrSource = association.sourceKeyField;\n    }\n    if (topLevelInfo.subQuery && !include.subQuery && !include.parent.subQuery && include.parent.model !== topLevelInfo.options.mainModel) {\n      attrSource = association.sourceKeyField;\n    }\n\n    // Filter statement for left side of through\n    // Used by both join and subquery where\n    // If parent include was in a subquery need to join on the aliased attribute\n    if (topLevelInfo.subQuery && !include.subQuery && include.parent.subQuery && !parentIsTop) {\n      // If we are minifying aliases and our JOIN target has been minified, we need to use the alias instead of the original column name\n      const joinSource = this._getAliasForField(tableSource, `${tableSource}.${attrSource}`, topLevelInfo.options) || `${tableSource}.${attrSource}`;\n\n      sourceJoinOn = `${this.quoteIdentifier(joinSource)} = `;\n    } else {\n      // If we are minifying aliases and our JOIN target has been minified, we need to use the alias instead of the original column name\n      const aliasedSource = this._getAliasForField(tableSource, attrSource, topLevelInfo.options) || attrSource;\n\n      sourceJoinOn = `${this.quoteTable(tableSource)}.${this.quoteIdentifier(aliasedSource)} = `;\n    }\n    sourceJoinOn += `${this.quoteIdentifier(throughAs)}.${this.quoteIdentifier(identSource)}`;\n\n    // Filter statement for right side of through\n    // Used by both join and subquery where\n    targetJoinOn = `${this.quoteIdentifier(tableTarget)}.${this.quoteIdentifier(attrTarget)} = `;\n    targetJoinOn += `${this.quoteIdentifier(throughAs)}.${this.quoteIdentifier(identTarget)}`;\n\n    if (through.where) {\n      throughWhere = this.getWhereConditions(through.where, this.sequelize.literal(this.quoteIdentifier(throughAs)), through.model);\n    }\n\n    // Generate a wrapped join so that the through table join can be dependent on the target join\n    joinBody = `( ${this.quoteTable(throughTable, throughAs)} INNER JOIN ${this.quoteTable(include.model.getTableName(), includeAs.internalAs)} ON ${targetJoinOn}`;\n    if (throughWhere) {\n      joinBody += ` AND ${throughWhere}`;\n    }\n    joinBody += ')';\n    joinCondition = sourceJoinOn;\n\n    if (include.where || include.through.where) {\n      if (include.where) {\n        targetWhere = this.getWhereConditions(include.where, this.sequelize.literal(this.quoteIdentifier(includeAs.internalAs)), include.model, topLevelInfo.options);\n        if (targetWhere) {\n          joinCondition += ` AND ${targetWhere}`;\n        }\n      }\n    }\n\n    this._generateSubQueryFilter(include, includeAs, topLevelInfo);\n\n    return {\n      join: joinType,\n      body: joinBody,\n      condition: joinCondition,\n      attributes\n    };\n  }\n\n  /*\n   * Generates subQueryFilter - a select nested in the where clause of the subQuery.\n   * For a given include a query is generated that contains all the way from the subQuery\n   * table to the include table plus everything that's in required transitive closure of the\n   * given include.\n   */\n  _generateSubQueryFilter(include, includeAs, topLevelInfo) {\n    if (!topLevelInfo.subQuery || !include.subQueryFilter) {\n      return;\n    }\n\n    if (!topLevelInfo.options.where) {\n      topLevelInfo.options.where = {};\n    }\n    let parent = include;\n    let child = include;\n    let nestedIncludes = this._getRequiredClosure(include).include;\n    let query;\n\n    while ((parent = parent.parent)) { // eslint-disable-line\n      if (parent.parent && !parent.required) {\n        return; // only generate subQueryFilter if all the parents of this include are required\n      }\n\n      if (parent.subQueryFilter) {\n        // the include is already handled as this parent has the include on its required closure\n        // skip to prevent duplicate subQueryFilter\n        return;\n      }\n\n      nestedIncludes = [{ ...child, include: nestedIncludes, attributes: [] }];\n      child = parent;\n    }\n\n    const topInclude = nestedIncludes[0];\n    const topParent = topInclude.parent;\n    const topAssociation = topInclude.association;\n    topInclude.association = undefined;\n\n    if (topInclude.through && Object(topInclude.through.model) === topInclude.through.model) {\n      query = this.selectQuery(topInclude.through.model.getTableName(), {\n        attributes: [topInclude.through.model.primaryKeyField],\n        include: Model._validateIncludedElements({\n          model: topInclude.through.model,\n          include: [{\n            association: topAssociation.toTarget,\n            required: true,\n            where: topInclude.where,\n            include: topInclude.include\n          }]\n        }).include,\n        model: topInclude.through.model,\n        where: {\n          [Op.and]: [\n            this.sequelize.literal([\n              `${this.quoteTable(topParent.model.name)}.${this.quoteIdentifier(topParent.model.primaryKeyField)}`,\n              `${this.quoteIdentifier(topInclude.through.model.name)}.${this.quoteIdentifier(topAssociation.identifierField)}`\n            ].join(' = ')),\n            topInclude.through.where\n          ]\n        },\n        limit: 1,\n        includeIgnoreAttributes: false\n      }, topInclude.through.model);\n    } else {\n      const isBelongsTo = topAssociation.associationType === 'BelongsTo';\n      const sourceField = isBelongsTo ? topAssociation.identifierField : topAssociation.sourceKeyField || topParent.model.primaryKeyField;\n      const targetField = isBelongsTo ? topAssociation.sourceKeyField || topInclude.model.primaryKeyField : topAssociation.identifierField;\n\n      const join = [\n        `${this.quoteIdentifier(topInclude.as)}.${this.quoteIdentifier(targetField)}`,\n        `${this.quoteTable(topParent.as || topParent.model.name)}.${this.quoteIdentifier(sourceField)}`\n      ].join(' = ');\n\n      query = this.selectQuery(topInclude.model.getTableName(), {\n        attributes: [targetField],\n        include: Model._validateIncludedElements(topInclude).include,\n        model: topInclude.model,\n        where: {\n          [Op.and]: [\n            topInclude.where,\n            { [Op.join]: this.sequelize.literal(join) }\n          ]\n        },\n        limit: 1,\n        tableAs: topInclude.as,\n        includeIgnoreAttributes: false\n      }, topInclude.model);\n    }\n\n    if (!topLevelInfo.options.where[Op.and]) {\n      topLevelInfo.options.where[Op.and] = [];\n    }\n\n    topLevelInfo.options.where[`__${includeAs.internalAs}`] = this.sequelize.literal([\n      '(',\n      query.replace(/;$/, ''),\n      ')',\n      'IS NOT NULL'\n    ].join(' '));\n  }\n\n  /*\n   * For a given include hierarchy creates a copy of it where only the required includes\n   * are preserved.\n   */\n  _getRequiredClosure(include) {\n    const copy = { ...include, attributes: [], include: [] };\n\n    if (Array.isArray(include.include)) {\n      copy.include = include.include\n        .filter(i => i.required)\n        .map(inc => this._getRequiredClosure(inc));\n    }\n\n    return copy;\n  }\n\n  getQueryOrders(options, model, subQuery) {\n    const mainQueryOrder = [];\n    const subQueryOrder = [];\n\n    if (Array.isArray(options.order)) {\n      for (let order of options.order) {\n\n        // wrap if not array\n        if (!Array.isArray(order)) {\n          order = [order];\n        }\n\n        if (\n          subQuery\n          && Array.isArray(order)\n          && order[0]\n          && !(order[0] instanceof Association)\n          && !(typeof order[0] === 'function' && order[0].prototype instanceof Model)\n          && !(typeof order[0].model === 'function' && order[0].model.prototype instanceof Model)\n          && !(typeof order[0] === 'string' && model && model.associations !== undefined && model.associations[order[0]])\n        ) {\n          subQueryOrder.push(this.quote(order, model, '->'));\n        }\n\n        if (subQuery) {\n          // Handle case where sub-query renames attribute we want to order by,\n          // see https://github.com/sequelize/sequelize/issues/8739\n          const subQueryAttribute = options.attributes.find(a => Array.isArray(a) && a[0] === order[0] && a[1]);\n          if (subQueryAttribute) {\n            const modelName = this.quoteIdentifier(model.name);\n\n            order[0] = new Utils.Col(this._getAliasForField(modelName, subQueryAttribute[1], options) || subQueryAttribute[1]);\n          }\n        }\n\n        mainQueryOrder.push(this.quote(order, model, '->'));\n      }\n    } else if (options.order instanceof Utils.SequelizeMethod) {\n      const sql = this.quote(options.order, model, '->');\n      if (subQuery) {\n        subQueryOrder.push(sql);\n      }\n      mainQueryOrder.push(sql);\n    } else {\n      throw new Error('Order must be type of array or instance of a valid sequelize method.');\n    }\n\n    return { mainQueryOrder, subQueryOrder };\n  }\n\n  _throwOnEmptyAttributes(attributes, extraInfo = {}) {\n    if (attributes.length > 0) return;\n    const asPart = extraInfo.as && `as ${extraInfo.as}` || '';\n    const namePart = extraInfo.modelName && `for model '${extraInfo.modelName}'` || '';\n    const message = `Attempted a SELECT query ${namePart} ${asPart} without selecting any columns`;\n    throw new sequelizeError.QueryError(message.replace(/ +/g, ' '));\n  }\n\n  selectFromTableFragment(options, model, attributes, tables, mainTableAs) {\n    this._throwOnEmptyAttributes(attributes, { modelName: model && model.name, as: mainTableAs });\n\n    let fragment = `SELECT ${attributes.join(', ')} FROM ${tables}`;\n\n    if (mainTableAs) {\n      fragment += ` AS ${mainTableAs}`;\n    }\n\n    if (options.indexHints && this._dialect.supports.indexHints) {\n      for (const hint of options.indexHints) {\n        if (IndexHints[hint.type]) {\n          fragment += ` ${IndexHints[hint.type]} INDEX (${hint.values.map(indexName => this.quoteIdentifiers(indexName)).join(',')})`;\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  /**\n   * Returns an SQL fragment for adding result constraints.\n   *\n   * @param  {object} options An object with selectQuery options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  addLimitAndOffset(options) {\n    let fragment = '';\n\n    /* eslint-disable */\n    if (options.offset != null && options.limit == null) {\n      fragment += ' LIMIT ' + this.escape(options.offset) + ', ' + 10000000000000;\n    } else if (options.limit != null) {\n      if (options.offset != null) {\n        fragment += ' LIMIT ' + this.escape(options.offset) + ', ' + this.escape(options.limit);\n      } else {\n        fragment += ' LIMIT ' + this.escape(options.limit);\n      }\n    }\n    /* eslint-enable */\n\n    return fragment;\n  }\n\n  handleSequelizeMethod(smth, tableName, factory, options, prepend) {\n    let result;\n\n    if (Object.prototype.hasOwnProperty.call(this.OperatorMap, smth.comparator)) {\n      smth.comparator = this.OperatorMap[smth.comparator];\n    }\n\n    if (smth instanceof Utils.Where) {\n      let value = smth.logic;\n      let key;\n\n      if (smth.attribute instanceof Utils.SequelizeMethod) {\n        key = this.getWhereConditions(smth.attribute, tableName, factory, options, prepend);\n      } else {\n        key = `${this.quoteTable(smth.attribute.Model.name)}.${this.quoteIdentifier(smth.attribute.field || smth.attribute.fieldName)}`;\n      }\n\n      if (value && value instanceof Utils.SequelizeMethod) {\n        value = this.getWhereConditions(value, tableName, factory, options, prepend);\n\n        if (value === 'NULL') {\n          if (smth.comparator === '=') {\n            smth.comparator = 'IS';\n          }\n          if (smth.comparator === '!=') {\n            smth.comparator = 'IS NOT';\n          }\n        }\n\n        return [key, value].join(` ${smth.comparator} `);\n      }\n      if (_.isPlainObject(value)) {\n        return this.whereItemQuery(smth.attribute, value, {\n          model: factory\n        });\n      }\n      if ([this.OperatorMap[Op.between], this.OperatorMap[Op.notBetween]].includes(smth.comparator)) {\n        value = `${this.escape(value[0])} AND ${this.escape(value[1])}`;\n      } else if (typeof value === 'boolean') {\n        value = this.booleanValue(value);\n      } else {\n        value = this.escape(value);\n      }\n\n      if (value === 'NULL') {\n        if (smth.comparator === '=') {\n          smth.comparator = 'IS';\n        }\n        if (smth.comparator === '!=') {\n          smth.comparator = 'IS NOT';\n        }\n      }\n\n      return [key, value].join(` ${smth.comparator} `);\n    }\n    if (smth instanceof Utils.Literal) {\n      return smth.val;\n    }\n    if (smth instanceof Utils.Cast) {\n      if (smth.val instanceof Utils.SequelizeMethod) {\n        result = this.handleSequelizeMethod(smth.val, tableName, factory, options, prepend);\n      } else if (_.isPlainObject(smth.val)) {\n        result = this.whereItemsQuery(smth.val);\n      } else {\n        result = this.escape(smth.val);\n      }\n\n      return `CAST(${result} AS ${smth.type.toUpperCase()})`;\n    }\n    if (smth instanceof Utils.Fn) {\n      return `${smth.fn}(${\n        smth.args.map(arg => {\n          if (arg instanceof Utils.SequelizeMethod) {\n            return this.handleSequelizeMethod(arg, tableName, factory, options, prepend);\n          }\n          if (_.isPlainObject(arg)) {\n            return this.whereItemsQuery(arg);\n          }\n          return this.escape(typeof arg === 'string' ? arg.replace('$', '$$$') : arg);\n        }).join(', ')\n      })`;\n    }\n    if (smth instanceof Utils.Col) {\n      if (Array.isArray(smth.col) && !factory) {\n        throw new Error('Cannot call Sequelize.col() with array outside of order / group clause');\n      }\n      if (smth.col.startsWith('*')) {\n        return '*';\n      }\n      return this.quote(smth.col, factory);\n    }\n    return smth.toString(this, factory);\n  }\n\n  whereQuery(where, options) {\n    const query = this.whereItemsQuery(where, options);\n    if (query && query.length) {\n      return `WHERE ${query}`;\n    }\n    return '';\n  }\n\n  whereItemsQuery(where, options, binding) {\n    if (\n      where === null ||\n      where === undefined ||\n      Utils.getComplexSize(where) === 0\n    ) {\n      // NO OP\n      return '';\n    }\n\n    if (typeof where === 'string') {\n      throw new Error('Support for `{where: \\'raw query\\'}` has been removed.');\n    }\n\n    const items = [];\n\n    binding = binding || 'AND';\n    if (binding[0] !== ' ') binding = ` ${binding} `;\n\n    if (_.isPlainObject(where)) {\n      Utils.getComplexKeys(where).forEach(prop => {\n        const item = where[prop];\n        items.push(this.whereItemQuery(prop, item, options));\n      });\n    } else {\n      items.push(this.whereItemQuery(undefined, where, options));\n    }\n\n    return items.length && items.filter(item => item && item.length).join(binding) || '';\n  }\n\n  whereItemQuery(key, value, options = {}) {\n    if (value === undefined) {\n      throw new Error(`WHERE parameter \"${key}\" has invalid \"undefined\" value`);\n    }\n\n    if (typeof key === 'string' && key.includes('.') && options.model) {\n      const keyParts = key.split('.');\n      if (options.model.rawAttributes[keyParts[0]] && options.model.rawAttributes[keyParts[0]].type instanceof DataTypes.JSON) {\n        const tmp = {};\n        const field = options.model.rawAttributes[keyParts[0]];\n        _.set(tmp, keyParts.slice(1), value);\n        return this.whereItemQuery(field.field || keyParts[0], tmp, { field, ...options });\n      }\n    }\n\n    const field = this._findField(key, options);\n    const fieldType = field && field.type || options.type;\n\n    const isPlainObject = _.isPlainObject(value);\n    const isArray = !isPlainObject && Array.isArray(value);\n    key = this.OperatorsAliasMap && this.OperatorsAliasMap[key] || key;\n    if (isPlainObject) {\n      value = this._replaceAliases(value);\n    }\n    const valueKeys = isPlainObject && Utils.getComplexKeys(value);\n\n    if (key === undefined) {\n      if (typeof value === 'string') {\n        return value;\n      }\n\n      if (isPlainObject && valueKeys.length === 1) {\n        return this.whereItemQuery(valueKeys[0], value[valueKeys[0]], options);\n      }\n    }\n\n    if (value === null) {\n      const opValue = options.bindParam ? 'NULL' : this.escape(value, field);\n      return this._joinKeyValue(key, opValue, this.OperatorMap[Op.is], options.prefix);\n    }\n\n    if (!value) {\n      const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n      return this._joinKeyValue(key, opValue, this.OperatorMap[Op.eq], options.prefix);\n    }\n\n    if (value instanceof Utils.SequelizeMethod && !(key !== undefined && value instanceof Utils.Fn)) {\n      return this.handleSequelizeMethod(value);\n    }\n\n    // Convert where: [] to Op.and if possible, else treat as literal/replacements\n    if (key === undefined && isArray) {\n      if (Utils.canTreatArrayAsAnd(value)) {\n        key = Op.and;\n      } else {\n        throw new Error('Support for literal replacements in the `where` object has been removed.');\n      }\n    }\n\n    if (key === Op.or || key === Op.and || key === Op.not) {\n      return this._whereGroupBind(key, value, options);\n    }\n\n\n    if (value[Op.or]) {\n      return this._whereBind(this.OperatorMap[Op.or], key, value[Op.or], options);\n    }\n\n    if (value[Op.and]) {\n      return this._whereBind(this.OperatorMap[Op.and], key, value[Op.and], options);\n    }\n\n    if (isArray && fieldType instanceof DataTypes.ARRAY) {\n      const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n      return this._joinKeyValue(key, opValue, this.OperatorMap[Op.eq], options.prefix);\n    }\n\n    if (isPlainObject && fieldType instanceof DataTypes.JSON && options.json !== false) {\n      return this._whereJSON(key, value, options);\n    }\n    // If multiple keys we combine the different logic conditions\n    if (isPlainObject && valueKeys.length > 1) {\n      return this._whereBind(this.OperatorMap[Op.and], key, value, options);\n    }\n\n    if (isArray) {\n      return this._whereParseSingleValueObject(key, field, Op.in, value, options);\n    }\n    if (isPlainObject) {\n      if (this.OperatorMap[valueKeys[0]]) {\n        return this._whereParseSingleValueObject(key, field, valueKeys[0], value[valueKeys[0]], options);\n      }\n      return this._whereParseSingleValueObject(key, field, this.OperatorMap[Op.eq], value, options);\n    }\n\n    if (key === Op.placeholder) {\n      const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n      return this._joinKeyValue(this.OperatorMap[key], opValue, this.OperatorMap[Op.eq], options.prefix);\n    }\n\n    const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n    return this._joinKeyValue(key, opValue, this.OperatorMap[Op.eq], options.prefix);\n  }\n\n  _findField(key, options) {\n    if (options.field) {\n      return options.field;\n    }\n\n    if (options.model && options.model.rawAttributes && options.model.rawAttributes[key]) {\n      return options.model.rawAttributes[key];\n    }\n\n    if (options.model && options.model.fieldRawAttributesMap && options.model.fieldRawAttributesMap[key]) {\n      return options.model.fieldRawAttributesMap[key];\n    }\n  }\n\n  // OR/AND/NOT grouping logic\n  _whereGroupBind(key, value, options) {\n    const binding = key === Op.or ? this.OperatorMap[Op.or] : this.OperatorMap[Op.and];\n    const outerBinding = key === Op.not ? 'NOT ' : '';\n\n    if (Array.isArray(value)) {\n      value = value.map(item => {\n        let itemQuery = this.whereItemsQuery(item, options, this.OperatorMap[Op.and]);\n        if (itemQuery && itemQuery.length && (Array.isArray(item) || _.isPlainObject(item)) && Utils.getComplexSize(item) > 1) {\n          itemQuery = `(${itemQuery})`;\n        }\n        return itemQuery;\n      }).filter(item => item && item.length);\n\n      value = value.length && value.join(binding);\n    } else {\n      value = this.whereItemsQuery(value, options, binding);\n    }\n    // Op.or: [] should return no data.\n    // Op.not of no restriction should also return no data\n    if ((key === Op.or || key === Op.not) && !value) {\n      return '0 = 1';\n    }\n\n    return value ? `${outerBinding}(${value})` : undefined;\n  }\n\n  _whereBind(binding, key, value, options) {\n    if (_.isPlainObject(value)) {\n      value = Utils.getComplexKeys(value).map(prop => {\n        const item = value[prop];\n        return this.whereItemQuery(key, { [prop]: item }, options);\n      });\n    } else {\n      value = value.map(item => this.whereItemQuery(key, item, options));\n    }\n\n    value = value.filter(item => item && item.length);\n\n    return value.length ? `(${value.join(binding)})` : undefined;\n  }\n\n  _whereJSON(key, value, options) {\n    const items = [];\n    let baseKey = this.quoteIdentifier(key);\n    if (options.prefix) {\n      if (options.prefix instanceof Utils.Literal) {\n        baseKey = `${this.handleSequelizeMethod(options.prefix)}.${baseKey}`;\n      } else {\n        baseKey = `${this.quoteTable(options.prefix)}.${baseKey}`;\n      }\n    }\n\n    Utils.getOperators(value).forEach(op => {\n      const where = {\n        [op]: value[op]\n      };\n      items.push(this.whereItemQuery(key, where, { ...options, json: false }));\n    });\n\n    _.forOwn(value, (item, prop) => {\n      this._traverseJSON(items, baseKey, prop, item, [prop]);\n    });\n\n    const result = items.join(this.OperatorMap[Op.and]);\n    return items.length > 1 ? `(${result})` : result;\n  }\n\n  _traverseJSON(items, baseKey, prop, item, path) {\n    let cast;\n\n    if (path[path.length - 1].includes('::')) {\n      const tmp = path[path.length - 1].split('::');\n      cast = tmp[1];\n      path[path.length - 1] = tmp[0];\n    }\n\n    let pathKey = this.jsonPathExtractionQuery(baseKey, path);\n\n    if (_.isPlainObject(item)) {\n      Utils.getOperators(item).forEach(op => {\n        const value = this._toJSONValue(item[op]);\n        let isJson = false;\n        if (typeof value === 'string' && op === Op.contains) {\n          try {\n            JSON.stringify(value);\n            isJson = true;\n          } catch (e) {\n            // failed to parse, is not json so isJson remains false\n          }\n        }\n        pathKey = this.jsonPathExtractionQuery(baseKey, path, isJson);\n        items.push(this.whereItemQuery(this._castKey(pathKey, value, cast), { [op]: value }));\n      });\n      _.forOwn(item, (value, itemProp) => {\n        this._traverseJSON(items, baseKey, itemProp, value, path.concat([itemProp]));\n      });\n\n      return;\n    }\n\n    item = this._toJSONValue(item);\n    items.push(this.whereItemQuery(this._castKey(pathKey, item, cast), { [Op.eq]: item }));\n  }\n\n  _toJSONValue(value) {\n    return value;\n  }\n\n  _castKey(key, value, cast, json) {\n    cast = cast || this._getJsonCast(Array.isArray(value) ? value[0] : value);\n    if (cast) {\n      return new Utils.Literal(this.handleSequelizeMethod(new Utils.Cast(new Utils.Literal(key), cast, json)));\n    }\n\n    return new Utils.Literal(key);\n  }\n\n  _getJsonCast(value) {\n    if (typeof value === 'number') {\n      return 'double precision';\n    }\n    if (value instanceof Date) {\n      return 'timestamptz';\n    }\n    if (typeof value === 'boolean') {\n      return 'boolean';\n    }\n    return;\n  }\n\n  _joinKeyValue(key, value, comparator, prefix) {\n    if (!key) {\n      return value;\n    }\n    if (comparator === undefined) {\n      throw new Error(`${key} and ${value} has no comparator`);\n    }\n    key = this._getSafeKey(key, prefix);\n    return [key, value].join(` ${comparator} `);\n  }\n\n  _getSafeKey(key, prefix) {\n    if (key instanceof Utils.SequelizeMethod) {\n      key = this.handleSequelizeMethod(key);\n      return this._prefixKey(this.handleSequelizeMethod(key), prefix);\n    }\n\n    if (Utils.isColString(key)) {\n      key = key.substr(1, key.length - 2).split('.');\n\n      if (key.length > 2) {\n        key = [\n          // join the tables by -> to match out internal namings\n          key.slice(0, -1).join('->'),\n          key[key.length - 1]\n        ];\n      }\n\n      return key.map(identifier => this.quoteIdentifier(identifier)).join('.');\n    }\n\n    return this._prefixKey(this.quoteIdentifier(key), prefix);\n  }\n\n  _prefixKey(key, prefix) {\n    if (prefix) {\n      if (prefix instanceof Utils.Literal) {\n        return [this.handleSequelizeMethod(prefix), key].join('.');\n      }\n\n      return [this.quoteTable(prefix), key].join('.');\n    }\n\n    return key;\n  }\n\n  _whereParseSingleValueObject(key, field, prop, value, options) {\n    if (prop === Op.not) {\n      if (Array.isArray(value)) {\n        prop = Op.notIn;\n      } else if (value !== null && value !== true && value !== false) {\n        prop = Op.ne;\n      }\n    }\n\n    let comparator = this.OperatorMap[prop] || this.OperatorMap[Op.eq];\n\n    switch (prop) {\n      case Op.in:\n      case Op.notIn:\n        if (value instanceof Utils.Literal) {\n          return this._joinKeyValue(key, value.val, comparator, options.prefix);\n        }\n\n        if (value.length) {\n          return this._joinKeyValue(key, `(${value.map(item => this.escape(item, field)).join(', ')})`, comparator, options.prefix);\n        }\n\n        if (comparator === this.OperatorMap[Op.in]) {\n          return this._joinKeyValue(key, '(NULL)', comparator, options.prefix);\n        }\n\n        return '';\n      case Op.any:\n      case Op.all:\n        comparator = `${this.OperatorMap[Op.eq]} ${comparator}`;\n        if (value[Op.values]) {\n          return this._joinKeyValue(key, `(VALUES ${value[Op.values].map(item => `(${this.escape(item)})`).join(', ')})`, comparator, options.prefix);\n        }\n\n        return this._joinKeyValue(key, `(${this.escape(value, field)})`, comparator, options.prefix);\n      case Op.between:\n      case Op.notBetween:\n        return this._joinKeyValue(key, `${this.escape(value[0], field)} AND ${this.escape(value[1], field)}`, comparator, options.prefix);\n      case Op.raw:\n        throw new Error('The `$raw` where property is no longer supported.  Use `sequelize.literal` instead.');\n      case Op.col:\n        comparator = this.OperatorMap[Op.eq];\n        value = value.split('.');\n\n        if (value.length > 2) {\n          value = [\n            // join the tables by -> to match out internal namings\n            value.slice(0, -1).join('->'),\n            value[value.length - 1]\n          ];\n        }\n\n        return this._joinKeyValue(key, value.map(identifier => this.quoteIdentifier(identifier)).join('.'), comparator, options.prefix);\n      case Op.startsWith:\n      case Op.endsWith:\n      case Op.substring:\n        comparator = this.OperatorMap[Op.like];\n\n        if (value instanceof Utils.Literal) {\n          value = value.val;\n        }\n\n        let pattern = `${value}%`;\n\n        if (prop === Op.endsWith) pattern = `%${value}`;\n        if (prop === Op.substring) pattern = `%${value}%`;\n\n        return this._joinKeyValue(key, this.escape(pattern), comparator, options.prefix);\n    }\n\n    const escapeOptions = {\n      acceptStrings: comparator.includes(this.OperatorMap[Op.like])\n    };\n\n    if (_.isPlainObject(value)) {\n      if (value[Op.col]) {\n        return this._joinKeyValue(key, this.whereItemQuery(null, value), comparator, options.prefix);\n      }\n      if (value[Op.any]) {\n        escapeOptions.isList = true;\n        return this._joinKeyValue(key, `(${this.escape(value[Op.any], field, escapeOptions)})`, `${comparator} ${this.OperatorMap[Op.any]}`, options.prefix);\n      }\n      if (value[Op.all]) {\n        escapeOptions.isList = true;\n        return this._joinKeyValue(key, `(${this.escape(value[Op.all], field, escapeOptions)})`, `${comparator} ${this.OperatorMap[Op.all]}`, options.prefix);\n      }\n    }\n\n    if (value === null && comparator === this.OperatorMap[Op.eq]) {\n      return this._joinKeyValue(key, this.escape(value, field, escapeOptions), this.OperatorMap[Op.is], options.prefix);\n    }\n    if (value === null && comparator === this.OperatorMap[Op.ne]) {\n      return this._joinKeyValue(key, this.escape(value, field, escapeOptions), this.OperatorMap[Op.not], options.prefix);\n    }\n\n    return this._joinKeyValue(key, this.escape(value, field, escapeOptions), comparator, options.prefix);\n  }\n\n  /*\n    Takes something and transforms it into values of a where condition.\n   @private\n  */\n  getWhereConditions(smth, tableName, factory, options, prepend) {\n    const where = {};\n\n    if (Array.isArray(tableName)) {\n      tableName = tableName[0];\n      if (Array.isArray(tableName)) {\n        tableName = tableName[1];\n      }\n    }\n\n    options = options || {};\n\n    if (prepend === undefined) {\n      prepend = true;\n    }\n\n    if (smth && smth instanceof Utils.SequelizeMethod) { // Checking a property is cheaper than a lot of instanceof calls\n      return this.handleSequelizeMethod(smth, tableName, factory, options, prepend);\n    }\n    if (_.isPlainObject(smth)) {\n      return this.whereItemsQuery(smth, {\n        model: factory,\n        prefix: prepend && tableName,\n        type: options.type\n      });\n    }\n    if (typeof smth === 'number') {\n      let primaryKeys = factory ? Object.keys(factory.primaryKeys) : [];\n\n      if (primaryKeys.length > 0) {\n        // Since we're just a number, assume only the first key\n        primaryKeys = primaryKeys[0];\n      } else {\n        primaryKeys = 'id';\n      }\n\n      where[primaryKeys] = smth;\n\n      return this.whereItemsQuery(where, {\n        model: factory,\n        prefix: prepend && tableName\n      });\n    }\n    if (typeof smth === 'string') {\n      return this.whereItemsQuery(smth, {\n        model: factory,\n        prefix: prepend && tableName\n      });\n    }\n    if (Buffer.isBuffer(smth)) {\n      return this.escape(smth);\n    }\n    if (Array.isArray(smth)) {\n      if (smth.length === 0 || smth.length > 0 && smth[0].length === 0) return '1=1';\n      if (Utils.canTreatArrayAsAnd(smth)) {\n        const _smth = { [Op.and]: smth };\n        return this.getWhereConditions(_smth, tableName, factory, options, prepend);\n      }\n      throw new Error('Support for literal replacements in the `where` object has been removed.');\n    }\n    if (smth === null) {\n      return this.whereItemsQuery(smth, {\n        model: factory,\n        prefix: prepend && tableName\n      });\n    }\n\n    return '1=1';\n  }\n\n  // A recursive parser for nested where conditions\n  parseConditionObject(conditions, path) {\n    path = path || [];\n    return _.reduce(conditions, (result, value, key) => {\n      if (_.isObject(value)) {\n        return result.concat(this.parseConditionObject(value, path.concat(key))); // Recursively parse objects\n      }\n      result.push({ path: path.concat(key), value });\n      return result;\n    }, []);\n  }\n\n  booleanValue(value) {\n    return value;\n  }\n}\n\nObject.assign(QueryGenerator.prototype, require('./query-generator/operators'));\nObject.assign(QueryGenerator.prototype, require('./query-generator/transaction'));\n\nmodule.exports = QueryGenerator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query-generator/operators.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,28,41,40,25,16,17,18,19,17,19,17,23,18,18,25,22,29,24,31,28,26,27,21,25,23,27,28,35,23,24,25,25,26,27,29,28,20,20,22,20,20,40,20,4,24,32,41,37,12,59,5,4,25,19,34,18,5,46,28,34,45,14,23,7,7,36,50,34,42,7,23,7,15,3,2,33,37,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/abstract/query-generator/operators.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Op = require('../../../operators');\nconst Utils = require('../../../utils');\n\nconst OperatorHelpers = {\n  OperatorMap: {\n    [Op.eq]: '=',\n    [Op.ne]: '!=',\n    [Op.gte]: '>=',\n    [Op.gt]: '>',\n    [Op.lte]: '<=',\n    [Op.lt]: '<',\n    [Op.not]: 'IS NOT',\n    [Op.is]: 'IS',\n    [Op.in]: 'IN',\n    [Op.notIn]: 'NOT IN',\n    [Op.like]: 'LIKE',\n    [Op.notLike]: 'NOT LIKE',\n    [Op.iLike]: 'ILIKE',\n    [Op.notILike]: 'NOT ILIKE',\n    [Op.startsWith]: 'LIKE',\n    [Op.endsWith]: 'LIKE',\n    [Op.substring]: 'LIKE',\n    [Op.regexp]: '~',\n    [Op.notRegexp]: '!~',\n    [Op.iRegexp]: '~*',\n    [Op.notIRegexp]: '!~*',\n    [Op.between]: 'BETWEEN',\n    [Op.notBetween]: 'NOT BETWEEN',\n    [Op.overlap]: '&&',\n    [Op.contains]: '@>',\n    [Op.contained]: '<@',\n    [Op.adjacent]: '-|-',\n    [Op.strictLeft]: '<<',\n    [Op.strictRight]: '>>',\n    [Op.noExtendRight]: '&<',\n    [Op.noExtendLeft]: '&>',\n    [Op.any]: 'ANY',\n    [Op.all]: 'ALL',\n    [Op.and]: ' AND ',\n    [Op.or]: ' OR ',\n    [Op.col]: 'COL',\n    [Op.placeholder]: '$$PLACEHOLDER$$',\n    [Op.match]: '@@'\n  },\n\n  OperatorsAliasMap: {},\n\n  setOperatorsAliases(aliases) {\n    if (!aliases || _.isEmpty(aliases)) {\n      this.OperatorsAliasMap = false;\n    } else {\n      this.OperatorsAliasMap = { ...aliases };\n    }\n  },\n\n  _replaceAliases(orig) {\n    const obj = {};\n    if (!this.OperatorsAliasMap) {\n      return orig;\n    }\n\n    Utils.getOperators(orig).forEach(op => {\n      const item = orig[op];\n      if (_.isPlainObject(item)) {\n        obj[op] = this._replaceAliases(item);\n      } else {\n        obj[op] = item;\n      }\n    });\n\n    _.forOwn(orig, (item, prop) => {\n      prop = this.OperatorsAliasMap[prop] || prop;\n      if (_.isPlainObject(item)) {\n        item = this._replaceAliases(item);\n      }\n      obj[prop] = item;\n    });\n    return obj;\n  }\n};\n\nmodule.exports = OperatorHelpers;\n"],"mappings":";;;;;;;;;;;;;;;;;AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,KAAK,QAAQ;AACnB,MAAM,QAAQ,QAAQ;AAEtB,MAAM,kBAAkB;AAAA,EACtB,aAAa;AAAA,KACV,GAAG,KAAK;AAAA,KACR,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,KAAK;AAAA,KACR,GAAG,QAAQ;AAAA,KACX,GAAG,OAAO;AAAA,KACV,GAAG,UAAU;AAAA,KACb,GAAG,QAAQ;AAAA,KACX,GAAG,WAAW;AAAA,KACd,GAAG,aAAa;AAAA,KAChB,GAAG,WAAW;AAAA,KACd,GAAG,YAAY;AAAA,KACf,GAAG,SAAS;AAAA,KACZ,GAAG,YAAY;AAAA,KACf,GAAG,UAAU;AAAA,KACb,GAAG,aAAa;AAAA,KAChB,GAAG,UAAU;AAAA,KACb,GAAG,aAAa;AAAA,KAChB,GAAG,UAAU;AAAA,KACb,GAAG,WAAW;AAAA,KACd,GAAG,YAAY;AAAA,KACf,GAAG,WAAW;AAAA,KACd,GAAG,aAAa;AAAA,KAChB,GAAG,cAAc;AAAA,KACjB,GAAG,gBAAgB;AAAA,KACnB,GAAG,eAAe;AAAA,KAClB,GAAG,MAAM;AAAA,KACT,GAAG,MAAM;AAAA,KACT,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,cAAc;AAAA,KACjB,GAAG,QAAQ;AAAA;AAAA,EAGd,mBAAmB;AAAA,EAEnB,oBAAoB,SAAS;AAC3B,QAAI,CAAC,WAAW,EAAE,QAAQ,UAAU;AAClC,WAAK,oBAAoB;AAAA,WACpB;AACL,WAAK,oBAAoB,mBAAK;AAAA;AAAA;AAAA,EAIlC,gBAAgB,MAAM;AACpB,UAAM,MAAM;AACZ,QAAI,CAAC,KAAK,mBAAmB;AAC3B,aAAO;AAAA;AAGT,UAAM,aAAa,MAAM,QAAQ,QAAM;AACrC,YAAM,OAAO,KAAK;AAClB,UAAI,EAAE,cAAc,OAAO;AACzB,YAAI,MAAM,KAAK,gBAAgB;AAAA,aAC1B;AACL,YAAI,MAAM;AAAA;AAAA;AAId,MAAE,OAAO,MAAM,CAAC,MAAM,SAAS;AAC7B,aAAO,KAAK,kBAAkB,SAAS;AACvC,UAAI,EAAE,cAAc,OAAO;AACzB,eAAO,KAAK,gBAAgB;AAAA;AAE9B,UAAI,QAAQ;AAAA;AAEd,WAAO;AAAA;AAAA;AAIX,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/abstract/query-generator/transaction.js":{"lineLengths":[13,34,28,42,25,13,5,55,4,27,20,4,38,29,74,5,32,4,27,4,24,4,22,4,23,4,39,29,13,5,21,4,41,29,86,5,23,3,2,36,39,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/abstract/query-generator/transaction.js"],"sourcesContent":["'use strict';\n\nconst uuidv4 = require('uuid').v4;\n\nconst TransactionQueries = {\n  /**\n   * Returns a query that sets the transaction isolation level.\n   *\n   * @param  {string} value   The isolation level.\n   * @param  {object} options An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  setIsolationLevelQuery(value, options) {\n    if (options.parent) {\n      return;\n    }\n\n    return `SET TRANSACTION ISOLATION LEVEL ${value};`;\n  },\n\n  generateTransactionId() {\n    return uuidv4();\n  },\n\n  /**\n   * Returns a query that starts a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'START TRANSACTION;';\n  },\n\n  deferConstraintsQuery() {},\n\n  setConstraintQuery() {},\n  setDeferredQuery() {},\n  setImmediateQuery() {},\n\n  /**\n   * Returns a query that commits a transaction.\n   *\n   * @param  {Transaction} transaction An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return 'COMMIT;';\n  },\n\n  /**\n   * Returns a query that rollbacks a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'ROLLBACK;';\n  }\n};\n\nmodule.exports = TransactionQueries;\n"],"mappings":";AAEA,MAAM,SAAS,QAAQ,QAAQ;AAE/B,MAAM,qBAAqB;AAAA,EASzB,uBAAuB,OAAO,SAAS;AACrC,QAAI,QAAQ,QAAQ;AAClB;AAAA;AAGF,WAAO,mCAAmC;AAAA;AAAA,EAG5C,wBAAwB;AACtB,WAAO;AAAA;AAAA,EAUT,sBAAsB,aAAa;AACjC,QAAI,YAAY,QAAQ;AAEtB,aAAO,aAAa,KAAK,gBAAgB,YAAY,MAAM;AAAA;AAG7D,WAAO;AAAA;AAAA,EAGT,wBAAwB;AAAA;AAAA,EAExB,qBAAqB;AAAA;AAAA,EACrB,mBAAmB;AAAA;AAAA,EACnB,oBAAoB;AAAA;AAAA,EASpB,uBAAuB,aAAa;AAClC,QAAI,YAAY,QAAQ;AACtB;AAAA;AAGF,WAAO;AAAA;AAAA,EAUT,yBAAyB,aAAa;AACpC,QAAI,YAAY,QAAQ;AAEtB,aAAO,yBAAyB,KAAK,gBAAgB,YAAY,MAAM;AAAA;AAGzE,WAAO;AAAA;AAAA;AAIX,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null},"file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/lib/dialects/sqlite/query-interface.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,48,48,66,45,28,51,57,28,64,33,73,62,38,89,3,76,28,64,85,73,62,38,89,3,73,28,87,71,34,104,62,38,89,3,62,23,77,100,22,56,85,35,24,9,5,36,95,135,54,95,137,74,87,67,67,5,67,26,64,93,62,38,89,3,43,26,73,5,24,80,5,33,91,91,159,33,33,101,64,87,62,38,89,3,61,52,79,62,33,16,27,37,35,29,38,8,3,32,28,36,57,69,57,68,3,43,22,31,38,23,65,38,56,5,62,32,38,5,91,88,71,9,60,28,144,7,70,32,34,7,36,43,40,56,11,9,7,89,45,50,48,46,10,7,18,17,65,144,7,14,5,3,1,52,43,0],"data":{"version":3,"sources":["file:///C:/Users/morri/Downloads/Client-Fuel-Quote-Website-main/node_modules/sequelize/src/dialects/sqlite/query-interface.js"],"sourcesContent":["'use strict';\n\nconst sequelizeErrors = require('../../errors');\nconst QueryTypes = require('../../query-types');\nconst { QueryInterface } = require('../abstract/query-interface');\nconst { cloneDeep } = require('../../utils');\nconst _ = require('lodash');\n\n/**\n * The interface that Sequelize uses to talk with SQLite database\n */\nclass SQLiteQueryInterface extends QueryInterface {\n  /**\n   * A wrapper that fixes SQLite's inability to remove columns from existing tables.\n   * It will create a backup of the table, drop the table afterwards and create a\n   * new table with the same name but without the obsolete column.\n   *\n   * @override\n   */\n  async removeColumn(tableName, attributeName, options) {\n    options = options || {};\n\n    const fields = await this.describeTable(tableName, options);\n    delete fields[attributeName];\n\n    const sql = this.queryGenerator.removeColumnQuery(tableName, fields);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    for (const subQuery of subQueries) await this.sequelize.query(`${subQuery};`, { raw: true, ...options });\n  }\n\n  /**\n   * A wrapper that fixes SQLite's inability to change columns from existing tables.\n   * It will create a backup of the table, drop the table afterwards and create a\n   * new table with the same name but with a modified version of the respective column.\n   *\n   * @override\n   */\n  async changeColumn(tableName, attributeName, dataTypeOrOptions, options) {\n    options = options || {};\n\n    const fields = await this.describeTable(tableName, options);\n    Object.assign(fields[attributeName], this.normalizeAttribute(dataTypeOrOptions));\n\n    const sql = this.queryGenerator.removeColumnQuery(tableName, fields);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    for (const subQuery of subQueries) await this.sequelize.query(`${subQuery};`, { raw: true, ...options });\n  }\n\n  /**\n   * A wrapper that fixes SQLite's inability to rename columns from existing tables.\n   * It will create a backup of the table, drop the table afterwards and create a\n   * new table with the same name but with a renamed version of the respective column.\n   *\n   * @override\n   */\n  async renameColumn(tableName, attrNameBefore, attrNameAfter, options) {\n    options = options || {};\n    const fields = await this.assertTableHasColumn(tableName, attrNameBefore, options);\n\n    fields[attrNameAfter] = { ...fields[attrNameBefore] };\n    delete fields[attrNameBefore];\n\n    const sql = this.queryGenerator.renameColumnQuery(tableName, attrNameBefore, attrNameAfter, fields);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    for (const subQuery of subQueries) await this.sequelize.query(`${subQuery};`, { raw: true, ...options });\n  }\n\n  /**\n   * @override\n   */\n  async removeConstraint(tableName, constraintName, options) {\n    let createTableSql;\n\n    const constraints = await this.showConstraint(tableName, constraintName);\n    // sqlite can't show only one constraint, so we find here the one to remove\n    const constraint = constraints.find(constaint => constaint.constraintName === constraintName);\n\n    if (!constraint) {\n      throw new sequelizeErrors.UnknownConstraintError({\n        message: `Constraint ${constraintName} on table ${tableName} does not exist`,\n        constraint: constraintName,\n        table: tableName\n      });\n    }\n    createTableSql = constraint.sql;\n    constraint.constraintName = this.queryGenerator.quoteIdentifier(constraint.constraintName);\n    let constraintSnippet = `, CONSTRAINT ${constraint.constraintName} ${constraint.constraintType} ${constraint.constraintCondition}`;\n\n    if (constraint.constraintType === 'FOREIGN KEY') {\n      const referenceTableName = this.queryGenerator.quoteTable(constraint.referenceTableName);\n      constraint.referenceTableKeys = constraint.referenceTableKeys.map(columnName => this.queryGenerator.quoteIdentifier(columnName));\n      const referenceTableKeys = constraint.referenceTableKeys.join(', ');\n      constraintSnippet += ` REFERENCES ${referenceTableName} (${referenceTableKeys})`;\n      constraintSnippet += ` ON UPDATE ${constraint.updateAction}`;\n      constraintSnippet += ` ON DELETE ${constraint.deleteAction}`;\n    }\n\n    createTableSql = createTableSql.replace(constraintSnippet, '');\n    createTableSql += ';';\n\n    const fields = await this.describeTable(tableName, options);\n\n    const sql = this.queryGenerator._alterConstraintQuery(tableName, fields, createTableSql);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    for (const subQuery of subQueries) await this.sequelize.query(`${subQuery};`, { raw: true, ...options });\n  }\n\n  /**\n   * @override\n   */\n  async addConstraint(tableName, options) {\n    if (!options.fields) {\n      throw new Error('Fields must be specified through options.fields');\n    }\n\n    if (!options.type) {\n      throw new Error('Constraint type must be specified through options.type');\n    }\n\n    options = cloneDeep(options);\n\n    const constraintSnippet = this.queryGenerator.getConstraintSnippet(tableName, options);\n    const describeCreateTableSql = this.queryGenerator.describeCreateTableQuery(tableName);\n\n    const constraints = await this.sequelize.query(describeCreateTableSql, { ...options, type: QueryTypes.SELECT, raw: true });\n    let sql = constraints[0].sql;\n    const index = sql.length - 1;\n    //Replace ending ')' with constraint snippet - Simulates String.replaceAt\n    //http://stackoverflow.com/questions/1431094\n    const createTableSql = `${sql.substr(0, index)}, ${constraintSnippet})${sql.substr(index + 1)};`;\n\n    const fields = await this.describeTable(tableName, options);\n    sql = this.queryGenerator._alterConstraintQuery(tableName, fields, createTableSql);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    for (const subQuery of subQueries) await this.sequelize.query(`${subQuery};`, { raw: true, ...options });\n  }\n\n  /**\n   * @override\n   */\n  async getForeignKeyReferencesForTable(tableName, options) {\n    const database = this.sequelize.config.database;\n    const query = this.queryGenerator.getForeignKeysQuery(tableName, database);\n    const result = await this.sequelize.query(query, options);\n    return result.map(row => ({\n      tableName,\n      columnName: row.from,\n      referencedTableName: row.table,\n      referencedColumnName: row.to,\n      tableCatalog: database,\n      referencedTableCatalog: database\n    }));\n  }\n\n  /**\n   * @override\n   */\n  async dropAllTables(options) {\n    options = options || {};\n    const skip = options.skip || [];\n\n    const tableNames = await this.showAllTables(options);\n    await this.sequelize.query('PRAGMA foreign_keys = OFF', options);\n    await this._dropAllTables(tableNames, skip, options);\n    await this.sequelize.query('PRAGMA foreign_keys = ON', options);\n  }\n\n  /**\n   * @override\n   */\n  async describeTable(tableName, options) {\n    let schema = null;\n    let schemaDelimiter = null;\n\n    if (typeof options === 'string') {\n      schema = options;\n    } else if (typeof options === 'object' && options !== null) {\n      schema = options.schema || null;\n      schemaDelimiter = options.schemaDelimiter || null;\n    }\n\n    if (typeof tableName === 'object' && tableName !== null) {\n      schema = tableName.schema;\n      tableName = tableName.tableName;\n    }\n\n    const sql = this.queryGenerator.describeTableQuery(tableName, schema, schemaDelimiter);\n    options = { ...options, type: QueryTypes.DESCRIBE };\n    const sqlIndexes = this.queryGenerator.showIndexesQuery(tableName);\n\n    try {\n      const data = await this.sequelize.query(sql, options);\n      /*\n       * If no data is returned from the query, then the table name may be wrong.\n       * Query generators that use information_schema for retrieving table info will just return an empty result set,\n       * it will not throw an error like built-ins do (e.g. DESCRIBE on MySql).\n       */\n      if (_.isEmpty(data)) {\n        throw new Error(`No description found for \"${tableName}\" table. Check the table name and schema; remember, they _are_ case sensitive.`);\n      }\n\n      const indexes = await this.sequelize.query(sqlIndexes, options);\n      for (const prop in data) {\n        data[prop].unique = false;\n      }\n      for (const index of indexes) {\n        for (const field of index.fields) {\n          if (index.unique !== undefined) {\n            data[field.attribute].unique = index.unique;\n          }\n        }\n      }\n\n      const foreignKeys = await this.getForeignKeyReferencesForTable(tableName, options);\n      for (const foreignKey of foreignKeys) {\n        data[foreignKey.columnName].references = {\n          model: foreignKey.referencedTableName,\n          key: foreignKey.referencedColumnName\n        };\n      }\n\n      return data;\n    } catch (e) {\n      if (e.original && e.original.code === 'ER_NO_SUCH_TABLE') {\n        throw new Error(`No description found for \"${tableName}\" table. Check the table name and schema; remember, they _are_ case sensitive.`);\n      }\n\n      throw e;\n    }\n  }\n}\n\nexports.SQLiteQueryInterface = SQLiteQueryInterface;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null}}}